//! > emit_event_syscall libfunc

//! > test_comments

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(keys: Array::<felt>, data: Array::<felt>) -> Result::<(), Array::<felt>> {
    starknet::emit_event_syscall(keys, data)
}

//! > casm
[ap + 0] = 1280709301550335749748, ap++;
[ap + -1] = [[fp + -7] + 0];
[fp + -8] = [[fp + -7] + 1];
[fp + -6] = [[fp + -7] + 2];
[fp + -5] = [[fp + -7] + 3];
[fp + -4] = [[fp + -7] + 4];
[fp + -3] = [[fp + -7] + 5];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -7]) %}
[ap + 0] = [[fp + -7] + 7], ap++;
jmp rel 13 if [ap + -1] != 0;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 8, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
jmp rel 11;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 10, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = [[fp + -7] + 9], ap++;
jmp rel 2;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11500})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type felt = felt;
type Array<felt> = Array<felt>;
type Unit = Struct<ut@Tuple>;
type core::result::Result::<(), core::array::Array::<core::felt>> = Enum<ut@core::result::Result::<(), core::array::Array::<core::felt>>, Unit, Array<felt>>;

libfunc emit_event_syscall = emit_event_syscall;
libfunc branch_align = branch_align;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt>>, 0> = enum_init<core::result::Result::<(), core::array::Array::<core::felt>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<(), core::array::Array::<core::felt>>> = store_temp<core::result::Result::<(), core::array::Array::<core::felt>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt>>, 1> = enum_init<core::result::Result::<(), core::array::Array::<core::felt>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<(), core::array::Array::<core::felt>>> = rename<core::result::Result::<(), core::array::Array::<core::felt>>>;

emit_event_syscall([0], [1], [2], [3]) { fallthrough([4], [5]) 8([6], [7], [8]) };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt>>, 0>([9]) -> ([10]);
store_temp<GasBuiltin>([4]) -> ([11]);
store_temp<System>([5]) -> ([12]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt>>>([10]) -> ([13]);
jump() { 14() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt>>, 1>([8]) -> ([14]);
store_temp<GasBuiltin>([6]) -> ([11]);
store_temp<System>([7]) -> ([12]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt>>>([14]) -> ([13]);
jump() { 14() };
rename<GasBuiltin>([11]) -> ([15]);
rename<System>([12]) -> ([16]);
rename<core::result::Result::<(), core::array::Array::<core::felt>>>([13]) -> ([17]);
return([15], [16], [17]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: Array<felt>, [3]: Array<felt>) -> (GasBuiltin, System, core::result::Result::<(), core::array::Array::<core::felt>>);
