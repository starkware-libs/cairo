//! > secp256k1_ec_add_syscall libfunc

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(
    p0: starknet::secp256k1::Secp256K1EcPoint, p1: starknet::secp256k1::Secp256K1EcPoint,
) -> starknet::SyscallResult<starknet::secp256k1::Secp256K1EcPoint> {
    starknet::secp256k1::secp256k1_ec_add_syscall(p0, p1)
}

//! > casm
[ap + 0] = 1691472816169793376146304626943076, ap++;
[ap + -1] = [[fp + -5] + 0];
[fp + -6] = [[fp + -5] + 1];
[fp + -4] = [[fp + -5] + 2];
[fp + -3] = [[fp + -5] + 3];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -5]) %}
[ap + 0] = [[fp + -5] + 5], ap++;
jmp rel 12 if [ap + -1] != 0;
[ap + 0] = [[fp + -5] + 4], ap++;
[ap + 0] = [fp + -5] + 7, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -5] + 6], ap++;
jmp rel 9;
[ap + 0] = [[fp + -5] + 4], ap++;
[ap + 0] = [fp + -5] + 8, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -5] + 6], ap++;
[ap + 0] = [[fp + -5] + 7], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11300})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type Secp256K1EcPoint = Secp256K1EcPoint;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, Secp256K1EcPoint, Array<felt252>>;

libfunc secp256k1_ec_add_syscall = secp256k1_ec_add_syscall;
libfunc branch_align = branch_align;
libfunc enum_init<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>>;

secp256k1_ec_add_syscall([0], [1], [2], [3]) { fallthrough([4], [5], [6]) 7([7], [8], [9]) };
branch_align() -> ();
enum_init<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, 0>([6]) -> ([10]);
store_temp<GasBuiltin>([4]) -> ([11]);
store_temp<System>([5]) -> ([12]);
store_temp<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>>([10]) -> ([13]);
jump() { 12() };
branch_align() -> ();
enum_init<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, 1>([9]) -> ([14]);
store_temp<GasBuiltin>([7]) -> ([11]);
store_temp<System>([8]) -> ([12]);
store_temp<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>>([14]) -> ([13]);
rename<GasBuiltin>([11]) -> ([15]);
rename<System>([12]) -> ([16]);
rename<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>>([13]) -> ([17]);
return([15], [16], [17]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: Secp256K1EcPoint, [3]: Secp256K1EcPoint) -> (GasBuiltin, System, core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > secp256k1_ec_mul_syscall libfunc

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(
    p: starknet::secp256k1::Secp256K1EcPoint, m: u256,
) -> starknet::SyscallResult<starknet::secp256k1::Secp256K1EcPoint> {
    starknet::secp256k1::secp256k1_ec_mul_syscall(p, m)
}

//! > casm
[ap + 0] = 1691472816169793376146304627733868, ap++;
[ap + -1] = [[fp + -6] + 0];
[fp + -7] = [[fp + -6] + 1];
[fp + -5] = [[fp + -6] + 2];
[fp + -4] = [[fp + -6] + 3];
[fp + -3] = [[fp + -6] + 4];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -6]) %}
[ap + 0] = [[fp + -6] + 6], ap++;
jmp rel 12 if [ap + -1] != 0;
[ap + 0] = [[fp + -6] + 5], ap++;
[ap + 0] = [fp + -6] + 8, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -6] + 7], ap++;
jmp rel 9;
[ap + 0] = [[fp + -6] + 5], ap++;
[ap + 0] = [fp + -6] + 9, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -6] + 7], ap++;
[ap + 0] = [[fp + -6] + 8], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11400})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type Secp256K1EcPoint = Secp256K1EcPoint;
type u128 = u128;
type core::integer::u256 = Struct<ut@core::integer::u256, u128, u128>;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, Secp256K1EcPoint, Array<felt252>>;

libfunc secp256k1_ec_mul_syscall = secp256k1_ec_mul_syscall;
libfunc branch_align = branch_align;
libfunc enum_init<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>>;

secp256k1_ec_mul_syscall([0], [1], [2], [3]) { fallthrough([4], [5], [6]) 7([7], [8], [9]) };
branch_align() -> ();
enum_init<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, 0>([6]) -> ([10]);
store_temp<GasBuiltin>([4]) -> ([11]);
store_temp<System>([5]) -> ([12]);
store_temp<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>>([10]) -> ([13]);
jump() { 12() };
branch_align() -> ();
enum_init<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>, 1>([9]) -> ([14]);
store_temp<GasBuiltin>([7]) -> ([11]);
store_temp<System>([8]) -> ([12]);
store_temp<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>>([14]) -> ([13]);
rename<GasBuiltin>([11]) -> ([15]);
rename<System>([12]) -> ([16]);
rename<core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>>([13]) -> ([17]);
return([15], [16], [17]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: Secp256K1EcPoint, [3]: core::integer::u256) -> (GasBuiltin, System, core::result::Result::<core::starknet::secp256k1::Secp256K1EcPoint, core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > secp256k1_ec_get_point_from_x_syscall libfunc

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(
    x: u256, y_parity: bool,
) -> starknet::SyscallResult<Option<starknet::secp256k1::Secp256K1EcPoint>> {
    starknet::secp256k1::secp256k1_ec_get_point_from_x_syscall(x, y_parity)
}

//! > casm
[ap + 0] = 2044865160643932441358817839389340325636163327052875787608, ap++;
[ap + -1] = [[fp + -6] + 0];
[fp + -7] = [[fp + -6] + 1];
[fp + -5] = [[fp + -6] + 2];
[fp + -4] = [[fp + -6] + 3];
[fp + -3] = [[fp + -6] + 4];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -6]) %}
[ap + 0] = [[fp + -6] + 6], ap++;
jmp rel 11 if [ap + -1] != 0;
[ap + 0] = [[fp + -6] + 5], ap++;
[ap + 0] = [fp + -6] + 9, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -6] + 7], ap++;
[ap + 0] = [[fp + -6] + 8], ap++;
jmp rel 9;
[ap + 0] = [[fp + -6] + 5], ap++;
[ap + 0] = [fp + -6] + 9, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -6] + 7], ap++;
[ap + 0] = [[fp + -6] + 8], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11400})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type u128 = u128;
type core::integer::u256 = Struct<ut@core::integer::u256, u128, u128>;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type Secp256K1EcPoint = Secp256K1EcPoint;
type core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint> = Enum<ut@core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, Secp256K1EcPoint, Unit>;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, Array<felt252>>;

libfunc secp256k1_ec_get_point_from_x_syscall = secp256k1_ec_get_point_from_x_syscall;
libfunc branch_align = branch_align;
libfunc enum_init<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>>;

secp256k1_ec_get_point_from_x_syscall([0], [1], [2], [3]) { fallthrough([4], [5], [6]) 7([7], [8], [9]) };
branch_align() -> ();
enum_init<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, 0>([6]) -> ([10]);
store_temp<GasBuiltin>([4]) -> ([11]);
store_temp<System>([5]) -> ([12]);
store_temp<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>>([10]) -> ([13]);
jump() { 12() };
branch_align() -> ();
enum_init<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, 1>([9]) -> ([14]);
store_temp<GasBuiltin>([7]) -> ([11]);
store_temp<System>([8]) -> ([12]);
store_temp<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>>([14]) -> ([13]);
rename<GasBuiltin>([11]) -> ([15]);
rename<System>([12]) -> ([16]);
rename<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>>([13]) -> ([17]);
return([15], [16], [17]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: core::integer::u256, [3]: core::bool) -> (GasBuiltin, System, core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > secp256k1_ec_new_syscall libfunc

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(
    x: u256, y: u256,
) -> starknet::SyscallResult<Option<starknet::secp256k1::Secp256K1EcPoint>> {
    starknet::secp256k1::secp256k1_ec_new_syscall(x, y)
}

//! > casm
[ap + 0] = 1691472816169793376146304627795319, ap++;
[ap + -1] = [[fp + -7] + 0];
[fp + -8] = [[fp + -7] + 1];
[fp + -6] = [[fp + -7] + 2];
[fp + -5] = [[fp + -7] + 3];
[fp + -4] = [[fp + -7] + 4];
[fp + -3] = [[fp + -7] + 5];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -7]) %}
[ap + 0] = [[fp + -7] + 7], ap++;
jmp rel 11 if [ap + -1] != 0;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 10, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = [[fp + -7] + 9], ap++;
jmp rel 9;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 10, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = [[fp + -7] + 9], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11500})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type u128 = u128;
type core::integer::u256 = Struct<ut@core::integer::u256, u128, u128>;
type Secp256K1EcPoint = Secp256K1EcPoint;
type Unit = Struct<ut@Tuple>;
type core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint> = Enum<ut@core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, Secp256K1EcPoint, Unit>;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, Array<felt252>>;

libfunc secp256k1_ec_new_syscall = secp256k1_ec_new_syscall;
libfunc branch_align = branch_align;
libfunc enum_init<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>>;

secp256k1_ec_new_syscall([0], [1], [2], [3]) { fallthrough([4], [5], [6]) 7([7], [8], [9]) };
branch_align() -> ();
enum_init<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, 0>([6]) -> ([10]);
store_temp<GasBuiltin>([4]) -> ([11]);
store_temp<System>([5]) -> ([12]);
store_temp<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>>([10]) -> ([13]);
jump() { 12() };
branch_align() -> ();
enum_init<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>, 1>([9]) -> ([14]);
store_temp<GasBuiltin>([7]) -> ([11]);
store_temp<System>([8]) -> ([12]);
store_temp<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>>([14]) -> ([13]);
rename<GasBuiltin>([11]) -> ([15]);
rename<System>([12]) -> ([16]);
rename<core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>>([13]) -> ([17]);
return([15], [16], [17]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: core::integer::u256, [3]: core::integer::u256) -> (GasBuiltin, System, core::result::Result::<core::option::Option::<core::starknet::secp256k1::Secp256K1EcPoint>, core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > secp256k1_ec_get_coordinates_syscall libfunc

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(p: starknet::secp256k1::Secp256K1EcPoint) -> starknet::SyscallResult<(u256, u256)> {
    starknet::secp256k1::secp256k1_ec_get_coordinates_syscall(p)
}

//! > casm
[ap + 0] = 523485481124846704987857366883671107646933120965041204782451, ap++;
[ap + -1] = [[fp + -4] + 0];
[fp + -5] = [[fp + -4] + 1];
[fp + -3] = [[fp + -4] + 2];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -4]) %}
[ap + 0] = [[fp + -4] + 4], ap++;
jmp rel 13 if [ap + -1] != 0;
[ap + 0] = [[fp + -4] + 3], ap++;
[ap + 0] = [fp + -4] + 9, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -4] + 5], ap++;
[ap + 0] = [[fp + -4] + 6], ap++;
[ap + 0] = [[fp + -4] + 7], ap++;
[ap + 0] = [[fp + -4] + 8], ap++;
jmp rel 13;
[ap + 0] = [[fp + -4] + 3], ap++;
[ap + 0] = [fp + -4] + 7, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -4] + 5], ap++;
[ap + 0] = [[fp + -4] + 6], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11400})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type Secp256K1EcPoint = Secp256K1EcPoint;
type u128 = u128;
type core::integer::u256 = Struct<ut@core::integer::u256, u128, u128>;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type Tuple<core::integer::u256, core::integer::u256> = Struct<ut@Tuple, core::integer::u256, core::integer::u256>;
type core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>, Tuple<core::integer::u256, core::integer::u256>, Array<felt252>>;

libfunc secp256k1_ec_get_coordinates_syscall = secp256k1_ec_get_coordinates_syscall;
libfunc branch_align = branch_align;
libfunc struct_construct<Tuple<core::integer::u256, core::integer::u256>> = struct_construct<Tuple<core::integer::u256, core::integer::u256>>;
libfunc enum_init<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>> = rename<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>>;

secp256k1_ec_get_coordinates_syscall([0], [1], [2]) { fallthrough([3], [4], [5], [6]) 8([7], [8], [9]) };
branch_align() -> ();
struct_construct<Tuple<core::integer::u256, core::integer::u256>>([5], [6]) -> ([10]);
enum_init<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>, 0>([10]) -> ([11]);
store_temp<GasBuiltin>([3]) -> ([12]);
store_temp<System>([4]) -> ([13]);
store_temp<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>>([11]) -> ([14]);
jump() { 13() };
branch_align() -> ();
enum_init<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>, 1>([9]) -> ([15]);
store_temp<GasBuiltin>([7]) -> ([12]);
store_temp<System>([8]) -> ([13]);
store_temp<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>>([15]) -> ([14]);
rename<GasBuiltin>([12]) -> ([16]);
rename<System>([13]) -> ([17]);
rename<core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>>([14]) -> ([18]);
return([16], [17], [18]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: Secp256K1EcPoint) -> (GasBuiltin, System, core::result::Result::<(core::integer::u256, core::integer::u256), core::array::Array::<core::felt252>>);
