//! > emit_event_syscall libfunc

//! > test_comments

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(keys: Array<felt252>, data: Array<felt252>) -> starknet::SyscallResult<()> {
    starknet::syscalls::emit_event_syscall(keys, data)
}

//! > casm
[ap + 0] = 1280709301550335749748, ap++;
[ap + -1] = [[fp + -7] + 0];
[fp + -8] = [[fp + -7] + 1];
[fp + -6] = [[fp + -7] + 2];
[fp + -5] = [[fp + -7] + 3];
[fp + -4] = [[fp + -7] + 4];
[fp + -3] = [[fp + -7] + 5];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -7]) %}
[ap + 0] = [[fp + -7] + 7], ap++;
jmp rel 13 if [ap + -1] != 0;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 8, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
jmp rel 9;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 10, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = [[fp + -7] + 9], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11500})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type Unit = Struct<ut@Tuple>;
type core::result::Result::<(), core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<(), core::array::Array::<core::felt252>>, Unit, Array<felt252>>;

libfunc emit_event_syscall = emit_event_syscall;
libfunc branch_align = branch_align;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<(), core::array::Array::<core::felt252>>> = rename<core::result::Result::<(), core::array::Array::<core::felt252>>>;

emit_event_syscall([0], [1], [2], [3]) { fallthrough([4], [5]) 8([6], [7], [8]) };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([9]) -> ([10]);
store_temp<GasBuiltin>([4]) -> ([11]);
store_temp<System>([5]) -> ([12]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([10]) -> ([13]);
jump() { 13() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([8]) -> ([14]);
store_temp<GasBuiltin>([6]) -> ([11]);
store_temp<System>([7]) -> ([12]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([14]) -> ([13]);
rename<GasBuiltin>([11]) -> ([15]);
rename<System>([12]) -> ([16]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([13]) -> ([17]);
return([15], [16], [17]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: Array<felt252>, [3]: Array<felt252>) -> (GasBuiltin, System, core::result::Result::<(), core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > get_execution_info_syscall libfunc

//! > test_comments

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo() -> starknet::SyscallResult<Box<starknet::ExecutionInfo>> {
    starknet::info::get_execution_info_syscall()
}

//! > casm
[ap + 0] = 94901967946959054011942058057773508207, ap++;
[ap + -1] = [[fp + -3] + 0];
[fp + -4] = [[fp + -3] + 1];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -3]) %}
[ap + 0] = [[fp + -3] + 3], ap++;
jmp rel 12 if [ap + -1] != 0;
[ap + 0] = [[fp + -3] + 2], ap++;
[ap + 0] = [fp + -3] + 5, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -3] + 4], ap++;
[ap + 0] = 0, ap++;
jmp rel 9;
[ap + 0] = [[fp + -3] + 2], ap++;
[ap + 0] = [fp + -3] + 6, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -3] + 4], ap++;
[ap + 0] = [[fp + -3] + 5], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11100})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type u64 = u64;
type ContractAddress = ContractAddress;
type core::starknet::info::BlockInfo = Struct<ut@core::starknet::info::BlockInfo, u64, u64, ContractAddress>;
type Box<core::starknet::info::BlockInfo> = Box<core::starknet::info::BlockInfo>;
type felt252 = felt252;
type u128 = u128;
type Array<felt252> = Array<felt252>;
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>>;
type core::array::Span::<core::felt252> = Struct<ut@core::array::Span::<core::felt252>, Snapshot<Array<felt252>>>;
type core::starknet::info::TxInfo = Struct<ut@core::starknet::info::TxInfo, felt252, ContractAddress, u128, core::array::Span::<core::felt252>, felt252, felt252, felt252>;
type Box<core::starknet::info::TxInfo> = Box<core::starknet::info::TxInfo>;
type core::starknet::info::ExecutionInfo = Struct<ut@core::starknet::info::ExecutionInfo, Box<core::starknet::info::BlockInfo>, Box<core::starknet::info::TxInfo>, ContractAddress, ContractAddress, felt252>;
type Box<core::starknet::info::ExecutionInfo> = Box<core::starknet::info::ExecutionInfo>;
type core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, Box<core::starknet::info::ExecutionInfo>, Array<felt252>>;

libfunc get_execution_info_syscall = get_execution_info_syscall;
libfunc branch_align = branch_align;
libfunc enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>;

get_execution_info_syscall([0], [1]) { fallthrough([2], [3], [4]) 7([5], [6], [7]) };
branch_align() -> ();
enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 0>([4]) -> ([8]);
store_temp<GasBuiltin>([2]) -> ([9]);
store_temp<System>([3]) -> ([10]);
store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([8]) -> ([11]);
jump() { 12() };
branch_align() -> ();
enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 1>([7]) -> ([12]);
store_temp<GasBuiltin>([5]) -> ([9]);
store_temp<System>([6]) -> ([10]);
store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([12]) -> ([11]);
rename<GasBuiltin>([9]) -> ([13]);
rename<System>([10]) -> ([14]);
rename<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([11]) -> ([15]);
return([13], [14], [15]);

test::foo@0([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > call_contract_syscall libfunc

//! > test_comments

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(
    address: starknet::ContractAddress, entry_point_selector: felt252, calldata: Array::<felt252>
) -> starknet::SyscallResult<Array<felt252>> {
    starknet::call_contract_syscall(address, entry_point_selector, calldata)
}

//! > casm
[ap + 0] = 20853273475220472486191784820, ap++;
[ap + -1] = [[fp + -7] + 0];
[fp + -8] = [[fp + -7] + 1];
[fp + -6] = [[fp + -7] + 2];
[fp + -5] = [[fp + -7] + 3];
[fp + -4] = [[fp + -7] + 4];
[fp + -3] = [[fp + -7] + 5];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -7]) %}
[ap + 0] = [[fp + -7] + 7], ap++;
jmp rel 11 if [ap + -1] != 0;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 10, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = [[fp + -7] + 9], ap++;
jmp rel 9;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 10, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = [[fp + -7] + 9], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11500})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type ContractAddress = ContractAddress;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, Array<felt252>, Array<felt252>>;

libfunc call_contract_syscall = call_contract_syscall;
libfunc branch_align = branch_align;
libfunc enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>;

call_contract_syscall([0], [1], [2], [3], [4]) { fallthrough([5], [6], [7]) 7([8], [9], [10]) };
branch_align() -> ();
enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 0>([7]) -> ([11]);
store_temp<GasBuiltin>([5]) -> ([12]);
store_temp<System>([6]) -> ([13]);
store_temp<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>([11]) -> ([14]);
jump() { 12() };
branch_align() -> ();
enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 1>([10]) -> ([15]);
store_temp<GasBuiltin>([8]) -> ([12]);
store_temp<System>([9]) -> ([13]);
store_temp<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>([15]) -> ([14]);
rename<GasBuiltin>([12]) -> ([16]);
rename<System>([13]) -> ([17]);
rename<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>([14]) -> ([18]);
return([16], [17], [18]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: ContractAddress, [3]: felt252, [4]: Array<felt252>) -> (GasBuiltin, System, core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > storage_read_syscall libfunc

//! > test_comments

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(
    address_domain: felt252, address: starknet::StorageAddress,
) -> starknet::SyscallResult<felt252> {
    starknet::storage_read_syscall(address_domain, address)
}

//! > casm
[ap + 0] = 100890693370601760042082660, ap++;
[ap + -1] = [[fp + -5] + 0];
[fp + -6] = [[fp + -5] + 1];
[fp + -4] = [[fp + -5] + 2];
[fp + -3] = [[fp + -5] + 3];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -5]) %}
[ap + 0] = [[fp + -5] + 5], ap++;
jmp rel 12 if [ap + -1] != 0;
[ap + 0] = [[fp + -5] + 4], ap++;
[ap + 0] = [fp + -5] + 7, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -5] + 6], ap++;
[ap + 0] = 0, ap++;
jmp rel 9;
[ap + 0] = [[fp + -5] + 4], ap++;
[ap + 0] = [fp + -5] + 8, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -5] + 6], ap++;
[ap + 0] = [[fp + -5] + 7], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11300})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type felt252 = felt252;
type StorageAddress = StorageAddress;
type Array<felt252> = Array<felt252>;
type core::result::Result::<core::felt252, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, felt252, Array<felt252>>;

libfunc storage_read_syscall = storage_read_syscall;
libfunc branch_align = branch_align;
libfunc enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>;

storage_read_syscall([0], [1], [2], [3]) { fallthrough([4], [5], [6]) 7([7], [8], [9]) };
branch_align() -> ();
enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0>([6]) -> ([10]);
store_temp<GasBuiltin>([4]) -> ([11]);
store_temp<System>([5]) -> ([12]);
store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([10]) -> ([13]);
jump() { 12() };
branch_align() -> ();
enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1>([9]) -> ([14]);
store_temp<GasBuiltin>([7]) -> ([11]);
store_temp<System>([8]) -> ([12]);
store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([14]) -> ([13]);
rename<GasBuiltin>([11]) -> ([15]);
rename<System>([12]) -> ([16]);
rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([13]) -> ([17]);
return([15], [16], [17]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: felt252, [3]: StorageAddress) -> (GasBuiltin, System, core::result::Result::<core::felt252, core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > storage_write_syscall libfunc

//! > test_comments

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(
    address_domain: felt252, address: starknet::StorageAddress, value: felt252,
) -> starknet::SyscallResult<()> {
    starknet::storage_write_syscall(address_domain, address, value)
}

//! > casm
[ap + 0] = 25828017502874050592466629733, ap++;
[ap + -1] = [[fp + -6] + 0];
[fp + -7] = [[fp + -6] + 1];
[fp + -5] = [[fp + -6] + 2];
[fp + -4] = [[fp + -6] + 3];
[fp + -3] = [[fp + -6] + 4];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -6]) %}
[ap + 0] = [[fp + -6] + 6], ap++;
jmp rel 13 if [ap + -1] != 0;
[ap + 0] = [[fp + -6] + 5], ap++;
[ap + 0] = [fp + -6] + 7, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
jmp rel 9;
[ap + 0] = [[fp + -6] + 5], ap++;
[ap + 0] = [fp + -6] + 9, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -6] + 7], ap++;
[ap + 0] = [[fp + -6] + 8], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11400})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type felt252 = felt252;
type StorageAddress = StorageAddress;
type Array<felt252> = Array<felt252>;
type Unit = Struct<ut@Tuple>;
type core::result::Result::<(), core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<(), core::array::Array::<core::felt252>>, Unit, Array<felt252>>;

libfunc storage_write_syscall = storage_write_syscall;
libfunc branch_align = branch_align;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<(), core::array::Array::<core::felt252>>> = rename<core::result::Result::<(), core::array::Array::<core::felt252>>>;

storage_write_syscall([0], [1], [2], [3], [4]) { fallthrough([5], [6]) 8([7], [8], [9]) };
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([10]) -> ([11]);
store_temp<GasBuiltin>([5]) -> ([12]);
store_temp<System>([6]) -> ([13]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([11]) -> ([14]);
jump() { 13() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([9]) -> ([15]);
store_temp<GasBuiltin>([7]) -> ([12]);
store_temp<System>([8]) -> ([13]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([15]) -> ([14]);
rename<GasBuiltin>([12]) -> ([16]);
rename<System>([13]) -> ([17]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([14]) -> ([18]);
return([16], [17], [18]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: felt252, [3]: StorageAddress, [4]: felt252) -> (GasBuiltin, System, core::result::Result::<(), core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > deploy_syscall libfunc

//! > test_comments

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(
    class_hash: starknet::ClassHash, contract_address_salt: felt252, calldata: Array<felt252>
) -> starknet::SyscallResult<starknet::ContractAddress> implicits(GasBuiltin, System) {
    starknet::syscalls::deploy_syscall(class_hash, contract_address_salt, calldata)
}

//! > casm
[ap + 0] = 75202468540281, ap++;
[ap + -1] = [[fp + -7] + 0];
[fp + -8] = [[fp + -7] + 1];
[fp + -6] = [[fp + -7] + 2];
[fp + -5] = [[fp + -7] + 3];
[fp + -4] = [[fp + -7] + 4];
[fp + -3] = [[fp + -7] + 5];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -7]) %}
[ap + 0] = [[fp + -7] + 7], ap++;
jmp rel 12 if [ap + -1] != 0;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 9, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = 0, ap++;
jmp rel 9;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 10, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = [[fp + -7] + 9], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11500})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type ClassHash = ClassHash;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type ContractAddress = ContractAddress;
type core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, ContractAddress, Array<felt252>>;

libfunc deploy_syscall = deploy_syscall;
libfunc branch_align = branch_align;
libfunc enum_init<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>;

deploy_syscall([0], [1], [2], [3], [4]) { fallthrough([5], [6], [7]) 7([8], [9], [10]) };
branch_align() -> ();
enum_init<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, 0>([7]) -> ([11]);
store_temp<GasBuiltin>([5]) -> ([12]);
store_temp<System>([6]) -> ([13]);
store_temp<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>([11]) -> ([14]);
jump() { 12() };
branch_align() -> ();
enum_init<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, 1>([10]) -> ([15]);
store_temp<GasBuiltin>([8]) -> ([12]);
store_temp<System>([9]) -> ([13]);
store_temp<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>([15]) -> ([14]);
rename<GasBuiltin>([12]) -> ([16]);
rename<System>([13]) -> ([17]);
rename<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>([14]) -> ([18]);
return([16], [17], [18]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: ClassHash, [3]: felt252, [4]: Array<felt252>) -> (GasBuiltin, System, core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > library_call_syscall libfunc

//! > test_comments

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(
    class_hash: starknet::ClassHash, function_selector: felt252, calldata: Array<felt252>
) -> starknet::SyscallResult<Array<felt252>> implicits(GasBuiltin, System) {
    starknet::syscalls::library_call_syscall(class_hash, function_selector, calldata)
}

//! > casm
[ap + 0] = 92376026794327011772951660, ap++;
[ap + -1] = [[fp + -7] + 0];
[fp + -8] = [[fp + -7] + 1];
[fp + -6] = [[fp + -7] + 2];
[fp + -5] = [[fp + -7] + 3];
[fp + -4] = [[fp + -7] + 4];
[fp + -3] = [[fp + -7] + 5];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -7]) %}
[ap + 0] = [[fp + -7] + 7], ap++;
jmp rel 11 if [ap + -1] != 0;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 10, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = [[fp + -7] + 9], ap++;
jmp rel 9;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 10, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = [[fp + -7] + 9], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11500})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type ClassHash = ClassHash;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, Array<felt252>, Array<felt252>>;

libfunc library_call_syscall = library_call_syscall;
libfunc branch_align = branch_align;
libfunc enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>;

library_call_syscall([0], [1], [2], [3], [4]) { fallthrough([5], [6], [7]) 7([8], [9], [10]) };
branch_align() -> ();
enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 0>([7]) -> ([11]);
store_temp<GasBuiltin>([5]) -> ([12]);
store_temp<System>([6]) -> ([13]);
store_temp<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>([11]) -> ([14]);
jump() { 12() };
branch_align() -> ();
enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 1>([10]) -> ([15]);
store_temp<GasBuiltin>([8]) -> ([12]);
store_temp<System>([9]) -> ([13]);
store_temp<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>([15]) -> ([14]);
rename<GasBuiltin>([12]) -> ([16]);
rename<System>([13]) -> ([17]);
rename<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>([14]) -> ([18]);
return([16], [17], [18]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: ClassHash, [3]: felt252, [4]: Array<felt252>) -> (GasBuiltin, System, core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > library_call_l1_handler_syscall libfunc

//! > test_comments

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(
    class_hash: starknet::ClassHash, function_selector: felt252, calldata: Array<felt252>
) -> starknet::SyscallResult<Array<felt252>> implicits(GasBuiltin, System) {
    starknet::syscalls::library_call_l1_handler_syscall(class_hash, function_selector, calldata)
}

//! > casm
[ap + 0] = 436233452754198157705746250789557519228244616562, ap++;
[ap + -1] = [[fp + -7] + 0];
[fp + -8] = [[fp + -7] + 1];
[fp + -6] = [[fp + -7] + 2];
[fp + -5] = [[fp + -7] + 3];
[fp + -4] = [[fp + -7] + 4];
[fp + -3] = [[fp + -7] + 5];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -7]) %}
[ap + 0] = [[fp + -7] + 7], ap++;
jmp rel 11 if [ap + -1] != 0;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 10, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = [[fp + -7] + 9], ap++;
jmp rel 9;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 10, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = [[fp + -7] + 9], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11500})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type ClassHash = ClassHash;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, Array<felt252>, Array<felt252>>;

libfunc library_call_l1_handler_syscall = library_call_l1_handler_syscall;
libfunc branch_align = branch_align;
libfunc enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>;

library_call_l1_handler_syscall([0], [1], [2], [3], [4]) { fallthrough([5], [6], [7]) 7([8], [9], [10]) };
branch_align() -> ();
enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 0>([7]) -> ([11]);
store_temp<GasBuiltin>([5]) -> ([12]);
store_temp<System>([6]) -> ([13]);
store_temp<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>([11]) -> ([14]);
jump() { 12() };
branch_align() -> ();
enum_init<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>, 1>([10]) -> ([15]);
store_temp<GasBuiltin>([8]) -> ([12]);
store_temp<System>([9]) -> ([13]);
store_temp<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>([15]) -> ([14]);
rename<GasBuiltin>([12]) -> ([16]);
rename<System>([13]) -> ([17]);
rename<core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>>([14]) -> ([18]);
return([16], [17], [18]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: ClassHash, [3]: felt252, [4]: Array<felt252>) -> (GasBuiltin, System, core::result::Result::<core::array::Array::<core::felt252>, core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > replace_class_syscall libfunc

//! > test_comments

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(class_hash: starknet::ClassHash) -> starknet::SyscallResult<()> implicits(GasBuiltin, System) {
    starknet::syscalls::replace_class_syscall(class_hash)
}

//! > casm
[ap + 0] = 25500403217443378527601783667, ap++;
[ap + -1] = [[fp + -4] + 0];
[fp + -5] = [[fp + -4] + 1];
[fp + -3] = [[fp + -4] + 2];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -4]) %}
[ap + 0] = [[fp + -4] + 4], ap++;
jmp rel 13 if [ap + -1] != 0;
[ap + 0] = [[fp + -4] + 3], ap++;
[ap + 0] = [fp + -4] + 5, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
jmp rel 9;
[ap + 0] = [[fp + -4] + 3], ap++;
[ap + 0] = [fp + -4] + 7, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -4] + 5], ap++;
[ap + 0] = [[fp + -4] + 6], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11200})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type ClassHash = ClassHash;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type Unit = Struct<ut@Tuple>;
type core::result::Result::<(), core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<(), core::array::Array::<core::felt252>>, Unit, Array<felt252>>;

libfunc replace_class_syscall = replace_class_syscall;
libfunc branch_align = branch_align;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<(), core::array::Array::<core::felt252>>> = rename<core::result::Result::<(), core::array::Array::<core::felt252>>>;

replace_class_syscall([0], [1], [2]) { fallthrough([3], [4]) 8([5], [6], [7]) };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([8]) -> ([9]);
store_temp<GasBuiltin>([3]) -> ([10]);
store_temp<System>([4]) -> ([11]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([9]) -> ([12]);
jump() { 13() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([7]) -> ([13]);
store_temp<GasBuiltin>([5]) -> ([10]);
store_temp<System>([6]) -> ([11]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([13]) -> ([12]);
rename<GasBuiltin>([10]) -> ([14]);
rename<System>([11]) -> ([15]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([12]) -> ([16]);
return([14], [15], [16]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: ClassHash) -> (GasBuiltin, System, core::result::Result::<(), core::array::Array::<core::felt252>>);

//! > ==========================================================================

//! > send_message_to_l1_syscall libfunc

//! > test_comments

//! > test_runner_name
SmallE2ETestRunner

//! > cairo
fn foo(
    to_address: felt252, payload: Array<felt252>
) -> starknet::SyscallResult<()> implicits(GasBuiltin, System) {
    starknet::syscalls::send_message_to_l1_syscall(to_address, payload)
}

//! > casm
[ap + 0] = 433017908768303439907196859243777073, ap++;
[ap + -1] = [[fp + -6] + 0];
[fp + -7] = [[fp + -6] + 1];
[fp + -5] = [[fp + -6] + 2];
[fp + -4] = [[fp + -6] + 3];
[fp + -3] = [[fp + -6] + 4];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -6]) %}
[ap + 0] = [[fp + -6] + 6], ap++;
jmp rel 13 if [ap + -1] != 0;
[ap + 0] = [[fp + -6] + 5], ap++;
[ap + 0] = [fp + -6] + 7, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
jmp rel 9;
[ap + 0] = [[fp + -6] + 5], ap++;
[ap + 0] = [fp + -6] + 9, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -6] + 7], ap++;
[ap + 0] = [[fp + -6] + 8], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Const: 11400})

//! > sierra_code
type GasBuiltin = GasBuiltin;
type System = System;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type Unit = Struct<ut@Tuple>;
type core::result::Result::<(), core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<(), core::array::Array::<core::felt252>>, Unit, Array<felt252>>;

libfunc send_message_to_l1_syscall = send_message_to_l1_syscall;
libfunc branch_align = branch_align;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc rename<System> = rename<System>;
libfunc rename<core::result::Result::<(), core::array::Array::<core::felt252>>> = rename<core::result::Result::<(), core::array::Array::<core::felt252>>>;

send_message_to_l1_syscall([0], [1], [2], [3]) { fallthrough([4], [5]) 8([6], [7], [8]) };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([9]) -> ([10]);
store_temp<GasBuiltin>([4]) -> ([11]);
store_temp<System>([5]) -> ([12]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([10]) -> ([13]);
jump() { 13() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([8]) -> ([14]);
store_temp<GasBuiltin>([6]) -> ([11]);
store_temp<System>([7]) -> ([12]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([14]) -> ([13]);
rename<GasBuiltin>([11]) -> ([15]);
rename<System>([12]) -> ([16]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([13]) -> ([17]);
return([15], [16], [17]);

test::foo@0([0]: GasBuiltin, [1]: System, [2]: felt252, [3]: Array<felt252>) -> (GasBuiltin, System, core::result::Result::<(), core::array::Array::<core::felt252>>);
