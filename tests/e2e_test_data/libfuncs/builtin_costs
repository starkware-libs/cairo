//! > get_builtin_costs libfunc

//! > test_function_name
run_small_e2e_test

//! > cairo
fn foo() -> BuiltinCosts {
    let res = get_builtin_costs();
    // Add a dummy second invocation.
    get_builtin_costs();
    res
}

//! > casm
call rel 10;
[ap + 0] = [ap + -1] + 9, ap++;
call rel 6;
[ap + 0] = [ap + -1] + 5, ap++;
[ap + 0] = [[ap + -4] + 0], ap++;
ret;

//! > function_costs
test::foo: OrderedHashMap({Step: 7})

//! > sierra_code
type BuiltinCosts = BuiltinCosts;

libfunc get_builtin_costs = get_builtin_costs;
libfunc drop<BuiltinCosts> = drop<BuiltinCosts>;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc rename<BuiltinCosts> = rename<BuiltinCosts>;

get_builtin_costs() -> ([0]);
get_builtin_costs() -> ([1]);
drop<BuiltinCosts>([1]) -> ();
store_temp<BuiltinCosts>([0]) -> ([0]);
rename<BuiltinCosts>([0]) -> ([2]);
return([2]);

test::foo@0() -> (BuiltinCosts);
