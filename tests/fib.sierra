type [0] = felt;
type [1] = NonZero<[0]>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc felt_dup = felt_dup;
libfunc felt_jump_nz = felt_jump_nz;
libfunc felt_drop = felt_drop;
libfunc store_temp<[0]> = store_temp<[0]>;
libfunc jump = jump;
libfunc unwrap_nz<[0]> = unwrap_nz<[0]>;
libfunc felt_add = felt_add;
libfunc felt_const<1> = felt_const<1>;
libfunc felt_sub = felt_sub;
libfunc function_call<user@[0]> = function_call<user@[0]>;

revoke_ap_tracking() -> ();
felt_dup([2]) -> ([2], [16]);
felt_jump_nz([16]) { 7([3]) fallthrough() };
felt_drop([1]) -> ();
felt_drop([2]) -> ();
store_temp<[0]>([0]) -> ([4]);
jump() { 20() };
unwrap_nz<[0]>([3]) -> ([14]);
felt_drop([14]) -> ();
felt_dup([1]) -> ([1], [17]);
felt_add([0], [17]) -> ([5]);
store_temp<[0]>([5]) -> ([6]);
felt_const<1>() -> ([7]);
felt_sub([2], [7]) -> ([8]);
store_temp<[0]>([8]) -> ([9]);
store_temp<[0]>([1]) -> ([10]);
store_temp<[0]>([6]) -> ([11]);
store_temp<[0]>([9]) -> ([12]);
function_call<user@[0]>([10], [11], [12]) -> ([13]);
store_temp<[0]>([13]) -> ([4]);
store_temp<[0]>([4]) -> ([15]);
return([15]);

[0]@0([0]: [0], [1]: [0], [2]: [0]) -> ([0]);
