type [0] = felt;
type [1] = NonZero<[0]>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc felt_dup = felt_dup;
libfunc felt_jump_nz = felt_jump_nz;
libfunc felt_drop = felt_drop;
libfunc store_temp<[0]> = store_temp<[0]>;
libfunc jump = jump;
libfunc unwrap_nz<[0]> = unwrap_nz<[0]>;
libfunc felt_add = felt_add;
libfunc felt_const<1> = felt_const<1>;
libfunc felt_sub = felt_sub;
libfunc rename<[0]> = rename<[0]>;
libfunc function_call<user@[0]> = function_call<user@[0]>;

revoke_ap_tracking() -> ();
felt_dup([2]) -> ([2], [14]);
felt_jump_nz([14]) { 7([3]) fallthrough() };
felt_drop([1]) -> ();
felt_drop([2]) -> ();
store_temp<[0]>([0]) -> ([4]);
jump() { 20() };
unwrap_nz<[0]>([3]) -> ([12]);
felt_drop([12]) -> ();
felt_dup([1]) -> ([1], [15]);
felt_add([0], [15]) -> ([5]);
felt_const<1>() -> ([6]);
felt_sub([2], [6]) -> ([7]);
store_temp<[0]>([1]) -> ([8]);
store_temp<[0]>([5]) -> ([5]);
rename<[0]>([5]) -> ([9]);
store_temp<[0]>([7]) -> ([7]);
rename<[0]>([7]) -> ([10]);
function_call<user@[0]>([8], [9], [10]) -> ([11]);
rename<[0]>([11]) -> ([4]);
rename<[0]>([4]) -> ([13]);
return([13]);

[0]@0([0]: [0], [1]: [0], [2]: [0]) -> ([0]);
