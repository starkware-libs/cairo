type felt = felt;
type Array<felt> = Array<felt>;
type RangeCheck = RangeCheck;
type uint128 = uint128;
type core::PanicResult::<core::array::Array::<core::felt>> = Enum<ut@core::PanicResult::<core::array::Array::<core::felt>>, Array<felt>, Array<felt>>;
type Unit = Struct<ut@Tuple>;
type core::option::Option::<core::felt> = Enum<ut@core::option::Option::<core::felt>, felt, Unit>;
type core::PanicResult::<core::felt> = Enum<ut@core::PanicResult::<core::felt>, felt, Array<felt>>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type core::PanicResult::<core::integer::uint128> = Enum<ut@core::PanicResult::<core::integer::uint128>, uint128, Array<felt>>;
type core::option::Option::<core::integer::uint128> = Enum<ut@core::option::Option::<core::integer::uint128>, uint128, Unit>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc array_new<felt> = array_new<felt>;
libfunc felt_const<1> = felt_const<1>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<uint128> = store_temp<uint128>;
libfunc rename<Array<felt>> = rename<Array<felt>>;
libfunc function_call<user@fib_array::fib_array::fib_inner> = function_call<user@fib_array::fib_array::fib_inner>;
libfunc enum_match<core::PanicResult::<core::array::Array::<core::felt>>> = enum_match<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc branch_align = branch_align;
libfunc jump = jump;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>;
libfunc store_temp<core::PanicResult::<core::array::Array::<core::felt>>> = store_temp<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc rename<core::PanicResult::<core::array::Array::<core::felt>>> = rename<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>;
libfunc array_at<felt> = array_at<felt>;
libfunc enum_init<core::option::Option::<core::felt>, 0> = enum_init<core::option::Option::<core::felt>, 0>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc store_temp<core::option::Option::<core::felt>> = store_temp<core::option::Option::<core::felt>>;
libfunc rename<core::option::Option::<core::felt>> = rename<core::option::Option::<core::felt>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::felt>, 1> = enum_init<core::option::Option::<core::felt>, 1>;
libfunc enum_match<core::option::Option::<core::felt>> = enum_match<core::option::Option::<core::felt>>;
libfunc struct_deconstruct<Unit> = struct_deconstruct<Unit>;
libfunc enum_init<core::PanicResult::<core::felt>, 1> = enum_init<core::PanicResult::<core::felt>, 1>;
libfunc store_temp<core::PanicResult::<core::felt>> = store_temp<core::PanicResult::<core::felt>>;
libfunc rename<core::PanicResult::<core::felt>> = rename<core::PanicResult::<core::felt>>;
libfunc enum_init<core::PanicResult::<core::felt>, 0> = enum_init<core::PanicResult::<core::felt>, 0>;
libfunc array_len<felt> = array_len<felt>;
libfunc dup<uint128> = dup<uint128>;
libfunc rename<uint128> = rename<uint128>;
libfunc function_call<user@core::integer::uint128_ge> = function_call<user@core::integer::uint128_ge>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc drop<uint128> = drop<uint128>;
libfunc uint128_const<1> = uint128_const<1>;
libfunc function_call<user@core::integer::uint128_sub> = function_call<user@core::integer::uint128_sub>;
libfunc enum_match<core::PanicResult::<core::integer::uint128>> = enum_match<core::PanicResult::<core::integer::uint128>>;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc function_call<user@fib_array::fib_array::unchecked_array_at> = function_call<user@fib_array::fib_array::unchecked_array_at>;
libfunc enum_match<core::PanicResult::<core::felt>> = enum_match<core::PanicResult::<core::felt>>;
libfunc uint128_const<2> = uint128_const<2>;
libfunc drop<felt> = drop<felt>;
libfunc felt_add = felt_add;
libfunc uint128_le = uint128_le;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc rename<core::bool> = rename<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc function_call<user@core::integer::uint128_checked_sub> = function_call<user@core::integer::uint128_checked_sub>;
libfunc enum_match<core::option::Option::<core::integer::uint128>> = enum_match<core::option::Option::<core::integer::uint128>>;
libfunc enum_init<core::PanicResult::<core::integer::uint128>, 1> = enum_init<core::PanicResult::<core::integer::uint128>, 1>;
libfunc store_temp<core::PanicResult::<core::integer::uint128>> = store_temp<core::PanicResult::<core::integer::uint128>>;
libfunc rename<core::PanicResult::<core::integer::uint128>> = rename<core::PanicResult::<core::integer::uint128>>;
libfunc enum_init<core::PanicResult::<core::integer::uint128>, 0> = enum_init<core::PanicResult::<core::integer::uint128>, 0>;
libfunc uint128_overflow_sub = uint128_overflow_sub;
libfunc enum_init<core::option::Option::<core::integer::uint128>, 0> = enum_init<core::option::Option::<core::integer::uint128>, 0>;
libfunc store_temp<core::option::Option::<core::integer::uint128>> = store_temp<core::option::Option::<core::integer::uint128>>;
libfunc rename<core::option::Option::<core::integer::uint128>> = rename<core::option::Option::<core::integer::uint128>>;
libfunc enum_init<core::option::Option::<core::integer::uint128>, 1> = enum_init<core::option::Option::<core::integer::uint128>, 1>;

revoke_ap_tracking() -> ();
array_new<felt>() -> ([2]);
felt_const<1>() -> ([3]);
store_temp<Array<felt>>([2]) -> ([2]);
store_temp<felt>([3]) -> ([3]);
array_append<felt>([2], [3]) -> ([4]);
felt_const<1>() -> ([5]);
store_temp<Array<felt>>([4]) -> ([4]);
store_temp<felt>([5]) -> ([5]);
array_append<felt>([4], [5]) -> ([6]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<uint128>([1]) -> ([10]);
store_temp<Array<felt>>([6]) -> ([6]);
rename<Array<felt>>([6]) -> ([11]);
function_call<user@fib_array::fib_array::fib_inner>([9], [10], [11]) -> ([7], [8]);
enum_match<core::PanicResult::<core::array::Array::<core::felt>>>([8]) { 16([12]) 19([13]) };
branch_align() -> ();
store_temp<Array<felt>>([12]) -> ([14]);
jump() { 25() };
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([13]) -> ([15]);
store_temp<RangeCheck>([7]) -> ([16]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([15]) -> ([15]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([15]) -> ([17]);
return([16], [17]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([14]) -> ([18]);
store_temp<RangeCheck>([7]) -> ([19]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([18]) -> ([18]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([18]) -> ([20]);
return([19], [20]);
array_at<felt>([0], [1], [2]) { fallthrough([3], [4], [5]) 39([6], [7]) };
branch_align() -> ();
enum_init<core::option::Option::<core::felt>, 0>([5]) -> ([8]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([9]);
store_temp<Array<felt>>([4]) -> ([10]);
store_temp<core::option::Option::<core::felt>>([8]) -> ([8]);
rename<core::option::Option::<core::felt>>([8]) -> ([11]);
jump() { 47() };
branch_align() -> ();
struct_construct<Unit>() -> ([12]);
enum_init<core::option::Option::<core::felt>, 1>([12]) -> ([13]);
store_temp<RangeCheck>([6]) -> ([6]);
rename<RangeCheck>([6]) -> ([9]);
store_temp<Array<felt>>([7]) -> ([10]);
store_temp<core::option::Option::<core::felt>>([13]) -> ([13]);
rename<core::option::Option::<core::felt>>([13]) -> ([11]);
enum_match<core::option::Option::<core::felt>>([11]) { 48([14]) 51([15]) };
branch_align() -> ();
store_temp<felt>([14]) -> ([16]);
jump() { 64() };
branch_align() -> ();
struct_deconstruct<Unit>([15]) -> ();
array_new<felt>() -> ([17]);
felt_const<1>() -> ([18]);
store_temp<Array<felt>>([17]) -> ([17]);
store_temp<felt>([18]) -> ([18]);
array_append<felt>([17], [18]) -> ([19]);
enum_init<core::PanicResult::<core::felt>, 1>([19]) -> ([20]);
store_temp<RangeCheck>([9]) -> ([21]);
store_temp<Array<felt>>([10]) -> ([22]);
store_temp<core::PanicResult::<core::felt>>([20]) -> ([20]);
rename<core::PanicResult::<core::felt>>([20]) -> ([23]);
return([21], [22], [23]);
enum_init<core::PanicResult::<core::felt>, 0>([16]) -> ([24]);
store_temp<RangeCheck>([9]) -> ([25]);
store_temp<Array<felt>>([10]) -> ([26]);
store_temp<core::PanicResult::<core::felt>>([24]) -> ([24]);
rename<core::PanicResult::<core::felt>>([24]) -> ([27]);
return([25], [26], [27]);
revoke_ap_tracking() -> ();
array_len<felt>([2]) -> ([3], [4]);
store_temp<RangeCheck>([0]) -> ([7]);
dup<uint128>([1]) -> ([1], [79]);
store_temp<uint128>([79]) -> ([8]);
store_temp<uint128>([4]) -> ([4]);
dup<uint128>([4]) -> ([4], [80]);
rename<uint128>([80]) -> ([9]);
function_call<user@core::integer::uint128_ge>([7], [8], [9]) -> ([5], [6]);
enum_match<core::bool>([6]) { 80([10]) 83([11]) };
drop<Unit>([10]) -> ();
branch_align() -> ();
jump() { 92() };
drop<uint128>([4]) -> ();
drop<uint128>([1]) -> ();
drop<Unit>([11]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([3]) -> ([12]);
store_temp<RangeCheck>([5]) -> ([13]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([12]) -> ([12]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([12]) -> ([14]);
return([13], [14]);
uint128_const<1>() -> ([15]);
store_temp<RangeCheck>([5]) -> ([18]);
dup<uint128>([4]) -> ([4], [81]);
store_temp<uint128>([81]) -> ([19]);
store_temp<uint128>([15]) -> ([20]);
function_call<user@core::integer::uint128_sub>([18], [19], [20]) -> ([16], [17]);
enum_match<core::PanicResult::<core::integer::uint128>>([17]) { 99([21]) 102([22]) };
branch_align() -> ();
store_temp<uint128>([21]) -> ([23]);
jump() { 111() };
drop<Array<felt>>([3]) -> ();
drop<uint128>([4]) -> ();
drop<uint128>([1]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([22]) -> ([24]);
store_temp<RangeCheck>([16]) -> ([25]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([24]) -> ([24]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([24]) -> ([26]);
return([25], [26]);
store_temp<RangeCheck>([16]) -> ([30]);
store_temp<Array<felt>>([3]) -> ([31]);
store_temp<uint128>([23]) -> ([32]);
function_call<user@fib_array::fib_array::unchecked_array_at>([30], [31], [32]) -> ([27], [28], [29]);
enum_match<core::PanicResult::<core::felt>>([29]) { 116([33]) 119([34]) };
branch_align() -> ();
store_temp<felt>([33]) -> ([35]);
jump() { 128() };
drop<uint128>([4]) -> ();
drop<Array<felt>>([28]) -> ();
drop<uint128>([1]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([34]) -> ([36]);
store_temp<RangeCheck>([27]) -> ([37]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([36]) -> ([36]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([36]) -> ([38]);
return([37], [38]);
uint128_const<2>() -> ([39]);
store_temp<RangeCheck>([27]) -> ([42]);
store_temp<uint128>([4]) -> ([43]);
store_temp<uint128>([39]) -> ([44]);
function_call<user@core::integer::uint128_sub>([42], [43], [44]) -> ([40], [41]);
enum_match<core::PanicResult::<core::integer::uint128>>([41]) { 134([45]) 137([46]) };
branch_align() -> ();
store_temp<uint128>([45]) -> ([47]);
jump() { 146() };
drop<Array<felt>>([28]) -> ();
drop<felt>([35]) -> ();
drop<uint128>([1]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([46]) -> ([48]);
store_temp<RangeCheck>([40]) -> ([49]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([48]) -> ([48]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([48]) -> ([50]);
return([49], [50]);
store_temp<RangeCheck>([40]) -> ([54]);
store_temp<Array<felt>>([28]) -> ([55]);
store_temp<uint128>([47]) -> ([56]);
function_call<user@fib_array::fib_array::unchecked_array_at>([54], [55], [56]) -> ([51], [52], [53]);
enum_match<core::PanicResult::<core::felt>>([53]) { 151([57]) 154([58]) };
branch_align() -> ();
store_temp<felt>([57]) -> ([59]);
jump() { 163() };
drop<felt>([35]) -> ();
drop<Array<felt>>([52]) -> ();
drop<uint128>([1]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([58]) -> ([60]);
store_temp<RangeCheck>([51]) -> ([61]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([60]) -> ([60]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([60]) -> ([62]);
return([61], [62]);
felt_add([35], [59]) -> ([63]);
store_temp<felt>([63]) -> ([63]);
array_append<felt>([52], [63]) -> ([64]);
store_temp<RangeCheck>([51]) -> ([67]);
store_temp<uint128>([1]) -> ([68]);
store_temp<Array<felt>>([64]) -> ([64]);
rename<Array<felt>>([64]) -> ([69]);
function_call<user@fib_array::fib_array::fib_inner>([67], [68], [69]) -> ([65], [66]);
enum_match<core::PanicResult::<core::array::Array::<core::felt>>>([66]) { 172([70]) 175([71]) };
branch_align() -> ();
store_temp<Array<felt>>([70]) -> ([72]);
jump() { 181() };
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([71]) -> ([73]);
store_temp<RangeCheck>([65]) -> ([74]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([73]) -> ([73]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([73]) -> ([75]);
return([74], [75]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([72]) -> ([76]);
store_temp<RangeCheck>([65]) -> ([77]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([76]) -> ([76]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([76]) -> ([78]);
return([77], [78]);
uint128_le([0], [2], [1]) { fallthrough([3]) 195([4]) };
branch_align() -> ();
struct_construct<Unit>() -> ([5]);
enum_init<core::bool, 0>([5]) -> ([6]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([7]);
store_temp<core::bool>([6]) -> ([6]);
rename<core::bool>([6]) -> ([8]);
jump() { 202() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::bool, 1>([9]) -> ([10]);
store_temp<RangeCheck>([4]) -> ([4]);
rename<RangeCheck>([4]) -> ([7]);
store_temp<core::bool>([10]) -> ([10]);
rename<core::bool>([10]) -> ([8]);
rename<RangeCheck>([7]) -> ([11]);
rename<core::bool>([8]) -> ([12]);
return([11], [12]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<uint128>([1]) -> ([6]);
store_temp<uint128>([2]) -> ([7]);
function_call<user@core::integer::uint128_checked_sub>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::uint128>>([4]) { 210([8]) 214([9]) };
branch_align() -> ();
store_temp<uint128>([8]) -> ([10]);
rename<uint128>([10]) -> ([11]);
jump() { 226() };
drop<Unit>([9]) -> ();
branch_align() -> ();
array_new<felt>() -> ([12]);
felt_const<1>() -> ([13]);
store_temp<Array<felt>>([12]) -> ([12]);
store_temp<felt>([13]) -> ([13]);
array_append<felt>([12], [13]) -> ([14]);
enum_init<core::PanicResult::<core::integer::uint128>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::PanicResult::<core::integer::uint128>>([15]) -> ([15]);
rename<core::PanicResult::<core::integer::uint128>>([15]) -> ([17]);
return([16], [17]);
enum_init<core::PanicResult::<core::integer::uint128>, 0>([11]) -> ([18]);
store_temp<RangeCheck>([3]) -> ([19]);
store_temp<core::PanicResult::<core::integer::uint128>>([18]) -> ([18]);
rename<core::PanicResult::<core::integer::uint128>>([18]) -> ([20]);
return([19], [20]);
uint128_overflow_sub([0], [1], [2]) { fallthrough([3], [4]) 239([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::uint128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::uint128>>([7]) -> ([9]);
jump() { 247() };
drop<uint128>([6]) -> ();
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::uint128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::uint128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::uint128>>([9]) -> ([13]);
return([12], [13]);

fib_array::fib_array::fib@0([0]: RangeCheck, [1]: uint128) -> (RangeCheck, core::PanicResult::<core::array::Array::<core::felt>>);
fib_array::fib_array::unchecked_array_at@30([0]: RangeCheck, [1]: Array<felt>, [2]: uint128) -> (RangeCheck, Array<felt>, core::PanicResult::<core::felt>);
fib_array::fib_array::fib_inner@70([0]: RangeCheck, [1]: uint128, [2]: Array<felt>) -> (RangeCheck, core::PanicResult::<core::array::Array::<core::felt>>);
core::integer::uint128_ge@186([0]: RangeCheck, [1]: uint128, [2]: uint128) -> (RangeCheck, core::bool);
core::integer::uint128_sub@205([0]: RangeCheck, [1]: uint128, [2]: uint128) -> (RangeCheck, core::PanicResult::<core::integer::uint128>);
core::integer::uint128_checked_sub@231([0]: RangeCheck, [1]: uint128, [2]: uint128) -> (RangeCheck, core::option::Option::<core::integer::uint128>);
