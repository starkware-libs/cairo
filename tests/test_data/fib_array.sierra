type felt = felt;
type Array<felt> = Array<felt>;
type RangeCheck = RangeCheck;
type u128 = u128;
type core::PanicResult::<core::array::Array::<core::felt>> = Enum<ut@core::PanicResult::<core::array::Array::<core::felt>>, Array<felt>, Array<felt>>;
type Tuple<Array<felt>, felt, u128> = Struct<ut@Tuple, Array<felt>, felt, u128>;
type core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)> = Enum<ut@core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, Tuple<Array<felt>, felt, u128>, Array<felt>>;
type core::PanicResult::<core::integer::u128> = Enum<ut@core::PanicResult::<core::integer::u128>, u128, Array<felt>>;
type core::PanicResult::<core::felt> = Enum<ut@core::PanicResult::<core::felt>, felt, Array<felt>>;
type Uninitialized<u128> = Uninitialized<u128>;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type core::option::Option::<core::felt> = Enum<ut@core::option::Option::<core::felt>, felt, Unit>;
type core::option::Option::<core::integer::u128> = Enum<ut@core::option::Option::<core::integer::u128>, u128, Unit>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc array_new<felt> = array_new<felt>;
libfunc felt_const<1> = felt_const<1>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc rename<Array<felt>> = rename<Array<felt>>;
libfunc function_call<user@fib_array::fib_array::fib_inner> = function_call<user@fib_array::fib_array::fib_inner>;
libfunc enum_match<core::PanicResult::<core::array::Array::<core::felt>>> = enum_match<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc branch_align = branch_align;
libfunc jump = jump;
libfunc enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 1> = enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 1>;
libfunc store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>> = store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>;
libfunc rename<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>> = rename<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>;
libfunc array_len<felt> = array_len<felt>;
libfunc u128_const<1> = u128_const<1>;
libfunc dup<u128> = dup<u128>;
libfunc rename<u128> = rename<u128>;
libfunc function_call<user@core::integer::u128_sub> = function_call<user@core::integer::u128_sub>;
libfunc enum_match<core::PanicResult::<core::integer::u128>> = enum_match<core::PanicResult::<core::integer::u128>>;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc drop<u128> = drop<u128>;
libfunc function_call<user@fib_array::fib_array::unchecked_array_at> = function_call<user@fib_array::fib_array::unchecked_array_at>;
libfunc enum_match<core::PanicResult::<core::felt>> = enum_match<core::PanicResult::<core::felt>>;
libfunc struct_construct<Tuple<Array<felt>, felt, u128>> = struct_construct<Tuple<Array<felt>, felt, u128>>;
libfunc enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 0> = enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 0>;
libfunc alloc_local<u128> = alloc_local<u128>;
libfunc finalize_locals = finalize_locals;
libfunc store_local<u128> = store_local<u128>;
libfunc u128_le = u128_le;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc rename<core::bool> = rename<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>;
libfunc store_temp<core::PanicResult::<core::array::Array::<core::felt>>> = store_temp<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc rename<core::PanicResult::<core::array::Array::<core::felt>>> = rename<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>;
libfunc u128_const<2> = u128_const<2>;
libfunc drop<felt> = drop<felt>;
libfunc felt_add = felt_add;
libfunc array_at<felt> = array_at<felt>;
libfunc enum_init<core::option::Option::<core::felt>, 0> = enum_init<core::option::Option::<core::felt>, 0>;
libfunc store_temp<core::option::Option::<core::felt>> = store_temp<core::option::Option::<core::felt>>;
libfunc rename<core::option::Option::<core::felt>> = rename<core::option::Option::<core::felt>>;
libfunc enum_init<core::option::Option::<core::felt>, 1> = enum_init<core::option::Option::<core::felt>, 1>;
libfunc enum_match<core::option::Option::<core::felt>> = enum_match<core::option::Option::<core::felt>>;
libfunc struct_deconstruct<Unit> = struct_deconstruct<Unit>;
libfunc enum_init<core::PanicResult::<core::felt>, 1> = enum_init<core::PanicResult::<core::felt>, 1>;
libfunc store_temp<core::PanicResult::<core::felt>> = store_temp<core::PanicResult::<core::felt>>;
libfunc rename<core::PanicResult::<core::felt>> = rename<core::PanicResult::<core::felt>>;
libfunc enum_init<core::PanicResult::<core::felt>, 0> = enum_init<core::PanicResult::<core::felt>, 0>;
libfunc function_call<user@core::integer::u128_checked_sub> = function_call<user@core::integer::u128_checked_sub>;
libfunc enum_match<core::option::Option::<core::integer::u128>> = enum_match<core::option::Option::<core::integer::u128>>;
libfunc enum_init<core::PanicResult::<core::integer::u128>, 1> = enum_init<core::PanicResult::<core::integer::u128>, 1>;
libfunc store_temp<core::PanicResult::<core::integer::u128>> = store_temp<core::PanicResult::<core::integer::u128>>;
libfunc rename<core::PanicResult::<core::integer::u128>> = rename<core::PanicResult::<core::integer::u128>>;
libfunc enum_init<core::PanicResult::<core::integer::u128>, 0> = enum_init<core::PanicResult::<core::integer::u128>, 0>;
libfunc u128_overflow_sub = u128_overflow_sub;
libfunc enum_init<core::option::Option::<core::integer::u128>, 0> = enum_init<core::option::Option::<core::integer::u128>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u128>> = store_temp<core::option::Option::<core::integer::u128>>;
libfunc rename<core::option::Option::<core::integer::u128>> = rename<core::option::Option::<core::integer::u128>>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 1> = enum_init<core::option::Option::<core::integer::u128>, 1>;

revoke_ap_tracking() -> ();
array_new<felt>() -> ([2]);
felt_const<1>() -> ([3]);
store_temp<felt>([3]) -> ([3]);
array_append<felt>([2], [3]) -> ([4]);
felt_const<1>() -> ([5]);
store_temp<felt>([5]) -> ([5]);
array_append<felt>([4], [5]) -> ([6]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<u128>([1]) -> ([10]);
store_temp<Array<felt>>([6]) -> ([6]);
rename<Array<felt>>([6]) -> ([11]);
function_call<user@fib_array::fib_array::fib_inner>([9], [10], [11]) -> ([7], [8]);
enum_match<core::PanicResult::<core::array::Array::<core::felt>>>([8]) { 14([12]) 17([13]) };
branch_align() -> ();
store_temp<Array<felt>>([12]) -> ([14]);
jump() { 23() };
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 1>([13]) -> ([15]);
store_temp<RangeCheck>([7]) -> ([16]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([15]) -> ([15]);
rename<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([15]) -> ([17]);
return([16], [17]);
array_len<felt>([14]) -> ([18], [19]);
u128_const<1>() -> ([20]);
store_temp<RangeCheck>([7]) -> ([23]);
store_temp<u128>([19]) -> ([19]);
dup<u128>([19]) -> ([19], [48]);
rename<u128>([48]) -> ([24]);
store_temp<u128>([20]) -> ([25]);
function_call<user@core::integer::u128_sub>([23], [24], [25]) -> ([21], [22]);
enum_match<core::PanicResult::<core::integer::u128>>([22]) { 32([26]) 35([27]) };
branch_align() -> ();
store_temp<u128>([26]) -> ([28]);
jump() { 43() };
drop<Array<felt>>([18]) -> ();
drop<u128>([19]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 1>([27]) -> ([29]);
store_temp<RangeCheck>([21]) -> ([30]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([29]) -> ([29]);
rename<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([29]) -> ([31]);
return([30], [31]);
store_temp<RangeCheck>([21]) -> ([35]);
store_temp<Array<felt>>([18]) -> ([36]);
store_temp<u128>([28]) -> ([37]);
function_call<user@fib_array::fib_array::unchecked_array_at>([35], [36], [37]) -> ([32], [33], [34]);
enum_match<core::PanicResult::<core::felt>>([34]) { 48([38]) 51([39]) };
branch_align() -> ();
store_temp<felt>([38]) -> ([40]);
jump() { 59() };
drop<Array<felt>>([33]) -> ();
drop<u128>([19]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 1>([39]) -> ([41]);
store_temp<RangeCheck>([32]) -> ([42]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([41]) -> ([41]);
rename<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([41]) -> ([43]);
return([42], [43]);
struct_construct<Tuple<Array<felt>, felt, u128>>([33], [40], [19]) -> ([44]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 0>([44]) -> ([45]);
store_temp<RangeCheck>([32]) -> ([46]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([45]) -> ([45]);
rename<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([45]) -> ([47]);
return([46], [47]);
alloc_local<u128>() -> ([4]);
finalize_locals() -> ();
revoke_ap_tracking() -> ();
array_len<felt>([2]) -> ([5], [3]);
store_local<u128>([4], [3]) -> ([3]);
dup<u128>([1]) -> ([1], [83]);
dup<u128>([3]) -> ([3], [84]);
u128_le([0], [83], [84]) { fallthrough([6]) 81([7]) };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
enum_init<core::bool, 0>([8]) -> ([9]);
store_temp<RangeCheck>([6]) -> ([6]);
rename<RangeCheck>([6]) -> ([10]);
store_temp<core::bool>([9]) -> ([9]);
rename<core::bool>([9]) -> ([11]);
jump() { 88() };
branch_align() -> ();
struct_construct<Unit>() -> ([12]);
enum_init<core::bool, 1>([12]) -> ([13]);
store_temp<RangeCheck>([7]) -> ([7]);
rename<RangeCheck>([7]) -> ([10]);
store_temp<core::bool>([13]) -> ([13]);
rename<core::bool>([13]) -> ([11]);
enum_match<core::bool>([11]) { 89([14]) 92([15]) };
drop<Unit>([14]) -> ();
branch_align() -> ();
jump() { 101() };
drop<u128>([3]) -> ();
drop<u128>([1]) -> ();
drop<Unit>([15]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([5]) -> ([16]);
store_temp<RangeCheck>([10]) -> ([17]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([16]) -> ([16]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([16]) -> ([18]);
return([17], [18]);
u128_const<1>() -> ([19]);
store_temp<RangeCheck>([10]) -> ([22]);
dup<u128>([3]) -> ([3], [85]);
store_temp<u128>([85]) -> ([23]);
store_temp<u128>([19]) -> ([24]);
function_call<user@core::integer::u128_sub>([22], [23], [24]) -> ([20], [21]);
enum_match<core::PanicResult::<core::integer::u128>>([21]) { 108([25]) 111([26]) };
branch_align() -> ();
store_temp<u128>([25]) -> ([27]);
jump() { 120() };
drop<Array<felt>>([5]) -> ();
drop<u128>([3]) -> ();
drop<u128>([1]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([26]) -> ([28]);
store_temp<RangeCheck>([20]) -> ([29]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([28]) -> ([28]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([28]) -> ([30]);
return([29], [30]);
store_temp<RangeCheck>([20]) -> ([34]);
store_temp<Array<felt>>([5]) -> ([35]);
store_temp<u128>([27]) -> ([36]);
function_call<user@fib_array::fib_array::unchecked_array_at>([34], [35], [36]) -> ([31], [32], [33]);
enum_match<core::PanicResult::<core::felt>>([33]) { 125([37]) 128([38]) };
branch_align() -> ();
store_temp<felt>([37]) -> ([39]);
jump() { 137() };
drop<u128>([3]) -> ();
drop<Array<felt>>([32]) -> ();
drop<u128>([1]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([38]) -> ([40]);
store_temp<RangeCheck>([31]) -> ([41]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([40]) -> ([40]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([40]) -> ([42]);
return([41], [42]);
u128_const<2>() -> ([43]);
store_temp<RangeCheck>([31]) -> ([46]);
store_temp<u128>([3]) -> ([47]);
store_temp<u128>([43]) -> ([48]);
function_call<user@core::integer::u128_sub>([46], [47], [48]) -> ([44], [45]);
enum_match<core::PanicResult::<core::integer::u128>>([45]) { 143([49]) 146([50]) };
branch_align() -> ();
store_temp<u128>([49]) -> ([51]);
jump() { 155() };
drop<Array<felt>>([32]) -> ();
drop<felt>([39]) -> ();
drop<u128>([1]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([50]) -> ([52]);
store_temp<RangeCheck>([44]) -> ([53]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([52]) -> ([52]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([52]) -> ([54]);
return([53], [54]);
store_temp<RangeCheck>([44]) -> ([58]);
store_temp<Array<felt>>([32]) -> ([59]);
store_temp<u128>([51]) -> ([60]);
function_call<user@fib_array::fib_array::unchecked_array_at>([58], [59], [60]) -> ([55], [56], [57]);
enum_match<core::PanicResult::<core::felt>>([57]) { 160([61]) 163([62]) };
branch_align() -> ();
store_temp<felt>([61]) -> ([63]);
jump() { 172() };
drop<felt>([39]) -> ();
drop<Array<felt>>([56]) -> ();
drop<u128>([1]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([62]) -> ([64]);
store_temp<RangeCheck>([55]) -> ([65]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([64]) -> ([64]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([64]) -> ([66]);
return([65], [66]);
felt_add([39], [63]) -> ([67]);
store_temp<felt>([67]) -> ([67]);
array_append<felt>([56], [67]) -> ([68]);
store_temp<RangeCheck>([55]) -> ([71]);
store_temp<u128>([1]) -> ([72]);
store_temp<Array<felt>>([68]) -> ([68]);
rename<Array<felt>>([68]) -> ([73]);
function_call<user@fib_array::fib_array::fib_inner>([71], [72], [73]) -> ([69], [70]);
enum_match<core::PanicResult::<core::array::Array::<core::felt>>>([70]) { 181([74]) 184([75]) };
branch_align() -> ();
store_temp<Array<felt>>([74]) -> ([76]);
jump() { 190() };
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([75]) -> ([77]);
store_temp<RangeCheck>([69]) -> ([78]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([77]) -> ([77]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([77]) -> ([79]);
return([78], [79]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([76]) -> ([80]);
store_temp<RangeCheck>([69]) -> ([81]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([80]) -> ([80]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([80]) -> ([82]);
return([81], [82]);
array_at<felt>([0], [1], [2]) { fallthrough([3], [4], [5]) 204([6], [7]) };
branch_align() -> ();
enum_init<core::option::Option::<core::felt>, 0>([5]) -> ([8]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([9]);
store_temp<Array<felt>>([4]) -> ([10]);
store_temp<core::option::Option::<core::felt>>([8]) -> ([8]);
rename<core::option::Option::<core::felt>>([8]) -> ([11]);
jump() { 212() };
branch_align() -> ();
struct_construct<Unit>() -> ([12]);
enum_init<core::option::Option::<core::felt>, 1>([12]) -> ([13]);
store_temp<RangeCheck>([6]) -> ([6]);
rename<RangeCheck>([6]) -> ([9]);
store_temp<Array<felt>>([7]) -> ([10]);
store_temp<core::option::Option::<core::felt>>([13]) -> ([13]);
rename<core::option::Option::<core::felt>>([13]) -> ([11]);
enum_match<core::option::Option::<core::felt>>([11]) { 213([14]) 216([15]) };
branch_align() -> ();
store_temp<felt>([14]) -> ([16]);
jump() { 228() };
branch_align() -> ();
struct_deconstruct<Unit>([15]) -> ();
array_new<felt>() -> ([17]);
felt_const<1>() -> ([18]);
store_temp<felt>([18]) -> ([18]);
array_append<felt>([17], [18]) -> ([19]);
enum_init<core::PanicResult::<core::felt>, 1>([19]) -> ([20]);
store_temp<RangeCheck>([9]) -> ([21]);
store_temp<Array<felt>>([10]) -> ([22]);
store_temp<core::PanicResult::<core::felt>>([20]) -> ([20]);
rename<core::PanicResult::<core::felt>>([20]) -> ([23]);
return([21], [22], [23]);
enum_init<core::PanicResult::<core::felt>, 0>([16]) -> ([24]);
store_temp<RangeCheck>([9]) -> ([25]);
store_temp<Array<felt>>([10]) -> ([26]);
store_temp<core::PanicResult::<core::felt>>([24]) -> ([24]);
rename<core::PanicResult::<core::felt>>([24]) -> ([27]);
return([25], [26], [27]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<u128>([1]) -> ([6]);
store_temp<u128>([2]) -> ([7]);
function_call<user@core::integer::u128_checked_sub>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u128>>([4]) { 239([8]) 243([9]) };
branch_align() -> ();
store_temp<u128>([8]) -> ([10]);
rename<u128>([10]) -> ([11]);
jump() { 254() };
drop<Unit>([9]) -> ();
branch_align() -> ();
array_new<felt>() -> ([12]);
felt_const<1>() -> ([13]);
store_temp<felt>([13]) -> ([13]);
array_append<felt>([12], [13]) -> ([14]);
enum_init<core::PanicResult::<core::integer::u128>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::PanicResult::<core::integer::u128>>([15]) -> ([15]);
rename<core::PanicResult::<core::integer::u128>>([15]) -> ([17]);
return([16], [17]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([11]) -> ([18]);
store_temp<RangeCheck>([3]) -> ([19]);
store_temp<core::PanicResult::<core::integer::u128>>([18]) -> ([18]);
rename<core::PanicResult::<core::integer::u128>>([18]) -> ([20]);
return([19], [20]);
u128_overflow_sub([0], [1], [2]) { fallthrough([3], [4]) 267([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 275() };
drop<u128>([6]) -> ();
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::u128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::u128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([13]);
return([12], [13]);

fib_array::fib_array::fib@0([0]: RangeCheck, [1]: u128) -> (RangeCheck, core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>);
fib_array::fib_array::fib_inner@65([0]: RangeCheck, [1]: u128, [2]: Array<felt>) -> (RangeCheck, core::PanicResult::<core::array::Array::<core::felt>>);
fib_array::fib_array::unchecked_array_at@195([0]: RangeCheck, [1]: Array<felt>, [2]: u128) -> (RangeCheck, Array<felt>, core::PanicResult::<core::felt>);
core::integer::u128_sub@234([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<core::integer::u128>);
core::integer::u128_checked_sub@259([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
