type felt = felt;
type Array<felt> = Array<felt>;
type RangeCheck = RangeCheck;
type u128 = u128;
type core::PanicResult::<core::array::Array::<core::felt>> = Enum<ut@core::PanicResult::<core::array::Array::<core::felt>>, Array<felt>, Array<felt>>;
type Tuple<Array<felt>, felt, u128> = Struct<ut@Tuple, Array<felt>, felt, u128>;
type core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)> = Enum<ut@core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, Tuple<Array<felt>, felt, u128>, Array<felt>>;
type core::PanicResult::<core::integer::u128> = Enum<ut@core::PanicResult::<core::integer::u128>, u128, Array<felt>>;
type core::PanicResult::<core::felt> = Enum<ut@core::PanicResult::<core::felt>, felt, Array<felt>>;
type Uninitialized<u128> = Uninitialized<u128>;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type core::option::Option::<core::integer::u128> = Enum<ut@core::option::Option::<core::integer::u128>, u128, Unit>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc array_new<felt> = array_new<felt>;
libfunc felt_const<1> = felt_const<1>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc rename<Array<felt>> = rename<Array<felt>>;
libfunc function_call<user@fib_array::fib_array::fib_inner> = function_call<user@fib_array::fib_array::fib_inner>;
libfunc enum_match<core::PanicResult::<core::array::Array::<core::felt>>> = enum_match<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc branch_align = branch_align;
libfunc jump = jump;
libfunc enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 1> = enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 1>;
libfunc store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>> = store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>;
libfunc rename<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>> = rename<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>;
libfunc array_len<felt> = array_len<felt>;
libfunc u128_const<1> = u128_const<1>;
libfunc dup<u128> = dup<u128>;
libfunc rename<u128> = rename<u128>;
libfunc function_call<user@core::integer::u128_sub> = function_call<user@core::integer::u128_sub>;
libfunc enum_match<core::PanicResult::<core::integer::u128>> = enum_match<core::PanicResult::<core::integer::u128>>;
libfunc drop<u128> = drop<u128>;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc function_call<user@fib_array::fib_array::unchecked_array_at> = function_call<user@fib_array::fib_array::unchecked_array_at>;
libfunc enum_match<core::PanicResult::<core::felt>> = enum_match<core::PanicResult::<core::felt>>;
libfunc struct_construct<Tuple<Array<felt>, felt, u128>> = struct_construct<Tuple<Array<felt>, felt, u128>>;
libfunc enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 0> = enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 0>;
libfunc alloc_local<u128> = alloc_local<u128>;
libfunc finalize_locals = finalize_locals;
libfunc store_local<u128> = store_local<u128>;
libfunc u128_le = u128_le;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc rename<core::bool> = rename<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>;
libfunc store_temp<core::PanicResult::<core::array::Array::<core::felt>>> = store_temp<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc rename<core::PanicResult::<core::array::Array::<core::felt>>> = rename<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>;
libfunc u128_const<2> = u128_const<2>;
libfunc drop<felt> = drop<felt>;
libfunc felt_add = felt_add;
libfunc array_at<felt> = array_at<felt>;
libfunc rename<felt> = rename<felt>;
libfunc enum_init<core::PanicResult::<core::felt>, 1> = enum_init<core::PanicResult::<core::felt>, 1>;
libfunc store_temp<core::PanicResult::<core::felt>> = store_temp<core::PanicResult::<core::felt>>;
libfunc rename<core::PanicResult::<core::felt>> = rename<core::PanicResult::<core::felt>>;
libfunc enum_init<core::PanicResult::<core::felt>, 0> = enum_init<core::PanicResult::<core::felt>, 0>;
libfunc function_call<user@core::integer::u128_checked_sub> = function_call<user@core::integer::u128_checked_sub>;
libfunc enum_match<core::option::Option::<core::integer::u128>> = enum_match<core::option::Option::<core::integer::u128>>;
libfunc felt_const<141676643251868248439803718> = felt_const<141676643251868248439803718>;
libfunc enum_init<core::PanicResult::<core::integer::u128>, 1> = enum_init<core::PanicResult::<core::integer::u128>, 1>;
libfunc store_temp<core::PanicResult::<core::integer::u128>> = store_temp<core::PanicResult::<core::integer::u128>>;
libfunc rename<core::PanicResult::<core::integer::u128>> = rename<core::PanicResult::<core::integer::u128>>;
libfunc enum_init<core::PanicResult::<core::integer::u128>, 0> = enum_init<core::PanicResult::<core::integer::u128>, 0>;
libfunc u128_overflow_sub = u128_overflow_sub;
libfunc enum_init<core::option::Option::<core::integer::u128>, 0> = enum_init<core::option::Option::<core::integer::u128>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u128>> = store_temp<core::option::Option::<core::integer::u128>>;
libfunc rename<core::option::Option::<core::integer::u128>> = rename<core::option::Option::<core::integer::u128>>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 1> = enum_init<core::option::Option::<core::integer::u128>, 1>;

revoke_ap_tracking() -> ();
array_new<felt>() -> ([2]);
felt_const<1>() -> ([3]);
store_temp<felt>([3]) -> ([3]);
array_append<felt>([2], [3]) -> ([4]);
felt_const<1>() -> ([5]);
store_temp<felt>([5]) -> ([5]);
array_append<felt>([4], [5]) -> ([6]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<u128>([1]) -> ([10]);
store_temp<Array<felt>>([6]) -> ([6]);
rename<Array<felt>>([6]) -> ([11]);
function_call<user@fib_array::fib_array::fib_inner>([9], [10], [11]) -> ([7], [8]);
enum_match<core::PanicResult::<core::array::Array::<core::felt>>>([8]) { 14([12]) 17([13]) };
branch_align() -> ();
store_temp<Array<felt>>([12]) -> ([14]);
jump() { 23() };
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 1>([13]) -> ([15]);
store_temp<RangeCheck>([7]) -> ([16]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([15]) -> ([15]);
rename<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([15]) -> ([17]);
return([16], [17]);
array_len<felt>([14]) -> ([18], [19]);
u128_const<1>() -> ([20]);
store_temp<RangeCheck>([7]) -> ([23]);
store_temp<u128>([19]) -> ([19]);
dup<u128>([19]) -> ([19], [24]);
rename<u128>([24]) -> ([25]);
store_temp<u128>([20]) -> ([26]);
function_call<user@core::integer::u128_sub>([23], [25], [26]) -> ([21], [22]);
enum_match<core::PanicResult::<core::integer::u128>>([22]) { 32([27]) 35([28]) };
branch_align() -> ();
store_temp<u128>([27]) -> ([29]);
jump() { 43() };
branch_align() -> ();
drop<u128>([19]) -> ();
drop<Array<felt>>([18]) -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 1>([28]) -> ([30]);
store_temp<RangeCheck>([21]) -> ([31]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([30]) -> ([30]);
rename<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([30]) -> ([32]);
return([31], [32]);
store_temp<RangeCheck>([21]) -> ([36]);
store_temp<Array<felt>>([18]) -> ([37]);
store_temp<u128>([29]) -> ([38]);
function_call<user@fib_array::fib_array::unchecked_array_at>([36], [37], [38]) -> ([33], [34], [35]);
enum_match<core::PanicResult::<core::felt>>([35]) { 48([39]) 51([40]) };
branch_align() -> ();
store_temp<felt>([39]) -> ([41]);
jump() { 59() };
branch_align() -> ();
drop<u128>([19]) -> ();
drop<Array<felt>>([34]) -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 1>([40]) -> ([42]);
store_temp<RangeCheck>([33]) -> ([43]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([42]) -> ([42]);
rename<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([42]) -> ([44]);
return([43], [44]);
struct_construct<Tuple<Array<felt>, felt, u128>>([34], [41], [19]) -> ([45]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>, 0>([45]) -> ([46]);
store_temp<RangeCheck>([33]) -> ([47]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([46]) -> ([46]);
rename<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>>([46]) -> ([48]);
return([47], [48]);
alloc_local<u128>() -> ([4]);
finalize_locals() -> ();
revoke_ap_tracking() -> ();
array_len<felt>([2]) -> ([5], [3]);
dup<u128>([1]) -> ([1], [6]);
store_local<u128>([4], [3]) -> ([3]);
dup<u128>([3]) -> ([3], [7]);
u128_le([0], [6], [7]) { fallthrough([8]) 81([9]) };
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::bool, 0>([10]) -> ([11]);
store_temp<RangeCheck>([8]) -> ([8]);
rename<RangeCheck>([8]) -> ([12]);
store_temp<core::bool>([11]) -> ([11]);
rename<core::bool>([11]) -> ([13]);
jump() { 88() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<RangeCheck>([9]) -> ([9]);
rename<RangeCheck>([9]) -> ([12]);
store_temp<core::bool>([15]) -> ([15]);
rename<core::bool>([15]) -> ([13]);
enum_match<core::bool>([13]) { 89([16]) 92([17]) };
branch_align() -> ();
drop<Unit>([16]) -> ();
jump() { 101() };
branch_align() -> ();
drop<Unit>([17]) -> ();
drop<u128>([3]) -> ();
drop<u128>([1]) -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([5]) -> ([18]);
store_temp<RangeCheck>([12]) -> ([19]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([18]) -> ([18]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([18]) -> ([20]);
return([19], [20]);
u128_const<1>() -> ([21]);
store_temp<RangeCheck>([12]) -> ([24]);
dup<u128>([3]) -> ([3], [25]);
store_temp<u128>([25]) -> ([26]);
store_temp<u128>([21]) -> ([27]);
function_call<user@core::integer::u128_sub>([24], [26], [27]) -> ([22], [23]);
enum_match<core::PanicResult::<core::integer::u128>>([23]) { 108([28]) 111([29]) };
branch_align() -> ();
store_temp<u128>([28]) -> ([30]);
jump() { 120() };
branch_align() -> ();
drop<u128>([3]) -> ();
drop<u128>([1]) -> ();
drop<Array<felt>>([5]) -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([29]) -> ([31]);
store_temp<RangeCheck>([22]) -> ([32]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([31]) -> ([31]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([31]) -> ([33]);
return([32], [33]);
store_temp<RangeCheck>([22]) -> ([37]);
store_temp<Array<felt>>([5]) -> ([38]);
store_temp<u128>([30]) -> ([39]);
function_call<user@fib_array::fib_array::unchecked_array_at>([37], [38], [39]) -> ([34], [35], [36]);
enum_match<core::PanicResult::<core::felt>>([36]) { 125([40]) 128([41]) };
branch_align() -> ();
store_temp<felt>([40]) -> ([42]);
jump() { 137() };
branch_align() -> ();
drop<u128>([3]) -> ();
drop<u128>([1]) -> ();
drop<Array<felt>>([35]) -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([41]) -> ([43]);
store_temp<RangeCheck>([34]) -> ([44]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([43]) -> ([43]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([43]) -> ([45]);
return([44], [45]);
u128_const<2>() -> ([46]);
store_temp<RangeCheck>([34]) -> ([49]);
store_temp<u128>([3]) -> ([50]);
store_temp<u128>([46]) -> ([51]);
function_call<user@core::integer::u128_sub>([49], [50], [51]) -> ([47], [48]);
enum_match<core::PanicResult::<core::integer::u128>>([48]) { 143([52]) 146([53]) };
branch_align() -> ();
store_temp<u128>([52]) -> ([54]);
jump() { 155() };
branch_align() -> ();
drop<felt>([42]) -> ();
drop<u128>([1]) -> ();
drop<Array<felt>>([35]) -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([53]) -> ([55]);
store_temp<RangeCheck>([47]) -> ([56]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([55]) -> ([55]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([55]) -> ([57]);
return([56], [57]);
store_temp<RangeCheck>([47]) -> ([61]);
store_temp<Array<felt>>([35]) -> ([62]);
store_temp<u128>([54]) -> ([63]);
function_call<user@fib_array::fib_array::unchecked_array_at>([61], [62], [63]) -> ([58], [59], [60]);
enum_match<core::PanicResult::<core::felt>>([60]) { 160([64]) 163([65]) };
branch_align() -> ();
store_temp<felt>([64]) -> ([66]);
jump() { 172() };
branch_align() -> ();
drop<u128>([1]) -> ();
drop<Array<felt>>([59]) -> ();
drop<felt>([42]) -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([65]) -> ([67]);
store_temp<RangeCheck>([58]) -> ([68]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([67]) -> ([67]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([67]) -> ([69]);
return([68], [69]);
felt_add([42], [66]) -> ([70]);
store_temp<felt>([70]) -> ([70]);
array_append<felt>([59], [70]) -> ([71]);
store_temp<RangeCheck>([58]) -> ([74]);
store_temp<u128>([1]) -> ([75]);
store_temp<Array<felt>>([71]) -> ([71]);
rename<Array<felt>>([71]) -> ([76]);
function_call<user@fib_array::fib_array::fib_inner>([74], [75], [76]) -> ([72], [73]);
enum_match<core::PanicResult::<core::array::Array::<core::felt>>>([73]) { 181([77]) 184([78]) };
branch_align() -> ();
store_temp<Array<felt>>([77]) -> ([79]);
jump() { 190() };
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([78]) -> ([80]);
store_temp<RangeCheck>([72]) -> ([81]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([80]) -> ([80]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([80]) -> ([82]);
return([81], [82]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([79]) -> ([83]);
store_temp<RangeCheck>([72]) -> ([84]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([83]) -> ([83]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([83]) -> ([85]);
return([84], [85]);
array_at<felt>([0], [1], [2]) { fallthrough([3], [4], [5]) 203([6], [7]) };
branch_align() -> ();
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<Array<felt>>([4]) -> ([9]);
store_temp<felt>([5]) -> ([5]);
rename<felt>([5]) -> ([10]);
jump() { 215() };
branch_align() -> ();
array_new<felt>() -> ([11]);
felt_const<1>() -> ([12]);
store_temp<felt>([12]) -> ([12]);
array_append<felt>([11], [12]) -> ([13]);
enum_init<core::PanicResult::<core::felt>, 1>([13]) -> ([14]);
store_temp<RangeCheck>([6]) -> ([6]);
rename<RangeCheck>([6]) -> ([15]);
store_temp<Array<felt>>([7]) -> ([16]);
store_temp<core::PanicResult::<core::felt>>([14]) -> ([14]);
rename<core::PanicResult::<core::felt>>([14]) -> ([17]);
return([15], [16], [17]);
enum_init<core::PanicResult::<core::felt>, 0>([10]) -> ([18]);
store_temp<RangeCheck>([8]) -> ([19]);
store_temp<Array<felt>>([9]) -> ([20]);
store_temp<core::PanicResult::<core::felt>>([18]) -> ([18]);
rename<core::PanicResult::<core::felt>>([18]) -> ([21]);
return([19], [20], [21]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<u128>([1]) -> ([6]);
store_temp<u128>([2]) -> ([7]);
function_call<user@core::integer::u128_checked_sub>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u128>>([4]) { 226([8]) 230([9]) };
branch_align() -> ();
store_temp<u128>([8]) -> ([10]);
rename<u128>([10]) -> ([11]);
jump() { 241() };
branch_align() -> ();
drop<Unit>([9]) -> ();
array_new<felt>() -> ([12]);
felt_const<141676643251868248439803718>() -> ([13]);
store_temp<felt>([13]) -> ([13]);
array_append<felt>([12], [13]) -> ([14]);
enum_init<core::PanicResult::<core::integer::u128>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::PanicResult::<core::integer::u128>>([15]) -> ([15]);
rename<core::PanicResult::<core::integer::u128>>([15]) -> ([17]);
return([16], [17]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([11]) -> ([18]);
store_temp<RangeCheck>([3]) -> ([19]);
store_temp<core::PanicResult::<core::integer::u128>>([18]) -> ([18]);
rename<core::PanicResult::<core::integer::u128>>([18]) -> ([20]);
return([19], [20]);
u128_overflow_sub([0], [1], [2]) { fallthrough([3], [4]) 254([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 262() };
branch_align() -> ();
drop<u128>([6]) -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::u128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::u128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([13]);
return([12], [13]);

fib_array::fib_array::fib@0([0]: RangeCheck, [1]: u128) -> (RangeCheck, core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u128)>);
fib_array::fib_array::fib_inner@65([0]: RangeCheck, [1]: u128, [2]: Array<felt>) -> (RangeCheck, core::PanicResult::<core::array::Array::<core::felt>>);
fib_array::fib_array::unchecked_array_at@195([0]: RangeCheck, [1]: Array<felt>, [2]: u128) -> (RangeCheck, Array<felt>, core::PanicResult::<core::felt>);
core::integer::u128_sub@221([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<core::integer::u128>);
core::integer::u128_checked_sub@246([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
