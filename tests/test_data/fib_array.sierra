type RangeCheck = RangeCheck;
type Uninitialized<RangeCheck> = Uninitialized<RangeCheck>;
type u32 = u32;
type Uninitialized<u32> = Uninitialized<u32>;
type felt = felt;
type Array<felt> = Array<felt>;
type Unit = Struct<ut@Tuple>;
type Tuple<Array<felt>, Unit> = Struct<ut@Tuple, Array<felt>, Unit>;
type core::PanicResult::<(core::array::Array::<core::felt>, ())> = Enum<ut@core::PanicResult::<(core::array::Array::<core::felt>, ())>, Tuple<Array<felt>, Unit>, Array<felt>>;
type Uninitialized<core::PanicResult::<(core::array::Array::<core::felt>, ())>> = Uninitialized<core::PanicResult::<(core::array::Array::<core::felt>, ())>>;
type Snapshot<Array<felt>> = Snapshot<Array<felt>>;
type Tuple<u32> = Struct<ut@Tuple, u32>;
type core::PanicResult::<(core::integer::u32,)> = Enum<ut@core::PanicResult::<(core::integer::u32,)>, Tuple<u32>, Array<felt>>;
type Tuple<felt> = Struct<ut@Tuple, felt>;
type core::PanicResult::<(@core::felt,)> = Enum<ut@core::PanicResult::<(@core::felt,)>, Tuple<felt>, Array<felt>>;
type Tuple<Array<felt>, felt, u32> = Struct<ut@Tuple, Array<felt>, felt, u32>;
type Tuple<Tuple<Array<felt>, felt, u32>> = Struct<ut@Tuple, Tuple<Array<felt>, felt, u32>>;
type core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)> = Enum<ut@core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>, Tuple<Tuple<Array<felt>, felt, u32>>, Array<felt>>;
type Uninitialized<core::PanicResult::<(@core::felt,)>> = Uninitialized<core::PanicResult::<(@core::felt,)>>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type core::result::Result::<core::integer::u32, core::integer::u32> = Enum<ut@core::result::Result::<core::integer::u32, core::integer::u32>, u32, u32>;

libfunc alloc_local<RangeCheck> = alloc_local<RangeCheck>;
libfunc alloc_local<u32> = alloc_local<u32>;
libfunc alloc_local<core::PanicResult::<(core::array::Array::<core::felt>, ())>> = alloc_local<core::PanicResult::<(core::array::Array::<core::felt>, ())>>;
libfunc finalize_locals = finalize_locals;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc array_new<felt> = array_new<felt>;
libfunc felt_const<1> = felt_const<1>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc drop<Unit> = drop<Unit>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc function_call<user@examples::fib_array::fib_inner> = function_call<user@examples::fib_array::fib_inner>;
libfunc store_local<core::PanicResult::<(core::array::Array::<core::felt>, ())>> = store_local<core::PanicResult::<(core::array::Array::<core::felt>, ())>>;
libfunc enum_match<core::PanicResult::<(core::array::Array::<core::felt>, ())>> = enum_match<core::PanicResult::<(core::array::Array::<core::felt>, ())>>;
libfunc branch_align = branch_align;
libfunc struct_deconstruct<Tuple<Array<felt>, Unit>> = struct_deconstruct<Tuple<Array<felt>, Unit>>;
libfunc snapshot_take<Array<felt>> = snapshot_take<Array<felt>>;
libfunc array_len<felt> = array_len<felt>;
libfunc u32_const<1> = u32_const<1>;
libfunc store_local<u32> = store_local<u32>;
libfunc dup<u32> = dup<u32>;
libfunc function_call<user@core::integer::U32Sub::sub> = function_call<user@core::integer::U32Sub::sub>;
libfunc enum_match<core::PanicResult::<(core::integer::u32,)>> = enum_match<core::PanicResult::<(core::integer::u32,)>>;
libfunc struct_deconstruct<Tuple<u32>> = struct_deconstruct<Tuple<u32>>;
libfunc store_temp<Snapshot<Array<felt>>> = store_temp<Snapshot<Array<felt>>>;
libfunc function_call<user@core::array::array_at::<core::felt>> = function_call<user@core::array::array_at::<core::felt>>;
libfunc store_local<RangeCheck> = store_local<RangeCheck>;
libfunc enum_match<core::PanicResult::<(@core::felt,)>> = enum_match<core::PanicResult::<(@core::felt,)>>;
libfunc struct_deconstruct<Tuple<felt>> = struct_deconstruct<Tuple<felt>>;
libfunc struct_construct<Tuple<felt>> = struct_construct<Tuple<felt>>;
libfunc enum_init<core::PanicResult::<(@core::felt,)>, 0> = enum_init<core::PanicResult::<(@core::felt,)>, 0>;
libfunc store_temp<core::PanicResult::<(@core::felt,)>> = store_temp<core::PanicResult::<(@core::felt,)>>;
libfunc jump = jump;
libfunc enum_init<core::PanicResult::<(@core::felt,)>, 1> = enum_init<core::PanicResult::<(@core::felt,)>, 1>;
libfunc rename<felt> = rename<felt>;
libfunc struct_construct<Tuple<Array<felt>, felt, u32>> = struct_construct<Tuple<Array<felt>, felt, u32>>;
libfunc struct_construct<Tuple<Tuple<Array<felt>, felt, u32>>> = struct_construct<Tuple<Tuple<Array<felt>, felt, u32>>>;
libfunc enum_init<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>, 0> = enum_init<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>, 0>;
libfunc store_temp<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>> = store_temp<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>>;
libfunc drop<u32> = drop<u32>;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc enum_init<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>, 1> = enum_init<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>, 1>;
libfunc drop<Uninitialized<RangeCheck>> = drop<Uninitialized<RangeCheck>>;
libfunc drop<Snapshot<Array<felt>>> = drop<Snapshot<Array<felt>>>;
libfunc drop<Uninitialized<u32>> = drop<Uninitialized<u32>>;
libfunc alloc_local<core::PanicResult::<(@core::felt,)>> = alloc_local<core::PanicResult::<(@core::felt,)>>;
libfunc u32_le = u32_le;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc store_local<core::PanicResult::<(@core::felt,)>> = store_local<core::PanicResult::<(@core::felt,)>>;
libfunc u32_const<2> = u32_const<2>;
libfunc felt_add = felt_add;
libfunc struct_construct<Tuple<Array<felt>, Unit>> = struct_construct<Tuple<Array<felt>, Unit>>;
libfunc enum_init<core::PanicResult::<(core::array::Array::<core::felt>, ())>, 0> = enum_init<core::PanicResult::<(core::array::Array::<core::felt>, ())>, 0>;
libfunc store_temp<core::PanicResult::<(core::array::Array::<core::felt>, ())>> = store_temp<core::PanicResult::<(core::array::Array::<core::felt>, ())>>;
libfunc enum_init<core::PanicResult::<(core::array::Array::<core::felt>, ())>, 1> = enum_init<core::PanicResult::<(core::array::Array::<core::felt>, ())>, 1>;
libfunc drop<felt> = drop<felt>;
libfunc drop<Uninitialized<core::PanicResult::<(@core::felt,)>>> = drop<Uninitialized<core::PanicResult::<(@core::felt,)>>>;
libfunc u32_overflowing_sub = u32_overflowing_sub;
libfunc enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 0> = enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u32, core::integer::u32>> = store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>;
libfunc enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 1> = enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 1>;
libfunc felt_const<155785504329508738615720351733824384887> = felt_const<155785504329508738615720351733824384887>;
libfunc rename<core::result::Result::<core::integer::u32, core::integer::u32>> = rename<core::result::Result::<core::integer::u32, core::integer::u32>>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect> = function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect>;
libfunc struct_construct<Tuple<u32>> = struct_construct<Tuple<u32>>;
libfunc enum_init<core::PanicResult::<(core::integer::u32,)>, 0> = enum_init<core::PanicResult::<(core::integer::u32,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::integer::u32,)>> = store_temp<core::PanicResult::<(core::integer::u32,)>>;
libfunc enum_init<core::PanicResult::<(core::integer::u32,)>, 1> = enum_init<core::PanicResult::<(core::integer::u32,)>, 1>;
libfunc array_get<felt> = array_get<felt>;
libfunc felt_const<1637570914057682275393755530660268060279989363> = felt_const<1637570914057682275393755530660268060279989363>;
libfunc enum_match<core::result::Result::<core::integer::u32, core::integer::u32>> = enum_match<core::result::Result::<core::integer::u32, core::integer::u32>>;

alloc_local<RangeCheck>() -> ([3]);
alloc_local<u32>() -> ([5]);
alloc_local<core::PanicResult::<(core::array::Array::<core::felt>, ())>>() -> ([7]);
finalize_locals() -> ();
disable_ap_tracking() -> ();
array_new<felt>() -> ([8]);
felt_const<1>() -> ([9]);
store_temp<felt>([9]) -> ([9]);
array_append<felt>([8], [9]) -> ([10]);
struct_construct<Unit>() -> ([11]);
drop<Unit>([11]) -> ();
felt_const<1>() -> ([12]);
store_temp<felt>([12]) -> ([12]);
array_append<felt>([10], [12]) -> ([13]);
struct_construct<Unit>() -> ([14]);
drop<Unit>([14]) -> ();
store_temp<RangeCheck>([0]) -> ([16]);
store_temp<u32>([1]) -> ([17]);
store_temp<Array<felt>>([13]) -> ([18]);
function_call<user@examples::fib_array::fib_inner>([16], [17], [18]) -> ([15], [6]);
store_local<core::PanicResult::<(core::array::Array::<core::felt>, ())>>([7], [6]) -> ([6]);
enum_match<core::PanicResult::<(core::array::Array::<core::felt>, ())>>([6]) { fallthrough([19]) 79([20]) };
branch_align() -> ();
struct_deconstruct<Tuple<Array<felt>, Unit>>([19]) -> ([21], [22]);
drop<Unit>([22]) -> ();
snapshot_take<Array<felt>>([21]) -> ([23], [24]);
array_len<felt>([24]) -> ([4]);
snapshot_take<Array<felt>>([23]) -> ([25], [26]);
u32_const<1>() -> ([27]);
store_temp<RangeCheck>([15]) -> ([30]);
store_local<u32>([5], [4]) -> ([4]);
dup<u32>([4]) -> ([4], [31]);
store_temp<u32>([31]) -> ([31]);
store_temp<u32>([27]) -> ([32]);
function_call<user@core::integer::U32Sub::sub>([30], [31], [32]) -> ([28], [29]);
enum_match<core::PanicResult::<(core::integer::u32,)>>([29]) { fallthrough([33]) 70([34]) };
branch_align() -> ();
struct_deconstruct<Tuple<u32>>([33]) -> ([35]);
store_temp<RangeCheck>([28]) -> ([37]);
store_temp<Snapshot<Array<felt>>>([26]) -> ([38]);
store_temp<u32>([35]) -> ([39]);
function_call<user@core::array::array_at::<core::felt>>([37], [38], [39]) -> ([2], [36]);
store_local<RangeCheck>([3], [2]) -> ([2]);
enum_match<core::PanicResult::<(@core::felt,)>>([36]) { fallthrough([40]) 50([41]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt>>([40]) -> ([42]);
struct_construct<Tuple<felt>>([42]) -> ([43]);
enum_init<core::PanicResult::<(@core::felt,)>, 0>([43]) -> ([44]);
store_temp<core::PanicResult::<(@core::felt,)>>([44]) -> ([45]);
jump() { 53() };
branch_align() -> ();
enum_init<core::PanicResult::<(@core::felt,)>, 1>([41]) -> ([46]);
store_temp<core::PanicResult::<(@core::felt,)>>([46]) -> ([45]);
enum_match<core::PanicResult::<(@core::felt,)>>([45]) { fallthrough([47]) 63([48]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt>>([47]) -> ([49]);
rename<felt>([49]) -> ([50]);
struct_construct<Tuple<Array<felt>, felt, u32>>([25], [50], [4]) -> ([51]);
struct_construct<Tuple<Tuple<Array<felt>, felt, u32>>>([51]) -> ([52]);
enum_init<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>, 0>([52]) -> ([53]);
store_temp<RangeCheck>([2]) -> ([54]);
store_temp<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>>([53]) -> ([55]);
return([54], [55]);
branch_align() -> ();
drop<u32>([4]) -> ();
drop<Array<felt>>([25]) -> ();
enum_init<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>, 1>([48]) -> ([56]);
store_temp<RangeCheck>([2]) -> ([57]);
store_temp<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>>([56]) -> ([58]);
return([57], [58]);
branch_align() -> ();
drop<Array<felt>>([25]) -> ();
drop<u32>([4]) -> ();
drop<Uninitialized<RangeCheck>>([3]) -> ();
drop<Snapshot<Array<felt>>>([26]) -> ();
enum_init<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>, 1>([34]) -> ([59]);
store_temp<RangeCheck>([28]) -> ([60]);
store_temp<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>>([59]) -> ([61]);
return([60], [61]);
branch_align() -> ();
drop<Uninitialized<u32>>([5]) -> ();
drop<Uninitialized<RangeCheck>>([3]) -> ();
enum_init<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>, 1>([20]) -> ([62]);
store_temp<RangeCheck>([15]) -> ([63]);
store_temp<core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>>([62]) -> ([64]);
return([63], [64]);
alloc_local<RangeCheck>() -> ([4]);
alloc_local<core::PanicResult::<(@core::felt,)>>() -> ([6]);
alloc_local<u32>() -> ([8]);
alloc_local<RangeCheck>() -> ([10]);
finalize_locals() -> ();
disable_ap_tracking() -> ();
snapshot_take<Array<felt>>([2]) -> ([11], [12]);
array_len<felt>([12]) -> ([7]);
dup<u32>([1]) -> ([1], [15]);
store_local<u32>([8], [7]) -> ([7]);
dup<u32>([7]) -> ([7], [16]);
u32_le([0], [15], [16]) { fallthrough([13]) 104([14]) };
branch_align() -> ();
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 0>([17]) -> ([18]);
store_temp<RangeCheck>([13]) -> ([19]);
store_temp<core::bool>([18]) -> ([20]);
jump() { 109() };
branch_align() -> ();
struct_construct<Unit>() -> ([21]);
enum_init<core::bool, 1>([21]) -> ([22]);
store_temp<RangeCheck>([14]) -> ([19]);
store_temp<core::bool>([22]) -> ([20]);
enum_match<core::bool>([20]) { fallthrough([23]) 231([24]) };
branch_align() -> ();
drop<Unit>([23]) -> ();
snapshot_take<Array<felt>>([11]) -> ([25], [26]);
u32_const<1>() -> ([27]);
store_temp<RangeCheck>([19]) -> ([30]);
dup<u32>([7]) -> ([7], [31]);
store_temp<u32>([31]) -> ([31]);
store_temp<u32>([27]) -> ([32]);
function_call<user@core::integer::U32Sub::sub>([30], [31], [32]) -> ([28], [29]);
enum_match<core::PanicResult::<(core::integer::u32,)>>([29]) { fallthrough([33]) 219([34]) };
branch_align() -> ();
struct_deconstruct<Tuple<u32>>([33]) -> ([35]);
store_temp<RangeCheck>([28]) -> ([37]);
store_temp<Snapshot<Array<felt>>>([26]) -> ([38]);
store_temp<u32>([35]) -> ([39]);
function_call<user@core::array::array_at::<core::felt>>([37], [38], [39]) -> ([9], [36]);
store_local<RangeCheck>([10], [9]) -> ([9]);
enum_match<core::PanicResult::<(@core::felt,)>>([36]) { fallthrough([40]) 134([41]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt>>([40]) -> ([42]);
struct_construct<Tuple<felt>>([42]) -> ([43]);
enum_init<core::PanicResult::<(@core::felt,)>, 0>([43]) -> ([44]);
store_temp<core::PanicResult::<(@core::felt,)>>([44]) -> ([5]);
jump() { 137() };
branch_align() -> ();
enum_init<core::PanicResult::<(@core::felt,)>, 1>([41]) -> ([45]);
store_temp<core::PanicResult::<(@core::felt,)>>([45]) -> ([5]);
store_local<core::PanicResult::<(@core::felt,)>>([6], [5]) -> ([5]);
enum_match<core::PanicResult::<(@core::felt,)>>([5]) { fallthrough([46]) 210([47]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt>>([46]) -> ([48]);
rename<felt>([48]) -> ([49]);
snapshot_take<Array<felt>>([25]) -> ([50], [51]);
u32_const<2>() -> ([52]);
store_temp<RangeCheck>([9]) -> ([55]);
store_temp<u32>([7]) -> ([56]);
store_temp<u32>([52]) -> ([57]);
function_call<user@core::integer::U32Sub::sub>([55], [56], [57]) -> ([53], [54]);
enum_match<core::PanicResult::<(core::integer::u32,)>>([54]) { fallthrough([58]) 200([59]) };
branch_align() -> ();
struct_deconstruct<Tuple<u32>>([58]) -> ([60]);
store_temp<RangeCheck>([53]) -> ([62]);
store_temp<Snapshot<Array<felt>>>([51]) -> ([63]);
store_temp<u32>([60]) -> ([64]);
function_call<user@core::array::array_at::<core::felt>>([62], [63], [64]) -> ([3], [61]);
store_local<RangeCheck>([4], [3]) -> ([3]);
enum_match<core::PanicResult::<(@core::felt,)>>([61]) { fallthrough([65]) 163([66]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt>>([65]) -> ([67]);
struct_construct<Tuple<felt>>([67]) -> ([68]);
enum_init<core::PanicResult::<(@core::felt,)>, 0>([68]) -> ([69]);
store_temp<core::PanicResult::<(@core::felt,)>>([69]) -> ([70]);
jump() { 166() };
branch_align() -> ();
enum_init<core::PanicResult::<(@core::felt,)>, 1>([66]) -> ([71]);
store_temp<core::PanicResult::<(@core::felt,)>>([71]) -> ([70]);
enum_match<core::PanicResult::<(@core::felt,)>>([70]) { fallthrough([72]) 192([73]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt>>([72]) -> ([74]);
rename<felt>([74]) -> ([75]);
felt_add([49], [75]) -> ([76]);
store_temp<felt>([76]) -> ([76]);
array_append<felt>([50], [76]) -> ([77]);
struct_construct<Unit>() -> ([78]);
drop<Unit>([78]) -> ();
store_temp<RangeCheck>([3]) -> ([81]);
store_temp<u32>([1]) -> ([82]);
store_temp<Array<felt>>([77]) -> ([83]);
function_call<user@examples::fib_array::fib_inner>([81], [82], [83]) -> ([79], [80]);
enum_match<core::PanicResult::<(core::array::Array::<core::felt>, ())>>([80]) { fallthrough([84]) 187([85]) };
branch_align() -> ();
struct_deconstruct<Tuple<Array<felt>, Unit>>([84]) -> ([86], [87]);
struct_construct<Tuple<Array<felt>, Unit>>([86], [87]) -> ([88]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, ())>, 0>([88]) -> ([89]);
store_temp<RangeCheck>([79]) -> ([90]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, ())>>([89]) -> ([91]);
return([90], [91]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, ())>, 1>([85]) -> ([92]);
store_temp<RangeCheck>([79]) -> ([93]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, ())>>([92]) -> ([94]);
return([93], [94]);
branch_align() -> ();
drop<u32>([1]) -> ();
drop<Array<felt>>([50]) -> ();
drop<felt>([49]) -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, ())>, 1>([73]) -> ([95]);
store_temp<RangeCheck>([3]) -> ([96]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, ())>>([95]) -> ([97]);
return([96], [97]);
branch_align() -> ();
drop<felt>([49]) -> ();
drop<u32>([1]) -> ();
drop<Array<felt>>([50]) -> ();
drop<Uninitialized<RangeCheck>>([4]) -> ();
drop<Snapshot<Array<felt>>>([51]) -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, ())>, 1>([59]) -> ([98]);
store_temp<RangeCheck>([53]) -> ([99]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, ())>>([98]) -> ([100]);
return([99], [100]);
branch_align() -> ();
drop<Array<felt>>([25]) -> ();
drop<u32>([1]) -> ();
drop<u32>([7]) -> ();
drop<Uninitialized<RangeCheck>>([4]) -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, ())>, 1>([47]) -> ([101]);
store_temp<RangeCheck>([9]) -> ([102]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, ())>>([101]) -> ([103]);
return([102], [103]);
branch_align() -> ();
drop<Array<felt>>([25]) -> ();
drop<u32>([1]) -> ();
drop<u32>([7]) -> ();
drop<Uninitialized<RangeCheck>>([4]) -> ();
drop<Uninitialized<core::PanicResult::<(@core::felt,)>>>([6]) -> ();
drop<Uninitialized<RangeCheck>>([10]) -> ();
drop<Snapshot<Array<felt>>>([26]) -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, ())>, 1>([34]) -> ([104]);
store_temp<RangeCheck>([28]) -> ([105]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, ())>>([104]) -> ([106]);
return([105], [106]);
branch_align() -> ();
drop<Unit>([24]) -> ();
drop<u32>([1]) -> ();
drop<u32>([7]) -> ();
drop<Uninitialized<RangeCheck>>([4]) -> ();
drop<Uninitialized<core::PanicResult::<(@core::felt,)>>>([6]) -> ();
drop<Uninitialized<RangeCheck>>([10]) -> ();
struct_construct<Unit>() -> ([107]);
struct_construct<Tuple<Array<felt>, Unit>>([11], [107]) -> ([108]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, ())>, 0>([108]) -> ([109]);
store_temp<RangeCheck>([19]) -> ([110]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, ())>>([109]) -> ([111]);
return([110], [111]);
u32_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 250([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>([7]) -> ([9]);
jump() { 254() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>([10]) -> ([9]);
felt_const<155785504329508738615720351733824384887>() -> ([11]);
rename<core::result::Result::<core::integer::u32, core::integer::u32>>([9]) -> ([13]);
store_temp<felt>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<(core::integer::u32,)>>([12]) { fallthrough([15]) 266([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u32>>([15]) -> ([17]);
struct_construct<Tuple<u32>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u32,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u32,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u32,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::PanicResult::<(core::integer::u32,)>>([22]) -> ([24]);
return([23], [24]);
array_get<felt>([0], [1], [2]) { fallthrough([3], [4]) 278([5]) };
branch_align() -> ();
struct_construct<Tuple<felt>>([4]) -> ([6]);
enum_init<core::PanicResult::<(@core::felt,)>, 0>([6]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::PanicResult::<(@core::felt,)>>([7]) -> ([9]);
return([8], [9]);
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
drop<Unit>([10]) -> ();
array_new<felt>() -> ([11]);
felt_const<1637570914057682275393755530660268060279989363>() -> ([12]);
store_temp<felt>([12]) -> ([12]);
array_append<felt>([11], [12]) -> ([13]);
enum_init<core::PanicResult::<(@core::felt,)>, 1>([13]) -> ([14]);
store_temp<RangeCheck>([5]) -> ([15]);
store_temp<core::PanicResult::<(@core::felt,)>>([14]) -> ([16]);
return([15], [16]);
enum_match<core::result::Result::<core::integer::u32, core::integer::u32>>([0]) { fallthrough([2]) 296([3]) };
branch_align() -> ();
drop<felt>([1]) -> ();
struct_construct<Tuple<u32>>([2]) -> ([4]);
enum_init<core::PanicResult::<(core::integer::u32,)>, 0>([4]) -> ([5]);
store_temp<core::PanicResult::<(core::integer::u32,)>>([5]) -> ([6]);
return([6]);
branch_align() -> ();
drop<u32>([3]) -> ();
array_new<felt>() -> ([7]);
array_append<felt>([7], [1]) -> ([8]);
struct_construct<Unit>() -> ([9]);
drop<Unit>([9]) -> ();
enum_init<core::PanicResult::<(core::integer::u32,)>, 1>([8]) -> ([10]);
store_temp<core::PanicResult::<(core::integer::u32,)>>([10]) -> ([11]);
return([11]);

examples::fib_array::fib@0([0]: RangeCheck, [1]: u32) -> (RangeCheck, core::PanicResult::<((core::array::Array::<core::felt>, core::felt, core::integer::u32),)>);
examples::fib_array::fib_inner@86([0]: RangeCheck, [1]: u32, [2]: Array<felt>) -> (RangeCheck, core::PanicResult::<(core::array::Array::<core::felt>, ())>);
core::integer::U32Sub::sub@244([0]: RangeCheck, [1]: u32, [2]: u32) -> (RangeCheck, core::PanicResult::<(core::integer::u32,)>);
core::array::array_at::<core::felt>@271([0]: RangeCheck, [1]: Snapshot<Array<felt>>, [2]: u32) -> (RangeCheck, core::PanicResult::<(@core::felt,)>);
core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect@289([0]: core::result::Result::<core::integer::u32, core::integer::u32>, [1]: felt) -> (core::PanicResult::<(core::integer::u32,)>);
