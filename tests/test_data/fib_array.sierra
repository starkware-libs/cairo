type felt = felt;
type Array<felt> = Array<felt>;
type Unit = Struct<ut@Tuple>;
type RangeCheck = RangeCheck;
type u32 = u32;
type core::PanicResult::<()> = Enum<ut@core::PanicResult::<()>, Unit, Array<felt>>;
type Tuple<Array<felt>, felt, u32> = Struct<ut@Tuple, Array<felt>, felt, u32>;
type core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)> = Enum<ut@core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>, Tuple<Array<felt>, felt, u32>, Array<felt>>;
type Snapshot<Array<felt>> = Snapshot<Array<felt>>;
type core::PanicResult::<core::integer::u32> = Enum<ut@core::PanicResult::<core::integer::u32>, u32, Array<felt>>;
type core::PanicResult::<@core::felt> = Enum<ut@core::PanicResult::<@core::felt>, felt, Array<felt>>;
type Uninitialized<u32> = Uninitialized<u32>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type core::result::Result::<core::integer::u32, core::integer::u32> = Enum<ut@core::result::Result::<core::integer::u32, core::integer::u32>, u32, u32>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc array_new<felt> = array_new<felt>;
libfunc felt_const<1> = felt_const<1>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc drop<Unit> = drop<Unit>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc function_call<user@fib_array::fib_array::fib_inner> = function_call<user@fib_array::fib_array::fib_inner>;
libfunc enum_match<core::PanicResult::<()>> = enum_match<core::PanicResult::<()>>;
libfunc branch_align = branch_align;
libfunc jump = jump;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>, 1> = enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>, 1>;
libfunc store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>> = store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>>;
libfunc snapshot_take<Array<felt>> = snapshot_take<Array<felt>>;
libfunc array_len<felt> = array_len<felt>;
libfunc u32_const<1> = u32_const<1>;
libfunc dup<u32> = dup<u32>;
libfunc function_call<user@core::integer::U32Sub::sub> = function_call<user@core::integer::U32Sub::sub>;
libfunc enum_match<core::PanicResult::<core::integer::u32>> = enum_match<core::PanicResult::<core::integer::u32>>;
libfunc drop<u32> = drop<u32>;
libfunc drop<Snapshot<Array<felt>>> = drop<Snapshot<Array<felt>>>;
libfunc store_temp<Snapshot<Array<felt>>> = store_temp<Snapshot<Array<felt>>>;
libfunc function_call<user@core::array::ArrayImpl::<core::felt>::at> = function_call<user@core::array::ArrayImpl::<core::felt>::at>;
libfunc enum_match<core::PanicResult::<@core::felt>> = enum_match<core::PanicResult::<@core::felt>>;
libfunc rename<felt> = rename<felt>;
libfunc struct_construct<Tuple<Array<felt>, felt, u32>> = struct_construct<Tuple<Array<felt>, felt, u32>>;
libfunc enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>, 0> = enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>, 0>;
libfunc alloc_local<u32> = alloc_local<u32>;
libfunc finalize_locals = finalize_locals;
libfunc store_local<u32> = store_local<u32>;
libfunc u32_le = u32_le;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc enum_init<core::PanicResult::<()>, 1> = enum_init<core::PanicResult::<()>, 1>;
libfunc store_temp<core::PanicResult::<()>> = store_temp<core::PanicResult::<()>>;
libfunc u32_const<2> = u32_const<2>;
libfunc drop<felt> = drop<felt>;
libfunc felt_add = felt_add;
libfunc enum_init<core::PanicResult::<()>, 0> = enum_init<core::PanicResult::<()>, 0>;
libfunc u32_overflowing_sub = u32_overflowing_sub;
libfunc enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 0> = enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u32, core::integer::u32>> = store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>;
libfunc enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 1> = enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 1>;
libfunc felt_const<155785504329508738615720351733824384887> = felt_const<155785504329508738615720351733824384887>;
libfunc rename<core::result::Result::<core::integer::u32, core::integer::u32>> = rename<core::result::Result::<core::integer::u32, core::integer::u32>>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect> = function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect>;
libfunc enum_init<core::PanicResult::<core::integer::u32>, 1> = enum_init<core::PanicResult::<core::integer::u32>, 1>;
libfunc store_temp<core::PanicResult::<core::integer::u32>> = store_temp<core::PanicResult::<core::integer::u32>>;
libfunc enum_init<core::PanicResult::<core::integer::u32>, 0> = enum_init<core::PanicResult::<core::integer::u32>, 0>;
libfunc function_call<user@core::array::array_at::<core::felt>> = function_call<user@core::array::array_at::<core::felt>>;
libfunc enum_init<core::PanicResult::<@core::felt>, 1> = enum_init<core::PanicResult::<@core::felt>, 1>;
libfunc store_temp<core::PanicResult::<@core::felt>> = store_temp<core::PanicResult::<@core::felt>>;
libfunc enum_init<core::PanicResult::<@core::felt>, 0> = enum_init<core::PanicResult::<@core::felt>, 0>;
libfunc enum_match<core::result::Result::<core::integer::u32, core::integer::u32>> = enum_match<core::result::Result::<core::integer::u32, core::integer::u32>>;
libfunc array_get<felt> = array_get<felt>;
libfunc felt_const<1637570914057682275393755530660268060279989363> = felt_const<1637570914057682275393755530660268060279989363>;

revoke_ap_tracking() -> ();
array_new<felt>() -> ([2]);
felt_const<1>() -> ([3]);
store_temp<felt>([3]) -> ([3]);
array_append<felt>([2], [3]) -> ([4]);
struct_construct<Unit>() -> ([5]);
drop<Unit>([5]) -> ();
felt_const<1>() -> ([6]);
store_temp<felt>([6]) -> ([6]);
array_append<felt>([4], [6]) -> ([7]);
struct_construct<Unit>() -> ([8]);
drop<Unit>([8]) -> ();
store_temp<RangeCheck>([0]) -> ([12]);
store_temp<u32>([1]) -> ([13]);
store_temp<Array<felt>>([7]) -> ([14]);
function_call<user@fib_array::fib_array::fib_inner>([12], [13], [14]) -> ([9], [10], [11]);
enum_match<core::PanicResult::<()>>([11]) { fallthrough([15]) 20([16]) };
branch_align() -> ();
drop<Unit>([15]) -> ();
jump() { 26() };
branch_align() -> ();
drop<Array<felt>>([10]) -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>, 1>([16]) -> ([17]);
store_temp<RangeCheck>([9]) -> ([18]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>>([17]) -> ([19]);
return([18], [19]);
snapshot_take<Array<felt>>([10]) -> ([20], [21]);
array_len<felt>([21]) -> ([22]);
snapshot_take<Array<felt>>([20]) -> ([23], [24]);
u32_const<1>() -> ([25]);
store_temp<RangeCheck>([9]) -> ([28]);
store_temp<u32>([22]) -> ([29]);
dup<u32>([29]) -> ([29], [22]);
store_temp<u32>([25]) -> ([30]);
function_call<user@core::integer::U32Sub::sub>([28], [29], [30]) -> ([26], [27]);
enum_match<core::PanicResult::<core::integer::u32>>([27]) { fallthrough([31]) 38([32]) };
branch_align() -> ();
jump() { 46() };
branch_align() -> ();
drop<Array<felt>>([23]) -> ();
drop<u32>([22]) -> ();
drop<Snapshot<Array<felt>>>([24]) -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>, 1>([32]) -> ([33]);
store_temp<RangeCheck>([26]) -> ([34]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>>([33]) -> ([35]);
return([34], [35]);
store_temp<RangeCheck>([26]) -> ([38]);
store_temp<Snapshot<Array<felt>>>([24]) -> ([39]);
store_temp<u32>([31]) -> ([40]);
function_call<user@core::array::ArrayImpl::<core::felt>::at>([38], [39], [40]) -> ([36], [37]);
enum_match<core::PanicResult::<@core::felt>>([37]) { fallthrough([41]) 53([42]) };
branch_align() -> ();
jump() { 60() };
branch_align() -> ();
drop<u32>([22]) -> ();
drop<Array<felt>>([23]) -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>, 1>([42]) -> ([43]);
store_temp<RangeCheck>([36]) -> ([44]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>>([43]) -> ([45]);
return([44], [45]);
rename<felt>([41]) -> ([46]);
struct_construct<Tuple<Array<felt>, felt, u32>>([23], [46], [22]) -> ([47]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>, 0>([47]) -> ([48]);
store_temp<RangeCheck>([36]) -> ([49]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>>([48]) -> ([50]);
return([49], [50]);
alloc_local<u32>() -> ([4]);
finalize_locals() -> ();
revoke_ap_tracking() -> ();
snapshot_take<Array<felt>>([2]) -> ([5], [6]);
array_len<felt>([6]) -> ([3]);
dup<u32>([1]) -> ([1], [9]);
store_local<u32>([4], [3]) -> ([3]);
dup<u32>([3]) -> ([3], [10]);
u32_le([0], [9], [10]) { fallthrough([7]) 81([8]) };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<RangeCheck>([7]) -> ([13]);
store_temp<core::bool>([12]) -> ([14]);
jump() { 86() };
branch_align() -> ();
struct_construct<Unit>() -> ([15]);
enum_init<core::bool, 1>([15]) -> ([16]);
store_temp<RangeCheck>([8]) -> ([13]);
store_temp<core::bool>([16]) -> ([14]);
enum_match<core::bool>([14]) { fallthrough([17]) 181([18]) };
branch_align() -> ();
drop<Unit>([17]) -> ();
snapshot_take<Array<felt>>([5]) -> ([19], [20]);
u32_const<1>() -> ([21]);
store_temp<RangeCheck>([13]) -> ([24]);
dup<u32>([3]) -> ([3], [25]);
store_temp<u32>([25]) -> ([25]);
store_temp<u32>([21]) -> ([26]);
function_call<user@core::integer::U32Sub::sub>([24], [25], [26]) -> ([22], [23]);
enum_match<core::PanicResult::<core::integer::u32>>([23]) { fallthrough([27]) 99([28]) };
branch_align() -> ();
jump() { 108() };
branch_align() -> ();
drop<u32>([1]) -> ();
drop<u32>([3]) -> ();
drop<Snapshot<Array<felt>>>([20]) -> ();
enum_init<core::PanicResult::<()>, 1>([28]) -> ([29]);
store_temp<RangeCheck>([22]) -> ([30]);
store_temp<Array<felt>>([19]) -> ([31]);
store_temp<core::PanicResult::<()>>([29]) -> ([32]);
return([30], [31], [32]);
store_temp<RangeCheck>([22]) -> ([35]);
store_temp<Snapshot<Array<felt>>>([20]) -> ([36]);
store_temp<u32>([27]) -> ([37]);
function_call<user@core::array::ArrayImpl::<core::felt>::at>([35], [36], [37]) -> ([33], [34]);
enum_match<core::PanicResult::<@core::felt>>([34]) { fallthrough([38]) 115([39]) };
branch_align() -> ();
jump() { 123() };
branch_align() -> ();
drop<u32>([1]) -> ();
drop<u32>([3]) -> ();
enum_init<core::PanicResult::<()>, 1>([39]) -> ([40]);
store_temp<RangeCheck>([33]) -> ([41]);
store_temp<Array<felt>>([19]) -> ([42]);
store_temp<core::PanicResult::<()>>([40]) -> ([43]);
return([41], [42], [43]);
rename<felt>([38]) -> ([44]);
snapshot_take<Array<felt>>([19]) -> ([45], [46]);
u32_const<2>() -> ([47]);
store_temp<RangeCheck>([33]) -> ([50]);
store_temp<u32>([3]) -> ([51]);
store_temp<u32>([47]) -> ([52]);
function_call<user@core::integer::U32Sub::sub>([50], [51], [52]) -> ([48], [49]);
enum_match<core::PanicResult::<core::integer::u32>>([49]) { fallthrough([53]) 133([54]) };
branch_align() -> ();
jump() { 142() };
branch_align() -> ();
drop<felt>([44]) -> ();
drop<u32>([1]) -> ();
drop<Snapshot<Array<felt>>>([46]) -> ();
enum_init<core::PanicResult::<()>, 1>([54]) -> ([55]);
store_temp<RangeCheck>([48]) -> ([56]);
store_temp<Array<felt>>([45]) -> ([57]);
store_temp<core::PanicResult::<()>>([55]) -> ([58]);
return([56], [57], [58]);
store_temp<RangeCheck>([48]) -> ([61]);
store_temp<Snapshot<Array<felt>>>([46]) -> ([62]);
store_temp<u32>([53]) -> ([63]);
function_call<user@core::array::ArrayImpl::<core::felt>::at>([61], [62], [63]) -> ([59], [60]);
enum_match<core::PanicResult::<@core::felt>>([60]) { fallthrough([64]) 149([65]) };
branch_align() -> ();
jump() { 157() };
branch_align() -> ();
drop<u32>([1]) -> ();
drop<felt>([44]) -> ();
enum_init<core::PanicResult::<()>, 1>([65]) -> ([66]);
store_temp<RangeCheck>([59]) -> ([67]);
store_temp<Array<felt>>([45]) -> ([68]);
store_temp<core::PanicResult::<()>>([66]) -> ([69]);
return([67], [68], [69]);
rename<felt>([64]) -> ([70]);
felt_add([44], [70]) -> ([71]);
store_temp<felt>([71]) -> ([71]);
array_append<felt>([45], [71]) -> ([72]);
struct_construct<Unit>() -> ([73]);
drop<Unit>([73]) -> ();
store_temp<RangeCheck>([59]) -> ([77]);
store_temp<u32>([1]) -> ([78]);
store_temp<Array<felt>>([72]) -> ([79]);
function_call<user@fib_array::fib_array::fib_inner>([77], [78], [79]) -> ([74], [75], [76]);
enum_match<core::PanicResult::<()>>([76]) { fallthrough([80]) 170([81]) };
branch_align() -> ();
jump() { 176() };
branch_align() -> ();
enum_init<core::PanicResult::<()>, 1>([81]) -> ([82]);
store_temp<RangeCheck>([74]) -> ([83]);
store_temp<Array<felt>>([75]) -> ([84]);
store_temp<core::PanicResult::<()>>([82]) -> ([85]);
return([83], [84], [85]);
enum_init<core::PanicResult::<()>, 0>([80]) -> ([86]);
store_temp<RangeCheck>([74]) -> ([87]);
store_temp<Array<felt>>([75]) -> ([88]);
store_temp<core::PanicResult::<()>>([86]) -> ([89]);
return([87], [88], [89]);
branch_align() -> ();
drop<Unit>([18]) -> ();
drop<u32>([1]) -> ();
drop<u32>([3]) -> ();
struct_construct<Unit>() -> ([90]);
enum_init<core::PanicResult::<()>, 0>([90]) -> ([91]);
store_temp<RangeCheck>([13]) -> ([92]);
store_temp<Array<felt>>([5]) -> ([93]);
store_temp<core::PanicResult::<()>>([91]) -> ([94]);
return([92], [93], [94]);
u32_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 197([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>([7]) -> ([9]);
jump() { 201() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>([10]) -> ([9]);
felt_const<155785504329508738615720351733824384887>() -> ([11]);
rename<core::result::Result::<core::integer::u32, core::integer::u32>>([9]) -> ([13]);
store_temp<felt>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<core::integer::u32>>([12]) { fallthrough([15]) 208([16]) };
branch_align() -> ();
jump() { 213() };
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::u32>, 1>([16]) -> ([17]);
store_temp<RangeCheck>([8]) -> ([18]);
store_temp<core::PanicResult::<core::integer::u32>>([17]) -> ([19]);
return([18], [19]);
enum_init<core::PanicResult::<core::integer::u32>, 0>([15]) -> ([20]);
store_temp<RangeCheck>([8]) -> ([21]);
store_temp<core::PanicResult::<core::integer::u32>>([20]) -> ([22]);
return([21], [22]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<Snapshot<Array<felt>>>([1]) -> ([6]);
store_temp<u32>([2]) -> ([7]);
function_call<user@core::array::array_at::<core::felt>>([5], [6], [7]) -> ([3], [4]);
enum_match<core::PanicResult::<@core::felt>>([4]) { fallthrough([8]) 224([9]) };
branch_align() -> ();
jump() { 229() };
branch_align() -> ();
enum_init<core::PanicResult::<@core::felt>, 1>([9]) -> ([10]);
store_temp<RangeCheck>([3]) -> ([11]);
store_temp<core::PanicResult::<@core::felt>>([10]) -> ([12]);
return([11], [12]);
enum_init<core::PanicResult::<@core::felt>, 0>([8]) -> ([13]);
store_temp<RangeCheck>([3]) -> ([14]);
store_temp<core::PanicResult::<@core::felt>>([13]) -> ([15]);
return([14], [15]);
enum_match<core::result::Result::<core::integer::u32, core::integer::u32>>([0]) { fallthrough([2]) 239([3]) };
branch_align() -> ();
drop<felt>([1]) -> ();
enum_init<core::PanicResult::<core::integer::u32>, 0>([2]) -> ([4]);
store_temp<core::PanicResult::<core::integer::u32>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
drop<u32>([3]) -> ();
array_new<felt>() -> ([6]);
array_append<felt>([6], [1]) -> ([7]);
struct_construct<Unit>() -> ([8]);
drop<Unit>([8]) -> ();
enum_init<core::PanicResult::<core::integer::u32>, 1>([7]) -> ([9]);
store_temp<core::PanicResult::<core::integer::u32>>([9]) -> ([10]);
return([10]);
array_get<felt>([0], [1], [2]) { fallthrough([3], [4]) 254([5]) };
branch_align() -> ();
enum_init<core::PanicResult::<@core::felt>, 0>([4]) -> ([6]);
store_temp<RangeCheck>([3]) -> ([7]);
store_temp<core::PanicResult::<@core::felt>>([6]) -> ([8]);
return([7], [8]);
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
drop<Unit>([9]) -> ();
array_new<felt>() -> ([10]);
felt_const<1637570914057682275393755530660268060279989363>() -> ([11]);
store_temp<felt>([11]) -> ([11]);
array_append<felt>([10], [11]) -> ([12]);
enum_init<core::PanicResult::<@core::felt>, 1>([12]) -> ([13]);
store_temp<RangeCheck>([5]) -> ([14]);
store_temp<core::PanicResult::<@core::felt>>([13]) -> ([15]);
return([14], [15]);

fib_array::fib_array::fib@0([0]: RangeCheck, [1]: u32) -> (RangeCheck, core::PanicResult::<(core::array::Array::<core::felt>, core::felt, core::integer::u32)>);
fib_array::fib_array::fib_inner@66([0]: RangeCheck, [1]: u32, [2]: Array<felt>) -> (RangeCheck, Array<felt>, core::PanicResult::<()>);
core::integer::U32Sub::sub@191([0]: RangeCheck, [1]: u32, [2]: u32) -> (RangeCheck, core::PanicResult::<core::integer::u32>);
core::array::ArrayImpl::<core::felt>::at@217([0]: RangeCheck, [1]: Snapshot<Array<felt>>, [2]: u32) -> (RangeCheck, core::PanicResult::<@core::felt>);
core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect@233([0]: core::result::Result::<core::integer::u32, core::integer::u32>, [1]: felt) -> (core::PanicResult::<core::integer::u32>);
core::array::array_at::<core::felt>@248([0]: RangeCheck, [1]: Snapshot<Array<felt>>, [2]: u32) -> (RangeCheck, core::PanicResult::<@core::felt>);
