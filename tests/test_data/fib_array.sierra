type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Const<felt252, 1637570914057682275393755530660268060279989363> = Const<felt252, 1637570914057682275393755530660268060279989363> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 155785504329508738615720351733824384887> = Const<felt252, 155785504329508738615720351733824384887> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<u32, 2> = Const<u32, 2> [storable: false, drop: false, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type u32 = u32 [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<Array<felt252>, felt252, u32> = Struct<ut@Tuple, Array<felt252>, felt252, u32> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<Tuple<Array<felt252>, felt252, u32>> = Struct<ut@Tuple, Tuple<Array<felt252>, felt252, u32>> [storable: true, drop: true, dup: false, zero_sized: false];
type Box<felt252> = Box<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type BoundedInt<0, 4294967294> = BoundedInt<0, 4294967294> [storable: true, drop: true, dup: true, zero_sized: false];
type Const<BoundedInt<1, 1>, 1> = Const<BoundedInt<1, 1>, 1> [storable: false, drop: false, dup: false, zero_sized: false];
type BoundedInt<1, 1> = BoundedInt<1, 1> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)> = Enum<ut@core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>, Tuple<Tuple<Array<felt252>, felt252, u32>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type BoundedInt<1, 4294967295> = BoundedInt<1, 4294967295> [storable: true, drop: true, dup: true, zero_sized: false];
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<Array<felt252>, Unit> = Struct<ut@Tuple, Array<felt252>, Unit> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())> = Enum<ut@core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, Tuple<Array<felt252>, Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type Const<felt252, 1> = Const<felt252, 1> [storable: false, drop: false, dup: false, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc array_new<felt252> = array_new<felt252>;
libfunc const_as_immediate<Const<felt252, 1>> = const_as_immediate<Const<felt252, 1>>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<Array<felt252>> = store_temp<Array<felt252>>;
libfunc function_call<user@examples::fib_array::fib_inner> = function_call<user@examples::fib_array::fib_inner>;
libfunc enum_match<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>> = enum_match<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>;
libfunc branch_align = branch_align;
libfunc struct_deconstruct<Tuple<Array<felt252>, Unit>> = struct_deconstruct<Tuple<Array<felt252>, Unit>>;
libfunc drop<Unit> = drop<Unit>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc array_len<felt252> = array_len<felt252>;
libfunc dup<u32> = dup<u32>;
libfunc bounded_int_trim_min<u32> = bounded_int_trim_min<u32>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc drop<u32> = drop<u32>;
libfunc drop<Snapshot<Array<felt252>>> = drop<Snapshot<Array<felt252>>>;
libfunc function_call<user@core::panic_with_const_felt252::<155785504329508738615720351733824384887>> = function_call<user@core::panic_with_const_felt252::<155785504329508738615720351733824384887>>;
libfunc enum_init<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>, 1> = enum_init<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>, 1>;
libfunc store_temp<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>> = store_temp<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>>;
libfunc const_as_immediate<Const<BoundedInt<1, 1>, 1>> = const_as_immediate<Const<BoundedInt<1, 1>, 1>>;
libfunc bounded_int_sub<BoundedInt<1, 4294967295>, BoundedInt<1, 1>> = bounded_int_sub<BoundedInt<1, 4294967295>, BoundedInt<1, 1>>;
libfunc upcast<BoundedInt<0, 4294967294>, u32> = upcast<BoundedInt<0, 4294967294>, u32>;
libfunc array_get<felt252> = array_get<felt252>;
libfunc store_temp<Box<felt252>> = store_temp<Box<felt252>>;
libfunc unbox<felt252> = unbox<felt252>;
libfunc rename<felt252> = rename<felt252>;
libfunc struct_construct<Tuple<Array<felt252>, felt252, u32>> = struct_construct<Tuple<Array<felt252>, felt252, u32>>;
libfunc struct_construct<Tuple<Tuple<Array<felt252>, felt252, u32>>> = struct_construct<Tuple<Tuple<Array<felt252>, felt252, u32>>>;
libfunc enum_init<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>, 0> = enum_init<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>, 0>;
libfunc function_call<user@core::panic_with_const_felt252::<1637570914057682275393755530660268060279989363>> = function_call<user@core::panic_with_const_felt252::<1637570914057682275393755530660268060279989363>>;
libfunc u32_overflowing_sub = u32_overflowing_sub;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<Tuple<Array<felt252>, Unit>> = struct_construct<Tuple<Array<felt252>, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 0> = enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>> = store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>;
libfunc jump = jump;
libfunc const_as_immediate<Const<u32, 2>> = const_as_immediate<Const<u32, 2>>;
libfunc felt252_add = felt252_add;
libfunc drop<Box<felt252>> = drop<Box<felt252>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1> = enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1>;
libfunc const_as_immediate<Const<felt252, 155785504329508738615720351733824384887>> = const_as_immediate<Const<felt252, 155785504329508738615720351733824384887>>;
libfunc function_call<user@core::panic_with_felt252> = function_call<user@core::panic_with_felt252>;
libfunc const_as_immediate<Const<felt252, 1637570914057682275393755530660268060279989363>> = const_as_immediate<Const<felt252, 1637570914057682275393755530660268060279989363>>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc store_temp<Tuple<core::panics::Panic, Array<felt252>>> = store_temp<Tuple<core::panics::Panic, Array<felt252>>>;

F0:
disable_ap_tracking() -> ();
array_new<felt252>() -> ([2]);
const_as_immediate<Const<felt252, 1>>() -> ([3]);
store_temp<felt252>([3]) -> ([3]);
array_append<felt252>([2], [3]) -> ([4]);
const_as_immediate<Const<felt252, 1>>() -> ([5]);
store_temp<felt252>([5]) -> ([5]);
array_append<felt252>([4], [5]) -> ([6]);
store_temp<RangeCheck>([0]) -> ([0]);
store_temp<u32>([1]) -> ([1]);
store_temp<Array<felt252>>([6]) -> ([6]);
function_call<user@examples::fib_array::fib_inner>([0], [1], [6]) -> ([7], [8]);
enum_match<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([8]) { fallthrough([9]) F0_B2([10]) };
branch_align() -> ();
struct_deconstruct<Tuple<Array<felt252>, Unit>>([9]) -> ([11], [12]);
drop<Unit>([12]) -> ();
snapshot_take<Array<felt252>>([11]) -> ([13], [14]);
array_len<felt252>([14]) -> ([15]);
snapshot_take<Array<felt252>>([13]) -> ([16], [17]);
store_temp<u32>([15]) -> ([15]);
dup<u32>([15]) -> ([15], [18]);
bounded_int_trim_min<u32>([18]) { fallthrough() F0_B0([19]) };
branch_align() -> ();
drop<Array<felt252>>([16]) -> ();
drop<u32>([15]) -> ();
drop<Snapshot<Array<felt252>>>([17]) -> ();
function_call<user@core::panic_with_const_felt252::<155785504329508738615720351733824384887>>() -> ([20]);
enum_init<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>, 1>([20]) -> ([21]);
store_temp<RangeCheck>([7]) -> ([7]);
store_temp<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>>([21]) -> ([21]);
return([7], [21]);
F0_B0:
branch_align() -> ();
const_as_immediate<Const<BoundedInt<1, 1>, 1>>() -> ([22]);
bounded_int_sub<BoundedInt<1, 4294967295>, BoundedInt<1, 1>>([19], [22]) -> ([23]);
upcast<BoundedInt<0, 4294967294>, u32>([23]) -> ([24]);
store_temp<u32>([24]) -> ([24]);
array_get<felt252>([7], [17], [24]) { fallthrough([25], [26]) F0_B1([27]) };
branch_align() -> ();
store_temp<Box<felt252>>([26]) -> ([26]);
unbox<felt252>([26]) -> ([28]);
rename<felt252>([28]) -> ([29]);
struct_construct<Tuple<Array<felt252>, felt252, u32>>([16], [29], [15]) -> ([30]);
struct_construct<Tuple<Tuple<Array<felt252>, felt252, u32>>>([30]) -> ([31]);
enum_init<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>, 0>([31]) -> ([32]);
store_temp<RangeCheck>([25]) -> ([25]);
store_temp<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>>([32]) -> ([32]);
return([25], [32]);
F0_B1:
branch_align() -> ();
drop<Array<felt252>>([16]) -> ();
drop<u32>([15]) -> ();
function_call<user@core::panic_with_const_felt252::<1637570914057682275393755530660268060279989363>>() -> ([33]);
enum_init<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>, 1>([33]) -> ([34]);
store_temp<RangeCheck>([27]) -> ([27]);
store_temp<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>>([34]) -> ([34]);
return([27], [34]);
F0_B2:
branch_align() -> ();
enum_init<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>, 1>([10]) -> ([35]);
store_temp<RangeCheck>([7]) -> ([7]);
store_temp<core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>>([35]) -> ([35]);
return([7], [35]);
F1:
disable_ap_tracking() -> ();
snapshot_take<Array<felt252>>([2]) -> ([3], [4]);
array_len<felt252>([4]) -> ([5]);
store_temp<u32>([5]) -> ([5]);
dup<u32>([5]) -> ([5], [6]);
dup<u32>([1]) -> ([1], [7]);
u32_overflowing_sub([0], [6], [7]) { fallthrough([8], [9]) F1_B0([10], [11]) };
branch_align() -> ();
drop<u32>([9]) -> ();
drop<u32>([5]) -> ();
drop<u32>([1]) -> ();
struct_construct<Unit>() -> ([12]);
struct_construct<Tuple<Array<felt252>, Unit>>([3], [12]) -> ([13]);
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 0>([13]) -> ([14]);
store_temp<RangeCheck>([8]) -> ([8]);
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([14]) -> ([14]);
return([8], [14]);
F1_B0:
branch_align() -> ();
drop<u32>([11]) -> ();
snapshot_take<Array<felt252>>([3]) -> ([15], [16]);
dup<u32>([5]) -> ([5], [17]);
bounded_int_trim_min<u32>([17]) { fallthrough() F1_B1([18]) };
branch_align() -> ();
drop<Array<felt252>>([15]) -> ();
drop<u32>([1]) -> ();
drop<u32>([5]) -> ();
drop<Snapshot<Array<felt252>>>([16]) -> ();
store_temp<RangeCheck>([10]) -> ([19]);
jump() { F1_B4() };
F1_B1:
branch_align() -> ();
const_as_immediate<Const<BoundedInt<1, 1>, 1>>() -> ([20]);
bounded_int_sub<BoundedInt<1, 4294967295>, BoundedInt<1, 1>>([18], [20]) -> ([21]);
upcast<BoundedInt<0, 4294967294>, u32>([21]) -> ([22]);
store_temp<u32>([22]) -> ([22]);
array_get<felt252>([10], [16], [22]) { fallthrough([23], [24]) F1_B5([25]) };
branch_align() -> ();
snapshot_take<Array<felt252>>([15]) -> ([26], [27]);
const_as_immediate<Const<u32, 2>>() -> ([28]);
store_temp<u32>([28]) -> ([28]);
u32_overflowing_sub([23], [5], [28]) { fallthrough([29], [30]) F1_B3([31], [32]) };
branch_align() -> ();
array_get<felt252>([29], [27], [30]) { fallthrough([33], [34]) F1_B2([35]) };
branch_align() -> ();
store_temp<Box<felt252>>([24]) -> ([24]);
unbox<felt252>([24]) -> ([36]);
rename<felt252>([36]) -> ([37]);
store_temp<Box<felt252>>([34]) -> ([34]);
unbox<felt252>([34]) -> ([38]);
rename<felt252>([38]) -> ([39]);
store_temp<felt252>([37]) -> ([37]);
store_temp<felt252>([39]) -> ([39]);
felt252_add([37], [39]) -> ([40]);
store_temp<felt252>([40]) -> ([40]);
array_append<felt252>([26], [40]) -> ([41]);
store_temp<RangeCheck>([33]) -> ([33]);
store_temp<u32>([1]) -> ([1]);
store_temp<Array<felt252>>([41]) -> ([41]);
function_call<user@examples::fib_array::fib_inner>([33], [1], [41]) -> ([42], [43]);
return([42], [43]);
F1_B2:
branch_align() -> ();
drop<Box<felt252>>([24]) -> ();
drop<u32>([1]) -> ();
drop<Array<felt252>>([26]) -> ();
store_temp<RangeCheck>([35]) -> ([44]);
jump() { F1_B6() };
F1_B3:
branch_align() -> ();
drop<u32>([32]) -> ();
drop<Box<felt252>>([24]) -> ();
drop<u32>([1]) -> ();
drop<Array<felt252>>([26]) -> ();
drop<Snapshot<Array<felt252>>>([27]) -> ();
store_temp<RangeCheck>([31]) -> ([19]);
F1_B4:
function_call<user@core::panic_with_const_felt252::<155785504329508738615720351733824384887>>() -> ([45]);
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1>([45]) -> ([46]);
store_temp<RangeCheck>([19]) -> ([19]);
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([46]) -> ([46]);
return([19], [46]);
F1_B5:
branch_align() -> ();
drop<Array<felt252>>([15]) -> ();
drop<u32>([1]) -> ();
drop<u32>([5]) -> ();
store_temp<RangeCheck>([25]) -> ([44]);
F1_B6:
function_call<user@core::panic_with_const_felt252::<1637570914057682275393755530660268060279989363>>() -> ([47]);
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1>([47]) -> ([48]);
store_temp<RangeCheck>([44]) -> ([44]);
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([48]) -> ([48]);
return([44], [48]);
F2:
const_as_immediate<Const<felt252, 155785504329508738615720351733824384887>>() -> ([0]);
store_temp<felt252>([0]) -> ([0]);
function_call<user@core::panic_with_felt252>([0]) -> ([1]);
return([1]);
F3:
const_as_immediate<Const<felt252, 1637570914057682275393755530660268060279989363>>() -> ([0]);
store_temp<felt252>([0]) -> ([0]);
function_call<user@core::panic_with_felt252>([0]) -> ([1]);
return([1]);
F4:
array_new<felt252>() -> ([1]);
array_append<felt252>([1], [0]) -> ([2]);
struct_construct<core::panics::Panic>() -> ([3]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([3], [2]) -> ([4]);
store_temp<Tuple<core::panics::Panic, Array<felt252>>>([4]) -> ([4]);
return([4]);

examples::fib_array::fib@F0([0]: RangeCheck, [1]: u32) -> (RangeCheck, core::panics::PanicResult::<((core::array::Array::<core::felt252>, core::felt252, core::integer::u32),)>);
examples::fib_array::fib_inner@F1([0]: RangeCheck, [1]: u32, [2]: Array<felt252>) -> (RangeCheck, core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>);
core::panic_with_const_felt252::<155785504329508738615720351733824384887>@F2() -> (Tuple<core::panics::Panic, Array<felt252>>);
core::panic_with_const_felt252::<1637570914057682275393755530660268060279989363>@F3() -> (Tuple<core::panics::Panic, Array<felt252>>);
core::panic_with_felt252@F4([0]: felt252) -> (Tuple<core::panics::Panic, Array<felt252>>);
