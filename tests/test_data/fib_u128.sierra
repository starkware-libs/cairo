type u128 = u128;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type RangeCheck = RangeCheck;
type Tuple<u128> = Struct<ut@Tuple, u128>;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type core::PanicResult::<(core::integer::u128,)> = Enum<ut@core::PanicResult::<(core::integer::u128,)>, Tuple<u128>, Array<felt252>>;
type core::result::Result::<core::integer::u128, core::integer::u128> = Enum<ut@core::result::Result::<core::integer::u128, core::integer::u128>, u128, u128>;

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc u128_const<0> = u128_const<0>;
libfunc dup<u128> = dup<u128>;
libfunc u128_eq = u128_eq;
libfunc branch_align = branch_align;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::integer::U128Add::add> = function_call<user@core::integer::U128Add::add>;
libfunc enum_match<core::PanicResult::<(core::integer::u128,)>> = enum_match<core::PanicResult::<(core::integer::u128,)>>;
libfunc struct_deconstruct<Tuple<u128>> = struct_deconstruct<Tuple<u128>>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::U128Sub::sub> = function_call<user@core::integer::U128Sub::sub>;
libfunc function_call<user@examples::fib_u128::fib> = function_call<user@examples::fib_u128::fib>;
libfunc enum_init<core::PanicResult::<(core::integer::u128,)>, 1> = enum_init<core::PanicResult::<(core::integer::u128,)>, 1>;
libfunc store_temp<core::PanicResult::<(core::integer::u128,)>> = store_temp<core::PanicResult::<(core::integer::u128,)>>;
libfunc drop<u128> = drop<u128>;
libfunc struct_construct<Tuple<u128>> = struct_construct<Tuple<u128>>;
libfunc enum_init<core::PanicResult::<(core::integer::u128,)>, 0> = enum_init<core::PanicResult::<(core::integer::u128,)>, 0>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u128, core::integer::u128>> = store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>;
libfunc felt252_const<39878429859757942499084499860145094553463> = felt252_const<39878429859757942499084499860145094553463>;
libfunc rename<core::result::Result::<core::integer::u128, core::integer::u128>> = rename<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc felt252_const<39878429859763533771555484554338820190071> = felt252_const<39878429859763533771555484554338820190071>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::integer::u128>> = enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc drop<felt252> = drop<felt252>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc array_append<felt252> = array_append<felt252>;

disable_ap_tracking() -> ();
u128_const<0>() -> ([4]);
dup<u128>([3]) -> ([3], [5]);
u128_eq([5], [4]) { fallthrough() 9() };
branch_align() -> ();
struct_construct<Unit>() -> ([6]);
enum_init<core::bool, 0>([6]) -> ([7]);
store_temp<core::bool>([7]) -> ([8]);
jump() { 13() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::bool, 1>([9]) -> ([10]);
store_temp<core::bool>([10]) -> ([8]);
enum_match<core::bool>([8]) { fallthrough([11]) 62([12]) };
branch_align() -> ();
drop<Unit>([11]) -> ();
store_temp<RangeCheck>([0]) -> ([15]);
store_temp<u128>([1]) -> ([16]);
dup<u128>([2]) -> ([2], [17]);
store_temp<u128>([17]) -> ([17]);
function_call<user@core::integer::U128Add::add>([15], [16], [17]) -> ([13], [14]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([14]) { fallthrough([18]) 55([19]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([18]) -> ([20]);
u128_const<1>() -> ([21]);
store_temp<RangeCheck>([13]) -> ([24]);
store_temp<u128>([3]) -> ([25]);
store_temp<u128>([21]) -> ([26]);
function_call<user@core::integer::U128Sub::sub>([24], [25], [26]) -> ([22], [23]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([23]) { fallthrough([27]) 48([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([27]) -> ([29]);
store_temp<RangeCheck>([22]) -> ([32]);
store_temp<u128>([2]) -> ([33]);
store_temp<u128>([20]) -> ([34]);
store_temp<u128>([29]) -> ([35]);
function_call<user@examples::fib_u128::fib>([32], [33], [34], [35]) -> ([30], [31]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([31]) { fallthrough([36]) 43([37]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([36]) -> ([38]);
store_temp<RangeCheck>([30]) -> ([39]);
store_temp<u128>([38]) -> ([40]);
jump() { 68() };
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([37]) -> ([41]);
store_temp<RangeCheck>([30]) -> ([42]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([41]) -> ([43]);
return([42], [43]);
branch_align() -> ();
drop<u128>([20]) -> ();
drop<u128>([2]) -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([28]) -> ([44]);
store_temp<RangeCheck>([22]) -> ([45]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([44]) -> ([46]);
return([45], [46]);
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([19]) -> ([47]);
store_temp<RangeCheck>([13]) -> ([48]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([47]) -> ([49]);
return([48], [49]);
branch_align() -> ();
drop<Unit>([12]) -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
store_temp<RangeCheck>([0]) -> ([39]);
store_temp<u128>([1]) -> ([40]);
struct_construct<Tuple<u128>>([40]) -> ([50]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([50]) -> ([51]);
store_temp<RangeCheck>([39]) -> ([52]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([51]) -> ([53]);
return([52], [53]);
u128_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 79([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 83() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt252_const<39878429859757942499084499860145094553463>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 95([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([15]) -> ([17]);
struct_construct<Tuple<u128>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]);
return([23], [24]);
u128_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 106([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 110() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt252_const<39878429859763533771555484554338820190071>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 122([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([15]) -> ([17]);
struct_construct<Tuple<u128>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]);
return([23], [24]);
enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>([0]) { fallthrough([2]) 134([3]) };
branch_align() -> ();
drop<felt252>([1]) -> ();
struct_construct<Tuple<u128>>([2]) -> ([4]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([4]) -> ([5]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([5]) -> ([6]);
return([6]);
branch_align() -> ();
drop<u128>([3]) -> ();
array_new<felt252>() -> ([7]);
array_append<felt252>([7], [1]) -> ([8]);
struct_construct<Unit>() -> ([9]);
drop<Unit>([9]) -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([8]) -> ([10]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([10]) -> ([11]);
return([11]);

examples::fib_u128::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::integer::U128Add::add@73([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::integer::U128Sub::sub@100([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>@127([0]: core::result::Result::<core::integer::u128, core::integer::u128>, [1]: felt252) -> (core::PanicResult::<(core::integer::u128,)>);
