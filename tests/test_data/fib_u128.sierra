type u128 = u128;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type RangeCheck = RangeCheck;
type felt = felt;
type Array<felt> = Array<felt>;
type core::PanicResult::<core::integer::u128> = Enum<ut@core::PanicResult::<core::integer::u128>, u128, Array<felt>>;
type core::result::Result::<core::integer::u128, core::integer::u128> = Enum<ut@core::result::Result::<core::integer::u128, core::integer::u128>, u128, u128>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc u128_const<0> = u128_const<0>;
libfunc dup<u128> = dup<u128>;
libfunc u128_eq = u128_eq;
libfunc branch_align = branch_align;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::integer::U128Add::add> = function_call<user@core::integer::U128Add::add>;
libfunc enum_match<core::PanicResult::<core::integer::u128>> = enum_match<core::PanicResult::<core::integer::u128>>;
libfunc drop<u128> = drop<u128>;
libfunc enum_init<core::PanicResult::<core::integer::u128>, 1> = enum_init<core::PanicResult::<core::integer::u128>, 1>;
libfunc store_temp<core::PanicResult::<core::integer::u128>> = store_temp<core::PanicResult::<core::integer::u128>>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::U128Sub::sub> = function_call<user@core::integer::U128Sub::sub>;
libfunc function_call<user@fib_u128::fib_u128::fib> = function_call<user@fib_u128::fib_u128::fib>;
libfunc enum_init<core::PanicResult::<core::integer::u128>, 0> = enum_init<core::PanicResult::<core::integer::u128>, 0>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u128, core::integer::u128>> = store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>;
libfunc felt_const<39878429859757942499084499860145094553463> = felt_const<39878429859757942499084499860145094553463>;
libfunc rename<core::result::Result::<core::integer::u128, core::integer::u128>> = rename<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect> = function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc felt_const<39878429859763533771555484554338820190071> = felt_const<39878429859763533771555484554338820190071>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::integer::u128>> = enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc drop<felt> = drop<felt>;
libfunc array_new<felt> = array_new<felt>;
libfunc array_append<felt> = array_append<felt>;

revoke_ap_tracking() -> ();
u128_const<0>() -> ([4]);
dup<u128>([3]) -> ([3], [5]);
u128_eq([5], [4]) { fallthrough() 9() };
branch_align() -> ();
struct_construct<Unit>() -> ([6]);
enum_init<core::bool, 0>([6]) -> ([7]);
store_temp<core::bool>([7]) -> ([8]);
jump() { 13() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::bool, 1>([9]) -> ([10]);
store_temp<core::bool>([10]) -> ([8]);
enum_match<core::bool>([8]) { fallthrough([11]) 65([12]) };
branch_align() -> ();
drop<Unit>([11]) -> ();
store_temp<RangeCheck>([0]) -> ([15]);
store_temp<u128>([1]) -> ([16]);
dup<u128>([2]) -> ([2], [17]);
store_temp<u128>([17]) -> ([17]);
function_call<user@core::integer::U128Add::add>([15], [16], [17]) -> ([13], [14]);
enum_match<core::PanicResult::<core::integer::u128>>([14]) { fallthrough([18]) 25([19]) };
branch_align() -> ();
store_temp<u128>([18]) -> ([20]);
jump() { 32() };
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([19]) -> ([21]);
store_temp<RangeCheck>([13]) -> ([22]);
store_temp<core::PanicResult::<core::integer::u128>>([21]) -> ([23]);
return([22], [23]);
u128_const<1>() -> ([24]);
store_temp<RangeCheck>([13]) -> ([27]);
store_temp<u128>([3]) -> ([28]);
store_temp<u128>([24]) -> ([29]);
function_call<user@core::integer::U128Sub::sub>([27], [28], [29]) -> ([25], [26]);
enum_match<core::PanicResult::<core::integer::u128>>([26]) { fallthrough([30]) 41([31]) };
branch_align() -> ();
store_temp<u128>([30]) -> ([32]);
jump() { 48() };
branch_align() -> ();
drop<u128>([20]) -> ();
drop<u128>([2]) -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([31]) -> ([33]);
store_temp<RangeCheck>([25]) -> ([34]);
store_temp<core::PanicResult::<core::integer::u128>>([33]) -> ([35]);
return([34], [35]);
store_temp<RangeCheck>([25]) -> ([38]);
store_temp<u128>([2]) -> ([39]);
store_temp<u128>([20]) -> ([40]);
store_temp<u128>([32]) -> ([41]);
function_call<user@fib_u128::fib_u128::fib>([38], [39], [40], [41]) -> ([36], [37]);
enum_match<core::PanicResult::<core::integer::u128>>([37]) { fallthrough([42]) 57([43]) };
branch_align() -> ();
store_temp<u128>([42]) -> ([44]);
jump() { 62() };
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([43]) -> ([45]);
store_temp<RangeCheck>([36]) -> ([46]);
store_temp<core::PanicResult::<core::integer::u128>>([45]) -> ([47]);
return([46], [47]);
store_temp<RangeCheck>([36]) -> ([48]);
store_temp<u128>([44]) -> ([49]);
jump() { 71() };
branch_align() -> ();
drop<Unit>([12]) -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
store_temp<RangeCheck>([0]) -> ([48]);
store_temp<u128>([1]) -> ([49]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([49]) -> ([50]);
store_temp<RangeCheck>([48]) -> ([51]);
store_temp<core::PanicResult::<core::integer::u128>>([50]) -> ([52]);
return([51], [52]);
u128_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 81([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 85() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt_const<39878429859757942499084499860145094553463>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<core::integer::u128>>([12]) { fallthrough([15]) 93([16]) };
branch_align() -> ();
store_temp<u128>([15]) -> ([17]);
jump() { 98() };
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([16]) -> ([18]);
store_temp<RangeCheck>([8]) -> ([19]);
store_temp<core::PanicResult::<core::integer::u128>>([18]) -> ([20]);
return([19], [20]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([17]) -> ([21]);
store_temp<RangeCheck>([8]) -> ([22]);
store_temp<core::PanicResult::<core::integer::u128>>([21]) -> ([23]);
return([22], [23]);
u128_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 108([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 112() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt_const<39878429859763533771555484554338820190071>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<core::integer::u128>>([12]) { fallthrough([15]) 120([16]) };
branch_align() -> ();
store_temp<u128>([15]) -> ([17]);
jump() { 125() };
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([16]) -> ([18]);
store_temp<RangeCheck>([8]) -> ([19]);
store_temp<core::PanicResult::<core::integer::u128>>([18]) -> ([20]);
return([19], [20]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([17]) -> ([21]);
store_temp<RangeCheck>([8]) -> ([22]);
store_temp<core::PanicResult::<core::integer::u128>>([21]) -> ([23]);
return([22], [23]);
enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>([0]) { fallthrough([2]) 134([3]) };
branch_align() -> ();
drop<felt>([1]) -> ();
store_temp<u128>([2]) -> ([4]);
jump() { 143() };
branch_align() -> ();
drop<u128>([3]) -> ();
array_new<felt>() -> ([5]);
array_append<felt>([5], [1]) -> ([6]);
struct_construct<Unit>() -> ([7]);
drop<Unit>([7]) -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([6]) -> ([8]);
store_temp<core::PanicResult::<core::integer::u128>>([8]) -> ([9]);
return([9]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([4]) -> ([10]);
store_temp<core::PanicResult::<core::integer::u128>>([10]) -> ([11]);
return([11]);

fib_u128::fib_u128::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::PanicResult::<core::integer::u128>);
core::integer::U128Add::add@75([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<core::integer::u128>);
core::integer::U128Sub::sub@102([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<core::integer::u128>);
core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect@129([0]: core::result::Result::<core::integer::u128, core::integer::u128>, [1]: felt) -> (core::PanicResult::<core::integer::u128>);
