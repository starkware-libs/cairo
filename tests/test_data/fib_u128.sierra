type u128 = u128 [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type core::result::Result::<core::integer::u128, core::integer::u128> = Enum<ut@core::result::Result::<core::integer::u128, core::integer::u128>, u128, u128> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<u128> = Struct<ut@Tuple, u128> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::integer::u128,)> = Enum<ut@core::panics::PanicResult::<(core::integer::u128,)>, Tuple<u128>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc u128_const<0> = u128_const<0>;
libfunc dup<u128> = dup<u128>;
libfunc u128_eq = u128_eq;
libfunc branch_align = branch_align;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::integer::U128Add::add> = function_call<user@core::integer::U128Add::add>;
libfunc enum_match<core::panics::PanicResult::<(core::integer::u128,)>> = enum_match<core::panics::PanicResult::<(core::integer::u128,)>>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::U128Sub::sub> = function_call<user@core::integer::U128Sub::sub>;
libfunc struct_deconstruct<Tuple<u128>> = struct_deconstruct<Tuple<u128>>;
libfunc function_call<user@examples::fib_u128::fib> = function_call<user@examples::fib_u128::fib>;
libfunc drop<Tuple<u128>> = drop<Tuple<u128>>;
libfunc drop<u128> = drop<u128>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1> = enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>;
libfunc store_temp<core::panics::PanicResult::<(core::integer::u128,)>> = store_temp<core::panics::PanicResult::<(core::integer::u128,)>>;
libfunc struct_construct<Tuple<u128>> = struct_construct<Tuple<u128>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0> = enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u128, core::integer::u128>> = store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>;
libfunc felt252_const<39878429859757942499084499860145094553463> = felt252_const<39878429859757942499084499860145094553463>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc felt252_const<39878429859763533771555484554338820190071> = felt252_const<39878429859763533771555484554338820190071>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::integer::u128>> = enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc drop<felt252> = drop<felt252>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;

disable_ap_tracking() -> (); // 0
u128_const<0>() -> ([4]); // 1
dup<u128>([3]) -> ([3], [5]); // 2
u128_eq([5], [4]) { fallthrough() 41() }; // 3
branch_align() -> (); // 4
store_temp<RangeCheck>([0]) -> ([0]); // 5
store_temp<u128>([1]) -> ([1]); // 6
dup<u128>([2]) -> ([2], [6]); // 7
store_temp<u128>([6]) -> ([6]); // 8
function_call<user@core::integer::U128Add::add>([0], [1], [6]) -> ([7], [8]); // 9
enum_match<core::panics::PanicResult::<(core::integer::u128,)>>([8]) { fallthrough([9]) 34([10]) }; // 10
branch_align() -> (); // 11
u128_const<1>() -> ([11]); // 12
store_temp<RangeCheck>([7]) -> ([7]); // 13
store_temp<u128>([3]) -> ([3]); // 14
store_temp<u128>([11]) -> ([11]); // 15
function_call<user@core::integer::U128Sub::sub>([7], [3], [11]) -> ([12], [13]); // 16
enum_match<core::panics::PanicResult::<(core::integer::u128,)>>([13]) { fallthrough([14]) 27([15]) }; // 17
branch_align() -> (); // 18
struct_deconstruct<Tuple<u128>>([9]) -> ([16]); // 19
struct_deconstruct<Tuple<u128>>([14]) -> ([17]); // 20
store_temp<RangeCheck>([12]) -> ([12]); // 21
store_temp<u128>([2]) -> ([2]); // 22
store_temp<u128>([16]) -> ([16]); // 23
store_temp<u128>([17]) -> ([17]); // 24
function_call<user@examples::fib_u128::fib>([12], [2], [16], [17]) -> ([18], [19]); // 25
return([18], [19]); // 26
branch_align() -> (); // 27
drop<Tuple<u128>>([9]) -> (); // 28
drop<u128>([2]) -> (); // 29
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([15]) -> ([20]); // 30
store_temp<RangeCheck>([12]) -> ([12]); // 31
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([20]) -> ([20]); // 32
return([12], [20]); // 33
branch_align() -> (); // 34
drop<u128>([2]) -> (); // 35
drop<u128>([3]) -> (); // 36
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([10]) -> ([21]); // 37
store_temp<RangeCheck>([7]) -> ([7]); // 38
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([21]) -> ([21]); // 39
return([7], [21]); // 40
branch_align() -> (); // 41
drop<u128>([2]) -> (); // 42
drop<u128>([3]) -> (); // 43
struct_construct<Tuple<u128>>([1]) -> ([22]); // 44
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>([22]) -> ([23]); // 45
store_temp<RangeCheck>([0]) -> ([0]); // 46
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([23]) -> ([23]); // 47
return([0], [23]); // 48
u128_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 55([5], [6]) }; // 49
branch_align() -> (); // 50
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]); // 51
store_temp<RangeCheck>([3]) -> ([8]); // 52
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]); // 53
jump() { 59() }; // 54
branch_align() -> (); // 55
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]); // 56
store_temp<RangeCheck>([5]) -> ([8]); // 57
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]); // 58
felt252_const<39878429859757942499084499860145094553463>() -> ([11]); // 59
store_temp<felt252>([11]) -> ([11]); // 60
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([9], [11]) -> ([12]); // 61
store_temp<RangeCheck>([8]) -> ([8]); // 62
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([12]) -> ([12]); // 63
return([8], [12]); // 64
u128_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 71([5], [6]) }; // 65
branch_align() -> (); // 66
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]); // 67
store_temp<RangeCheck>([3]) -> ([8]); // 68
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]); // 69
jump() { 75() }; // 70
branch_align() -> (); // 71
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]); // 72
store_temp<RangeCheck>([5]) -> ([8]); // 73
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]); // 74
felt252_const<39878429859763533771555484554338820190071>() -> ([11]); // 75
store_temp<felt252>([11]) -> ([11]); // 76
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([9], [11]) -> ([12]); // 77
store_temp<RangeCheck>([8]) -> ([8]); // 78
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([12]) -> ([12]); // 79
return([8], [12]); // 80
enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>([0]) { fallthrough([2]) 88([3]) }; // 81
branch_align() -> (); // 82
drop<felt252>([1]) -> (); // 83
struct_construct<Tuple<u128>>([2]) -> ([4]); // 84
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>([4]) -> ([5]); // 85
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([5]) -> ([5]); // 86
return([5]); // 87
branch_align() -> (); // 88
drop<u128>([3]) -> (); // 89
array_new<felt252>() -> ([6]); // 90
array_append<felt252>([6], [1]) -> ([7]); // 91
struct_construct<core::panics::Panic>() -> ([8]); // 92
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([8], [7]) -> ([9]); // 93
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([9]) -> ([10]); // 94
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([10]) -> ([10]); // 95
return([10]); // 96

examples::fib_u128::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u128,)>);
core::integer::U128Add::add@49([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u128,)>);
core::integer::U128Sub::sub@65([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u128,)>);
core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>@81([0]: core::result::Result::<core::integer::u128, core::integer::u128>, [1]: felt252) -> (core::panics::PanicResult::<(core::integer::u128,)>);
