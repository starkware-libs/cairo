type u128 = u128 [storable: true, drop: true, dup: true, zero_sized: false];
type Const<felt252, 39878429859757942499084499860145094553463> = Const<felt252, 39878429859757942499084499860145094553463> [storable: false, drop: false, dup: false, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type Const<felt252, 39878429859763533771555484554338820190071> = Const<felt252, 39878429859763533771555484554338820190071> [storable: false, drop: false, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type Const<u128, 1> = Const<u128, 1> [storable: false, drop: false, dup: false, zero_sized: false];
type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type Tuple<u128> = Struct<ut@Tuple, u128> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::integer::u128,)> = Enum<ut@core::panics::PanicResult::<(core::integer::u128,)>, Tuple<u128>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type NonZero<u128> = NonZero<u128> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc dup<u128> = dup<u128>;
libfunc u128_is_zero = u128_is_zero;
libfunc branch_align = branch_align;
libfunc drop<u128> = drop<u128>;
libfunc struct_construct<Tuple<u128>> = struct_construct<Tuple<u128>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0> = enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<core::panics::PanicResult::<(core::integer::u128,)>> = store_temp<core::panics::PanicResult::<(core::integer::u128,)>>;
libfunc drop<NonZero<u128>> = drop<NonZero<u128>>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc const_as_immediate<Const<u128, 1>> = const_as_immediate<Const<u128, 1>>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc function_call<user@examples::fib_u128::fib> = function_call<user@examples::fib_u128::fib>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc const_as_immediate<Const<felt252, 39878429859763533771555484554338820190071>> = const_as_immediate<Const<felt252, 39878429859763533771555484554338820190071>>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1> = enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>;
libfunc const_as_immediate<Const<felt252, 39878429859757942499084499860145094553463>> = const_as_immediate<Const<felt252, 39878429859757942499084499860145094553463>>;

disable_ap_tracking() -> (); // 0
dup<u128>([3]) -> ([3], [4]); // 1
u128_is_zero([4]) { fallthrough() 11([5]) }; // 2
branch_align() -> (); // 3
drop<u128>([2]) -> (); // 4
drop<u128>([3]) -> (); // 5
struct_construct<Tuple<u128>>([1]) -> ([6]); // 6
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>([6]) -> ([7]); // 7
store_temp<RangeCheck>([0]) -> ([0]); // 8
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([7]) -> ([7]); // 9
return([0], [7]); // 10
branch_align() -> (); // 11
drop<NonZero<u128>>([5]) -> (); // 12
dup<u128>([2]) -> ([2], [8]); // 13
u128_overflowing_add([0], [1], [8]) { fallthrough([9], [10]) 40([11], [12]) }; // 14
branch_align() -> (); // 15
const_as_immediate<Const<u128, 1>>() -> ([13]); // 16
store_temp<u128>([13]) -> ([13]); // 17
u128_overflowing_sub([9], [3], [13]) { fallthrough([14], [15]) 26([16], [17]) }; // 18
branch_align() -> (); // 19
store_temp<RangeCheck>([14]) -> ([14]); // 20
store_temp<u128>([2]) -> ([2]); // 21
store_temp<u128>([10]) -> ([10]); // 22
store_temp<u128>([15]) -> ([15]); // 23
function_call<user@examples::fib_u128::fib>([14], [2], [10], [15]) -> ([18], [19]); // 24
return([18], [19]); // 25
branch_align() -> (); // 26
drop<u128>([17]) -> (); // 27
drop<u128>([2]) -> (); // 28
drop<u128>([10]) -> (); // 29
array_new<felt252>() -> ([20]); // 30
const_as_immediate<Const<felt252, 39878429859763533771555484554338820190071>>() -> ([21]); // 31
store_temp<felt252>([21]) -> ([21]); // 32
array_append<felt252>([20], [21]) -> ([22]); // 33
struct_construct<core::panics::Panic>() -> ([23]); // 34
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([23], [22]) -> ([24]); // 35
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([24]) -> ([25]); // 36
store_temp<RangeCheck>([16]) -> ([16]); // 37
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([25]) -> ([25]); // 38
return([16], [25]); // 39
branch_align() -> (); // 40
drop<u128>([12]) -> (); // 41
drop<u128>([2]) -> (); // 42
drop<u128>([3]) -> (); // 43
array_new<felt252>() -> ([26]); // 44
const_as_immediate<Const<felt252, 39878429859757942499084499860145094553463>>() -> ([27]); // 45
store_temp<felt252>([27]) -> ([27]); // 46
array_append<felt252>([26], [27]) -> ([28]); // 47
struct_construct<core::panics::Panic>() -> ([29]); // 48
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([29], [28]) -> ([30]); // 49
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([30]) -> ([31]); // 50
store_temp<RangeCheck>([11]) -> ([11]); // 51
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([31]) -> ([31]); // 52
return([11], [31]); // 53

examples::fib_u128::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u128,)>);
