type u128 = u128 [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type core::result::Result::<core::integer::u128, core::integer::u128> = Enum<ut@core::result::Result::<core::integer::u128, core::integer::u128>, u128, u128> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<u128> = Struct<ut@Tuple, u128> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::integer::u128,)> = Enum<ut@core::panics::PanicResult::<(core::integer::u128,)>, Tuple<u128>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc snapshot_take<u128> = snapshot_take<u128>;
libfunc u128_const<0> = u128_const<0>;
libfunc drop<u128> = drop<u128>;
libfunc rename<u128> = rename<u128>;
libfunc u128_eq = u128_eq;
libfunc branch_align = branch_align;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc dup<u128> = dup<u128>;
libfunc function_call<user@core::integer::U128Add::add> = function_call<user@core::integer::U128Add::add>;
libfunc enum_match<core::panics::PanicResult::<(core::integer::u128,)>> = enum_match<core::panics::PanicResult::<(core::integer::u128,)>>;
libfunc struct_deconstruct<Tuple<u128>> = struct_deconstruct<Tuple<u128>>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::U128Sub::sub> = function_call<user@core::integer::U128Sub::sub>;
libfunc function_call<user@examples::fib_u128::fib> = function_call<user@examples::fib_u128::fib>;
libfunc jump = jump;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1> = enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>;
libfunc store_temp<core::panics::PanicResult::<(core::integer::u128,)>> = store_temp<core::panics::PanicResult::<(core::integer::u128,)>>;
libfunc struct_construct<Tuple<u128>> = struct_construct<Tuple<u128>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0> = enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u128, core::integer::u128>> = store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>;
libfunc felt252_const<39878429859757942499084499860145094553463> = felt252_const<39878429859757942499084499860145094553463>;
libfunc rename<core::result::Result::<core::integer::u128, core::integer::u128>> = rename<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc felt252_const<39878429859763533771555484554338820190071> = felt252_const<39878429859763533771555484554338820190071>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::integer::u128>> = enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc drop<felt252> = drop<felt252>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;

disable_ap_tracking() -> ();
snapshot_take<u128>([3]) -> ([4], [5]);
u128_const<0>() -> ([6]);
snapshot_take<u128>([6]) -> ([7], [8]);
drop<u128>([7]) -> ();
rename<u128>([5]) -> ([9]);
rename<u128>([8]) -> ([10]);
u128_eq([9], [10]) { fallthrough() 55() };
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([13]);
store_temp<u128>([1]) -> ([14]);
dup<u128>([2]) -> ([2], [15]);
store_temp<u128>([15]) -> ([15]);
function_call<user@core::integer::U128Add::add>([13], [14], [15]) -> ([11], [12]);
enum_match<core::panics::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([16]) 48([17]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([16]) -> ([18]);
u128_const<1>() -> ([19]);
store_temp<RangeCheck>([11]) -> ([22]);
store_temp<u128>([4]) -> ([23]);
store_temp<u128>([19]) -> ([24]);
function_call<user@core::integer::U128Sub::sub>([22], [23], [24]) -> ([20], [21]);
enum_match<core::panics::PanicResult::<(core::integer::u128,)>>([21]) { fallthrough([25]) 41([26]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([25]) -> ([27]);
store_temp<RangeCheck>([20]) -> ([30]);
store_temp<u128>([2]) -> ([31]);
store_temp<u128>([18]) -> ([32]);
store_temp<u128>([27]) -> ([33]);
function_call<user@examples::fib_u128::fib>([30], [31], [32], [33]) -> ([28], [29]);
enum_match<core::panics::PanicResult::<(core::integer::u128,)>>([29]) { fallthrough([34]) 36([35]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([34]) -> ([36]);
store_temp<RangeCheck>([28]) -> ([37]);
store_temp<u128>([36]) -> ([38]);
jump() { 60() };
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([35]) -> ([39]);
store_temp<RangeCheck>([28]) -> ([40]);
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([39]) -> ([41]);
return([40], [41]);
branch_align() -> ();
drop<u128>([18]) -> ();
drop<u128>([2]) -> ();
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([26]) -> ([42]);
store_temp<RangeCheck>([20]) -> ([43]);
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([42]) -> ([44]);
return([43], [44]);
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([4]) -> ();
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([17]) -> ([45]);
store_temp<RangeCheck>([11]) -> ([46]);
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([45]) -> ([47]);
return([46], [47]);
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([4]) -> ();
store_temp<RangeCheck>([0]) -> ([37]);
store_temp<u128>([1]) -> ([38]);
struct_construct<Tuple<u128>>([38]) -> ([48]);
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>([48]) -> ([49]);
store_temp<RangeCheck>([37]) -> ([50]);
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([49]) -> ([51]);
return([50], [51]);
u128_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 71([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 75() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt252_const<39878429859757942499084499860145094553463>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([13], [14]) -> ([12]);
enum_match<core::panics::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 87([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([15]) -> ([17]);
struct_construct<Tuple<u128>>([17]) -> ([18]);
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]);
return([23], [24]);
u128_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 98([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 102() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt252_const<39878429859763533771555484554338820190071>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([13], [14]) -> ([12]);
enum_match<core::panics::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 114([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([15]) -> ([17]);
struct_construct<Tuple<u128>>([17]) -> ([18]);
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]);
return([23], [24]);
enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>([0]) { fallthrough([2]) 126([3]) };
branch_align() -> ();
drop<felt252>([1]) -> ();
struct_construct<Tuple<u128>>([2]) -> ([4]);
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>([4]) -> ([5]);
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([5]) -> ([6]);
return([6]);
branch_align() -> ();
drop<u128>([3]) -> ();
array_new<felt252>() -> ([7]);
array_append<felt252>([7], [1]) -> ([8]);
struct_construct<core::panics::Panic>() -> ([9]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([9], [8]) -> ([10]);
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([10]) -> ([11]);
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([11]) -> ([12]);
return([12]);

examples::fib_u128::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u128,)>);
core::integer::U128Add::add@65([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u128,)>);
core::integer::U128Sub::sub@92([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u128,)>);
core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>@119([0]: core::result::Result::<core::integer::u128, core::integer::u128>, [1]: felt252) -> (core::panics::PanicResult::<(core::integer::u128,)>);
