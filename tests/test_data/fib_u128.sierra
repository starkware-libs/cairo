type u128 = u128;
type felt = felt;
type NonZero<felt> = NonZero<felt>;
type RangeCheck = RangeCheck;
type Array<felt> = Array<felt>;
type core::PanicResult::<core::integer::u128> = Enum<ut@core::PanicResult::<core::integer::u128>, u128, Array<felt>>;
type Unit = Struct<ut@Tuple>;
type core::option::Option::<core::integer::u128> = Enum<ut@core::option::Option::<core::integer::u128>, u128, Unit>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<u128> = dup<u128>;
libfunc u128_to_felt = u128_to_felt;
libfunc felt_jump_nz = felt_jump_nz;
libfunc drop<u128> = drop<u128>;
libfunc branch_align = branch_align;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc function_call<user@core::integer::u128_add> = function_call<user@core::integer::u128_add>;
libfunc enum_match<core::PanicResult::<core::integer::u128>> = enum_match<core::PanicResult::<core::integer::u128>>;
libfunc enum_init<core::PanicResult::<core::integer::u128>, 1> = enum_init<core::PanicResult::<core::integer::u128>, 1>;
libfunc store_temp<core::PanicResult::<core::integer::u128>> = store_temp<core::PanicResult::<core::integer::u128>>;
libfunc rename<core::PanicResult::<core::integer::u128>> = rename<core::PanicResult::<core::integer::u128>>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::u128_sub> = function_call<user@core::integer::u128_sub>;
libfunc function_call<user@fib_u128::fib_u128::fib> = function_call<user@fib_u128::fib_u128::fib>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<u128> = rename<u128>;
libfunc enum_init<core::PanicResult::<core::integer::u128>, 0> = enum_init<core::PanicResult::<core::integer::u128>, 0>;
libfunc function_call<user@core::integer::u128_checked_add> = function_call<user@core::integer::u128_checked_add>;
libfunc enum_match<core::option::Option::<core::integer::u128>> = enum_match<core::option::Option::<core::integer::u128>>;
libfunc drop<Unit> = drop<Unit>;
libfunc array_new<felt> = array_new<felt>;
libfunc felt_const<1> = felt_const<1>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc function_call<user@core::integer::u128_checked_sub> = function_call<user@core::integer::u128_checked_sub>;
libfunc u128_overflow_add = u128_overflow_add;
libfunc enum_init<core::option::Option::<core::integer::u128>, 0> = enum_init<core::option::Option::<core::integer::u128>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u128>> = store_temp<core::option::Option::<core::integer::u128>>;
libfunc rename<core::option::Option::<core::integer::u128>> = rename<core::option::Option::<core::integer::u128>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 1> = enum_init<core::option::Option::<core::integer::u128>, 1>;
libfunc u128_overflow_sub = u128_overflow_sub;

revoke_ap_tracking() -> ();
dup<u128>([3]) -> ([3], [48]);
u128_to_felt([48]) -> ([4]);
felt_jump_nz([4]) { fallthrough() 10([5]) };
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([6]);
store_temp<u128>([1]) -> ([7]);
jump() { 65() };
drop<NonZero<felt>>([5]) -> ();
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<u128>([1]) -> ([11]);
dup<u128>([2]) -> ([2], [49]);
store_temp<u128>([49]) -> ([12]);
function_call<user@core::integer::u128_add>([10], [11], [12]) -> ([8], [9]);
enum_match<core::PanicResult::<core::integer::u128>>([9]) { 18([13]) 21([14]) };
branch_align() -> ();
store_temp<u128>([13]) -> ([15]);
jump() { 29() };
drop<u128>([3]) -> ();
drop<u128>([2]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([14]) -> ([16]);
store_temp<RangeCheck>([8]) -> ([17]);
store_temp<core::PanicResult::<core::integer::u128>>([16]) -> ([16]);
rename<core::PanicResult::<core::integer::u128>>([16]) -> ([18]);
return([17], [18]);
u128_const<1>() -> ([19]);
store_temp<RangeCheck>([8]) -> ([22]);
store_temp<u128>([3]) -> ([23]);
store_temp<u128>([19]) -> ([24]);
function_call<user@core::integer::u128_sub>([22], [23], [24]) -> ([20], [21]);
enum_match<core::PanicResult::<core::integer::u128>>([21]) { 35([25]) 38([26]) };
branch_align() -> ();
store_temp<u128>([25]) -> ([27]);
jump() { 46() };
drop<u128>([2]) -> ();
drop<u128>([15]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([26]) -> ([28]);
store_temp<RangeCheck>([20]) -> ([29]);
store_temp<core::PanicResult::<core::integer::u128>>([28]) -> ([28]);
rename<core::PanicResult::<core::integer::u128>>([28]) -> ([30]);
return([29], [30]);
store_temp<RangeCheck>([20]) -> ([33]);
store_temp<u128>([2]) -> ([34]);
store_temp<u128>([15]) -> ([35]);
store_temp<u128>([27]) -> ([36]);
function_call<user@fib_u128::fib_u128::fib>([33], [34], [35], [36]) -> ([31], [32]);
enum_match<core::PanicResult::<core::integer::u128>>([32]) { 52([37]) 55([38]) };
branch_align() -> ();
store_temp<u128>([37]) -> ([39]);
jump() { 61() };
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([38]) -> ([40]);
store_temp<RangeCheck>([31]) -> ([41]);
store_temp<core::PanicResult::<core::integer::u128>>([40]) -> ([40]);
rename<core::PanicResult::<core::integer::u128>>([40]) -> ([42]);
return([41], [42]);
store_temp<RangeCheck>([31]) -> ([43]);
store_temp<u128>([39]) -> ([44]);
rename<RangeCheck>([43]) -> ([6]);
rename<u128>([44]) -> ([7]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([7]) -> ([45]);
store_temp<RangeCheck>([6]) -> ([46]);
store_temp<core::PanicResult::<core::integer::u128>>([45]) -> ([45]);
rename<core::PanicResult::<core::integer::u128>>([45]) -> ([47]);
return([46], [47]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<u128>([1]) -> ([6]);
store_temp<u128>([2]) -> ([7]);
function_call<user@core::integer::u128_checked_add>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u128>>([4]) { 75([8]) 79([9]) };
branch_align() -> ();
store_temp<u128>([8]) -> ([10]);
rename<u128>([10]) -> ([11]);
jump() { 90() };
drop<Unit>([9]) -> ();
branch_align() -> ();
array_new<felt>() -> ([12]);
felt_const<1>() -> ([13]);
store_temp<felt>([13]) -> ([13]);
array_append<felt>([12], [13]) -> ([14]);
enum_init<core::PanicResult::<core::integer::u128>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::PanicResult::<core::integer::u128>>([15]) -> ([15]);
rename<core::PanicResult::<core::integer::u128>>([15]) -> ([17]);
return([16], [17]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([11]) -> ([18]);
store_temp<RangeCheck>([3]) -> ([19]);
store_temp<core::PanicResult::<core::integer::u128>>([18]) -> ([18]);
rename<core::PanicResult::<core::integer::u128>>([18]) -> ([20]);
return([19], [20]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<u128>([1]) -> ([6]);
store_temp<u128>([2]) -> ([7]);
function_call<user@core::integer::u128_checked_sub>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u128>>([4]) { 100([8]) 104([9]) };
branch_align() -> ();
store_temp<u128>([8]) -> ([10]);
rename<u128>([10]) -> ([11]);
jump() { 115() };
drop<Unit>([9]) -> ();
branch_align() -> ();
array_new<felt>() -> ([12]);
felt_const<1>() -> ([13]);
store_temp<felt>([13]) -> ([13]);
array_append<felt>([12], [13]) -> ([14]);
enum_init<core::PanicResult::<core::integer::u128>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::PanicResult::<core::integer::u128>>([15]) -> ([15]);
rename<core::PanicResult::<core::integer::u128>>([15]) -> ([17]);
return([16], [17]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([11]) -> ([18]);
store_temp<RangeCheck>([3]) -> ([19]);
store_temp<core::PanicResult::<core::integer::u128>>([18]) -> ([18]);
rename<core::PanicResult::<core::integer::u128>>([18]) -> ([20]);
return([19], [20]);
u128_overflow_add([0], [1], [2]) { fallthrough([3], [4]) 128([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 136() };
drop<u128>([6]) -> ();
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::u128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::u128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([13]);
return([12], [13]);
u128_overflow_sub([0], [1], [2]) { fallthrough([3], [4]) 147([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 155() };
drop<u128>([6]) -> ();
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::u128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::u128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([13]);
return([12], [13]);

fib_u128::fib_u128::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::PanicResult::<core::integer::u128>);
core::integer::u128_add@70([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<core::integer::u128>);
core::integer::u128_sub@95([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<core::integer::u128>);
core::integer::u128_checked_add@120([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::integer::u128_checked_sub@139([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
