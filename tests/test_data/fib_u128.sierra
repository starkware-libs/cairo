type u128 = u128;
type felt = felt;
type NonZero<felt> = NonZero<felt>;
type RangeCheck = RangeCheck;
type Array<felt> = Array<felt>;
type core::PanicResult::<core::integer::u128> = Enum<ut@core::PanicResult::<core::integer::u128>, u128, Array<felt>>;
type core::result::Result::<core::integer::u128, core::integer::u128> = Enum<ut@core::result::Result::<core::integer::u128, core::integer::u128>, u128, u128>;
type Unit = Struct<ut@Tuple>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<u128> = dup<u128>;
libfunc u128_to_felt = u128_to_felt;
libfunc felt_is_zero = felt_is_zero;
libfunc branch_align = branch_align;
libfunc drop<u128> = drop<u128>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc function_call<user@core::integer::U128Add::add> = function_call<user@core::integer::U128Add::add>;
libfunc enum_match<core::PanicResult::<core::integer::u128>> = enum_match<core::PanicResult::<core::integer::u128>>;
libfunc enum_init<core::PanicResult::<core::integer::u128>, 1> = enum_init<core::PanicResult::<core::integer::u128>, 1>;
libfunc store_temp<core::PanicResult::<core::integer::u128>> = store_temp<core::PanicResult::<core::integer::u128>>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::U128Sub::sub> = function_call<user@core::integer::U128Sub::sub>;
libfunc function_call<user@fib_u128::fib_u128::fib> = function_call<user@fib_u128::fib_u128::fib>;
libfunc enum_init<core::PanicResult::<core::integer::u128>, 0> = enum_init<core::PanicResult::<core::integer::u128>, 0>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u128, core::integer::u128>> = store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>;
libfunc felt_const<39878429859757942499084499860145094553463> = felt_const<39878429859757942499084499860145094553463>;
libfunc rename<core::result::Result::<core::integer::u128, core::integer::u128>> = rename<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect> = function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc felt_const<39878429859763533771555484554338820190071> = felt_const<39878429859763533771555484554338820190071>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::integer::u128>> = enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc drop<felt> = drop<felt>;
libfunc array_new<felt> = array_new<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc drop<Unit> = drop<Unit>;

revoke_ap_tracking() -> ();
dup<u128>([3]) -> ([3], [5]);
u128_to_felt([5]) -> ([4]);
felt_is_zero([4]) { fallthrough() 10([6]) };
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
store_temp<RangeCheck>([0]) -> ([7]);
store_temp<u128>([1]) -> ([8]);
jump() { 60() };
branch_align() -> ();
drop<NonZero<felt>>([6]) -> ();
store_temp<RangeCheck>([0]) -> ([11]);
store_temp<u128>([1]) -> ([12]);
dup<u128>([2]) -> ([2], [13]);
store_temp<u128>([13]) -> ([13]);
function_call<user@core::integer::U128Add::add>([11], [12], [13]) -> ([9], [10]);
enum_match<core::PanicResult::<core::integer::u128>>([10]) { 18([14]) 21([15]) };
branch_align() -> ();
store_temp<u128>([14]) -> ([16]);
jump() { 28() };
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([15]) -> ([17]);
store_temp<RangeCheck>([9]) -> ([18]);
store_temp<core::PanicResult::<core::integer::u128>>([17]) -> ([19]);
return([18], [19]);
u128_const<1>() -> ([20]);
store_temp<RangeCheck>([9]) -> ([23]);
store_temp<u128>([3]) -> ([24]);
store_temp<u128>([20]) -> ([25]);
function_call<user@core::integer::U128Sub::sub>([23], [24], [25]) -> ([21], [22]);
enum_match<core::PanicResult::<core::integer::u128>>([22]) { 34([26]) 37([27]) };
branch_align() -> ();
store_temp<u128>([26]) -> ([28]);
jump() { 44() };
branch_align() -> ();
drop<u128>([16]) -> ();
drop<u128>([2]) -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([27]) -> ([29]);
store_temp<RangeCheck>([21]) -> ([30]);
store_temp<core::PanicResult::<core::integer::u128>>([29]) -> ([31]);
return([30], [31]);
store_temp<RangeCheck>([21]) -> ([34]);
store_temp<u128>([2]) -> ([35]);
store_temp<u128>([16]) -> ([36]);
store_temp<u128>([28]) -> ([37]);
function_call<user@fib_u128::fib_u128::fib>([34], [35], [36], [37]) -> ([32], [33]);
enum_match<core::PanicResult::<core::integer::u128>>([33]) { 50([38]) 53([39]) };
branch_align() -> ();
store_temp<u128>([38]) -> ([40]);
jump() { 58() };
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([39]) -> ([41]);
store_temp<RangeCheck>([32]) -> ([42]);
store_temp<core::PanicResult::<core::integer::u128>>([41]) -> ([43]);
return([42], [43]);
store_temp<RangeCheck>([32]) -> ([7]);
store_temp<u128>([40]) -> ([8]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([8]) -> ([44]);
store_temp<RangeCheck>([7]) -> ([45]);
store_temp<core::PanicResult::<core::integer::u128>>([44]) -> ([46]);
return([45], [46]);
u128_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 70([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 74() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt_const<39878429859757942499084499860145094553463>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<core::integer::u128>>([12]) { 79([15]) 82([16]) };
branch_align() -> ();
store_temp<u128>([15]) -> ([17]);
jump() { 87() };
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([16]) -> ([18]);
store_temp<RangeCheck>([8]) -> ([19]);
store_temp<core::PanicResult::<core::integer::u128>>([18]) -> ([20]);
return([19], [20]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([17]) -> ([21]);
store_temp<RangeCheck>([8]) -> ([22]);
store_temp<core::PanicResult::<core::integer::u128>>([21]) -> ([23]);
return([22], [23]);
u128_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 97([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 101() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt_const<39878429859763533771555484554338820190071>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<core::integer::u128>>([12]) { 106([15]) 109([16]) };
branch_align() -> ();
store_temp<u128>([15]) -> ([17]);
jump() { 114() };
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([16]) -> ([18]);
store_temp<RangeCheck>([8]) -> ([19]);
store_temp<core::PanicResult::<core::integer::u128>>([18]) -> ([20]);
return([19], [20]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([17]) -> ([21]);
store_temp<RangeCheck>([8]) -> ([22]);
store_temp<core::PanicResult::<core::integer::u128>>([21]) -> ([23]);
return([22], [23]);
enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>([0]) { 119([2]) 123([3]) };
branch_align() -> ();
drop<felt>([1]) -> ();
store_temp<u128>([2]) -> ([4]);
jump() { 132() };
branch_align() -> ();
drop<u128>([3]) -> ();
array_new<felt>() -> ([5]);
array_append<felt>([5], [1]) -> ([6]);
struct_construct<Unit>() -> ([7]);
drop<Unit>([7]) -> ();
enum_init<core::PanicResult::<core::integer::u128>, 1>([6]) -> ([8]);
store_temp<core::PanicResult::<core::integer::u128>>([8]) -> ([9]);
return([9]);
enum_init<core::PanicResult::<core::integer::u128>, 0>([4]) -> ([10]);
store_temp<core::PanicResult::<core::integer::u128>>([10]) -> ([11]);
return([11]);

fib_u128::fib_u128::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::PanicResult::<core::integer::u128>);
core::integer::U128Add::add@64([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<core::integer::u128>);
core::integer::U128Sub::sub@91([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<core::integer::u128>);
core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect@118([0]: core::result::Result::<core::integer::u128, core::integer::u128>, [1]: felt) -> (core::PanicResult::<core::integer::u128>);
