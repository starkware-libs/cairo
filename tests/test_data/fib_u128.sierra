type u128 = u128 [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type core::result::Result::<core::integer::u128, core::integer::u128> = Enum<ut@core::result::Result::<core::integer::u128, core::integer::u128>, u128, u128> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<u128> = Struct<ut@Tuple, u128> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::integer::u128,)> = Enum<ut@core::panics::PanicResult::<(core::integer::u128,)>, Tuple<u128>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc snapshot_take<u128> = snapshot_take<u128>;
libfunc u128_const<0> = u128_const<0>;
libfunc drop<u128> = drop<u128>;
libfunc rename<u128> = rename<u128>;
libfunc u128_eq = u128_eq;
libfunc branch_align = branch_align;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc dup<u128> = dup<u128>;
libfunc function_call<user@core::integer::U128Add::add> = function_call<user@core::integer::U128Add::add>;
libfunc enum_match<core::panics::PanicResult::<(core::integer::u128,)>> = enum_match<core::panics::PanicResult::<(core::integer::u128,)>>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::U128Sub::sub> = function_call<user@core::integer::U128Sub::sub>;
libfunc struct_deconstruct<Tuple<u128>> = struct_deconstruct<Tuple<u128>>;
libfunc function_call<user@examples::fib_u128::fib> = function_call<user@examples::fib_u128::fib>;
libfunc jump = jump;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1> = enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>;
libfunc store_temp<core::panics::PanicResult::<(core::integer::u128,)>> = store_temp<core::panics::PanicResult::<(core::integer::u128,)>>;
libfunc drop<Tuple<u128>> = drop<Tuple<u128>>;
libfunc struct_construct<Tuple<u128>> = struct_construct<Tuple<u128>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0> = enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u128, core::integer::u128>> = store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>;
libfunc felt252_const<39878429859757942499084499860145094553463> = felt252_const<39878429859757942499084499860145094553463>;
libfunc rename<core::result::Result::<core::integer::u128, core::integer::u128>> = rename<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc felt252_const<39878429859763533771555484554338820190071> = felt252_const<39878429859763533771555484554338820190071>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::integer::u128>> = enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc drop<felt252> = drop<felt252>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;

disable_ap_tracking() -> (); // 0
snapshot_take<u128>([3]) -> ([4], [5]); // 1
u128_const<0>() -> ([6]); // 2
snapshot_take<u128>([6]) -> ([7], [8]); // 3
drop<u128>([7]) -> (); // 4
rename<u128>([5]) -> ([9]); // 5
rename<u128>([8]) -> ([10]); // 6
u128_eq([9], [10]) { fallthrough() 55() }; // 7
branch_align() -> (); // 8
store_temp<RangeCheck>([0]) -> ([13]); // 9
store_temp<u128>([1]) -> ([14]); // 10
dup<u128>([2]) -> ([2], [15]); // 11
store_temp<u128>([15]) -> ([15]); // 12
function_call<user@core::integer::U128Add::add>([13], [14], [15]) -> ([11], [12]); // 13
enum_match<core::panics::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([16]) 48([17]) }; // 14
branch_align() -> (); // 15
u128_const<1>() -> ([18]); // 16
store_temp<RangeCheck>([11]) -> ([21]); // 17
store_temp<u128>([4]) -> ([22]); // 18
store_temp<u128>([18]) -> ([23]); // 19
function_call<user@core::integer::U128Sub::sub>([21], [22], [23]) -> ([19], [20]); // 20
enum_match<core::panics::PanicResult::<(core::integer::u128,)>>([20]) { fallthrough([24]) 41([25]) }; // 21
branch_align() -> (); // 22
struct_deconstruct<Tuple<u128>>([16]) -> ([26]); // 23
struct_deconstruct<Tuple<u128>>([24]) -> ([27]); // 24
store_temp<RangeCheck>([19]) -> ([30]); // 25
store_temp<u128>([2]) -> ([31]); // 26
store_temp<u128>([26]) -> ([32]); // 27
store_temp<u128>([27]) -> ([33]); // 28
function_call<user@examples::fib_u128::fib>([30], [31], [32], [33]) -> ([28], [29]); // 29
enum_match<core::panics::PanicResult::<(core::integer::u128,)>>([29]) { fallthrough([34]) 36([35]) }; // 30
branch_align() -> (); // 31
struct_deconstruct<Tuple<u128>>([34]) -> ([36]); // 32
store_temp<RangeCheck>([28]) -> ([37]); // 33
store_temp<u128>([36]) -> ([38]); // 34
jump() { 60() }; // 35
branch_align() -> (); // 36
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([35]) -> ([39]); // 37
store_temp<RangeCheck>([28]) -> ([40]); // 38
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([39]) -> ([41]); // 39
return([40], [41]); // 40
branch_align() -> (); // 41
drop<Tuple<u128>>([16]) -> (); // 42
drop<u128>([2]) -> (); // 43
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([25]) -> ([42]); // 44
store_temp<RangeCheck>([19]) -> ([43]); // 45
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([42]) -> ([44]); // 46
return([43], [44]); // 47
branch_align() -> (); // 48
drop<u128>([2]) -> (); // 49
drop<u128>([4]) -> (); // 50
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([17]) -> ([45]); // 51
store_temp<RangeCheck>([11]) -> ([46]); // 52
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([45]) -> ([47]); // 53
return([46], [47]); // 54
branch_align() -> (); // 55
drop<u128>([2]) -> (); // 56
drop<u128>([4]) -> (); // 57
store_temp<RangeCheck>([0]) -> ([37]); // 58
store_temp<u128>([1]) -> ([38]); // 59
struct_construct<Tuple<u128>>([38]) -> ([48]); // 60
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>([48]) -> ([49]); // 61
store_temp<RangeCheck>([37]) -> ([50]); // 62
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([49]) -> ([51]); // 63
return([50], [51]); // 64
u128_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 71([5], [6]) }; // 65
branch_align() -> (); // 66
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]); // 67
store_temp<RangeCheck>([3]) -> ([8]); // 68
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]); // 69
jump() { 75() }; // 70
branch_align() -> (); // 71
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]); // 72
store_temp<RangeCheck>([5]) -> ([8]); // 73
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]); // 74
felt252_const<39878429859757942499084499860145094553463>() -> ([11]); // 75
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]); // 76
store_temp<felt252>([11]) -> ([14]); // 77
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([13], [14]) -> ([12]); // 78
enum_match<core::panics::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 87([16]) }; // 79
branch_align() -> (); // 80
struct_deconstruct<Tuple<u128>>([15]) -> ([17]); // 81
struct_construct<Tuple<u128>>([17]) -> ([18]); // 82
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]); // 83
store_temp<RangeCheck>([8]) -> ([20]); // 84
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]); // 85
return([20], [21]); // 86
branch_align() -> (); // 87
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]); // 88
store_temp<RangeCheck>([8]) -> ([23]); // 89
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]); // 90
return([23], [24]); // 91
u128_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 98([5], [6]) }; // 92
branch_align() -> (); // 93
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]); // 94
store_temp<RangeCheck>([3]) -> ([8]); // 95
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]); // 96
jump() { 102() }; // 97
branch_align() -> (); // 98
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]); // 99
store_temp<RangeCheck>([5]) -> ([8]); // 100
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]); // 101
felt252_const<39878429859763533771555484554338820190071>() -> ([11]); // 102
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]); // 103
store_temp<felt252>([11]) -> ([14]); // 104
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([13], [14]) -> ([12]); // 105
enum_match<core::panics::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 114([16]) }; // 106
branch_align() -> (); // 107
struct_deconstruct<Tuple<u128>>([15]) -> ([17]); // 108
struct_construct<Tuple<u128>>([17]) -> ([18]); // 109
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]); // 110
store_temp<RangeCheck>([8]) -> ([20]); // 111
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]); // 112
return([20], [21]); // 113
branch_align() -> (); // 114
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]); // 115
store_temp<RangeCheck>([8]) -> ([23]); // 116
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]); // 117
return([23], [24]); // 118
enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>([0]) { fallthrough([2]) 126([3]) }; // 119
branch_align() -> (); // 120
drop<felt252>([1]) -> (); // 121
struct_construct<Tuple<u128>>([2]) -> ([4]); // 122
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 0>([4]) -> ([5]); // 123
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([5]) -> ([6]); // 124
return([6]); // 125
branch_align() -> (); // 126
drop<u128>([3]) -> (); // 127
array_new<felt252>() -> ([7]); // 128
array_append<felt252>([7], [1]) -> ([8]); // 129
struct_construct<core::panics::Panic>() -> ([9]); // 130
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([9], [8]) -> ([10]); // 131
enum_init<core::panics::PanicResult::<(core::integer::u128,)>, 1>([10]) -> ([11]); // 132
store_temp<core::panics::PanicResult::<(core::integer::u128,)>>([11]) -> ([12]); // 133
return([12]); // 134

examples::fib_u128::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u128,)>);
core::integer::U128Add::add@65([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u128,)>);
core::integer::U128Sub::sub@92([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u128,)>);
core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>@119([0]: core::result::Result::<core::integer::u128, core::integer::u128>, [1]: felt252) -> (core::panics::PanicResult::<(core::integer::u128,)>);
