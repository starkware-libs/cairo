type u128 = u128;
type RangeCheck = RangeCheck;
type Tuple<u128> = Struct<ut@Tuple, u128>;
type core::Panic = Struct<ut@core::Panic>;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type Tuple<core::Panic, Array<felt252>> = Struct<ut@Tuple, core::Panic, Array<felt252>>;
type core::PanicResult::<(core::integer::u128,)> = Enum<ut@core::PanicResult::<(core::integer::u128,)>, Tuple<u128>, Tuple<core::Panic, Array<felt252>>>;
type core::result::Result::<core::integer::u128, core::integer::u128> = Enum<ut@core::result::Result::<core::integer::u128, core::integer::u128>, u128, u128>;

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc u128_const<0> = u128_const<0>;
libfunc dup<u128> = dup<u128>;
libfunc u128_eq = u128_eq;
libfunc branch_align = branch_align;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::integer::U128Add::add> = function_call<user@core::integer::U128Add::add>;
libfunc enum_match<core::PanicResult::<(core::integer::u128,)>> = enum_match<core::PanicResult::<(core::integer::u128,)>>;
libfunc struct_deconstruct<Tuple<u128>> = struct_deconstruct<Tuple<u128>>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::U128Sub::sub> = function_call<user@core::integer::U128Sub::sub>;
libfunc function_call<user@examples::fib_u128::fib> = function_call<user@examples::fib_u128::fib>;
libfunc jump = jump;
libfunc enum_init<core::PanicResult::<(core::integer::u128,)>, 1> = enum_init<core::PanicResult::<(core::integer::u128,)>, 1>;
libfunc store_temp<core::PanicResult::<(core::integer::u128,)>> = store_temp<core::PanicResult::<(core::integer::u128,)>>;
libfunc drop<u128> = drop<u128>;
libfunc struct_construct<Tuple<u128>> = struct_construct<Tuple<u128>>;
libfunc enum_init<core::PanicResult::<(core::integer::u128,)>, 0> = enum_init<core::PanicResult::<(core::integer::u128,)>, 0>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u128, core::integer::u128>> = store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>;
libfunc felt252_const<39878429859757942499084499860145094553463> = felt252_const<39878429859757942499084499860145094553463>;
libfunc rename<core::result::Result::<core::integer::u128, core::integer::u128>> = rename<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc felt252_const<39878429859763533771555484554338820190071> = felt252_const<39878429859763533771555484554338820190071>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::integer::u128>> = enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc drop<felt252> = drop<felt252>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::Panic> = struct_construct<core::Panic>;
libfunc struct_construct<Tuple<core::Panic, Array<felt252>>> = struct_construct<Tuple<core::Panic, Array<felt252>>>;

disable_ap_tracking() -> ();
u128_const<0>() -> ([4]);
dup<u128>([3]) -> ([3], [5]);
u128_eq([5], [4]) { fallthrough() 51() };
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([8]);
store_temp<u128>([1]) -> ([9]);
dup<u128>([2]) -> ([2], [10]);
store_temp<u128>([10]) -> ([10]);
function_call<user@core::integer::U128Add::add>([8], [9], [10]) -> ([6], [7]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([7]) { fallthrough([11]) 44([12]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([11]) -> ([13]);
u128_const<1>() -> ([14]);
store_temp<RangeCheck>([6]) -> ([17]);
store_temp<u128>([3]) -> ([18]);
store_temp<u128>([14]) -> ([19]);
function_call<user@core::integer::U128Sub::sub>([17], [18], [19]) -> ([15], [16]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([16]) { fallthrough([20]) 37([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([20]) -> ([22]);
store_temp<RangeCheck>([15]) -> ([25]);
store_temp<u128>([2]) -> ([26]);
store_temp<u128>([13]) -> ([27]);
store_temp<u128>([22]) -> ([28]);
function_call<user@examples::fib_u128::fib>([25], [26], [27], [28]) -> ([23], [24]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([24]) { fallthrough([29]) 32([30]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([29]) -> ([31]);
store_temp<RangeCheck>([23]) -> ([32]);
store_temp<u128>([31]) -> ([33]);
jump() { 56() };
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([30]) -> ([34]);
store_temp<RangeCheck>([23]) -> ([35]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([34]) -> ([36]);
return([35], [36]);
branch_align() -> ();
drop<u128>([13]) -> ();
drop<u128>([2]) -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([21]) -> ([37]);
store_temp<RangeCheck>([15]) -> ([38]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([37]) -> ([39]);
return([38], [39]);
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([12]) -> ([40]);
store_temp<RangeCheck>([6]) -> ([41]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([40]) -> ([42]);
return([41], [42]);
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
store_temp<RangeCheck>([0]) -> ([32]);
store_temp<u128>([1]) -> ([33]);
struct_construct<Tuple<u128>>([33]) -> ([43]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([43]) -> ([44]);
store_temp<RangeCheck>([32]) -> ([45]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([44]) -> ([46]);
return([45], [46]);
u128_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 67([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 71() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt252_const<39878429859757942499084499860145094553463>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 83([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([15]) -> ([17]);
struct_construct<Tuple<u128>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]);
return([23], [24]);
u128_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 94([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 98() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt252_const<39878429859763533771555484554338820190071>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 110([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([15]) -> ([17]);
struct_construct<Tuple<u128>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]);
return([23], [24]);
enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>([0]) { fallthrough([2]) 122([3]) };
branch_align() -> ();
drop<felt252>([1]) -> ();
struct_construct<Tuple<u128>>([2]) -> ([4]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([4]) -> ([5]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([5]) -> ([6]);
return([6]);
branch_align() -> ();
drop<u128>([3]) -> ();
array_new<felt252>() -> ([7]);
array_append<felt252>([7], [1]) -> ([8]);
struct_construct<core::Panic>() -> ([9]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([9], [8]) -> ([10]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([10]) -> ([11]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([11]) -> ([12]);
return([12]);

examples::fib_u128::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::integer::U128Add::add@61([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::integer::U128Sub::sub@88([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>@115([0]: core::result::Result::<core::integer::u128, core::integer::u128>, [1]: felt252) -> (core::PanicResult::<(core::integer::u128,)>);
