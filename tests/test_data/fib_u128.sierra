type u128 = u128;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type RangeCheck = RangeCheck;
type Tuple<u128> = Struct<ut@Tuple, u128>;
type felt = felt;
type Array<felt> = Array<felt>;
type core::PanicResult::<(core::integer::u128,)> = Enum<ut@core::PanicResult::<(core::integer::u128,)>, Tuple<u128>, Array<felt>>;
type core::result::Result::<core::integer::u128, core::integer::u128> = Enum<ut@core::result::Result::<core::integer::u128, core::integer::u128>, u128, u128>;

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc u128_const<0> = u128_const<0>;
libfunc dup<u128> = dup<u128>;
libfunc u128_eq = u128_eq;
libfunc branch_align = branch_align;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::integer::U128Add::add> = function_call<user@core::integer::U128Add::add>;
libfunc enum_match<core::PanicResult::<(core::integer::u128,)>> = enum_match<core::PanicResult::<(core::integer::u128,)>>;
libfunc struct_deconstruct<Tuple<u128>> = struct_deconstruct<Tuple<u128>>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::U128Sub::sub> = function_call<user@core::integer::U128Sub::sub>;
libfunc function_call<user@fib_u128::fib_u128::fib> = function_call<user@fib_u128::fib_u128::fib>;
libfunc enum_init<core::PanicResult::<(core::integer::u128,)>, 1> = enum_init<core::PanicResult::<(core::integer::u128,)>, 1>;
libfunc store_temp<core::PanicResult::<(core::integer::u128,)>> = store_temp<core::PanicResult::<(core::integer::u128,)>>;
libfunc drop<u128> = drop<u128>;
libfunc struct_construct<Tuple<u128>> = struct_construct<Tuple<u128>>;
libfunc enum_init<core::PanicResult::<(core::integer::u128,)>, 0> = enum_init<core::PanicResult::<(core::integer::u128,)>, 0>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u128, core::integer::u128>> = store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>;
libfunc felt_const<39878429859757942499084499860145094553463> = felt_const<39878429859757942499084499860145094553463>;
libfunc rename<core::result::Result::<core::integer::u128, core::integer::u128>> = rename<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect> = function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc felt_const<39878429859763533771555484554338820190071> = felt_const<39878429859763533771555484554338820190071>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::integer::u128>> = enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc drop<felt> = drop<felt>;
libfunc array_new<felt> = array_new<felt>;
libfunc array_append<felt> = array_append<felt>;

disable_ap_tracking() -> ();
u128_const<0>() -> ([4]);
dup<u128>([3]) -> ([3], [5]);
u128_eq([5], [4]) { fallthrough() 10() };
branch_align() -> ();
struct_construct<Unit>() -> ([6]);
enum_init<core::bool, 0>([6]) -> ([7]);
store_temp<RangeCheck>([0]) -> ([8]);
store_temp<core::bool>([7]) -> ([9]);
jump() { 15() };
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::bool, 1>([10]) -> ([11]);
store_temp<RangeCheck>([0]) -> ([8]);
store_temp<core::bool>([11]) -> ([9]);
enum_match<core::bool>([9]) { fallthrough([12]) 64([13]) };
branch_align() -> ();
drop<Unit>([12]) -> ();
store_temp<RangeCheck>([8]) -> ([16]);
store_temp<u128>([1]) -> ([17]);
dup<u128>([2]) -> ([2], [18]);
store_temp<u128>([18]) -> ([18]);
function_call<user@core::integer::U128Add::add>([16], [17], [18]) -> ([14], [15]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([15]) { fallthrough([19]) 57([20]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([19]) -> ([21]);
u128_const<1>() -> ([22]);
store_temp<RangeCheck>([14]) -> ([25]);
store_temp<u128>([3]) -> ([26]);
store_temp<u128>([22]) -> ([27]);
function_call<user@core::integer::U128Sub::sub>([25], [26], [27]) -> ([23], [24]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([24]) { fallthrough([28]) 50([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([28]) -> ([30]);
store_temp<RangeCheck>([23]) -> ([33]);
store_temp<u128>([2]) -> ([34]);
store_temp<u128>([21]) -> ([35]);
store_temp<u128>([30]) -> ([36]);
function_call<user@fib_u128::fib_u128::fib>([33], [34], [35], [36]) -> ([31], [32]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([32]) { fallthrough([37]) 45([38]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([37]) -> ([39]);
store_temp<RangeCheck>([31]) -> ([40]);
store_temp<u128>([39]) -> ([41]);
jump() { 70() };
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([38]) -> ([42]);
store_temp<RangeCheck>([31]) -> ([43]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([42]) -> ([44]);
return([43], [44]);
branch_align() -> ();
drop<u128>([21]) -> ();
drop<u128>([2]) -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([29]) -> ([45]);
store_temp<RangeCheck>([23]) -> ([46]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([45]) -> ([47]);
return([46], [47]);
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([20]) -> ([48]);
store_temp<RangeCheck>([14]) -> ([49]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([48]) -> ([50]);
return([49], [50]);
branch_align() -> ();
drop<Unit>([13]) -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
store_temp<RangeCheck>([8]) -> ([40]);
store_temp<u128>([1]) -> ([41]);
struct_construct<Tuple<u128>>([41]) -> ([51]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([51]) -> ([52]);
store_temp<RangeCheck>([40]) -> ([53]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([52]) -> ([54]);
return([53], [54]);
u128_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 81([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 85() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt_const<39878429859757942499084499860145094553463>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 97([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([15]) -> ([17]);
struct_construct<Tuple<u128>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]);
return([23], [24]);
u128_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 108([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 112() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt_const<39878429859763533771555484554338820190071>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 124([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([15]) -> ([17]);
struct_construct<Tuple<u128>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]);
return([23], [24]);
enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>([0]) { fallthrough([2]) 136([3]) };
branch_align() -> ();
drop<felt>([1]) -> ();
struct_construct<Tuple<u128>>([2]) -> ([4]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([4]) -> ([5]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([5]) -> ([6]);
return([6]);
branch_align() -> ();
drop<u128>([3]) -> ();
array_new<felt>() -> ([7]);
array_append<felt>([7], [1]) -> ([8]);
struct_construct<Unit>() -> ([9]);
drop<Unit>([9]) -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([8]) -> ([10]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([10]) -> ([11]);
return([11]);

fib_u128::fib_u128::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::integer::U128Add::add@75([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::integer::U128Sub::sub@102([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect@129([0]: core::result::Result::<core::integer::u128, core::integer::u128>, [1]: felt) -> (core::PanicResult::<(core::integer::u128,)>);
