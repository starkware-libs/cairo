type felt = felt;
type NonZero<felt> = NonZero<felt>;
type Tuple<felt, felt> = Struct<ut@Tuple, felt, felt>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<felt> = dup<felt>;
libfunc felt_jump_nz = felt_jump_nz;
libfunc drop<felt> = drop<felt>;
libfunc branch_align = branch_align;
libfunc felt_const<0> = felt_const<0>;
libfunc struct_construct<Tuple<felt, felt>> = struct_construct<Tuple<felt, felt>>;
libfunc store_temp<Tuple<felt, felt>> = store_temp<Tuple<felt, felt>>;
libfunc rename<Tuple<felt, felt>> = rename<Tuple<felt, felt>>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc felt_add = felt_add;
libfunc felt_const<1> = felt_const<1>;
libfunc felt_sub = felt_sub;
libfunc store_temp<felt> = store_temp<felt>;
libfunc rename<felt> = rename<felt>;
libfunc function_call<user@fib_counter::fib_counter::fib> = function_call<user@fib_counter::fib_counter::fib>;
libfunc struct_deconstruct<Tuple<felt, felt>> = struct_deconstruct<Tuple<felt, felt>>;

revoke_ap_tracking() -> ();
dup<felt>([2]) -> ([2], [21]);
felt_jump_nz([21]) { fallthrough() 11([3]) };
drop<felt>([1]) -> ();
drop<felt>([2]) -> ();
branch_align() -> ();
felt_const<0>() -> ([4]);
struct_construct<Tuple<felt, felt>>([0], [4]) -> ([5]);
store_temp<Tuple<felt, felt>>([5]) -> ([5]);
rename<Tuple<felt, felt>>([5]) -> ([6]);
jump() { 30() };
drop<NonZero<felt>>([3]) -> ();
branch_align() -> ();
dup<felt>([1]) -> ([1], [22]);
felt_add([0], [22]) -> ([7]);
felt_const<1>() -> ([8]);
felt_sub([2], [8]) -> ([9]);
store_temp<felt>([1]) -> ([11]);
store_temp<felt>([7]) -> ([7]);
rename<felt>([7]) -> ([12]);
store_temp<felt>([9]) -> ([9]);
rename<felt>([9]) -> ([13]);
function_call<user@fib_counter::fib_counter::fib>([11], [12], [13]) -> ([10]);
struct_deconstruct<Tuple<felt, felt>>([10]) -> ([14], [15]);
felt_const<1>() -> ([16]);
felt_add([15], [16]) -> ([17]);
struct_construct<Tuple<felt, felt>>([14], [17]) -> ([18]);
store_temp<Tuple<felt, felt>>([18]) -> ([18]);
rename<Tuple<felt, felt>>([18]) -> ([19]);
rename<Tuple<felt, felt>>([19]) -> ([6]);
rename<Tuple<felt, felt>>([6]) -> ([20]);
return([20]);

fib_counter::fib_counter::fib@0([0]: felt, [1]: felt, [2]: felt) -> (Tuple<felt, felt>);
