type felt252 = felt252;
type NonZero<felt252> = NonZero<felt252>;
type Tuple<felt252, felt252> = Struct<ut@Tuple, felt252, felt252>;

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc branch_align = branch_align;
libfunc drop<felt252> = drop<felt252>;
libfunc felt252_const<0> = felt252_const<0>;
libfunc struct_construct<Tuple<felt252, felt252>> = struct_construct<Tuple<felt252, felt252>>;
libfunc store_temp<Tuple<felt252, felt252>> = store_temp<Tuple<felt252, felt252>>;
libfunc jump = jump;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_add = felt252_add;
libfunc felt252_const<1> = felt252_const<1>;
libfunc felt252_sub = felt252_sub;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@examples::fib_counter::fib> = function_call<user@examples::fib_counter::fib>;
libfunc struct_deconstruct<Tuple<felt252, felt252>> = struct_deconstruct<Tuple<felt252, felt252>>;
libfunc rename<Tuple<felt252, felt252>> = rename<Tuple<felt252, felt252>>;

disable_ap_tracking() -> ();
dup<felt252>([2]) -> ([2], [4]);
felt252_is_zero([4]) { fallthrough() 10([3]) };
branch_align() -> ();
drop<felt252>([1]) -> ();
drop<felt252>([2]) -> ();
felt252_const<0>() -> ([5]);
struct_construct<Tuple<felt252, felt252>>([0], [5]) -> ([6]);
store_temp<Tuple<felt252, felt252>>([6]) -> ([7]);
jump() { 25() };
branch_align() -> ();
drop<NonZero<felt252>>([3]) -> ();
dup<felt252>([1]) -> ([1], [9]);
felt252_add([0], [9]) -> ([8]);
felt252_const<1>() -> ([10]);
felt252_sub([2], [10]) -> ([11]);
store_temp<felt252>([1]) -> ([13]);
store_temp<felt252>([8]) -> ([14]);
store_temp<felt252>([11]) -> ([15]);
function_call<user@examples::fib_counter::fib>([13], [14], [15]) -> ([12]);
struct_deconstruct<Tuple<felt252, felt252>>([12]) -> ([16], [17]);
felt252_const<1>() -> ([18]);
felt252_add([17], [18]) -> ([19]);
struct_construct<Tuple<felt252, felt252>>([16], [19]) -> ([20]);
store_temp<Tuple<felt252, felt252>>([20]) -> ([7]);
rename<Tuple<felt252, felt252>>([7]) -> ([21]);
return([21]);

examples::fib_counter::fib@0([0]: felt252, [1]: felt252, [2]: felt252) -> (Tuple<felt252, felt252>);
