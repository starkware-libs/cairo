type uint128 = uint128;
type Uninitialized<uint128> = Uninitialized<uint128>;
type felt = felt;
type NonZero<felt> = NonZero<felt>;
type Unit = Struct<ut@Tuple>;
type core::option::Option::<core::integer::uint128> = Enum<ut@core::option::Option::<core::integer::uint128>, uint128, Unit>;
type RangeCheck = RangeCheck;

libfunc alloc_local<uint128> = alloc_local<uint128>;
libfunc finalize_locals = finalize_locals;
libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<uint128> = dup<uint128>;
libfunc uint128_to_felt = uint128_to_felt;
libfunc felt_jump_nz = felt_jump_nz;
libfunc drop<uint128> = drop<uint128>;
libfunc drop<Uninitialized<uint128>> = drop<Uninitialized<uint128>>;
libfunc branch_align = branch_align;
libfunc enum_init<core::option::Option::<core::integer::uint128>, 0> = enum_init<core::option::Option::<core::integer::uint128>, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<core::option::Option::<core::integer::uint128>> = store_temp<core::option::Option::<core::integer::uint128>>;
libfunc rename<core::option::Option::<core::integer::uint128>> = rename<core::option::Option::<core::integer::uint128>>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc store_temp<uint128> = store_temp<uint128>;
libfunc function_call<user@core::integer::uint128_checked_add> = function_call<user@core::integer::uint128_checked_add>;
libfunc enum_match<core::option::Option::<core::integer::uint128>> = enum_match<core::option::Option::<core::integer::uint128>>;
libfunc enum_init<core::option::Option::<core::integer::uint128>, 1> = enum_init<core::option::Option::<core::integer::uint128>, 1>;
libfunc felt_const<1> = felt_const<1>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc store_local<uint128> = store_local<uint128>;
libfunc function_call<user@core::integer::uint128_from_felt_low> = function_call<user@core::integer::uint128_from_felt_low>;
libfunc function_call<user@core::integer::uint128_checked_sub> = function_call<user@core::integer::uint128_checked_sub>;
libfunc function_call<user@fib_uint128_checked::fib_uint128_checked::fib> = function_call<user@fib_uint128_checked::fib_uint128_checked::fib>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc uint128_overflow_add = uint128_overflow_add;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc uint128s_from_felt = uint128s_from_felt;
libfunc rename<uint128> = rename<uint128>;
libfunc uint128_overflow_sub = uint128_overflow_sub;

alloc_local<uint128>() -> ([5]);
finalize_locals() -> ();
revoke_ap_tracking() -> ();
dup<uint128>([3]) -> ([3], [54]);
uint128_to_felt([54]) -> ([6]);
felt_jump_nz([6]) { fallthrough() 15([7]) };
drop<uint128>([2]) -> ();
drop<Uninitialized<uint128>>([5]) -> ();
drop<uint128>([3]) -> ();
branch_align() -> ();
enum_init<core::option::Option::<core::integer::uint128>, 0>([1]) -> ([8]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<core::option::Option::<core::integer::uint128>>([8]) -> ([8]);
rename<core::option::Option::<core::integer::uint128>>([8]) -> ([10]);
jump() { 77() };
drop<NonZero<felt>>([7]) -> ();
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([13]);
store_temp<uint128>([1]) -> ([14]);
dup<uint128>([2]) -> ([2], [55]);
store_temp<uint128>([55]) -> ([15]);
function_call<user@core::integer::uint128_checked_add>([13], [14], [15]) -> ([11], [12]);
enum_match<core::option::Option::<core::integer::uint128>>([12]) { 23([16]) 26([17]) };
branch_align() -> ();
store_temp<uint128>([16]) -> ([4]);
jump() { 35() };
drop<Uninitialized<uint128>>([5]) -> ();
drop<uint128>([3]) -> ();
drop<uint128>([2]) -> ();
branch_align() -> ();
enum_init<core::option::Option::<core::integer::uint128>, 1>([17]) -> ([18]);
store_temp<RangeCheck>([11]) -> ([19]);
store_temp<core::option::Option::<core::integer::uint128>>([18]) -> ([18]);
rename<core::option::Option::<core::integer::uint128>>([18]) -> ([20]);
return([19], [20]);
felt_const<1>() -> ([21]);
store_temp<RangeCheck>([11]) -> ([24]);
store_temp<felt>([21]) -> ([25]);
store_local<uint128>([5], [4]) -> ([4]);
function_call<user@core::integer::uint128_from_felt_low>([24], [25]) -> ([22], [23]);
store_temp<RangeCheck>([22]) -> ([28]);
store_temp<uint128>([3]) -> ([29]);
store_temp<uint128>([23]) -> ([30]);
function_call<user@core::integer::uint128_checked_sub>([28], [29], [30]) -> ([26], [27]);
enum_match<core::option::Option::<core::integer::uint128>>([27]) { 45([31]) 48([32]) };
branch_align() -> ();
store_temp<uint128>([31]) -> ([33]);
jump() { 56() };
drop<uint128>([2]) -> ();
drop<uint128>([4]) -> ();
branch_align() -> ();
enum_init<core::option::Option::<core::integer::uint128>, 1>([32]) -> ([34]);
store_temp<RangeCheck>([26]) -> ([35]);
store_temp<core::option::Option::<core::integer::uint128>>([34]) -> ([34]);
rename<core::option::Option::<core::integer::uint128>>([34]) -> ([36]);
return([35], [36]);
store_temp<RangeCheck>([26]) -> ([39]);
store_temp<uint128>([2]) -> ([40]);
store_temp<uint128>([4]) -> ([41]);
store_temp<uint128>([33]) -> ([42]);
function_call<user@fib_uint128_checked::fib_uint128_checked::fib>([39], [40], [41], [42]) -> ([37], [38]);
enum_match<core::option::Option::<core::integer::uint128>>([38]) { 62([43]) 65([44]) };
branch_align() -> ();
store_temp<uint128>([43]) -> ([45]);
jump() { 71() };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::uint128>, 1>([44]) -> ([46]);
store_temp<RangeCheck>([37]) -> ([47]);
store_temp<core::option::Option::<core::integer::uint128>>([46]) -> ([46]);
rename<core::option::Option::<core::integer::uint128>>([46]) -> ([48]);
return([47], [48]);
enum_init<core::option::Option::<core::integer::uint128>, 0>([45]) -> ([49]);
store_temp<RangeCheck>([37]) -> ([50]);
store_temp<core::option::Option::<core::integer::uint128>>([49]) -> ([49]);
rename<core::option::Option::<core::integer::uint128>>([49]) -> ([51]);
rename<RangeCheck>([50]) -> ([9]);
rename<core::option::Option::<core::integer::uint128>>([51]) -> ([10]);
rename<RangeCheck>([9]) -> ([52]);
rename<core::option::Option::<core::integer::uint128>>([10]) -> ([53]);
return([52], [53]);
revoke_ap_tracking() -> ();
uint128_overflow_add([0], [1], [2]) { fallthrough([3], [4]) 89([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::uint128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::uint128>>([7]) -> ([9]);
jump() { 97() };
drop<uint128>([6]) -> ();
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::uint128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::uint128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::uint128>>([9]) -> ([13]);
return([12], [13]);
revoke_ap_tracking() -> ();
uint128s_from_felt([0], [1]) { fallthrough([2], [3]) 107([4], [5], [6]) };
branch_align() -> ();
store_temp<RangeCheck>([2]) -> ([2]);
rename<RangeCheck>([2]) -> ([7]);
store_temp<uint128>([3]) -> ([8]);
jump() { 112() };
drop<uint128>([6]) -> ();
branch_align() -> ();
store_temp<RangeCheck>([4]) -> ([4]);
rename<RangeCheck>([4]) -> ([7]);
store_temp<uint128>([5]) -> ([8]);
rename<RangeCheck>([7]) -> ([9]);
rename<uint128>([8]) -> ([10]);
return([9], [10]);
revoke_ap_tracking() -> ();
uint128_overflow_sub([0], [1], [2]) { fallthrough([3], [4]) 124([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::uint128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::uint128>>([7]) -> ([9]);
jump() { 132() };
drop<uint128>([6]) -> ();
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::uint128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::uint128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::uint128>>([9]) -> ([13]);
return([12], [13]);

fib_uint128_checked::fib_uint128_checked::fib@0([0]: RangeCheck, [1]: uint128, [2]: uint128, [3]: uint128) -> (RangeCheck, core::option::Option::<core::integer::uint128>);
core::integer::uint128_checked_add@80([0]: RangeCheck, [1]: uint128, [2]: uint128) -> (RangeCheck, core::option::Option::<core::integer::uint128>);
core::integer::uint128_from_felt_low@100([0]: RangeCheck, [1]: felt) -> (RangeCheck, uint128);
core::integer::uint128_checked_sub@115([0]: RangeCheck, [1]: uint128, [2]: uint128) -> (RangeCheck, core::option::Option::<core::integer::uint128>);
