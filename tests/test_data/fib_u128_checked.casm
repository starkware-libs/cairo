jmp rel 8 if [fp + -3] != 0;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -5], ap++;
jmp rel 29;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
call rel 43;
jmp rel 35 if [ap + -2] != 0;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 1, ap++;
call rel 60;
jmp rel 21 if [ap + -2] != 0;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [ap + -14], ap++;
[ap + 0] = [ap + -4], ap++;
call rel -27;
jmp rel 7 if [ap + -2] != 0;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -3], ap++;
ret;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 1] = [fp + -4] + [fp + -3], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 340282366920938463463374607431768211456 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + -1] = [ap + 0] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -5] + 0];
jmp rel 12;
[ap + -1] = [[fp + -5] + 0];
ap += 1;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 8;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
ret;
[fp + -4] = [ap + 1] + [fp + -3], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 340282366920938463463374607431768211456 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -5] + 0];
jmp rel 12;
[ap + -1] = [[fp + -5] + 0];
ap += 1;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 8;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
ret;
