type felt = felt;
type NonZero<felt> = NonZero<felt>;
type Unit = Struct<ut@Tuple>;
type test_crate::FibResult = Struct<ut@test_crate::FibResult, felt, felt, Unit>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<felt> = dup<felt>;
libfunc felt_jump_nz = felt_jump_nz;
libfunc drop<felt> = drop<felt>;
libfunc felt_const<0> = felt_const<0>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc struct_construct<test_crate::FibResult> = struct_construct<test_crate::FibResult>;
libfunc store_temp<test_crate::FibResult> = store_temp<test_crate::FibResult>;
libfunc rename<test_crate::FibResult> = rename<test_crate::FibResult>;
libfunc burn_gas = burn_gas;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc felt_add = felt_add;
libfunc felt_const<1> = felt_const<1>;
libfunc felt_sub = felt_sub;
libfunc store_temp<felt> = store_temp<felt>;
libfunc rename<felt> = rename<felt>;
libfunc function_call<user@test_crate::fib> = function_call<user@test_crate::fib>;
libfunc struct_deconstruct<test_crate::FibResult> = struct_deconstruct<test_crate::FibResult>;
libfunc drop<Unit> = drop<Unit>;

revoke_ap_tracking() -> ();
dup<felt>([2]) -> ([2], [24]);
felt_jump_nz([24]) { fallthrough() 13([3]) };
drop<felt>([1]) -> ();
drop<felt>([2]) -> ();
felt_const<0>() -> ([4]);
struct_construct<Unit>() -> ([5]);
store_temp<Unit>([5]) -> ([5]);
struct_construct<test_crate::FibResult>([0], [4], [5]) -> ([6]);
store_temp<test_crate::FibResult>([6]) -> ([6]);
rename<test_crate::FibResult>([6]) -> ([7]);
burn_gas() -> ();
jump() { 36() };
drop<NonZero<felt>>([3]) -> ();
dup<felt>([1]) -> ([1], [25]);
felt_add([0], [25]) -> ([8]);
felt_const<1>() -> ([9]);
felt_sub([2], [9]) -> ([10]);
store_temp<felt>([1]) -> ([12]);
store_temp<felt>([8]) -> ([8]);
rename<felt>([8]) -> ([13]);
store_temp<felt>([10]) -> ([10]);
rename<felt>([10]) -> ([14]);
function_call<user@test_crate::fib>([12], [13], [14]) -> ([11]);
struct_deconstruct<test_crate::FibResult>([11]) -> ([15], [16], [17]);
drop<Unit>([17]) -> ();
felt_const<1>() -> ([18]);
felt_add([16], [18]) -> ([19]);
struct_construct<Unit>() -> ([20]);
store_temp<felt>([19]) -> ([19]);
store_temp<Unit>([20]) -> ([20]);
struct_construct<test_crate::FibResult>([15], [19], [20]) -> ([21]);
store_temp<test_crate::FibResult>([21]) -> ([21]);
rename<test_crate::FibResult>([21]) -> ([22]);
rename<test_crate::FibResult>([22]) -> ([7]);
burn_gas() -> ();
rename<test_crate::FibResult>([7]) -> ([23]);
burn_gas() -> ();
return([23]);

test_crate::fib@0([0]: felt, [1]: felt, [2]: felt) -> (test_crate::FibResult);
