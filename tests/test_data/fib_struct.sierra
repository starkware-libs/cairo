type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type examples::fib_struct::FibResult = Struct<ut@examples::fib_struct::FibResult, felt252, felt252, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc branch_align = branch_align;
libfunc drop<felt252> = drop<felt252>;
libfunc felt252_const<0> = felt252_const<0>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<examples::fib_struct::FibResult> = struct_construct<examples::fib_struct::FibResult>;
libfunc store_temp<examples::fib_struct::FibResult> = store_temp<examples::fib_struct::FibResult>;
libfunc jump = jump;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_add = felt252_add;
libfunc felt252_const<1> = felt252_const<1>;
libfunc felt252_sub = felt252_sub;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@examples::fib_struct::fib> = function_call<user@examples::fib_struct::fib>;
libfunc struct_deconstruct<examples::fib_struct::FibResult> = struct_deconstruct<examples::fib_struct::FibResult>;
libfunc drop<Unit> = drop<Unit>;
libfunc rename<examples::fib_struct::FibResult> = rename<examples::fib_struct::FibResult>;

disable_ap_tracking() -> (); // 0
dup<felt252>([2]) -> ([2], [3]); // 1
felt252_is_zero([3]) { fallthrough() 11([4]) }; // 2
branch_align() -> (); // 3
drop<felt252>([1]) -> (); // 4
drop<felt252>([2]) -> (); // 5
felt252_const<0>() -> ([5]); // 6
struct_construct<Unit>() -> ([6]); // 7
struct_construct<examples::fib_struct::FibResult>([0], [5], [6]) -> ([7]); // 8
store_temp<examples::fib_struct::FibResult>([7]) -> ([8]); // 9
jump() { 28() }; // 10
branch_align() -> (); // 11
drop<NonZero<felt252>>([4]) -> (); // 12
dup<felt252>([1]) -> ([1], [10]); // 13
felt252_add([0], [10]) -> ([9]); // 14
felt252_const<1>() -> ([11]); // 15
felt252_sub([2], [11]) -> ([12]); // 16
store_temp<felt252>([1]) -> ([14]); // 17
store_temp<felt252>([9]) -> ([15]); // 18
store_temp<felt252>([12]) -> ([16]); // 19
function_call<user@examples::fib_struct::fib>([14], [15], [16]) -> ([13]); // 20
struct_deconstruct<examples::fib_struct::FibResult>([13]) -> ([17], [18], [19]); // 21
drop<Unit>([19]) -> (); // 22
felt252_const<1>() -> ([20]); // 23
felt252_add([18], [20]) -> ([21]); // 24
struct_construct<Unit>() -> ([22]); // 25
struct_construct<examples::fib_struct::FibResult>([17], [21], [22]) -> ([23]); // 26
store_temp<examples::fib_struct::FibResult>([23]) -> ([8]); // 27
rename<examples::fib_struct::FibResult>([8]) -> ([24]); // 28
return([24]); // 29

examples::fib_struct::fib@0([0]: felt252, [1]: felt252, [2]: felt252) -> (examples::fib_struct::FibResult);
