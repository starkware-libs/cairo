type felt = felt;
type NonZero<felt> = NonZero<felt>;
type Unit = Struct<ut@Tuple>;
type examples::fib_struct::FibResult = Struct<ut@examples::fib_struct::FibResult, felt, felt, Unit>;

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc dup<felt> = dup<felt>;
libfunc felt_is_zero = felt_is_zero;
libfunc branch_align = branch_align;
libfunc drop<felt> = drop<felt>;
libfunc felt_const<0> = felt_const<0>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<examples::fib_struct::FibResult> = struct_construct<examples::fib_struct::FibResult>;
libfunc store_temp<examples::fib_struct::FibResult> = store_temp<examples::fib_struct::FibResult>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc felt_add = felt_add;
libfunc felt_const<1> = felt_const<1>;
libfunc felt_sub = felt_sub;
libfunc store_temp<felt> = store_temp<felt>;
libfunc function_call<user@examples::fib_struct::fib> = function_call<user@examples::fib_struct::fib>;
libfunc dup<examples::fib_struct::FibResult> = dup<examples::fib_struct::FibResult>;
libfunc struct_deconstruct<examples::fib_struct::FibResult> = struct_deconstruct<examples::fib_struct::FibResult>;
libfunc drop<Unit> = drop<Unit>;
libfunc rename<examples::fib_struct::FibResult> = rename<examples::fib_struct::FibResult>;

disable_ap_tracking() -> ();
dup<felt>([2]) -> ([2], [4]);
felt_is_zero([4]) { fallthrough() 11([3]) };
branch_align() -> ();
drop<felt>([1]) -> ();
drop<felt>([2]) -> ();
felt_const<0>() -> ([5]);
struct_construct<Unit>() -> ([6]);
struct_construct<examples::fib_struct::FibResult>([0], [5], [6]) -> ([7]);
store_temp<examples::fib_struct::FibResult>([7]) -> ([8]);
jump() { 33() };
branch_align() -> ();
drop<NonZero<felt>>([3]) -> ();
dup<felt>([1]) -> ([1], [10]);
felt_add([0], [10]) -> ([9]);
felt_const<1>() -> ([11]);
felt_sub([2], [11]) -> ([12]);
store_temp<felt>([1]) -> ([14]);
store_temp<felt>([9]) -> ([15]);
store_temp<felt>([12]) -> ([16]);
function_call<user@examples::fib_struct::fib>([14], [15], [16]) -> ([13]);
dup<examples::fib_struct::FibResult>([13]) -> ([13], [17]);
struct_deconstruct<examples::fib_struct::FibResult>([17]) -> ([18], [19], [20]);
drop<felt>([19]) -> ();
drop<Unit>([20]) -> ();
struct_deconstruct<examples::fib_struct::FibResult>([13]) -> ([21], [22], [23]);
drop<felt>([21]) -> ();
drop<Unit>([23]) -> ();
felt_const<1>() -> ([24]);
felt_add([22], [24]) -> ([25]);
struct_construct<Unit>() -> ([26]);
struct_construct<examples::fib_struct::FibResult>([18], [25], [26]) -> ([27]);
store_temp<examples::fib_struct::FibResult>([27]) -> ([8]);
rename<examples::fib_struct::FibResult>([8]) -> ([28]);
return([28]);

examples::fib_struct::fib@0([0]: felt, [1]: felt, [2]: felt) -> (examples::fib_struct::FibResult);
