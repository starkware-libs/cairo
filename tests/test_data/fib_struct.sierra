type felt = felt;
type NonZero<felt> = NonZero<felt>;
type Unit = Struct<ut@Tuple>;
type fib_struct::fib_struct::FibResult = Struct<ut@fib_struct::fib_struct::FibResult, felt, felt, Unit>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<felt> = dup<felt>;
libfunc felt_jump_nz = felt_jump_nz;
libfunc branch_align = branch_align;
libfunc drop<felt> = drop<felt>;
libfunc felt_const<0> = felt_const<0>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<fib_struct::fib_struct::FibResult> = struct_construct<fib_struct::fib_struct::FibResult>;
libfunc store_temp<fib_struct::fib_struct::FibResult> = store_temp<fib_struct::fib_struct::FibResult>;
libfunc rename<fib_struct::fib_struct::FibResult> = rename<fib_struct::fib_struct::FibResult>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc felt_add = felt_add;
libfunc store_temp<felt> = store_temp<felt>;
libfunc rename<felt> = rename<felt>;
libfunc felt_const<1> = felt_const<1>;
libfunc felt_sub = felt_sub;
libfunc function_call<user@fib_struct::fib_struct::fib> = function_call<user@fib_struct::fib_struct::fib>;
libfunc dup<fib_struct::fib_struct::FibResult> = dup<fib_struct::fib_struct::FibResult>;
libfunc struct_deconstruct<fib_struct::fib_struct::FibResult> = struct_deconstruct<fib_struct::fib_struct::FibResult>;
libfunc drop<Unit> = drop<Unit>;

revoke_ap_tracking() -> ();
dup<felt>([2]) -> ([2], [3]);
felt_jump_nz([3]) { fallthrough() 12([4]) };
branch_align() -> ();
drop<felt>([1]) -> ();
drop<felt>([2]) -> ();
felt_const<0>() -> ([5]);
struct_construct<Unit>() -> ([6]);
struct_construct<fib_struct::fib_struct::FibResult>([0], [5], [6]) -> ([7]);
store_temp<fib_struct::fib_struct::FibResult>([7]) -> ([7]);
rename<fib_struct::fib_struct::FibResult>([7]) -> ([8]);
jump() { 41() };
branch_align() -> ();
drop<NonZero<felt>>([4]) -> ();
dup<felt>([1]) -> ([1], [10]);
felt_add([0], [10]) -> ([9]);
store_temp<felt>([9]) -> ([9]);
rename<felt>([9]) -> ([11]);
felt_const<1>() -> ([12]);
felt_sub([2], [12]) -> ([13]);
store_temp<felt>([13]) -> ([13]);
rename<felt>([13]) -> ([14]);
store_temp<felt>([1]) -> ([16]);
store_temp<felt>([11]) -> ([17]);
store_temp<felt>([14]) -> ([18]);
function_call<user@fib_struct::fib_struct::fib>([16], [17], [18]) -> ([15]);
dup<fib_struct::fib_struct::FibResult>([15]) -> ([15], [19]);
struct_deconstruct<fib_struct::fib_struct::FibResult>([19]) -> ([20], [21], [22]);
drop<felt>([21]) -> ();
drop<Unit>([22]) -> ();
struct_deconstruct<fib_struct::fib_struct::FibResult>([15]) -> ([23], [24], [25]);
drop<felt>([23]) -> ();
drop<Unit>([25]) -> ();
felt_const<1>() -> ([26]);
felt_add([24], [26]) -> ([27]);
store_temp<felt>([27]) -> ([27]);
rename<felt>([27]) -> ([28]);
struct_construct<Unit>() -> ([29]);
struct_construct<fib_struct::fib_struct::FibResult>([20], [28], [29]) -> ([30]);
store_temp<fib_struct::fib_struct::FibResult>([30]) -> ([30]);
rename<fib_struct::fib_struct::FibResult>([30]) -> ([8]);
rename<fib_struct::fib_struct::FibResult>([8]) -> ([31]);
return([31]);

fib_struct::fib_struct::fib@0([0]: felt, [1]: felt, [2]: felt) -> (fib_struct::fib_struct::FibResult);
