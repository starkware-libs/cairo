type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type u8 = u8 [storable: true, drop: true, dup: true, zero_sized: false];
type core::result::Result::<core::integer::u8, core::integer::u8> = Enum<ut@core::result::Result::<core::integer::u8, core::integer::u8>, u8, u8> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<u8> = Struct<ut@Tuple, u8> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<(core::integer::u8,)> = Enum<ut@core::panics::PanicResult::<(core::integer::u8,)>, Tuple<u8>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type core::panics::PanicResult::<()> = Enum<ut@core::panics::PanicResult::<()>, Unit, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type examples::match_or::P = Struct<ut@examples::match_or::P, u8, u8, u8> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<u8, u8, u8> = Struct<ut@Tuple, u8, u8, u8> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<felt252> = Struct<ut@Tuple, felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::felt252,)> = Enum<ut@core::panics::PanicResult::<(core::felt252,)>, Tuple<felt252>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type Tuple<felt252, felt252> = Struct<ut@Tuple, felt252, felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type examples::match_or::MyEnum = Enum<ut@examples::match_or::MyEnum, Tuple<felt252, felt252>, Tuple<felt252, felt252>, Tuple<u8, u8, u8>, examples::match_or::P> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc felt252_const<1> = felt252_const<1>;
libfunc felt252_const<2> = felt252_const<2>;
libfunc struct_construct<Tuple<felt252, felt252>> = struct_construct<Tuple<felt252, felt252>>;
libfunc enum_init<examples::match_or::MyEnum, 0> = enum_init<examples::match_or::MyEnum, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<examples::match_or::MyEnum> = store_temp<examples::match_or::MyEnum>;
libfunc function_call<user@examples::match_or::foo> = function_call<user@examples::match_or::foo>;
libfunc enum_match<core::panics::PanicResult::<(core::felt252,)>> = enum_match<core::panics::PanicResult::<(core::felt252,)>>;
libfunc branch_align = branch_align;
libfunc drop<Tuple<felt252>> = drop<Tuple<felt252>>;
libfunc enum_init<examples::match_or::MyEnum, 1> = enum_init<examples::match_or::MyEnum, 1>;
libfunc u8_const<1> = u8_const<1>;
libfunc u8_const<2> = u8_const<2>;
libfunc u8_const<3> = u8_const<3>;
libfunc struct_construct<Tuple<u8, u8, u8>> = struct_construct<Tuple<u8, u8, u8>>;
libfunc enum_init<examples::match_or::MyEnum, 2> = enum_init<examples::match_or::MyEnum, 2>;
libfunc u8_const<9> = u8_const<9>;
libfunc struct_construct<examples::match_or::P> = struct_construct<examples::match_or::P>;
libfunc enum_init<examples::match_or::MyEnum, 3> = enum_init<examples::match_or::MyEnum, 3>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::panics::PanicResult::<()>, 0> = enum_init<core::panics::PanicResult::<()>, 0>;
libfunc store_temp<core::panics::PanicResult::<()>> = store_temp<core::panics::PanicResult::<()>>;
libfunc enum_init<core::panics::PanicResult::<()>, 1> = enum_init<core::panics::PanicResult::<()>, 1>;
libfunc enum_match<examples::match_or::MyEnum> = enum_match<examples::match_or::MyEnum>;
libfunc struct_deconstruct<Tuple<felt252, felt252>> = struct_deconstruct<Tuple<felt252, felt252>>;
libfunc drop<felt252> = drop<felt252>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc jump = jump;
libfunc struct_deconstruct<Tuple<u8, u8, u8>> = struct_deconstruct<Tuple<u8, u8, u8>>;
libfunc drop<u8> = drop<u8>;
libfunc store_temp<u8> = store_temp<u8>;
libfunc struct_deconstruct<examples::match_or::P> = struct_deconstruct<examples::match_or::P>;
libfunc function_call<user@core::integer::U8Add::add> = function_call<user@core::integer::U8Add::add>;
libfunc enum_match<core::panics::PanicResult::<(core::integer::u8,)>> = enum_match<core::panics::PanicResult::<(core::integer::u8,)>>;
libfunc struct_deconstruct<Tuple<u8>> = struct_deconstruct<Tuple<u8>>;
libfunc u8_to_felt252 = u8_to_felt252;
libfunc struct_construct<Tuple<felt252>> = struct_construct<Tuple<felt252>>;
libfunc enum_init<core::panics::PanicResult::<(core::felt252,)>, 0> = enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::felt252,)>> = store_temp<core::panics::PanicResult::<(core::felt252,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::felt252,)>, 1> = enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>;
libfunc u8_overflowing_add = u8_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 0> = enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u8, core::integer::u8>> = store_temp<core::result::Result::<core::integer::u8, core::integer::u8>>;
libfunc enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 1> = enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 1>;
libfunc felt252_const<608642104203229548495787928534675319> = felt252_const<608642104203229548495787928534675319>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u8, core::integer::u8>::expect::<core::integer::u8Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u8, core::integer::u8>::expect::<core::integer::u8Drop>>;
libfunc store_temp<core::panics::PanicResult::<(core::integer::u8,)>> = store_temp<core::panics::PanicResult::<(core::integer::u8,)>>;
libfunc enum_match<core::result::Result::<core::integer::u8, core::integer::u8>> = enum_match<core::result::Result::<core::integer::u8, core::integer::u8>>;
libfunc struct_construct<Tuple<u8>> = struct_construct<Tuple<u8>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0> = enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1> = enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>;

felt252_const<1>() -> ([1]); // 0
felt252_const<2>() -> ([2]); // 1
struct_construct<Tuple<felt252, felt252>>([1], [2]) -> ([3]); // 2
enum_init<examples::match_or::MyEnum, 0>([3]) -> ([4]); // 3
store_temp<RangeCheck>([0]) -> ([0]); // 4
store_temp<examples::match_or::MyEnum>([4]) -> ([4]); // 5
function_call<user@examples::match_or::foo>([0], [4]) -> ([5], [6]); // 6
enum_match<core::panics::PanicResult::<(core::felt252,)>>([6]) { fallthrough([7]) 62([8]) }; // 7
branch_align() -> (); // 8
drop<Tuple<felt252>>([7]) -> (); // 9
felt252_const<1>() -> ([9]); // 10
felt252_const<2>() -> ([10]); // 11
struct_construct<Tuple<felt252, felt252>>([9], [10]) -> ([11]); // 12
enum_init<examples::match_or::MyEnum, 1>([11]) -> ([12]); // 13
store_temp<RangeCheck>([5]) -> ([5]); // 14
store_temp<examples::match_or::MyEnum>([12]) -> ([12]); // 15
function_call<user@examples::match_or::foo>([5], [12]) -> ([13], [14]); // 16
enum_match<core::panics::PanicResult::<(core::felt252,)>>([14]) { fallthrough([15]) 57([16]) }; // 17
branch_align() -> (); // 18
drop<Tuple<felt252>>([15]) -> (); // 19
u8_const<1>() -> ([17]); // 20
u8_const<2>() -> ([18]); // 21
u8_const<3>() -> ([19]); // 22
struct_construct<Tuple<u8, u8, u8>>([17], [18], [19]) -> ([20]); // 23
enum_init<examples::match_or::MyEnum, 2>([20]) -> ([21]); // 24
store_temp<RangeCheck>([13]) -> ([13]); // 25
store_temp<examples::match_or::MyEnum>([21]) -> ([21]); // 26
function_call<user@examples::match_or::foo>([13], [21]) -> ([22], [23]); // 27
enum_match<core::panics::PanicResult::<(core::felt252,)>>([23]) { fallthrough([24]) 52([25]) }; // 28
branch_align() -> (); // 29
drop<Tuple<felt252>>([24]) -> (); // 30
u8_const<1>() -> ([26]); // 31
u8_const<2>() -> ([27]); // 32
u8_const<9>() -> ([28]); // 33
struct_construct<examples::match_or::P>([26], [27], [28]) -> ([29]); // 34
enum_init<examples::match_or::MyEnum, 3>([29]) -> ([30]); // 35
store_temp<RangeCheck>([22]) -> ([22]); // 36
store_temp<examples::match_or::MyEnum>([30]) -> ([30]); // 37
function_call<user@examples::match_or::foo>([22], [30]) -> ([31], [32]); // 38
enum_match<core::panics::PanicResult::<(core::felt252,)>>([32]) { fallthrough([33]) 47([34]) }; // 39
branch_align() -> (); // 40
drop<Tuple<felt252>>([33]) -> (); // 41
struct_construct<Unit>() -> ([35]); // 42
enum_init<core::panics::PanicResult::<()>, 0>([35]) -> ([36]); // 43
store_temp<RangeCheck>([31]) -> ([31]); // 44
store_temp<core::panics::PanicResult::<()>>([36]) -> ([36]); // 45
return([31], [36]); // 46
branch_align() -> (); // 47
enum_init<core::panics::PanicResult::<()>, 1>([34]) -> ([37]); // 48
store_temp<RangeCheck>([31]) -> ([31]); // 49
store_temp<core::panics::PanicResult::<()>>([37]) -> ([37]); // 50
return([31], [37]); // 51
branch_align() -> (); // 52
enum_init<core::panics::PanicResult::<()>, 1>([25]) -> ([38]); // 53
store_temp<RangeCheck>([22]) -> ([22]); // 54
store_temp<core::panics::PanicResult::<()>>([38]) -> ([38]); // 55
return([22], [38]); // 56
branch_align() -> (); // 57
enum_init<core::panics::PanicResult::<()>, 1>([16]) -> ([39]); // 58
store_temp<RangeCheck>([13]) -> ([13]); // 59
store_temp<core::panics::PanicResult::<()>>([39]) -> ([39]); // 60
return([13], [39]); // 61
branch_align() -> (); // 62
enum_init<core::panics::PanicResult::<()>, 1>([8]) -> ([40]); // 63
store_temp<RangeCheck>([5]) -> ([5]); // 64
store_temp<core::panics::PanicResult::<()>>([40]) -> ([40]); // 65
return([5], [40]); // 66
enum_match<examples::match_or::MyEnum>([1]) { fallthrough([2]) 73([3]) 80([4]) 86([5]) }; // 67
branch_align() -> (); // 68
struct_deconstruct<Tuple<felt252, felt252>>([2]) -> ([6], [7]); // 69
drop<felt252>([6]) -> (); // 70
store_temp<felt252>([7]) -> ([8]); // 71
jump() { 77() }; // 72
branch_align() -> (); // 73
struct_deconstruct<Tuple<felt252, felt252>>([3]) -> ([9], [10]); // 74
drop<felt252>([10]) -> (); // 75
store_temp<felt252>([9]) -> ([8]); // 76
store_temp<RangeCheck>([0]) -> ([11]); // 77
store_temp<felt252>([8]) -> ([12]); // 78
jump() { 101() }; // 79
branch_align() -> (); // 80
struct_deconstruct<Tuple<u8, u8, u8>>([4]) -> ([13], [14], [15]); // 81
drop<u8>([14]) -> (); // 82
store_temp<u8>([13]) -> ([16]); // 83
store_temp<u8>([15]) -> ([17]); // 84
jump() { 91() }; // 85
branch_align() -> (); // 86
struct_deconstruct<examples::match_or::P>([5]) -> ([18], [19], [20]); // 87
drop<u8>([19]) -> (); // 88
store_temp<u8>([18]) -> ([16]); // 89
store_temp<u8>([20]) -> ([17]); // 90
store_temp<RangeCheck>([0]) -> ([0]); // 91
store_temp<u8>([16]) -> ([16]); // 92
store_temp<u8>([17]) -> ([17]); // 93
function_call<user@core::integer::U8Add::add>([0], [16], [17]) -> ([21], [22]); // 94
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([22]) { fallthrough([23]) 106([24]) }; // 95
branch_align() -> (); // 96
struct_deconstruct<Tuple<u8>>([23]) -> ([25]); // 97
u8_to_felt252([25]) -> ([26]); // 98
store_temp<RangeCheck>([21]) -> ([11]); // 99
store_temp<felt252>([26]) -> ([12]); // 100
struct_construct<Tuple<felt252>>([12]) -> ([27]); // 101
enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>([27]) -> ([28]); // 102
store_temp<RangeCheck>([11]) -> ([11]); // 103
store_temp<core::panics::PanicResult::<(core::felt252,)>>([28]) -> ([28]); // 104
return([11], [28]); // 105
branch_align() -> (); // 106
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([24]) -> ([29]); // 107
store_temp<RangeCheck>([21]) -> ([21]); // 108
store_temp<core::panics::PanicResult::<(core::felt252,)>>([29]) -> ([29]); // 109
return([21], [29]); // 110
u8_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 117([5], [6]) }; // 111
branch_align() -> (); // 112
enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 0>([4]) -> ([7]); // 113
store_temp<RangeCheck>([3]) -> ([8]); // 114
store_temp<core::result::Result::<core::integer::u8, core::integer::u8>>([7]) -> ([9]); // 115
jump() { 121() }; // 116
branch_align() -> (); // 117
enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 1>([6]) -> ([10]); // 118
store_temp<RangeCheck>([5]) -> ([8]); // 119
store_temp<core::result::Result::<core::integer::u8, core::integer::u8>>([10]) -> ([9]); // 120
felt252_const<608642104203229548495787928534675319>() -> ([11]); // 121
store_temp<felt252>([11]) -> ([11]); // 122
function_call<user@core::result::ResultTraitImpl::<core::integer::u8, core::integer::u8>::expect::<core::integer::u8Drop>>([9], [11]) -> ([12]); // 123
store_temp<RangeCheck>([8]) -> ([8]); // 124
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([12]) -> ([12]); // 125
return([8], [12]); // 126
enum_match<core::result::Result::<core::integer::u8, core::integer::u8>>([0]) { fallthrough([2]) 134([3]) }; // 127
branch_align() -> (); // 128
drop<felt252>([1]) -> (); // 129
struct_construct<Tuple<u8>>([2]) -> ([4]); // 130
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([4]) -> ([5]); // 131
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([5]) -> ([5]); // 132
return([5]); // 133
branch_align() -> (); // 134
drop<u8>([3]) -> (); // 135
array_new<felt252>() -> ([6]); // 136
array_append<felt252>([6], [1]) -> ([7]); // 137
struct_construct<core::panics::Panic>() -> ([8]); // 138
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([8], [7]) -> ([9]); // 139
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([9]) -> ([10]); // 140
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([10]) -> ([10]); // 141
return([10]); // 142

examples::match_or::main@0([0]: RangeCheck) -> (RangeCheck, core::panics::PanicResult::<()>);
examples::match_or::foo@67([0]: RangeCheck, [1]: examples::match_or::MyEnum) -> (RangeCheck, core::panics::PanicResult::<(core::felt252,)>);
core::integer::U8Add::add@111([0]: RangeCheck, [1]: u8, [2]: u8) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u8,)>);
core::result::ResultTraitImpl::<core::integer::u8, core::integer::u8>::expect::<core::integer::u8Drop>@127([0]: core::result::Result::<core::integer::u8, core::integer::u8>, [1]: felt252) -> (core::panics::PanicResult::<(core::integer::u8,)>);
