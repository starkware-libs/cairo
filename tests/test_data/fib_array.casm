%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 1, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = 1, ap++;
[ap + -1] = [[ap + -3] + 1];
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6] + 2, ap++;
call rel 65;
jmp rel 53 if [ap + -3] != 0;
[ap + -1] = [ap + 0] + [ap + -2], ap++;
jmp rel 14 if [ap + -1] != 0;
call rel 155;
[ap + 0] = [ap + -13], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
[ap + -1] = [ap + 0] + 1, ap++;
[ap + -3] = [ap + 0] + [ap + -4], ap++;
%{ memory[ap + 0] = memory[ap + -2] < memory[ap + -1] %}
jmp rel 6 if [ap + 0] != 0, ap++;
[ap + -3] = [ap + 0] + [ap + -2], ap++;
[ap + -1] = [[ap + -9] + 0];
jmp rel 16;
[ap + 0] = [ap + -3] + 1, ap++;
[ap + -3] = [ap + 0] + [ap + -1], ap++;
[ap + -1] = [[ap + -10] + 0];
[ap + 0] = [ap + -8] + [ap + -5], ap++;
[ap + 0] = [ap + -11] + 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [[ap + -5] + 0], ap++;
[ap + 0] = [ap + -12], ap++;
ret;
call rel 125;
[ap + 0] = [ap + -17] + 1, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
[fp + -3] = [ap + 0] + [fp + -4], ap++;
[ap + -1] = [ap + 1] + [fp + -5], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 4294967296 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -6] + 0];
jmp rel 10;
[ap + -1] = [[fp + -6] + 0];
[ap + 0] = [fp + -6] + 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
ret;
jmp rel 6 if [ap + -4] != 0;
[ap + 0] = [fp + -6] + 1, ap++;
jmp rel 58;
[ap + -4] = [ap + 0] + 1, ap++;
[fp + -3] = [ap + 0] + [fp + -4], ap++;
%{ memory[ap + 0] = memory[ap + -2] < memory[ap + -1] %}
jmp rel 6 if [ap + 0] != 0, ap++;
[ap + -3] = [ap + 0] + [ap + -2], ap++;
[ap + -1] = [[fp + -6] + 1];
jmp rel 57;
[ap + 0] = [ap + -3] + 1, ap++;
[ap + -3] = [ap + 0] + [ap + -1], ap++;
[ap + -1] = [[fp + -6] + 1];
[ap + 0] = 2, ap++;
[ap + -10] = [ap + 1] + [ap + -1], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 4294967296 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -6] + 2];
jmp rel 33;
[ap + -1] = [[fp + -6] + 2];
[fp + -3] = [ap + 0] + [fp + -4], ap++;
%{ memory[ap + 0] = memory[ap + -2] < memory[ap + -1] %}
jmp rel 6 if [ap + 0] != 0, ap++;
[ap + -3] = [ap + 0] + [ap + -2], ap++;
[ap + -1] = [[fp + -6] + 3];
jmp rel 21;
[ap + 0] = [ap + -3] + 1, ap++;
[ap + -3] = [ap + 0] + [ap + -1], ap++;
[ap + -1] = [[fp + -6] + 3];
[ap + 0] = [fp + -4] + [ap + -12], ap++;
[ap + 0] = [fp + -4] + [ap + -6], ap++;
[ap + 0] = [[ap + -2] + 0], ap++;
[ap + 0] = [[ap + -2] + 0], ap++;
[ap + 0] = [ap + -2] + [ap + -1], ap++;
[ap + -1] = [[fp + -3] + 0];
[ap + 0] = [fp + -6] + 4, ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3] + 1, ap++;
call rel -70;
ret;
[ap + 0] = [fp + -6] + 4, ap++;
jmp rel 14;
[ap + 0] = [fp + -6] + 3, ap++;
call rel 18;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
ret;
[ap + 0] = [fp + -6] + 2, ap++;
call rel 13;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
ret;
[ap + 0] = 155785504329508738615720351733824384887, ap++;
call rel 8;
ret;
[ap + 0] = 1637570914057682275393755530660268060279989363, ap++;
call rel 3;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[fp + -3] = [[ap + -1] + 0];
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [ap + -2] + 1, ap++;
ret;
