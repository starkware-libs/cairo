%{ memory[ap + 0] = 23 < memory[fp + -6] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[ap + 0] = [fp + -6] + -23, ap++;
[ap + 0] = [ap + -1] * -1, ap++;
[ap + -1] = [[fp + -7] + 0];
jmp rel 11;
[ap + 0] = [fp + -6] + -24, ap++;
[ap + -1] = [[fp + -7] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[fp + -6] = [ap + 0] + 24, ap++;
jmp rel 20;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = 1, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -3] + 1, ap++;
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
ret;
jmp rel 7 if [fp + -3] != 0;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [fp + -5], ap++;
jmp rel 29;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -5] + [fp + -4], ap++;
[fp + -3] = [ap + 0] + 1, ap++;
call rel -49;
[ap + 0] = 1, ap++;
jmp rel 7 if [ap + -4] != 0;
jmp rel 2;
[ap + 0] = [ap + -3], ap++;
jmp rel 9;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
ap += 1;
ret;
