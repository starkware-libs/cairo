call rel 68;
[ap + 0] = [ap + -1] + 67, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
%{ memory[ap + 0] = 2570 <= memory[fp + -6] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[fp + -6] = [ap + 0] + 2570, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -7] + 0];
jmp rel 42;
[fp + -6] = [ap + 0] + 2570, ap++;
[ap + -1] = [[fp + -7] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
jmp rel 7 if [fp + -3] != 0;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [fp + -5], ap++;
jmp rel 15;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -5] + [fp + -4], ap++;
[fp + -3] = [ap + 0] + 1, ap++;
call rel -32;
jmp rel 13 if [ap + -3] != 0;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -5], ap++;
ret;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6] + 1, ap++;
ret;
