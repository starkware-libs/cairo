type felt = felt;
type Uninitialized<felt> = Uninitialized<felt>;
type NonZero<felt> = NonZero<felt>;

libfunc alloc_local<felt> = alloc_local<felt>;
libfunc finalize_locals = finalize_locals;
libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<felt> = dup<felt>;
libfunc felt_jump_nz = felt_jump_nz;
libfunc drop<felt> = drop<felt>;
libfunc drop<Uninitialized<felt>> = drop<Uninitialized<felt>>;
libfunc branch_align = branch_align;
libfunc felt_const<1> = felt_const<1>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc felt_sub = felt_sub;
libfunc rename<felt> = rename<felt>;
libfunc function_call<user@fib_local::fib_local::fib> = function_call<user@fib_local::fib_local::fib>;
libfunc felt_const<2> = felt_const<2>;
libfunc store_local<felt> = store_local<felt>;
libfunc felt_add = felt_add;

alloc_local<felt>() -> ([2]);
finalize_locals() -> ();
revoke_ap_tracking() -> ();
dup<felt>([0]) -> ([0], [20]);
felt_jump_nz([20]) { fallthrough() 11([3]) };
drop<felt>([0]) -> ();
drop<Uninitialized<felt>>([2]) -> ();
branch_align() -> ();
felt_const<1>() -> ([4]);
store_temp<felt>([4]) -> ([5]);
jump() { 42() };
drop<NonZero<felt>>([3]) -> ();
branch_align() -> ();
felt_const<1>() -> ([6]);
dup<felt>([0]) -> ([0], [21]);
felt_sub([21], [6]) -> ([7]);
store_temp<felt>([7]) -> ([7]);
felt_jump_nz([7]) { fallthrough() 24([8]) };
drop<felt>([0]) -> ();
drop<Uninitialized<felt>>([2]) -> ();
branch_align() -> ();
felt_const<1>() -> ([9]);
store_temp<felt>([9]) -> ([10]);
jump() { 41() };
drop<NonZero<felt>>([8]) -> ();
branch_align() -> ();
felt_const<1>() -> ([11]);
dup<felt>([0]) -> ([0], [22]);
felt_sub([22], [11]) -> ([12]);
store_temp<felt>([12]) -> ([12]);
rename<felt>([12]) -> ([13]);
function_call<user@fib_local::fib_local::fib>([13]) -> ([1]);
felt_const<2>() -> ([14]);
felt_sub([0], [14]) -> ([15]);
store_temp<felt>([15]) -> ([15]);
rename<felt>([15]) -> ([17]);
store_local<felt>([2], [1]) -> ([1]);
function_call<user@fib_local::fib_local::fib>([17]) -> ([16]);
felt_add([1], [16]) -> ([18]);
store_temp<felt>([18]) -> ([18]);
rename<felt>([18]) -> ([10]);
rename<felt>([10]) -> ([5]);
rename<felt>([5]) -> ([19]);
return([19]);

fib_local::fib_local::fib@0([0]: felt) -> (felt);
