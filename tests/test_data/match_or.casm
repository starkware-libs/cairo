[ap + 0] = [fp + -3], ap++;
[ap + 0] = 7, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 2, ap++;
call rel 81;
jmp rel 71 if [ap + -3] != 0;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = 5, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 2, ap++;
call rel 68;
jmp rel 50 if [ap + -3] != 0;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = 3, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 2, ap++;
[ap + 0] = 3, ap++;
call rel 55;
jmp rel 29 if [ap + -3] != 0;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 2, ap++;
[ap + 0] = 9, ap++;
call rel 42;
jmp rel 10 if [ap + -3] != 0;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
ret;
ap += 18;
[ap + 0] = [ap + -22], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -22], ap++;
[ap + 0] = [ap + -22], ap++;
ret;
ap += 36;
[ap + 0] = [ap + -40], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -40], ap++;
[ap + 0] = [ap + -40], ap++;
ret;
ap += 54;
[ap + 0] = [ap + -58], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -58], ap++;
[ap + 0] = [ap + -58], ap++;
ret;
jmp rel [fp + -6];
jmp rel 22;
jmp rel 16;
jmp rel 7;
ap += 4;
[ap + 0] = [fp + -3], ap++;
jmp rel 5;
ap += 4;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [ap + -2], ap++;
jmp rel 23;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -3], ap++;
jmp rel 4;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -3], ap++;
%{ memory[ap + 0] = (memory[ap + -2] + memory[ap + -1]) % PRIME < 256 %}
jmp rel 8 if [ap + 0] != 0, ap++;
[ap + 0] = [ap + -3] + [ap + -2], ap++;
[ap + -1] = [ap + 0] + 256, ap++;
[ap + -1] = [[fp + -7] + 0];
jmp rel 16;
[ap + 1] = [ap + -3] + [ap + -2], ap++;
[ap + -1] = [ap + 0] + 340282366920938463463374607431768211200, ap++;
[ap + -2] = [[fp + -7] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 608642104203229548495787928534675319, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -5] + 1, ap++;
ret;
