type u128 = u128;
type felt = felt;
type NonZero<felt> = NonZero<felt>;
type Unit = Struct<ut@Tuple>;
type core::option::Option::<core::integer::u128> = Enum<ut@core::option::Option::<core::integer::u128>, u128, Unit>;
type RangeCheck = RangeCheck;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<u128> = dup<u128>;
libfunc u128_to_felt = u128_to_felt;
libfunc felt_is_zero = felt_is_zero;
libfunc branch_align = branch_align;
libfunc drop<u128> = drop<u128>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 0> = enum_init<core::option::Option::<core::integer::u128>, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<core::option::Option::<core::integer::u128>> = store_temp<core::option::Option::<core::integer::u128>>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::integer::u128_checked_add> = function_call<user@core::integer::u128_checked_add>;
libfunc enum_match<core::option::Option::<core::integer::u128>> = enum_match<core::option::Option::<core::integer::u128>>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 1> = enum_init<core::option::Option::<core::integer::u128>, 1>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::u128_checked_sub> = function_call<user@core::integer::u128_checked_sub>;
libfunc function_call<user@fib_u128_checked::fib_u128_checked::fib> = function_call<user@fib_u128_checked::fib_u128_checked::fib>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<core::option::Option::<core::integer::u128>> = rename<core::option::Option::<core::integer::u128>>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc u128_overflowing_sub = u128_overflowing_sub;

revoke_ap_tracking() -> ();
dup<u128>([3]) -> ([3], [5]);
u128_to_felt([5]) -> ([4]);
felt_is_zero([4]) { fallthrough() 11([6]) };
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([1]) -> ([7]);
store_temp<RangeCheck>([0]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 60() };
branch_align() -> ();
drop<NonZero<felt>>([6]) -> ();
store_temp<RangeCheck>([0]) -> ([12]);
store_temp<u128>([1]) -> ([13]);
dup<u128>([2]) -> ([2], [14]);
store_temp<u128>([14]) -> ([14]);
function_call<user@core::integer::u128_checked_add>([12], [13], [14]) -> ([10], [11]);
enum_match<core::option::Option::<core::integer::u128>>([11]) { fallthrough([15]) 21([16]) };
branch_align() -> ();
jump() { 28() };
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
enum_init<core::option::Option::<core::integer::u128>, 1>([16]) -> ([17]);
store_temp<RangeCheck>([10]) -> ([18]);
store_temp<core::option::Option::<core::integer::u128>>([17]) -> ([19]);
return([18], [19]);
u128_const<1>() -> ([20]);
store_temp<RangeCheck>([10]) -> ([23]);
store_temp<u128>([3]) -> ([24]);
store_temp<u128>([20]) -> ([25]);
function_call<user@core::integer::u128_checked_sub>([23], [24], [25]) -> ([21], [22]);
enum_match<core::option::Option::<core::integer::u128>>([22]) { fallthrough([26]) 36([27]) };
branch_align() -> ();
jump() { 43() };
branch_align() -> ();
drop<u128>([15]) -> ();
drop<u128>([2]) -> ();
enum_init<core::option::Option::<core::integer::u128>, 1>([27]) -> ([28]);
store_temp<RangeCheck>([21]) -> ([29]);
store_temp<core::option::Option::<core::integer::u128>>([28]) -> ([30]);
return([29], [30]);
store_temp<RangeCheck>([21]) -> ([33]);
store_temp<u128>([2]) -> ([34]);
store_temp<u128>([15]) -> ([35]);
store_temp<u128>([26]) -> ([36]);
function_call<user@fib_u128_checked::fib_u128_checked::fib>([33], [34], [35], [36]) -> ([31], [32]);
enum_match<core::option::Option::<core::integer::u128>>([32]) { fallthrough([37]) 51([38]) };
branch_align() -> ();
jump() { 56() };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 1>([38]) -> ([39]);
store_temp<RangeCheck>([31]) -> ([40]);
store_temp<core::option::Option::<core::integer::u128>>([39]) -> ([41]);
return([40], [41]);
enum_init<core::option::Option::<core::integer::u128>, 0>([37]) -> ([42]);
store_temp<RangeCheck>([31]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([42]) -> ([9]);
jump() { 60() };
rename<RangeCheck>([8]) -> ([43]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([44]);
return([43], [44]);
u128_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 69([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 76() };
branch_align() -> ();
drop<u128>([6]) -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::u128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([11]) -> ([9]);
jump() { 76() };
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([13]);
return([12], [13]);
u128_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 85([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 92() };
branch_align() -> ();
drop<u128>([6]) -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::u128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([11]) -> ([9]);
jump() { 92() };
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([13]);
return([12], [13]);

fib_u128_checked::fib_u128_checked::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::integer::u128_checked_add@63([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::integer::u128_checked_sub@79([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
