type u128 = u128 [storable: true, drop: true, dup: true, zero_sized: false];
type BoundedInt<0, 340282366920938463463374607431768211454> = BoundedInt<0, 340282366920938463463374607431768211454> [storable: true, drop: true, dup: true, zero_sized: false];
type Const<BoundedInt<1, 1>, 1> = Const<BoundedInt<1, 1>, 1> [storable: false, drop: false, dup: false, zero_sized: false];
type BoundedInt<1, 1> = BoundedInt<1, 1> [storable: true, drop: true, dup: true, zero_sized: false];
type Const<u128, 340282366920938463463374607431768211455> = Const<u128, 340282366920938463463374607431768211455> [storable: false, drop: false, dup: false, zero_sized: false];
type BoundedInt<1, 340282366920938463463374607431768211455> = BoundedInt<1, 340282366920938463463374607431768211455> [storable: true, drop: true, dup: true, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type core::result::Result::<core::integer::u128, core::integer::u128> = Enum<ut@core::result::Result::<core::integer::u128, core::integer::u128>, u128, u128> [storable: true, drop: true, dup: true, zero_sized: false];
type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type core::option::Option::<core::integer::u128> = Enum<ut@core::option::Option::<core::integer::u128>, u128, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc dup<u128> = dup<u128>;
libfunc upcast<u128, felt252> = upcast<u128, felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc branch_align = branch_align;
libfunc drop<u128> = drop<u128>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 0> = enum_init<core::option::Option::<core::integer::u128>, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<core::option::Option::<core::integer::u128>> = store_temp<core::option::Option::<core::integer::u128>>;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::internal::num::u128_dec> = function_call<user@core::internal::num::u128_dec>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::integer::u128>> = enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc function_call<user@examples::fib_u128_checked::fib> = function_call<user@examples::fib_u128_checked::fib>;
libfunc jump = jump;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 1> = enum_init<core::option::Option::<core::integer::u128>, 1>;
libfunc bounded_int_trim_min<u128> = bounded_int_trim_min<u128>;
libfunc const_as_immediate<Const<u128, 340282366920938463463374607431768211455>> = const_as_immediate<Const<u128, 340282366920938463463374607431768211455>>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>;
libfunc store_temp<core::result::Result::<core::integer::u128, core::integer::u128>> = store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc const_as_immediate<Const<BoundedInt<1, 1>, 1>> = const_as_immediate<Const<BoundedInt<1, 1>, 1>>;
libfunc bounded_int_sub<BoundedInt<1, 340282366920938463463374607431768211455>, BoundedInt<1, 1>> = bounded_int_sub<BoundedInt<1, 340282366920938463463374607431768211455>, BoundedInt<1, 1>>;
libfunc upcast<BoundedInt<0, 340282366920938463463374607431768211454>, u128> = upcast<BoundedInt<0, 340282366920938463463374607431768211454>, u128>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>;

F0:
disable_ap_tracking() -> ();
dup<u128>([3]) -> ([3], [4]);
upcast<u128, felt252>([4]) -> ([5]);
felt252_is_zero([5]) { fallthrough() F0_B0([6]) };
branch_align() -> ();
drop<u128>([3]) -> ();
drop<u128>([2]) -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([1]) -> ([7]);
store_temp<RangeCheck>([0]) -> ([0]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([7]);
return([0], [7]);
F0_B0:
branch_align() -> ();
drop<NonZero<felt252>>([6]) -> ();
dup<u128>([2]) -> ([2], [8]);
u128_overflowing_add([0], [1], [8]) { fallthrough([9], [10]) F0_B2([11], [12]) };
branch_align() -> ();
store_temp<u128>([3]) -> ([3]);
function_call<user@core::internal::num::u128_dec>([3]) -> ([13]);
enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>([13]) { fallthrough([14]) F0_B1([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([9]);
store_temp<u128>([2]) -> ([2]);
store_temp<u128>([10]) -> ([10]);
store_temp<u128>([14]) -> ([14]);
function_call<user@examples::fib_u128_checked::fib>([9], [2], [10], [14]) -> ([16], [17]);
return([16], [17]);
F0_B1:
branch_align() -> ();
drop<u128>([15]) -> ();
drop<u128>([10]) -> ();
drop<u128>([2]) -> ();
store_temp<RangeCheck>([9]) -> ([18]);
jump() { F0_B3() };
F0_B2:
branch_align() -> ();
drop<u128>([12]) -> ();
drop<u128>([3]) -> ();
drop<u128>([2]) -> ();
store_temp<RangeCheck>([11]) -> ([18]);
F0_B3:
struct_construct<Unit>() -> ([19]);
enum_init<core::option::Option::<core::integer::u128>, 1>([19]) -> ([20]);
store_temp<core::option::Option::<core::integer::u128>>([20]) -> ([20]);
return([18], [20]);
F1:
bounded_int_trim_min<u128>([0]) { fallthrough() F1_B0([1]) };
branch_align() -> ();
const_as_immediate<Const<u128, 340282366920938463463374607431768211455>>() -> ([2]);
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([2]) -> ([3]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([3]) -> ([3]);
return([3]);
F1_B0:
branch_align() -> ();
const_as_immediate<Const<BoundedInt<1, 1>, 1>>() -> ([4]);
bounded_int_sub<BoundedInt<1, 340282366920938463463374607431768211455>, BoundedInt<1, 1>>([1], [4]) -> ([5]);
upcast<BoundedInt<0, 340282366920938463463374607431768211454>, u128>([5]) -> ([6]);
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([6]) -> ([7]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([7]);
return([7]);

examples::fib_u128_checked::fib@F0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::internal::num::u128_dec@F1([0]: u128) -> (core::result::Result::<core::integer::u128, core::integer::u128>);
