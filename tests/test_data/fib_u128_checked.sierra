type u128 = u128;
type felt = felt;
type NonZero<felt> = NonZero<felt>;
type Unit = Struct<ut@Tuple>;
type core::option::Option::<core::integer::u128> = Enum<ut@core::option::Option::<core::integer::u128>, u128, Unit>;
type RangeCheck = RangeCheck;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<u128> = dup<u128>;
libfunc u128_to_felt = u128_to_felt;
libfunc felt_jump_nz = felt_jump_nz;
libfunc drop<u128> = drop<u128>;
libfunc branch_align = branch_align;
libfunc enum_init<core::option::Option::<core::integer::u128>, 0> = enum_init<core::option::Option::<core::integer::u128>, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<core::option::Option::<core::integer::u128>> = store_temp<core::option::Option::<core::integer::u128>>;
libfunc rename<core::option::Option::<core::integer::u128>> = rename<core::option::Option::<core::integer::u128>>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::integer::u128_checked_add> = function_call<user@core::integer::u128_checked_add>;
libfunc enum_match<core::option::Option::<core::integer::u128>> = enum_match<core::option::Option::<core::integer::u128>>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 1> = enum_init<core::option::Option::<core::integer::u128>, 1>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::u128_checked_sub> = function_call<user@core::integer::u128_checked_sub>;
libfunc function_call<user@fib_u128_checked::fib_u128_checked::fib> = function_call<user@fib_u128_checked::fib_u128_checked::fib>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc u128_overflow_add = u128_overflow_add;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc u128_overflow_sub = u128_overflow_sub;

revoke_ap_tracking() -> ();
dup<u128>([3]) -> ([3], [49]);
u128_to_felt([49]) -> ([4]);
felt_jump_nz([4]) { fallthrough() 12([5]) };
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([1]) -> ([6]);
store_temp<RangeCheck>([0]) -> ([7]);
store_temp<core::option::Option::<core::integer::u128>>([6]) -> ([6]);
rename<core::option::Option::<core::integer::u128>>([6]) -> ([8]);
jump() { 69() };
drop<NonZero<felt>>([5]) -> ();
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([11]);
store_temp<u128>([1]) -> ([12]);
dup<u128>([2]) -> ([2], [50]);
store_temp<u128>([50]) -> ([13]);
function_call<user@core::integer::u128_checked_add>([11], [12], [13]) -> ([9], [10]);
enum_match<core::option::Option::<core::integer::u128>>([10]) { 20([14]) 23([15]) };
branch_align() -> ();
store_temp<u128>([14]) -> ([16]);
jump() { 31() };
drop<u128>([3]) -> ();
drop<u128>([2]) -> ();
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 1>([15]) -> ([17]);
store_temp<RangeCheck>([9]) -> ([18]);
store_temp<core::option::Option::<core::integer::u128>>([17]) -> ([17]);
rename<core::option::Option::<core::integer::u128>>([17]) -> ([19]);
return([18], [19]);
u128_const<1>() -> ([20]);
store_temp<RangeCheck>([9]) -> ([23]);
store_temp<u128>([3]) -> ([24]);
store_temp<u128>([20]) -> ([25]);
function_call<user@core::integer::u128_checked_sub>([23], [24], [25]) -> ([21], [22]);
enum_match<core::option::Option::<core::integer::u128>>([22]) { 37([26]) 40([27]) };
branch_align() -> ();
store_temp<u128>([26]) -> ([28]);
jump() { 48() };
drop<u128>([2]) -> ();
drop<u128>([16]) -> ();
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 1>([27]) -> ([29]);
store_temp<RangeCheck>([21]) -> ([30]);
store_temp<core::option::Option::<core::integer::u128>>([29]) -> ([29]);
rename<core::option::Option::<core::integer::u128>>([29]) -> ([31]);
return([30], [31]);
store_temp<RangeCheck>([21]) -> ([34]);
store_temp<u128>([2]) -> ([35]);
store_temp<u128>([16]) -> ([36]);
store_temp<u128>([28]) -> ([37]);
function_call<user@fib_u128_checked::fib_u128_checked::fib>([34], [35], [36], [37]) -> ([32], [33]);
enum_match<core::option::Option::<core::integer::u128>>([33]) { 54([38]) 57([39]) };
branch_align() -> ();
store_temp<u128>([38]) -> ([40]);
jump() { 63() };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 1>([39]) -> ([41]);
store_temp<RangeCheck>([32]) -> ([42]);
store_temp<core::option::Option::<core::integer::u128>>([41]) -> ([41]);
rename<core::option::Option::<core::integer::u128>>([41]) -> ([43]);
return([42], [43]);
enum_init<core::option::Option::<core::integer::u128>, 0>([40]) -> ([44]);
store_temp<RangeCheck>([32]) -> ([45]);
store_temp<core::option::Option::<core::integer::u128>>([44]) -> ([44]);
rename<core::option::Option::<core::integer::u128>>([44]) -> ([46]);
rename<RangeCheck>([45]) -> ([7]);
rename<core::option::Option::<core::integer::u128>>([46]) -> ([8]);
rename<RangeCheck>([7]) -> ([47]);
rename<core::option::Option::<core::integer::u128>>([8]) -> ([48]);
return([47], [48]);
u128_overflow_add([0], [1], [2]) { fallthrough([3], [4]) 80([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 88() };
drop<u128>([6]) -> ();
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::u128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::u128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([13]);
return([12], [13]);
u128_overflow_sub([0], [1], [2]) { fallthrough([3], [4]) 99([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 107() };
drop<u128>([6]) -> ();
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::u128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::u128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([13]);
return([12], [13]);

fib_u128_checked::fib_u128_checked::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::integer::u128_checked_add@72([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::integer::u128_checked_sub@91([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
