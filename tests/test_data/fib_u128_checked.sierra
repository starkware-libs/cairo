type u128 = u128;
type felt = felt;
type NonZero<felt> = NonZero<felt>;
type Unit = Struct<ut@Tuple>;
type core::option::Option::<core::integer::u128> = Enum<ut@core::option::Option::<core::integer::u128>, u128, Unit>;
type RangeCheck = RangeCheck;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<u128> = dup<u128>;
libfunc u128_to_felt = u128_to_felt;
libfunc felt_is_zero = felt_is_zero;
libfunc branch_align = branch_align;
libfunc drop<u128> = drop<u128>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 0> = enum_init<core::option::Option::<core::integer::u128>, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<core::option::Option::<core::integer::u128>> = store_temp<core::option::Option::<core::integer::u128>>;
libfunc rename<core::option::Option::<core::integer::u128>> = rename<core::option::Option::<core::integer::u128>>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::integer::u128_checked_add> = function_call<user@core::integer::u128_checked_add>;
libfunc enum_match<core::option::Option::<core::integer::u128>> = enum_match<core::option::Option::<core::integer::u128>>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 1> = enum_init<core::option::Option::<core::integer::u128>, 1>;
libfunc u128_const<1> = u128_const<1>;
libfunc rename<u128> = rename<u128>;
libfunc function_call<user@core::integer::u128_checked_sub> = function_call<user@core::integer::u128_checked_sub>;
libfunc function_call<user@fib_u128_checked::fib_u128_checked::fib> = function_call<user@fib_u128_checked::fib_u128_checked::fib>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc u128_overflowing_sub = u128_overflowing_sub;

revoke_ap_tracking() -> ();
dup<u128>([3]) -> ([3], [5]);
u128_to_felt([5]) -> ([4]);
felt_is_zero([4]) { fallthrough() 12([6]) };
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([1]) -> ([7]);
store_temp<RangeCheck>([0]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 68() };
branch_align() -> ();
drop<NonZero<felt>>([6]) -> ();
store_temp<RangeCheck>([0]) -> ([12]);
store_temp<u128>([1]) -> ([13]);
dup<u128>([2]) -> ([2], [14]);
store_temp<u128>([14]) -> ([15]);
function_call<user@core::integer::u128_checked_add>([12], [13], [15]) -> ([10], [11]);
enum_match<core::option::Option::<core::integer::u128>>([11]) { 20([16]) 23([17]) };
branch_align() -> ();
store_temp<u128>([16]) -> ([18]);
jump() { 31() };
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
enum_init<core::option::Option::<core::integer::u128>, 1>([17]) -> ([19]);
store_temp<RangeCheck>([10]) -> ([20]);
store_temp<core::option::Option::<core::integer::u128>>([19]) -> ([19]);
rename<core::option::Option::<core::integer::u128>>([19]) -> ([21]);
return([20], [21]);
u128_const<1>() -> ([22]);
store_temp<RangeCheck>([10]) -> ([25]);
store_temp<u128>([3]) -> ([26]);
store_temp<u128>([22]) -> ([22]);
rename<u128>([22]) -> ([27]);
function_call<user@core::integer::u128_checked_sub>([25], [26], [27]) -> ([23], [24]);
enum_match<core::option::Option::<core::integer::u128>>([24]) { 38([28]) 41([29]) };
branch_align() -> ();
store_temp<u128>([28]) -> ([30]);
jump() { 49() };
branch_align() -> ();
drop<u128>([18]) -> ();
drop<u128>([2]) -> ();
enum_init<core::option::Option::<core::integer::u128>, 1>([29]) -> ([31]);
store_temp<RangeCheck>([23]) -> ([32]);
store_temp<core::option::Option::<core::integer::u128>>([31]) -> ([31]);
rename<core::option::Option::<core::integer::u128>>([31]) -> ([33]);
return([32], [33]);
store_temp<RangeCheck>([23]) -> ([36]);
store_temp<u128>([2]) -> ([37]);
store_temp<u128>([18]) -> ([38]);
store_temp<u128>([30]) -> ([39]);
function_call<user@fib_u128_checked::fib_u128_checked::fib>([36], [37], [38], [39]) -> ([34], [35]);
enum_match<core::option::Option::<core::integer::u128>>([35]) { 55([40]) 58([41]) };
branch_align() -> ();
store_temp<u128>([40]) -> ([42]);
jump() { 64() };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 1>([41]) -> ([43]);
store_temp<RangeCheck>([34]) -> ([44]);
store_temp<core::option::Option::<core::integer::u128>>([43]) -> ([43]);
rename<core::option::Option::<core::integer::u128>>([43]) -> ([45]);
return([44], [45]);
enum_init<core::option::Option::<core::integer::u128>, 0>([42]) -> ([46]);
store_temp<RangeCheck>([34]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([46]) -> ([46]);
rename<core::option::Option::<core::integer::u128>>([46]) -> ([9]);
rename<RangeCheck>([8]) -> ([47]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([48]);
return([47], [48]);
u128_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 79([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 87() };
branch_align() -> ();
drop<u128>([6]) -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::u128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::u128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([13]);
return([12], [13]);
u128_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 98([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 106() };
branch_align() -> ();
drop<u128>([6]) -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::u128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::u128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([13]);
return([12], [13]);

fib_u128_checked::fib_u128_checked::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::integer::u128_checked_add@71([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::integer::u128_checked_sub@90([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
