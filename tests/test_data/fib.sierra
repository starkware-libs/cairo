type [0] = felt;
type [1] = NonZero<[0]>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<[0]> = dup<[0]>;
libfunc felt_jump_nz = felt_jump_nz;
libfunc drop<[0]> = drop<[0]>;
libfunc store_temp<[0]> = store_temp<[0]>;
libfunc jump = jump;
libfunc drop<[1]> = drop<[1]>;
libfunc felt_add = felt_add;
libfunc felt_const<1> = felt_const<1>;
libfunc felt_sub = felt_sub;
libfunc rename<[0]> = rename<[0]>;
libfunc function_call<user@[0]> = function_call<user@[0]>;

revoke_ap_tracking() -> ();
dup<[0]>([2]) -> ([2], [13]);
felt_jump_nz([13]) { 7([3]) fallthrough() };
drop<[0]>([1]) -> ();
drop<[0]>([2]) -> ();
store_temp<[0]>([0]) -> ([4]);
jump() { 19() };
drop<[1]>([3]) -> ();
dup<[0]>([1]) -> ([1], [14]);
felt_add([0], [14]) -> ([5]);
felt_const<1>() -> ([6]);
felt_sub([2], [6]) -> ([7]);
store_temp<[0]>([1]) -> ([8]);
store_temp<[0]>([5]) -> ([5]);
rename<[0]>([5]) -> ([9]);
store_temp<[0]>([7]) -> ([7]);
rename<[0]>([7]) -> ([10]);
function_call<user@[0]>([8], [9], [10]) -> ([11]);
rename<[0]>([11]) -> ([4]);
rename<[0]>([4]) -> ([12]);
return([12]);

[0]@0([0]: [0], [1]: [0], [2]: [0]) -> ([0]);
