type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type Uninitialized<felt252> = Uninitialized<felt252> [storable: false, drop: true, dup: false, zero_sized: false];
type Const<felt252, 5> = Const<felt252, 5> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 4> = Const<felt252, 4> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 3> = Const<felt252, 3> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 2> = Const<felt252, 2> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 1> = Const<felt252, 1> [storable: false, drop: false, dup: false, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc alloc_local<felt252> = alloc_local<felt252>;
libfunc finalize_locals = finalize_locals;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc branch_align = branch_align;
libfunc drop<felt252> = drop<felt252>;
libfunc drop<Uninitialized<felt252>> = drop<Uninitialized<felt252>>;
libfunc const_as_immediate<Const<felt252, 1>> = const_as_immediate<Const<felt252, 1>>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_sub = felt252_sub;
libfunc const_as_immediate<Const<felt252, 2>> = const_as_immediate<Const<felt252, 2>>;
libfunc const_as_immediate<Const<felt252, 3>> = const_as_immediate<Const<felt252, 3>>;
libfunc const_as_immediate<Const<felt252, 4>> = const_as_immediate<Const<felt252, 4>>;
libfunc const_as_immediate<Const<felt252, 5>> = const_as_immediate<Const<felt252, 5>>;
libfunc function_call<user@examples::fib_match::fib> = function_call<user@examples::fib_match::fib>;
libfunc store_local<felt252> = store_local<felt252>;
libfunc felt252_mul = felt252_mul;
libfunc felt252_add = felt252_add;

F0:
alloc_local<felt252>() -> ([2]);
finalize_locals() -> ();
disable_ap_tracking() -> ();
dup<felt252>([0]) -> ([0], [3]);
felt252_is_zero([3]) { fallthrough() F0_B0([4]) };
branch_align() -> ();
drop<felt252>([0]) -> ();
drop<Uninitialized<felt252>>([2]) -> ();
const_as_immediate<Const<felt252, 1>>() -> ([5]);
store_temp<felt252>([5]) -> ([5]);
return([5]);
F0_B0:
branch_align() -> ();
drop<NonZero<felt252>>([4]) -> ();
const_as_immediate<Const<felt252, 1>>() -> ([6]);
dup<felt252>([0]) -> ([0], [7]);
felt252_sub([7], [6]) -> ([8]);
store_temp<felt252>([8]) -> ([8]);
felt252_is_zero([8]) { fallthrough() F0_B1([9]) };
branch_align() -> ();
drop<felt252>([0]) -> ();
drop<Uninitialized<felt252>>([2]) -> ();
const_as_immediate<Const<felt252, 1>>() -> ([10]);
store_temp<felt252>([10]) -> ([10]);
return([10]);
F0_B1:
branch_align() -> ();
drop<NonZero<felt252>>([9]) -> ();
const_as_immediate<Const<felt252, 2>>() -> ([11]);
dup<felt252>([0]) -> ([0], [12]);
felt252_sub([12], [11]) -> ([13]);
store_temp<felt252>([13]) -> ([13]);
felt252_is_zero([13]) { fallthrough() F0_B2([14]) };
branch_align() -> ();
drop<felt252>([0]) -> ();
drop<Uninitialized<felt252>>([2]) -> ();
const_as_immediate<Const<felt252, 2>>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
return([15]);
F0_B2:
branch_align() -> ();
drop<NonZero<felt252>>([14]) -> ();
const_as_immediate<Const<felt252, 3>>() -> ([16]);
dup<felt252>([0]) -> ([0], [17]);
felt252_sub([17], [16]) -> ([18]);
store_temp<felt252>([18]) -> ([18]);
felt252_is_zero([18]) { fallthrough() F0_B3([19]) };
branch_align() -> ();
drop<felt252>([0]) -> ();
drop<Uninitialized<felt252>>([2]) -> ();
const_as_immediate<Const<felt252, 3>>() -> ([20]);
store_temp<felt252>([20]) -> ([20]);
return([20]);
F0_B3:
branch_align() -> ();
drop<NonZero<felt252>>([19]) -> ();
const_as_immediate<Const<felt252, 4>>() -> ([21]);
dup<felt252>([0]) -> ([0], [22]);
felt252_sub([22], [21]) -> ([23]);
store_temp<felt252>([23]) -> ([23]);
felt252_is_zero([23]) { fallthrough() F0_B4([24]) };
branch_align() -> ();
drop<felt252>([0]) -> ();
drop<Uninitialized<felt252>>([2]) -> ();
const_as_immediate<Const<felt252, 5>>() -> ([25]);
store_temp<felt252>([25]) -> ([25]);
return([25]);
F0_B4:
branch_align() -> ();
drop<NonZero<felt252>>([24]) -> ();
const_as_immediate<Const<felt252, 4>>() -> ([26]);
dup<felt252>([0]) -> ([0], [27]);
felt252_sub([27], [26]) -> ([28]);
store_temp<felt252>([28]) -> ([28]);
function_call<user@examples::fib_match::fib>([28]) -> ([1]);
const_as_immediate<Const<felt252, 5>>() -> ([29]);
felt252_sub([0], [29]) -> ([30]);
store_temp<felt252>([30]) -> ([30]);
store_local<felt252>([2], [1]) -> ([1]);
function_call<user@examples::fib_match::fib>([30]) -> ([31]);
const_as_immediate<Const<felt252, 5>>() -> ([32]);
store_temp<felt252>([32]) -> ([32]);
felt252_mul([32], [1]) -> ([33]);
const_as_immediate<Const<felt252, 3>>() -> ([34]);
store_temp<felt252>([34]) -> ([34]);
felt252_mul([34], [31]) -> ([35]);
store_temp<felt252>([33]) -> ([33]);
store_temp<felt252>([35]) -> ([35]);
felt252_add([33], [35]) -> ([36]);
store_temp<felt252>([36]) -> ([36]);
return([36]);

examples::fib_match::fib@F0([0]: felt252) -> (felt252);
