type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type Uninitialized<felt252> = Uninitialized<felt252> [storable: false, drop: true, dup: false, zero_sized: false];
type Const<felt252, 5> = Const<felt252, 5> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 4> = Const<felt252, 4> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 3> = Const<felt252, 3> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 2> = Const<felt252, 2> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 1> = Const<felt252, 1> [storable: false, drop: false, dup: false, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc alloc_local<felt252> = alloc_local<felt252>;
libfunc finalize_locals = finalize_locals;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc branch_align = branch_align;
libfunc drop<felt252> = drop<felt252>;
libfunc drop<Uninitialized<felt252>> = drop<Uninitialized<felt252>>;
libfunc jump = jump;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc const_as_immediate<Const<felt252, 1>> = const_as_immediate<Const<felt252, 1>>;
libfunc felt252_sub = felt252_sub;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc const_as_immediate<Const<felt252, 2>> = const_as_immediate<Const<felt252, 2>>;
libfunc const_as_immediate<Const<felt252, 3>> = const_as_immediate<Const<felt252, 3>>;
libfunc const_as_immediate<Const<felt252, 4>> = const_as_immediate<Const<felt252, 4>>;
libfunc const_as_immediate<Const<felt252, 5>> = const_as_immediate<Const<felt252, 5>>;
libfunc function_call<user@examples::fib_match::fib> = function_call<user@examples::fib_match::fib>;
libfunc store_local<felt252> = store_local<felt252>;
libfunc felt252_mul = felt252_mul;
libfunc felt252_add = felt252_add;

F0:
alloc_local<felt252>() -> ([2]);
finalize_locals() -> ();
disable_ap_tracking() -> ();
dup<felt252>([0]) -> ([0], [3]);
felt252_is_zero([3]) { fallthrough() F0_B0([4]) };
branch_align() -> ();
drop<felt252>([0]) -> ();
drop<Uninitialized<felt252>>([2]) -> ();
jump() { F0_B1() };
F0_B0:
branch_align() -> ();
drop<NonZero<felt252>>([4]) -> ();
const_as_immediate<Const<felt252, 1>>() -> ([5]);
dup<felt252>([0]) -> ([0], [6]);
felt252_sub([6], [5]) -> ([7]);
store_temp<felt252>([7]) -> ([7]);
felt252_is_zero([7]) { fallthrough() F0_B2([8]) };
branch_align() -> ();
drop<felt252>([0]) -> ();
drop<Uninitialized<felt252>>([2]) -> ();
F0_B1:
const_as_immediate<Const<felt252, 1>>() -> ([9]);
store_temp<felt252>([9]) -> ([9]);
return([9]);
F0_B2:
branch_align() -> ();
drop<NonZero<felt252>>([8]) -> ();
const_as_immediate<Const<felt252, 2>>() -> ([10]);
dup<felt252>([0]) -> ([0], [11]);
felt252_sub([11], [10]) -> ([12]);
store_temp<felt252>([12]) -> ([12]);
felt252_is_zero([12]) { fallthrough() F0_B3([13]) };
branch_align() -> ();
drop<felt252>([0]) -> ();
drop<Uninitialized<felt252>>([2]) -> ();
const_as_immediate<Const<felt252, 2>>() -> ([14]);
store_temp<felt252>([14]) -> ([14]);
return([14]);
F0_B3:
branch_align() -> ();
drop<NonZero<felt252>>([13]) -> ();
const_as_immediate<Const<felt252, 3>>() -> ([15]);
dup<felt252>([0]) -> ([0], [16]);
felt252_sub([16], [15]) -> ([17]);
store_temp<felt252>([17]) -> ([17]);
felt252_is_zero([17]) { fallthrough() F0_B4([18]) };
branch_align() -> ();
drop<felt252>([0]) -> ();
drop<Uninitialized<felt252>>([2]) -> ();
const_as_immediate<Const<felt252, 3>>() -> ([19]);
store_temp<felt252>([19]) -> ([19]);
return([19]);
F0_B4:
branch_align() -> ();
drop<NonZero<felt252>>([18]) -> ();
const_as_immediate<Const<felt252, 4>>() -> ([20]);
dup<felt252>([0]) -> ([0], [21]);
felt252_sub([21], [20]) -> ([22]);
store_temp<felt252>([22]) -> ([22]);
felt252_is_zero([22]) { fallthrough() F0_B5([23]) };
branch_align() -> ();
drop<felt252>([0]) -> ();
drop<Uninitialized<felt252>>([2]) -> ();
const_as_immediate<Const<felt252, 5>>() -> ([24]);
store_temp<felt252>([24]) -> ([24]);
return([24]);
F0_B5:
branch_align() -> ();
drop<NonZero<felt252>>([23]) -> ();
const_as_immediate<Const<felt252, 4>>() -> ([25]);
dup<felt252>([0]) -> ([0], [26]);
felt252_sub([26], [25]) -> ([27]);
store_temp<felt252>([27]) -> ([27]);
function_call<user@examples::fib_match::fib>([27]) -> ([1]);
const_as_immediate<Const<felt252, 5>>() -> ([28]);
felt252_sub([0], [28]) -> ([29]);
store_temp<felt252>([29]) -> ([29]);
store_local<felt252>([2], [1]) -> ([1]);
function_call<user@examples::fib_match::fib>([29]) -> ([30]);
const_as_immediate<Const<felt252, 5>>() -> ([31]);
store_temp<felt252>([31]) -> ([31]);
felt252_mul([31], [1]) -> ([32]);
const_as_immediate<Const<felt252, 3>>() -> ([33]);
store_temp<felt252>([33]) -> ([33]);
felt252_mul([33], [30]) -> ([34]);
store_temp<felt252>([32]) -> ([32]);
store_temp<felt252>([34]) -> ([34]);
felt252_add([32], [34]) -> ([35]);
store_temp<felt252>([35]) -> ([35]);
return([35]);

examples::fib_match::fib@F0([0]: felt252) -> (felt252);
