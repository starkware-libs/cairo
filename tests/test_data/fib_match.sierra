type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type Uninitialized<felt252> = Uninitialized<felt252> [storable: false, drop: true, dup: false, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc alloc_local<felt252> = alloc_local<felt252>;
libfunc finalize_locals = finalize_locals;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc branch_align = branch_align;
libfunc drop<felt252> = drop<felt252>;
libfunc drop<Uninitialized<felt252>> = drop<Uninitialized<felt252>>;
libfunc felt252_const<1> = felt252_const<1>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_sub = felt252_sub;
libfunc felt252_const<2> = felt252_const<2>;
libfunc felt252_const<3> = felt252_const<3>;
libfunc felt252_const<4> = felt252_const<4>;
libfunc felt252_const<5> = felt252_const<5>;
libfunc function_call<user@examples::fib_match::fib> = function_call<user@examples::fib_match::fib>;
libfunc store_local<felt252> = store_local<felt252>;
libfunc felt252_mul = felt252_mul;
libfunc felt252_add = felt252_add;

alloc_local<felt252>() -> ([2]); // 0
finalize_locals() -> (); // 1
disable_ap_tracking() -> (); // 2
dup<felt252>([0]) -> ([0], [3]); // 3
felt252_is_zero([3]) { fallthrough() 11([4]) }; // 4
branch_align() -> (); // 5
drop<felt252>([0]) -> (); // 6
drop<Uninitialized<felt252>>([2]) -> (); // 7
felt252_const<1>() -> ([5]); // 8
store_temp<felt252>([5]) -> ([5]); // 9
return([5]); // 10
branch_align() -> (); // 11
drop<NonZero<felt252>>([4]) -> (); // 12
felt252_const<1>() -> ([6]); // 13
dup<felt252>([0]) -> ([0], [7]); // 14
store_temp<felt252>([6]) -> ([6]); // 15
felt252_sub([6], [7]) -> ([8]); // 16
store_temp<felt252>([8]) -> ([8]); // 17
felt252_is_zero([8]) { fallthrough() 25([9]) }; // 18
branch_align() -> (); // 19
drop<felt252>([0]) -> (); // 20
drop<Uninitialized<felt252>>([2]) -> (); // 21
felt252_const<1>() -> ([10]); // 22
store_temp<felt252>([10]) -> ([10]); // 23
return([10]); // 24
branch_align() -> (); // 25
drop<NonZero<felt252>>([9]) -> (); // 26
felt252_const<2>() -> ([11]); // 27
dup<felt252>([0]) -> ([0], [12]); // 28
store_temp<felt252>([11]) -> ([11]); // 29
felt252_sub([11], [12]) -> ([13]); // 30
store_temp<felt252>([13]) -> ([13]); // 31
felt252_is_zero([13]) { fallthrough() 39([14]) }; // 32
branch_align() -> (); // 33
drop<felt252>([0]) -> (); // 34
drop<Uninitialized<felt252>>([2]) -> (); // 35
felt252_const<2>() -> ([15]); // 36
store_temp<felt252>([15]) -> ([15]); // 37
return([15]); // 38
branch_align() -> (); // 39
drop<NonZero<felt252>>([14]) -> (); // 40
felt252_const<3>() -> ([16]); // 41
dup<felt252>([0]) -> ([0], [17]); // 42
store_temp<felt252>([16]) -> ([16]); // 43
felt252_sub([16], [17]) -> ([18]); // 44
store_temp<felt252>([18]) -> ([18]); // 45
felt252_is_zero([18]) { fallthrough() 53([19]) }; // 46
branch_align() -> (); // 47
drop<felt252>([0]) -> (); // 48
drop<Uninitialized<felt252>>([2]) -> (); // 49
felt252_const<3>() -> ([20]); // 50
store_temp<felt252>([20]) -> ([20]); // 51
return([20]); // 52
branch_align() -> (); // 53
drop<NonZero<felt252>>([19]) -> (); // 54
felt252_const<4>() -> ([21]); // 55
dup<felt252>([0]) -> ([0], [22]); // 56
store_temp<felt252>([21]) -> ([21]); // 57
felt252_sub([21], [22]) -> ([23]); // 58
store_temp<felt252>([23]) -> ([23]); // 59
felt252_is_zero([23]) { fallthrough() 67([24]) }; // 60
branch_align() -> (); // 61
drop<felt252>([0]) -> (); // 62
drop<Uninitialized<felt252>>([2]) -> (); // 63
felt252_const<5>() -> ([25]); // 64
store_temp<felt252>([25]) -> ([25]); // 65
return([25]); // 66
branch_align() -> (); // 67
drop<NonZero<felt252>>([24]) -> (); // 68
felt252_const<4>() -> ([26]); // 69
dup<felt252>([0]) -> ([0], [27]); // 70
felt252_sub([27], [26]) -> ([28]); // 71
store_temp<felt252>([28]) -> ([28]); // 72
function_call<user@examples::fib_match::fib>([28]) -> ([1]); // 73
felt252_const<5>() -> ([29]); // 74
felt252_sub([0], [29]) -> ([30]); // 75
store_temp<felt252>([30]) -> ([30]); // 76
store_local<felt252>([2], [1]) -> ([1]); // 77
function_call<user@examples::fib_match::fib>([30]) -> ([31]); // 78
felt252_const<5>() -> ([32]); // 79
store_temp<felt252>([32]) -> ([32]); // 80
felt252_mul([32], [1]) -> ([33]); // 81
felt252_const<3>() -> ([34]); // 82
store_temp<felt252>([34]) -> ([34]); // 83
felt252_mul([34], [31]) -> ([35]); // 84
store_temp<felt252>([33]) -> ([33]); // 85
store_temp<felt252>([35]) -> ([35]); // 86
felt252_add([33], [35]) -> ([36]); // 87
store_temp<felt252>([36]) -> ([36]); // 88
return([36]); // 89

examples::fib_match::fib@0([0]: felt252) -> (felt252);
