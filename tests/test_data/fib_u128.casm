[fp + -3] = [ap + 0] + 0, ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 6;
[ap + 0] = 0, ap++;
jmp rel 4;
[ap + 0] = 1, ap++;
jmp rel 53 if [ap + -1] != 0;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
call rel 57;
jmp rel 4 if [ap + -3] != 0;
jmp rel 8;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
ret;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 1, ap++;
call rel 85;
jmp rel 4 if [ap + -3] != 0;
jmp rel 8;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
ret;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [ap + -26], ap++;
[ap + 0] = [ap + -5], ap++;
call rel -49;
jmp rel 4 if [ap + -3] != 0;
jmp rel 8;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
ret;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -3], ap++;
jmp rel 4;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 1] = [fp + -4] + [fp + -3], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 340282366920938463463374607431768211456 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + -1] = [ap + 0] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -5] + 0];
jmp rel 12;
[ap + -1] = [[fp + -5] + 0];
ap += 1;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 7;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 39878429859757942499084499860145094553463, ap++;
call rel 63;
jmp rel 4 if [ap + -3] != 0;
jmp rel 8;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
ret;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = 0, ap++;
ret;
[fp + -4] = [ap + 1] + [fp + -3], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 340282366920938463463374607431768211456 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -5] + 0];
jmp rel 12;
[ap + -1] = [[fp + -5] + 0];
ap += 1;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 7;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 39878429859763533771555484554338820190071, ap++;
call rel 19;
jmp rel 4 if [ap + -3] != 0;
jmp rel 8;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
ret;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = 0, ap++;
ret;
jmp rel 10 if [fp + -5] != 0;
ap += 1;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = 0, ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[fp + -3] = [[ap + -1] + 0];
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [ap + -3] + 1, ap++;
ret;
