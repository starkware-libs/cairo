type felt = felt;
type NonZero<felt> = NonZero<felt>;
type Array<felt> = Array<felt>;
type core::PanicResult::<core::felt> = Enum<ut@core::PanicResult::<core::felt>, felt, Array<felt>>;
type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type Pedersen = Pedersen;
type BuiltinCosts = BuiltinCosts;
type Unit = Struct<ut@Tuple>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<felt> = dup<felt>;
libfunc felt_jump_nz = felt_jump_nz;
libfunc branch_align = branch_align;
libfunc drop<felt> = drop<felt>;
libfunc felt_const<0> = felt_const<0>;
libfunc enum_init<core::PanicResult::<core::felt>, 0> = enum_init<core::PanicResult::<core::felt>, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<Pedersen> = store_temp<Pedersen>;
libfunc store_temp<core::PanicResult::<core::felt>> = store_temp<core::PanicResult::<core::felt>>;
libfunc rename<core::PanicResult::<core::felt>> = rename<core::PanicResult::<core::felt>>;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc get_gas_all = get_gas_all;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc drop<Unit> = drop<Unit>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc jump = jump;
libfunc array_new<felt> = array_new<felt>;
libfunc felt_const<375233589013918064796019> = felt_const<375233589013918064796019>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc enum_init<core::PanicResult::<core::felt>, 1> = enum_init<core::PanicResult::<core::felt>, 1>;
libfunc felt_const<1> = felt_const<1>;
libfunc felt_sub = felt_sub;
libfunc rename<felt> = rename<felt>;
libfunc function_call<user@hash_chain_gas::hash_chain_gas::hash_chain> = function_call<user@hash_chain_gas::hash_chain_gas::hash_chain>;
libfunc enum_match<core::PanicResult::<core::felt>> = enum_match<core::PanicResult::<core::felt>>;
libfunc pedersen = pedersen;
libfunc rename<Pedersen> = rename<Pedersen>;

revoke_ap_tracking() -> ();
dup<felt>([3]) -> ([3], [4]);
felt_jump_nz([4]) { fallthrough() 13([5]) };
branch_align() -> ();
drop<felt>([3]) -> ();
felt_const<0>() -> ([6]);
enum_init<core::PanicResult::<core::felt>, 0>([6]) -> ([7]);
store_temp<RangeCheck>([0]) -> ([8]);
store_temp<GasBuiltin>([1]) -> ([9]);
store_temp<Pedersen>([2]) -> ([10]);
store_temp<core::PanicResult::<core::felt>>([7]) -> ([7]);
rename<core::PanicResult::<core::felt>>([7]) -> ([11]);
return([8], [9], [10], [11]);
branch_align() -> ();
drop<NonZero<felt>>([5]) -> ();
get_builtin_costs() -> ([12]);
store_temp<BuiltinCosts>([12]) -> ([12]);
get_gas_all([0], [1], [12]) { fallthrough([13], [14]) 25([15], [16]) };
branch_align() -> ();
struct_construct<Unit>() -> ([17]);
drop<Unit>([17]) -> ();
store_temp<RangeCheck>([13]) -> ([13]);
rename<RangeCheck>([13]) -> ([18]);
store_temp<GasBuiltin>([14]) -> ([19]);
jump() { 41() };
branch_align() -> ();
drop<felt>([3]) -> ();
struct_construct<Unit>() -> ([20]);
drop<Unit>([20]) -> ();
array_new<felt>() -> ([21]);
felt_const<375233589013918064796019>() -> ([22]);
store_temp<felt>([22]) -> ([22]);
array_append<felt>([21], [22]) -> ([23]);
enum_init<core::PanicResult::<core::felt>, 1>([23]) -> ([24]);
store_temp<RangeCheck>([15]) -> ([15]);
rename<RangeCheck>([15]) -> ([25]);
store_temp<GasBuiltin>([16]) -> ([26]);
store_temp<Pedersen>([2]) -> ([27]);
store_temp<core::PanicResult::<core::felt>>([24]) -> ([24]);
rename<core::PanicResult::<core::felt>>([24]) -> ([28]);
return([25], [26], [27], [28]);
felt_const<1>() -> ([29]);
dup<felt>([3]) -> ([3], [31]);
felt_sub([31], [29]) -> ([30]);
store_temp<felt>([30]) -> ([30]);
rename<felt>([30]) -> ([32]);
store_temp<RangeCheck>([18]) -> ([37]);
store_temp<GasBuiltin>([19]) -> ([38]);
store_temp<Pedersen>([2]) -> ([39]);
store_temp<felt>([32]) -> ([40]);
function_call<user@hash_chain_gas::hash_chain_gas::hash_chain>([37], [38], [39], [40]) -> ([33], [34], [35], [36]);
enum_match<core::PanicResult::<core::felt>>([36]) { 52([41]) 55([42]) };
branch_align() -> ();
store_temp<felt>([41]) -> ([43]);
jump() { 64() };
branch_align() -> ();
drop<felt>([3]) -> ();
enum_init<core::PanicResult::<core::felt>, 1>([42]) -> ([44]);
store_temp<RangeCheck>([33]) -> ([45]);
store_temp<GasBuiltin>([34]) -> ([46]);
store_temp<Pedersen>([35]) -> ([47]);
store_temp<core::PanicResult::<core::felt>>([44]) -> ([44]);
rename<core::PanicResult::<core::felt>>([44]) -> ([48]);
return([45], [46], [47], [48]);
pedersen([35], [43], [3]) -> ([49], [50]);
enum_init<core::PanicResult::<core::felt>, 0>([50]) -> ([51]);
store_temp<RangeCheck>([33]) -> ([52]);
store_temp<GasBuiltin>([34]) -> ([53]);
store_temp<Pedersen>([49]) -> ([49]);
rename<Pedersen>([49]) -> ([54]);
store_temp<core::PanicResult::<core::felt>>([51]) -> ([51]);
rename<core::PanicResult::<core::felt>>([51]) -> ([55]);
return([52], [53], [54], [55]);

hash_chain_gas::hash_chain_gas::hash_chain@0([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: felt) -> (RangeCheck, GasBuiltin, Pedersen, core::PanicResult::<core::felt>);
