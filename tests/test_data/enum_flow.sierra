type felt = felt;
type Enum<ut@MyEnumShort, felt, felt> = Enum<ut@MyEnumShort, felt, felt>;
type Enum<ut@MyEnumLong, felt, felt, felt> = Enum<ut@MyEnumLong, felt, felt, felt>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc felt_const<10> = felt_const<10>;
libfunc enum_init<Enum<ut@MyEnumShort, felt, felt>, 0> = enum_init<Enum<ut@MyEnumShort, felt, felt>, 0>;
libfunc felt_const<11> = felt_const<11>;
libfunc enum_init<Enum<ut@MyEnumShort, felt, felt>, 1> = enum_init<Enum<ut@MyEnumShort, felt, felt>, 1>;
libfunc store_temp<Enum<ut@MyEnumShort, felt, felt>> = store_temp<Enum<ut@MyEnumShort, felt, felt>>;
libfunc rename<Enum<ut@MyEnumShort, felt, felt>> = rename<Enum<ut@MyEnumShort, felt, felt>>;
libfunc function_call<user@test_crate::match_short> = function_call<user@test_crate::match_short>;
libfunc drop<felt> = drop<felt>;
libfunc felt_const<20> = felt_const<20>;
libfunc enum_init<Enum<ut@MyEnumLong, felt, felt, felt>, 0> = enum_init<Enum<ut@MyEnumLong, felt, felt, felt>, 0>;
libfunc felt_const<21> = felt_const<21>;
libfunc enum_init<Enum<ut@MyEnumLong, felt, felt, felt>, 1> = enum_init<Enum<ut@MyEnumLong, felt, felt, felt>, 1>;
libfunc felt_const<22> = felt_const<22>;
libfunc enum_init<Enum<ut@MyEnumLong, felt, felt, felt>, 2> = enum_init<Enum<ut@MyEnumLong, felt, felt, felt>, 2>;
libfunc store_temp<Enum<ut@MyEnumLong, felt, felt, felt>> = store_temp<Enum<ut@MyEnumLong, felt, felt, felt>>;
libfunc rename<Enum<ut@MyEnumLong, felt, felt, felt>> = rename<Enum<ut@MyEnumLong, felt, felt, felt>>;
libfunc function_call<user@test_crate::match_long> = function_call<user@test_crate::match_long>;
libfunc felt_const<300> = felt_const<300>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc burn_gas = burn_gas;
libfunc enum_match<Enum<ut@MyEnumShort, felt, felt>> = enum_match<Enum<ut@MyEnumShort, felt, felt>>;
libfunc rename<felt> = rename<felt>;
libfunc jump = jump;
libfunc enum_match<Enum<ut@MyEnumLong, felt, felt, felt>> = enum_match<Enum<ut@MyEnumLong, felt, felt, felt>>;

revoke_ap_tracking() -> ();
felt_const<10>() -> ([0]);
enum_init<Enum<ut@MyEnumShort, felt, felt>, 0>([0]) -> ([1]);
felt_const<11>() -> ([2]);
enum_init<Enum<ut@MyEnumShort, felt, felt>, 1>([2]) -> ([3]);
store_temp<Enum<ut@MyEnumShort, felt, felt>>([1]) -> ([1]);
rename<Enum<ut@MyEnumShort, felt, felt>>([1]) -> ([5]);
function_call<user@test_crate::match_short>([5]) -> ([4]);
drop<felt>([4]) -> ();
store_temp<Enum<ut@MyEnumShort, felt, felt>>([3]) -> ([3]);
rename<Enum<ut@MyEnumShort, felt, felt>>([3]) -> ([7]);
function_call<user@test_crate::match_short>([7]) -> ([6]);
drop<felt>([6]) -> ();
felt_const<20>() -> ([8]);
enum_init<Enum<ut@MyEnumLong, felt, felt, felt>, 0>([8]) -> ([9]);
felt_const<21>() -> ([10]);
enum_init<Enum<ut@MyEnumLong, felt, felt, felt>, 1>([10]) -> ([11]);
felt_const<22>() -> ([12]);
enum_init<Enum<ut@MyEnumLong, felt, felt, felt>, 2>([12]) -> ([13]);
store_temp<Enum<ut@MyEnumLong, felt, felt, felt>>([9]) -> ([9]);
rename<Enum<ut@MyEnumLong, felt, felt, felt>>([9]) -> ([15]);
function_call<user@test_crate::match_long>([15]) -> ([14]);
drop<felt>([14]) -> ();
store_temp<Enum<ut@MyEnumLong, felt, felt, felt>>([11]) -> ([11]);
rename<Enum<ut@MyEnumLong, felt, felt, felt>>([11]) -> ([17]);
function_call<user@test_crate::match_long>([17]) -> ([16]);
drop<felt>([16]) -> ();
store_temp<Enum<ut@MyEnumLong, felt, felt, felt>>([13]) -> ([13]);
rename<Enum<ut@MyEnumLong, felt, felt, felt>>([13]) -> ([19]);
function_call<user@test_crate::match_long>([19]) -> ([18]);
drop<felt>([18]) -> ();
felt_const<300>() -> ([20]);
store_temp<felt>([20]) -> ([21]);
burn_gas() -> ();
return([21]);
revoke_ap_tracking() -> ();
enum_match<Enum<ut@MyEnumShort, felt, felt>>([0]) { 37([1]) 41([2]) };
store_temp<felt>([1]) -> ([3]);
rename<felt>([3]) -> ([4]);
burn_gas() -> ();
jump() { 44() };
store_temp<felt>([2]) -> ([5]);
rename<felt>([5]) -> ([4]);
burn_gas() -> ();
rename<felt>([4]) -> ([6]);
burn_gas() -> ();
return([6]);
revoke_ap_tracking() -> ();
enum_match<Enum<ut@MyEnumLong, felt, felt, felt>>([0]) { 49([1]) 53([2]) 57([3]) };
store_temp<felt>([1]) -> ([4]);
rename<felt>([4]) -> ([5]);
burn_gas() -> ();
jump() { 60() };
store_temp<felt>([2]) -> ([6]);
rename<felt>([6]) -> ([5]);
burn_gas() -> ();
jump() { 60() };
store_temp<felt>([3]) -> ([7]);
rename<felt>([7]) -> ([5]);
burn_gas() -> ();
rename<felt>([5]) -> ([8]);
burn_gas() -> ();
return([8]);

test_crate::main@0() -> (felt);
test_crate::match_short@35([0]: Enum<ut@MyEnumShort, felt, felt>) -> (felt);
test_crate::match_long@47([0]: Enum<ut@MyEnumLong, felt, felt, felt>) -> (felt);
