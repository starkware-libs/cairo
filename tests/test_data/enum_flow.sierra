type felt = felt;
type enum_flow::enum_flow::MyEnumShort = Enum<ut@enum_flow::enum_flow::MyEnumShort, felt, felt>;
type enum_flow::enum_flow::MyEnumLong = Enum<ut@enum_flow::enum_flow::MyEnumLong, felt, felt, felt>;
type Unit = Struct<ut@Tuple>;
type enum_flow::enum_flow::MyEnumGeneric::<(), core::felt> = Enum<ut@enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>, felt, Unit, felt>;

libfunc felt_const<10> = felt_const<10>;
libfunc enum_init<enum_flow::enum_flow::MyEnumShort, 0> = enum_init<enum_flow::enum_flow::MyEnumShort, 0>;
libfunc store_temp<enum_flow::enum_flow::MyEnumShort> = store_temp<enum_flow::enum_flow::MyEnumShort>;
libfunc rename<enum_flow::enum_flow::MyEnumShort> = rename<enum_flow::enum_flow::MyEnumShort>;
libfunc function_call<user@enum_flow::enum_flow::match_short> = function_call<user@enum_flow::enum_flow::match_short>;
libfunc drop<felt> = drop<felt>;
libfunc felt_const<11> = felt_const<11>;
libfunc enum_init<enum_flow::enum_flow::MyEnumShort, 1> = enum_init<enum_flow::enum_flow::MyEnumShort, 1>;
libfunc felt_const<20> = felt_const<20>;
libfunc enum_init<enum_flow::enum_flow::MyEnumLong, 0> = enum_init<enum_flow::enum_flow::MyEnumLong, 0>;
libfunc store_temp<enum_flow::enum_flow::MyEnumLong> = store_temp<enum_flow::enum_flow::MyEnumLong>;
libfunc rename<enum_flow::enum_flow::MyEnumLong> = rename<enum_flow::enum_flow::MyEnumLong>;
libfunc function_call<user@enum_flow::enum_flow::match_long> = function_call<user@enum_flow::enum_flow::match_long>;
libfunc felt_const<21> = felt_const<21>;
libfunc enum_init<enum_flow::enum_flow::MyEnumLong, 1> = enum_init<enum_flow::enum_flow::MyEnumLong, 1>;
libfunc felt_const<22> = felt_const<22>;
libfunc enum_init<enum_flow::enum_flow::MyEnumLong, 2> = enum_init<enum_flow::enum_flow::MyEnumLong, 2>;
libfunc felt_const<30> = felt_const<30>;
libfunc enum_init<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>, 0> = enum_init<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>, 0>;
libfunc drop<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>> = drop<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>, 1> = enum_init<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>, 1>;
libfunc felt_const<32> = felt_const<32>;
libfunc enum_init<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>, 2> = enum_init<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>, 2>;
libfunc felt_const<300> = felt_const<300>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc enum_match<enum_flow::enum_flow::MyEnumShort> = enum_match<enum_flow::enum_flow::MyEnumShort>;
libfunc branch_align = branch_align;
libfunc rename<felt> = rename<felt>;
libfunc jump = jump;
libfunc enum_match<enum_flow::enum_flow::MyEnumLong> = enum_match<enum_flow::enum_flow::MyEnumLong>;

felt_const<10>() -> ([0]);
enum_init<enum_flow::enum_flow::MyEnumShort, 0>([0]) -> ([1]);
store_temp<enum_flow::enum_flow::MyEnumShort>([1]) -> ([1]);
rename<enum_flow::enum_flow::MyEnumShort>([1]) -> ([3]);
function_call<user@enum_flow::enum_flow::match_short>([3]) -> ([2]);
drop<felt>([2]) -> ();
felt_const<11>() -> ([4]);
enum_init<enum_flow::enum_flow::MyEnumShort, 1>([4]) -> ([5]);
store_temp<enum_flow::enum_flow::MyEnumShort>([5]) -> ([5]);
rename<enum_flow::enum_flow::MyEnumShort>([5]) -> ([7]);
function_call<user@enum_flow::enum_flow::match_short>([7]) -> ([6]);
drop<felt>([6]) -> ();
felt_const<20>() -> ([8]);
enum_init<enum_flow::enum_flow::MyEnumLong, 0>([8]) -> ([9]);
store_temp<enum_flow::enum_flow::MyEnumLong>([9]) -> ([9]);
rename<enum_flow::enum_flow::MyEnumLong>([9]) -> ([11]);
function_call<user@enum_flow::enum_flow::match_long>([11]) -> ([10]);
drop<felt>([10]) -> ();
felt_const<21>() -> ([12]);
enum_init<enum_flow::enum_flow::MyEnumLong, 1>([12]) -> ([13]);
store_temp<enum_flow::enum_flow::MyEnumLong>([13]) -> ([13]);
rename<enum_flow::enum_flow::MyEnumLong>([13]) -> ([15]);
function_call<user@enum_flow::enum_flow::match_long>([15]) -> ([14]);
drop<felt>([14]) -> ();
felt_const<22>() -> ([16]);
enum_init<enum_flow::enum_flow::MyEnumLong, 2>([16]) -> ([17]);
store_temp<enum_flow::enum_flow::MyEnumLong>([17]) -> ([17]);
rename<enum_flow::enum_flow::MyEnumLong>([17]) -> ([19]);
function_call<user@enum_flow::enum_flow::match_long>([19]) -> ([18]);
drop<felt>([18]) -> ();
felt_const<30>() -> ([20]);
enum_init<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>, 0>([20]) -> ([21]);
drop<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>>([21]) -> ();
struct_construct<Unit>() -> ([22]);
enum_init<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>, 1>([22]) -> ([23]);
drop<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>>([23]) -> ();
felt_const<32>() -> ([24]);
enum_init<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>, 2>([24]) -> ([25]);
drop<enum_flow::enum_flow::MyEnumGeneric::<(), core::felt>>([25]) -> ();
felt_const<300>() -> ([26]);
store_temp<felt>([26]) -> ([27]);
return([27]);
enum_match<enum_flow::enum_flow::MyEnumShort>([0]) { 43([1]) 47([2]) };
branch_align() -> ();
store_temp<felt>([1]) -> ([3]);
rename<felt>([3]) -> ([4]);
jump() { 50() };
branch_align() -> ();
store_temp<felt>([2]) -> ([5]);
rename<felt>([5]) -> ([4]);
rename<felt>([4]) -> ([6]);
return([6]);
enum_match<enum_flow::enum_flow::MyEnumLong>([0]) { 53([1]) 57([2]) 61([3]) };
branch_align() -> ();
store_temp<felt>([1]) -> ([4]);
rename<felt>([4]) -> ([5]);
jump() { 64() };
branch_align() -> ();
store_temp<felt>([2]) -> ([6]);
rename<felt>([6]) -> ([5]);
jump() { 64() };
branch_align() -> ();
store_temp<felt>([3]) -> ([7]);
rename<felt>([7]) -> ([5]);
rename<felt>([5]) -> ([8]);
return([8]);

enum_flow::enum_flow::main@0() -> (felt);
enum_flow::enum_flow::match_short@42([0]: enum_flow::enum_flow::MyEnumShort) -> (felt);
enum_flow::enum_flow::match_long@52([0]: enum_flow::enum_flow::MyEnumLong) -> (felt);
