type felt252 = felt252;
type examples::enum_flow::MyEnumShort = Enum<ut@examples::enum_flow::MyEnumShort, felt252, felt252>;
type examples::enum_flow::MyEnumLong = Enum<ut@examples::enum_flow::MyEnumLong, felt252, felt252, felt252>;

libfunc felt252_const<10> = felt252_const<10>;
libfunc enum_init<examples::enum_flow::MyEnumShort, 0> = enum_init<examples::enum_flow::MyEnumShort, 0>;
libfunc store_temp<examples::enum_flow::MyEnumShort> = store_temp<examples::enum_flow::MyEnumShort>;
libfunc function_call<user@examples::enum_flow::match_short> = function_call<user@examples::enum_flow::match_short>;
libfunc drop<felt252> = drop<felt252>;
libfunc felt252_const<11> = felt252_const<11>;
libfunc enum_init<examples::enum_flow::MyEnumShort, 1> = enum_init<examples::enum_flow::MyEnumShort, 1>;
libfunc felt252_const<20> = felt252_const<20>;
libfunc enum_init<examples::enum_flow::MyEnumLong, 0> = enum_init<examples::enum_flow::MyEnumLong, 0>;
libfunc store_temp<examples::enum_flow::MyEnumLong> = store_temp<examples::enum_flow::MyEnumLong>;
libfunc function_call<user@examples::enum_flow::match_long> = function_call<user@examples::enum_flow::match_long>;
libfunc felt252_const<21> = felt252_const<21>;
libfunc enum_init<examples::enum_flow::MyEnumLong, 1> = enum_init<examples::enum_flow::MyEnumLong, 1>;
libfunc felt252_const<22> = felt252_const<22>;
libfunc enum_init<examples::enum_flow::MyEnumLong, 2> = enum_init<examples::enum_flow::MyEnumLong, 2>;
libfunc felt252_const<300> = felt252_const<300>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc enum_match<examples::enum_flow::MyEnumShort> = enum_match<examples::enum_flow::MyEnumShort>;
libfunc branch_align = branch_align;
libfunc jump = jump;
libfunc rename<felt252> = rename<felt252>;
libfunc enum_match<examples::enum_flow::MyEnumLong> = enum_match<examples::enum_flow::MyEnumLong>;

felt252_const<10>() -> ([0]);
enum_init<examples::enum_flow::MyEnumShort, 0>([0]) -> ([1]);
store_temp<examples::enum_flow::MyEnumShort>([1]) -> ([3]);
function_call<user@examples::enum_flow::match_short>([3]) -> ([2]);
drop<felt252>([2]) -> ();
felt252_const<11>() -> ([4]);
enum_init<examples::enum_flow::MyEnumShort, 1>([4]) -> ([5]);
store_temp<examples::enum_flow::MyEnumShort>([5]) -> ([7]);
function_call<user@examples::enum_flow::match_short>([7]) -> ([6]);
drop<felt252>([6]) -> ();
felt252_const<20>() -> ([8]);
enum_init<examples::enum_flow::MyEnumLong, 0>([8]) -> ([9]);
store_temp<examples::enum_flow::MyEnumLong>([9]) -> ([11]);
function_call<user@examples::enum_flow::match_long>([11]) -> ([10]);
drop<felt252>([10]) -> ();
felt252_const<21>() -> ([12]);
enum_init<examples::enum_flow::MyEnumLong, 1>([12]) -> ([13]);
store_temp<examples::enum_flow::MyEnumLong>([13]) -> ([15]);
function_call<user@examples::enum_flow::match_long>([15]) -> ([14]);
drop<felt252>([14]) -> ();
felt252_const<22>() -> ([16]);
enum_init<examples::enum_flow::MyEnumLong, 2>([16]) -> ([17]);
store_temp<examples::enum_flow::MyEnumLong>([17]) -> ([19]);
function_call<user@examples::enum_flow::match_long>([19]) -> ([18]);
drop<felt252>([18]) -> ();
felt252_const<300>() -> ([20]);
store_temp<felt252>([20]) -> ([21]);
return([21]);
enum_match<examples::enum_flow::MyEnumShort>([0]) { fallthrough([1]) 32([2]) };
branch_align() -> ();
store_temp<felt252>([1]) -> ([3]);
jump() { 34() };
branch_align() -> ();
store_temp<felt252>([2]) -> ([3]);
rename<felt252>([3]) -> ([4]);
return([4]);
enum_match<examples::enum_flow::MyEnumLong>([0]) { fallthrough([1]) 40([2]) 43([3]) };
branch_align() -> ();
store_temp<felt252>([1]) -> ([4]);
jump() { 45() };
branch_align() -> ();
store_temp<felt252>([2]) -> ([4]);
jump() { 45() };
branch_align() -> ();
store_temp<felt252>([3]) -> ([4]);
rename<felt252>([4]) -> ([5]);
return([5]);

examples::enum_flow::main@0() -> (felt252);
examples::enum_flow::match_short@28([0]: examples::enum_flow::MyEnumShort) -> (felt252);
examples::enum_flow::match_long@36([0]: examples::enum_flow::MyEnumLong) -> (felt252);
