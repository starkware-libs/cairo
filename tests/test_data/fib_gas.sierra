type felt = felt;
type NonZero<felt> = NonZero<felt>;
type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<felt> = dup<felt>;
libfunc felt_jump_nz = felt_jump_nz;
libfunc drop<felt> = drop<felt>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc burn_gas = burn_gas;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc get_gas = get_gas;
libfunc felt_const<1111111> = felt_const<1111111>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc felt_add = felt_add;
libfunc felt_const<1> = felt_const<1>;
libfunc felt_sub = felt_sub;
libfunc rename<felt> = rename<felt>;
libfunc function_call<user@test_crate::fib> = function_call<user@test_crate::fib>;

revoke_ap_tracking() -> ();
dup<felt>([4]) -> ([4], [31]);
felt_jump_nz([31]) { fallthrough() 10([5]) };
drop<felt>([3]) -> ();
drop<felt>([4]) -> ();
store_temp<RangeCheck>([0]) -> ([6]);
store_temp<GasBuiltin>([1]) -> ([7]);
store_temp<felt>([2]) -> ([8]);
burn_gas() -> ();
jump() { 44() };
drop<NonZero<felt>>([5]) -> ();
get_gas([0], [1]) { fallthrough([9], [10]) 23([11], [12]) };
drop<felt>([2]) -> ();
drop<felt>([3]) -> ();
drop<felt>([4]) -> ();
felt_const<1111111>() -> ([13]);
store_temp<RangeCheck>([9]) -> ([9]);
rename<RangeCheck>([9]) -> ([14]);
store_temp<GasBuiltin>([10]) -> ([10]);
rename<GasBuiltin>([10]) -> ([15]);
store_temp<felt>([13]) -> ([16]);
burn_gas() -> ();
jump() { 40() };
dup<felt>([3]) -> ([3], [32]);
felt_add([2], [32]) -> ([17]);
felt_const<1>() -> ([18]);
felt_sub([4], [18]) -> ([19]);
store_temp<RangeCheck>([11]) -> ([11]);
rename<RangeCheck>([11]) -> ([23]);
store_temp<GasBuiltin>([12]) -> ([24]);
store_temp<felt>([3]) -> ([25]);
store_temp<felt>([17]) -> ([17]);
rename<felt>([17]) -> ([26]);
store_temp<felt>([19]) -> ([19]);
rename<felt>([19]) -> ([27]);
function_call<user@test_crate::fib>([23], [24], [25], [26], [27]) -> ([20], [21], [22]);
rename<RangeCheck>([20]) -> ([14]);
rename<GasBuiltin>([21]) -> ([15]);
rename<felt>([22]) -> ([16]);
burn_gas() -> ();
rename<RangeCheck>([14]) -> ([6]);
rename<GasBuiltin>([15]) -> ([7]);
rename<felt>([16]) -> ([8]);
burn_gas() -> ();
rename<RangeCheck>([6]) -> ([28]);
rename<GasBuiltin>([7]) -> ([29]);
rename<felt>([8]) -> ([30]);
return([28], [29], [30]);

test_crate::fib@0([0]: RangeCheck, [1]: GasBuiltin, [2]: felt, [3]: felt, [4]: felt) -> (felt);
