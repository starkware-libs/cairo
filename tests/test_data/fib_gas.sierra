type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type felt = felt;
type Array<felt> = Array<felt>;
type core::PanicResult::<core::felt> = Enum<ut@core::PanicResult::<core::felt>, felt, Array<felt>>;
type NonZero<felt> = NonZero<felt>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc get_gas = get_gas;
libfunc branch_align = branch_align;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc jump = jump;
libfunc drop<felt> = drop<felt>;
libfunc array_new<felt> = array_new<felt>;
libfunc felt_const<5197639> = felt_const<5197639>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc enum_init<core::PanicResult::<core::felt>, 1> = enum_init<core::PanicResult::<core::felt>, 1>;
libfunc store_temp<core::PanicResult::<core::felt>> = store_temp<core::PanicResult::<core::felt>>;
libfunc rename<core::PanicResult::<core::felt>> = rename<core::PanicResult::<core::felt>>;
libfunc dup<felt> = dup<felt>;
libfunc felt_jump_nz = felt_jump_nz;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc felt_add = felt_add;
libfunc rename<felt> = rename<felt>;
libfunc felt_const<1> = felt_const<1>;
libfunc felt_sub = felt_sub;
libfunc function_call<user@fib_gas::fib_gas::fib> = function_call<user@fib_gas::fib_gas::fib>;
libfunc enum_match<core::PanicResult::<core::felt>> = enum_match<core::PanicResult::<core::felt>>;
libfunc enum_init<core::PanicResult::<core::felt>, 0> = enum_init<core::PanicResult::<core::felt>, 0>;

revoke_ap_tracking() -> ();
get_gas([0], [1]) { fallthrough([5], [6]) 7([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([9]);
store_temp<GasBuiltin>([6]) -> ([10]);
jump() { 22() };
branch_align() -> ();
drop<felt>([2]) -> ();
drop<felt>([4]) -> ();
drop<felt>([3]) -> ();
array_new<felt>() -> ([11]);
felt_const<5197639>() -> ([12]);
store_temp<felt>([12]) -> ([12]);
array_append<felt>([11], [12]) -> ([13]);
enum_init<core::PanicResult::<core::felt>, 1>([13]) -> ([14]);
store_temp<RangeCheck>([7]) -> ([7]);
rename<RangeCheck>([7]) -> ([15]);
store_temp<GasBuiltin>([8]) -> ([16]);
store_temp<core::PanicResult::<core::felt>>([14]) -> ([14]);
rename<core::PanicResult::<core::felt>>([14]) -> ([17]);
return([15], [16], [17]);
dup<felt>([4]) -> ([4], [18]);
felt_jump_nz([18]) { fallthrough() 31([19]) };
branch_align() -> ();
drop<felt>([4]) -> ();
drop<felt>([3]) -> ();
store_temp<RangeCheck>([9]) -> ([20]);
store_temp<GasBuiltin>([10]) -> ([21]);
store_temp<felt>([2]) -> ([22]);
jump() { 61() };
branch_align() -> ();
drop<NonZero<felt>>([19]) -> ();
dup<felt>([3]) -> ([3], [24]);
felt_add([2], [24]) -> ([23]);
store_temp<felt>([23]) -> ([23]);
rename<felt>([23]) -> ([25]);
felt_const<1>() -> ([26]);
felt_sub([4], [26]) -> ([27]);
store_temp<felt>([27]) -> ([27]);
rename<felt>([27]) -> ([28]);
store_temp<RangeCheck>([9]) -> ([32]);
store_temp<GasBuiltin>([10]) -> ([33]);
store_temp<felt>([3]) -> ([34]);
store_temp<felt>([25]) -> ([35]);
store_temp<felt>([28]) -> ([36]);
function_call<user@fib_gas::fib_gas::fib>([32], [33], [34], [35], [36]) -> ([29], [30], [31]);
enum_match<core::PanicResult::<core::felt>>([31]) { 48([37]) 51([38]) };
branch_align() -> ();
store_temp<felt>([37]) -> ([39]);
jump() { 58() };
branch_align() -> ();
enum_init<core::PanicResult::<core::felt>, 1>([38]) -> ([40]);
store_temp<RangeCheck>([29]) -> ([41]);
store_temp<GasBuiltin>([30]) -> ([42]);
store_temp<core::PanicResult::<core::felt>>([40]) -> ([40]);
rename<core::PanicResult::<core::felt>>([40]) -> ([43]);
return([41], [42], [43]);
store_temp<RangeCheck>([29]) -> ([20]);
store_temp<GasBuiltin>([30]) -> ([21]);
store_temp<felt>([39]) -> ([22]);
enum_init<core::PanicResult::<core::felt>, 0>([22]) -> ([44]);
store_temp<RangeCheck>([20]) -> ([45]);
store_temp<GasBuiltin>([21]) -> ([46]);
store_temp<core::PanicResult::<core::felt>>([44]) -> ([44]);
rename<core::PanicResult::<core::felt>>([44]) -> ([47]);
return([45], [46], [47]);

fib_gas::fib_gas::fib@0([0]: RangeCheck, [1]: GasBuiltin, [2]: felt, [3]: felt, [4]: felt) -> (RangeCheck, GasBuiltin, core::PanicResult::<core::felt>);
