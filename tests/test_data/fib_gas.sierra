type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type core::never = Enum<ut@core::never> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Const<felt252, 375233589013918064796019> = Const<felt252, 375233589013918064796019> [storable: false, drop: false, dup: false, zero_sized: false];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type Const<felt252, 1> = Const<felt252, 1> [storable: false, drop: false, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<felt252> = Struct<ut@Tuple, felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::felt252,)> = Enum<ut@core::panics::PanicResult::<(core::felt252,)>, Tuple<felt252>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type GasBuiltin = GasBuiltin [storable: true, drop: false, dup: false, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc branch_align = branch_align;
libfunc dup<felt252> = dup<felt252>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc drop<felt252> = drop<felt252>;
libfunc redeposit_gas = redeposit_gas;
libfunc struct_construct<Tuple<felt252>> = struct_construct<Tuple<felt252>>;
libfunc enum_init<core::panics::PanicResult::<(core::felt252,)>, 0> = enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<core::panics::PanicResult::<(core::felt252,)>> = store_temp<core::panics::PanicResult::<(core::felt252,)>>;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_add = felt252_add;
libfunc const_as_immediate<Const<felt252, 1>> = const_as_immediate<Const<felt252, 1>>;
libfunc felt252_sub = felt252_sub;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@examples::fib::fib> = function_call<user@examples::fib::fib>;
libfunc function_call<user@core::panic_with_const_felt252::<375233589013918064796019>> = function_call<user@core::panic_with_const_felt252::<375233589013918064796019>>;
libfunc enum_init<core::panics::PanicResult::<(core::felt252,)>, 1> = enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc const_as_immediate<Const<felt252, 375233589013918064796019>> = const_as_immediate<Const<felt252, 375233589013918064796019>>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc store_temp<Tuple<core::panics::Panic, Array<felt252>>> = store_temp<Tuple<core::panics::Panic, Array<felt252>>>;

F0:
disable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([5], [6]) F0_B1([7], [8]) };
branch_align() -> ();
dup<felt252>([4]) -> ([4], [9]);
store_temp<RangeCheck>([5]) -> ([5]);
felt252_is_zero([9]) { fallthrough() F0_B0([10]) };
branch_align() -> ();
drop<felt252>([4]) -> ();
drop<felt252>([3]) -> ();
redeposit_gas([6]) -> ([11]);
struct_construct<Tuple<felt252>>([2]) -> ([12]);
enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>([12]) -> ([13]);
store_temp<RangeCheck>([5]) -> ([5]);
store_temp<GasBuiltin>([11]) -> ([11]);
store_temp<core::panics::PanicResult::<(core::felt252,)>>([13]) -> ([13]);
return([5], [11], [13]);
F0_B0:
branch_align() -> ();
drop<NonZero<felt252>>([10]) -> ();
redeposit_gas([6]) -> ([14]);
dup<felt252>([3]) -> ([3], [15]);
felt252_add([2], [15]) -> ([16]);
const_as_immediate<Const<felt252, 1>>() -> ([17]);
felt252_sub([4], [17]) -> ([18]);
store_temp<RangeCheck>([5]) -> ([5]);
store_temp<GasBuiltin>([14]) -> ([14]);
store_temp<felt252>([3]) -> ([3]);
store_temp<felt252>([16]) -> ([16]);
store_temp<felt252>([18]) -> ([18]);
function_call<user@examples::fib::fib>([5], [14], [3], [16], [18]) -> ([19], [20], [21]);
return([19], [20], [21]);
F0_B1:
branch_align() -> ();
drop<felt252>([3]) -> ();
drop<felt252>([2]) -> ();
drop<felt252>([4]) -> ();
function_call<user@core::panic_with_const_felt252::<375233589013918064796019>>() -> ([22]);
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([22]) -> ([23]);
store_temp<RangeCheck>([7]) -> ([7]);
store_temp<GasBuiltin>([8]) -> ([8]);
store_temp<core::panics::PanicResult::<(core::felt252,)>>([23]) -> ([23]);
return([7], [8], [23]);
F1:
array_new<felt252>() -> ([0]);
const_as_immediate<Const<felt252, 375233589013918064796019>>() -> ([1]);
store_temp<felt252>([1]) -> ([1]);
array_append<felt252>([0], [1]) -> ([2]);
struct_construct<core::panics::Panic>() -> ([3]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([3], [2]) -> ([4]);
store_temp<Tuple<core::panics::Panic, Array<felt252>>>([4]) -> ([4]);
return([4]);

examples::fib::fib@F0([0]: RangeCheck, [1]: GasBuiltin, [2]: felt252, [3]: felt252, [4]: felt252) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::felt252,)>);
core::panic_with_const_felt252::<375233589013918064796019>@F1() -> (Tuple<core::panics::Panic, Array<felt252>>);
