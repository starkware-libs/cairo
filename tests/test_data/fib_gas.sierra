type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<felt252> = Struct<ut@Tuple, felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::felt252,)> = Enum<ut@core::panics::PanicResult::<(core::felt252,)>, Tuple<felt252>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type GasBuiltin = GasBuiltin [storable: true, drop: false, dup: false, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc branch_align = branch_align;
libfunc dup<felt252> = dup<felt252>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc drop<felt252> = drop<felt252>;
libfunc struct_construct<Tuple<felt252>> = struct_construct<Tuple<felt252>>;
libfunc enum_init<core::panics::PanicResult::<(core::felt252,)>, 0> = enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<core::panics::PanicResult::<(core::felt252,)>> = store_temp<core::panics::PanicResult::<(core::felt252,)>>;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_add = felt252_add;
libfunc felt252_const<1> = felt252_const<1>;
libfunc felt252_sub = felt252_sub;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@examples::fib::fib> = function_call<user@examples::fib::fib>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::felt252,)>, 1> = enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>;

disable_ap_tracking() -> (); // 0
<<<<<<< HEAD
withdraw_gas([0], [1]) { fallthrough([5], [6]) 43([7], [8]) }; // 1
branch_align() -> (); // 2
dup<felt252>([4]) -> ([4], [9]); // 3
store_temp<RangeCheck>([5]) -> ([5]); // 4
felt252_is_zero([9]) { fallthrough() 13([10]) }; // 5
branch_align() -> (); // 6
drop<felt252>([4]) -> (); // 7
drop<felt252>([3]) -> (); // 8
store_temp<RangeCheck>([5]) -> ([11]); // 9
store_temp<GasBuiltin>([6]) -> ([12]); // 10
store_temp<felt252>([2]) -> ([13]); // 11
jump() { 31() }; // 12
branch_align() -> (); // 13
drop<NonZero<felt252>>([10]) -> (); // 14
dup<felt252>([3]) -> ([3], [14]); // 15
felt252_add([2], [14]) -> ([15]); // 16
felt252_const<1>() -> ([16]); // 17
felt252_sub([4], [16]) -> ([17]); // 18
store_temp<RangeCheck>([5]) -> ([5]); // 19
store_temp<GasBuiltin>([6]) -> ([6]); // 20
store_temp<felt252>([3]) -> ([3]); // 21
store_temp<felt252>([15]) -> ([15]); // 22
store_temp<felt252>([17]) -> ([17]); // 23
function_call<user@examples::fib::fib>([5], [6], [3], [15], [17]) -> ([18], [19], [20]); // 24
enum_match<core::panics::PanicResult::<(core::felt252,)>>([20]) { fallthrough([21]) 37([22]) }; // 25
branch_align() -> (); // 26
struct_deconstruct<Tuple<felt252>>([21]) -> ([23]); // 27
store_temp<RangeCheck>([18]) -> ([11]); // 28
store_temp<GasBuiltin>([19]) -> ([12]); // 29
store_temp<felt252>([23]) -> ([13]); // 30
struct_construct<Tuple<felt252>>([13]) -> ([24]); // 31
enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>([24]) -> ([25]); // 32
store_temp<RangeCheck>([11]) -> ([11]); // 33
store_temp<GasBuiltin>([12]) -> ([12]); // 34
store_temp<core::panics::PanicResult::<(core::felt252,)>>([25]) -> ([25]); // 35
return([11], [12], [25]); // 36
branch_align() -> (); // 37
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([22]) -> ([26]); // 38
store_temp<RangeCheck>([18]) -> ([18]); // 39
store_temp<GasBuiltin>([19]) -> ([19]); // 40
store_temp<core::panics::PanicResult::<(core::felt252,)>>([26]) -> ([26]); // 41
return([18], [19], [26]); // 42
branch_align() -> (); // 43
drop<felt252>([4]) -> (); // 44
drop<felt252>([2]) -> (); // 45
drop<felt252>([3]) -> (); // 46
array_new<felt252>() -> ([27]); // 47
felt252_const<375233589013918064796019>() -> ([28]); // 48
store_temp<felt252>([28]) -> ([28]); // 49
array_append<felt252>([27], [28]) -> ([29]); // 50
struct_construct<core::panics::Panic>() -> ([30]); // 51
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([30], [29]) -> ([31]); // 52
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([31]) -> ([32]); // 53
store_temp<RangeCheck>([7]) -> ([7]); // 54
store_temp<GasBuiltin>([8]) -> ([8]); // 55
store_temp<core::panics::PanicResult::<(core::felt252,)>>([32]) -> ([32]); // 56
return([7], [8], [32]); // 57
||||||| 3205b8a81
get_builtin_costs() -> ([5]); // 1
store_temp<BuiltinCosts>([5]) -> ([5]); // 2
withdraw_gas_all([0], [1], [5]) { fallthrough([6], [7]) 45([8], [9]) }; // 3
branch_align() -> (); // 4
dup<felt252>([4]) -> ([4], [10]); // 5
store_temp<RangeCheck>([6]) -> ([6]); // 6
felt252_is_zero([10]) { fallthrough() 15([11]) }; // 7
branch_align() -> (); // 8
drop<felt252>([4]) -> (); // 9
drop<felt252>([3]) -> (); // 10
store_temp<RangeCheck>([6]) -> ([12]); // 11
store_temp<GasBuiltin>([7]) -> ([13]); // 12
store_temp<felt252>([2]) -> ([14]); // 13
jump() { 33() }; // 14
branch_align() -> (); // 15
drop<NonZero<felt252>>([11]) -> (); // 16
dup<felt252>([3]) -> ([3], [15]); // 17
felt252_add([2], [15]) -> ([16]); // 18
felt252_const<1>() -> ([17]); // 19
felt252_sub([4], [17]) -> ([18]); // 20
store_temp<RangeCheck>([6]) -> ([6]); // 21
store_temp<GasBuiltin>([7]) -> ([7]); // 22
store_temp<felt252>([3]) -> ([3]); // 23
store_temp<felt252>([16]) -> ([16]); // 24
store_temp<felt252>([18]) -> ([18]); // 25
function_call<user@examples::fib::fib>([6], [7], [3], [16], [18]) -> ([19], [20], [21]); // 26
enum_match<core::panics::PanicResult::<(core::felt252,)>>([21]) { fallthrough([22]) 39([23]) }; // 27
branch_align() -> (); // 28
struct_deconstruct<Tuple<felt252>>([22]) -> ([24]); // 29
store_temp<RangeCheck>([19]) -> ([12]); // 30
store_temp<GasBuiltin>([20]) -> ([13]); // 31
store_temp<felt252>([24]) -> ([14]); // 32
struct_construct<Tuple<felt252>>([14]) -> ([25]); // 33
enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>([25]) -> ([26]); // 34
store_temp<RangeCheck>([12]) -> ([12]); // 35
store_temp<GasBuiltin>([13]) -> ([13]); // 36
store_temp<core::panics::PanicResult::<(core::felt252,)>>([26]) -> ([26]); // 37
return([12], [13], [26]); // 38
branch_align() -> (); // 39
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([23]) -> ([27]); // 40
store_temp<RangeCheck>([19]) -> ([19]); // 41
store_temp<GasBuiltin>([20]) -> ([20]); // 42
store_temp<core::panics::PanicResult::<(core::felt252,)>>([27]) -> ([27]); // 43
return([19], [20], [27]); // 44
branch_align() -> (); // 45
drop<felt252>([4]) -> (); // 46
drop<felt252>([2]) -> (); // 47
drop<felt252>([3]) -> (); // 48
array_new<felt252>() -> ([28]); // 49
felt252_const<375233589013918064796019>() -> ([29]); // 50
store_temp<felt252>([29]) -> ([29]); // 51
array_append<felt252>([28], [29]) -> ([30]); // 52
struct_construct<core::panics::Panic>() -> ([31]); // 53
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([31], [30]) -> ([32]); // 54
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([32]) -> ([33]); // 55
store_temp<RangeCheck>([8]) -> ([8]); // 56
store_temp<GasBuiltin>([9]) -> ([9]); // 57
store_temp<core::panics::PanicResult::<(core::felt252,)>>([33]) -> ([33]); // 58
return([8], [9], [33]); // 59
=======
get_builtin_costs() -> ([5]); // 1
store_temp<BuiltinCosts>([5]) -> ([5]); // 2
withdraw_gas_all([0], [1], [5]) { fallthrough([6], [7]) 30([8], [9]) }; // 3
branch_align() -> (); // 4
dup<felt252>([4]) -> ([4], [10]); // 5
store_temp<RangeCheck>([6]) -> ([6]); // 6
felt252_is_zero([10]) { fallthrough() 17([11]) }; // 7
branch_align() -> (); // 8
drop<felt252>([4]) -> (); // 9
drop<felt252>([3]) -> (); // 10
struct_construct<Tuple<felt252>>([2]) -> ([12]); // 11
enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>([12]) -> ([13]); // 12
store_temp<RangeCheck>([6]) -> ([6]); // 13
store_temp<GasBuiltin>([7]) -> ([7]); // 14
store_temp<core::panics::PanicResult::<(core::felt252,)>>([13]) -> ([13]); // 15
return([6], [7], [13]); // 16
branch_align() -> (); // 17
drop<NonZero<felt252>>([11]) -> (); // 18
dup<felt252>([3]) -> ([3], [14]); // 19
felt252_add([2], [14]) -> ([15]); // 20
felt252_const<1>() -> ([16]); // 21
felt252_sub([4], [16]) -> ([17]); // 22
store_temp<RangeCheck>([6]) -> ([6]); // 23
store_temp<GasBuiltin>([7]) -> ([7]); // 24
store_temp<felt252>([3]) -> ([3]); // 25
store_temp<felt252>([15]) -> ([15]); // 26
store_temp<felt252>([17]) -> ([17]); // 27
function_call<user@examples::fib::fib>([6], [7], [3], [15], [17]) -> ([18], [19], [20]); // 28
return([18], [19], [20]); // 29
branch_align() -> (); // 30
drop<felt252>([3]) -> (); // 31
drop<felt252>([4]) -> (); // 32
drop<felt252>([2]) -> (); // 33
array_new<felt252>() -> ([21]); // 34
felt252_const<375233589013918064796019>() -> ([22]); // 35
store_temp<felt252>([22]) -> ([22]); // 36
array_append<felt252>([21], [22]) -> ([23]); // 37
struct_construct<core::panics::Panic>() -> ([24]); // 38
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([24], [23]) -> ([25]); // 39
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([25]) -> ([26]); // 40
store_temp<RangeCheck>([8]) -> ([8]); // 41
store_temp<GasBuiltin>([9]) -> ([9]); // 42
store_temp<core::panics::PanicResult::<(core::felt252,)>>([26]) -> ([26]); // 43
return([8], [9], [26]); // 44
>>>>>>> origin/main

examples::fib::fib@0([0]: RangeCheck, [1]: GasBuiltin, [2]: felt252, [3]: felt252, [4]: felt252) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::felt252,)>);
