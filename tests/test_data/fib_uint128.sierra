type uint128 = uint128;
type felt = felt;
type NonZero<felt> = NonZero<felt>;
type Unit = Struct<ut@Tuple>;
type core::option::Option::<core::integer::uint128> = Enum<ut@core::option::Option::<core::integer::uint128>, uint128, Unit>;
type RangeCheck = RangeCheck;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<uint128> = dup<uint128>;
libfunc uint128_to_felt = uint128_to_felt;
libfunc felt_jump_nz = felt_jump_nz;
libfunc drop<uint128> = drop<uint128>;
libfunc enum_init<core::option::Option::<core::integer::uint128>, 0> = enum_init<core::option::Option::<core::integer::uint128>, 0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<core::option::Option::<core::integer::uint128>> = store_temp<core::option::Option::<core::integer::uint128>>;
libfunc rename<core::option::Option::<core::integer::uint128>> = rename<core::option::Option::<core::integer::uint128>>;
libfunc burn_gas = burn_gas;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc uint128_add = uint128_add;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc store_temp<uint128> = store_temp<uint128>;
libfunc rename<uint128> = rename<uint128>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc enum_init<core::option::Option::<core::integer::uint128>, 1> = enum_init<core::option::Option::<core::integer::uint128>, 1>;
libfunc felt_const<1> = felt_const<1>;
libfunc uint128_from_felt = uint128_from_felt;
libfunc uint128_sub = uint128_sub;
libfunc function_call<user@test_crate::fib> = function_call<user@test_crate::fib>;
libfunc enum_match<core::option::Option::<core::integer::uint128>> = enum_match<core::option::Option::<core::integer::uint128>>;

revoke_ap_tracking() -> ();
dup<uint128>([3]) -> ([3], [54]);
uint128_to_felt([54]) -> ([4]);
felt_jump_nz([4]) { fallthrough() 12([5]) };
drop<uint128>([2]) -> ();
drop<uint128>([3]) -> ();
enum_init<core::option::Option::<core::integer::uint128>, 0>([1]) -> ([6]);
store_temp<RangeCheck>([0]) -> ([7]);
store_temp<core::option::Option::<core::integer::uint128>>([6]) -> ([6]);
rename<core::option::Option::<core::integer::uint128>>([6]) -> ([8]);
burn_gas() -> ();
jump() { 91() };
drop<NonZero<felt>>([5]) -> ();
dup<uint128>([2]) -> ([2], [55]);
uint128_add([0], [1], [55]) { fallthrough([9], [10]) 21([11]) };
store_temp<RangeCheck>([9]) -> ([9]);
rename<RangeCheck>([9]) -> ([12]);
store_temp<uint128>([10]) -> ([10]);
rename<uint128>([10]) -> ([13]);
burn_gas() -> ();
jump() { 32() };
drop<uint128>([3]) -> ();
drop<uint128>([2]) -> ();
struct_construct<Unit>() -> ([14]);
store_temp<Unit>([14]) -> ([14]);
enum_init<core::option::Option::<core::integer::uint128>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([11]) -> ([11]);
rename<RangeCheck>([11]) -> ([16]);
store_temp<core::option::Option::<core::integer::uint128>>([15]) -> ([15]);
rename<core::option::Option::<core::integer::uint128>>([15]) -> ([17]);
burn_gas() -> ();
return([16], [17]);
felt_const<1>() -> ([18]);
uint128_from_felt([12], [18]) { fallthrough([19], [20]) 39([21]) };
store_temp<RangeCheck>([19]) -> ([19]);
rename<RangeCheck>([19]) -> ([22]);
store_temp<uint128>([20]) -> ([23]);
burn_gas() -> ();
jump() { 51() };
drop<uint128>([3]) -> ();
drop<uint128>([2]) -> ();
drop<uint128>([13]) -> ();
struct_construct<Unit>() -> ([24]);
store_temp<Unit>([24]) -> ([24]);
enum_init<core::option::Option::<core::integer::uint128>, 1>([24]) -> ([25]);
store_temp<RangeCheck>([21]) -> ([21]);
rename<RangeCheck>([21]) -> ([26]);
store_temp<core::option::Option::<core::integer::uint128>>([25]) -> ([25]);
rename<core::option::Option::<core::integer::uint128>>([25]) -> ([27]);
burn_gas() -> ();
return([26], [27]);
uint128_sub([22], [3], [23]) { fallthrough([28], [29]) 58([30]) };
store_temp<RangeCheck>([28]) -> ([28]);
rename<RangeCheck>([28]) -> ([31]);
store_temp<uint128>([29]) -> ([29]);
rename<uint128>([29]) -> ([32]);
burn_gas() -> ();
jump() { 69() };
drop<uint128>([2]) -> ();
drop<uint128>([13]) -> ();
struct_construct<Unit>() -> ([33]);
store_temp<Unit>([33]) -> ([33]);
enum_init<core::option::Option::<core::integer::uint128>, 1>([33]) -> ([34]);
store_temp<RangeCheck>([30]) -> ([30]);
rename<RangeCheck>([30]) -> ([35]);
store_temp<core::option::Option::<core::integer::uint128>>([34]) -> ([34]);
rename<core::option::Option::<core::integer::uint128>>([34]) -> ([36]);
burn_gas() -> ();
return([35], [36]);
store_temp<RangeCheck>([31]) -> ([39]);
store_temp<uint128>([2]) -> ([40]);
store_temp<uint128>([13]) -> ([41]);
store_temp<uint128>([32]) -> ([42]);
function_call<user@test_crate::fib>([39], [40], [41], [42]) -> ([37], [38]);
enum_match<core::option::Option::<core::integer::uint128>>([38]) { 75([43]) 78([44]) };
store_temp<uint128>([43]) -> ([45]);
burn_gas() -> ();
jump() { 84() };
enum_init<core::option::Option::<core::integer::uint128>, 1>([44]) -> ([46]);
store_temp<RangeCheck>([37]) -> ([47]);
store_temp<core::option::Option::<core::integer::uint128>>([46]) -> ([46]);
rename<core::option::Option::<core::integer::uint128>>([46]) -> ([48]);
burn_gas() -> ();
return([47], [48]);
enum_init<core::option::Option::<core::integer::uint128>, 0>([45]) -> ([49]);
store_temp<RangeCheck>([37]) -> ([50]);
store_temp<core::option::Option::<core::integer::uint128>>([49]) -> ([49]);
rename<core::option::Option::<core::integer::uint128>>([49]) -> ([51]);
rename<RangeCheck>([50]) -> ([7]);
rename<core::option::Option::<core::integer::uint128>>([51]) -> ([8]);
burn_gas() -> ();
rename<RangeCheck>([7]) -> ([52]);
rename<core::option::Option::<core::integer::uint128>>([8]) -> ([53]);
burn_gas() -> ();
return([52], [53]);

test_crate::fib@0([0]: RangeCheck, [1]: uint128, [2]: uint128, [3]: uint128) -> (RangeCheck, core::option::Option::<core::integer::uint128>);
