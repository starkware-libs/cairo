type uint128 = uint128;
type felt = felt;
type NonZero<felt> = NonZero<felt>;
type RangeCheck = RangeCheck;
type Array<felt> = Array<felt>;
type core::PanicResult::<core::integer::uint128> = Enum<ut@core::PanicResult::<core::integer::uint128>, uint128, Array<felt>>;
type Unit = Struct<ut@Tuple>;
type core::option::Option::<core::integer::uint128> = Enum<ut@core::option::Option::<core::integer::uint128>, uint128, Unit>;
type Tuple<uint128, uint128> = Struct<ut@Tuple, uint128, uint128>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<uint128> = dup<uint128>;
libfunc uint128_to_felt = uint128_to_felt;
libfunc felt_jump_nz = felt_jump_nz;
libfunc drop<uint128> = drop<uint128>;
libfunc branch_align = branch_align;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<uint128> = store_temp<uint128>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc function_call<user@core::integer::uint128_add> = function_call<user@core::integer::uint128_add>;
libfunc enum_match<core::PanicResult::<core::integer::uint128>> = enum_match<core::PanicResult::<core::integer::uint128>>;
libfunc enum_init<core::PanicResult::<core::integer::uint128>, 1> = enum_init<core::PanicResult::<core::integer::uint128>, 1>;
libfunc store_temp<core::PanicResult::<core::integer::uint128>> = store_temp<core::PanicResult::<core::integer::uint128>>;
libfunc rename<core::PanicResult::<core::integer::uint128>> = rename<core::PanicResult::<core::integer::uint128>>;
libfunc felt_const<1> = felt_const<1>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc function_call<user@core::integer::uint128_from_felt> = function_call<user@core::integer::uint128_from_felt>;
libfunc function_call<user@core::integer::uint128_sub> = function_call<user@core::integer::uint128_sub>;
libfunc function_call<user@fib_uint128::fib_uint128::fib> = function_call<user@fib_uint128::fib_uint128::fib>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<uint128> = rename<uint128>;
libfunc enum_init<core::PanicResult::<core::integer::uint128>, 0> = enum_init<core::PanicResult::<core::integer::uint128>, 0>;
libfunc function_call<user@core::integer::uint128_checked_add> = function_call<user@core::integer::uint128_checked_add>;
libfunc enum_match<core::option::Option::<core::integer::uint128>> = enum_match<core::option::Option::<core::integer::uint128>>;
libfunc drop<Unit> = drop<Unit>;
libfunc array_new<felt> = array_new<felt>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc array_append<felt> = array_append<felt>;
libfunc function_call<user@core::integer::uint128_try_from_felt> = function_call<user@core::integer::uint128_try_from_felt>;
libfunc function_call<user@core::integer::uint128_checked_sub> = function_call<user@core::integer::uint128_checked_sub>;
libfunc uint128_overflow_add = uint128_overflow_add;
libfunc enum_init<core::option::Option::<core::integer::uint128>, 0> = enum_init<core::option::Option::<core::integer::uint128>, 0>;
libfunc store_temp<core::option::Option::<core::integer::uint128>> = store_temp<core::option::Option::<core::integer::uint128>>;
libfunc rename<core::option::Option::<core::integer::uint128>> = rename<core::option::Option::<core::integer::uint128>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::integer::uint128>, 1> = enum_init<core::option::Option::<core::integer::uint128>, 1>;
libfunc uint128s_from_felt = uint128s_from_felt;
libfunc struct_construct<Tuple<uint128, uint128>> = struct_construct<Tuple<uint128, uint128>>;
libfunc drop<Tuple<uint128, uint128>> = drop<Tuple<uint128, uint128>>;
libfunc uint128_overflow_sub = uint128_overflow_sub;

revoke_ap_tracking() -> ();
dup<uint128>([3]) -> ([3], [58]);
uint128_to_felt([58]) -> ([4]);
felt_jump_nz([4]) { fallthrough() 10([5]) };
drop<uint128>([2]) -> ();
drop<uint128>([3]) -> ();
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([6]);
store_temp<uint128>([1]) -> ([7]);
jump() { 81() };
drop<NonZero<felt>>([5]) -> ();
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<uint128>([1]) -> ([11]);
dup<uint128>([2]) -> ([2], [59]);
store_temp<uint128>([59]) -> ([12]);
function_call<user@core::integer::uint128_add>([10], [11], [12]) -> ([8], [9]);
enum_match<core::PanicResult::<core::integer::uint128>>([9]) { 18([13]) 21([14]) };
branch_align() -> ();
store_temp<uint128>([13]) -> ([15]);
jump() { 29() };
drop<uint128>([3]) -> ();
drop<uint128>([2]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::uint128>, 1>([14]) -> ([16]);
store_temp<RangeCheck>([8]) -> ([17]);
store_temp<core::PanicResult::<core::integer::uint128>>([16]) -> ([16]);
rename<core::PanicResult::<core::integer::uint128>>([16]) -> ([18]);
return([17], [18]);
felt_const<1>() -> ([19]);
store_temp<RangeCheck>([8]) -> ([22]);
store_temp<felt>([19]) -> ([23]);
function_call<user@core::integer::uint128_from_felt>([22], [23]) -> ([20], [21]);
enum_match<core::PanicResult::<core::integer::uint128>>([21]) { 34([24]) 37([25]) };
branch_align() -> ();
store_temp<uint128>([24]) -> ([26]);
jump() { 46() };
drop<uint128>([3]) -> ();
drop<uint128>([2]) -> ();
drop<uint128>([15]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::uint128>, 1>([25]) -> ([27]);
store_temp<RangeCheck>([20]) -> ([28]);
store_temp<core::PanicResult::<core::integer::uint128>>([27]) -> ([27]);
rename<core::PanicResult::<core::integer::uint128>>([27]) -> ([29]);
return([28], [29]);
store_temp<RangeCheck>([20]) -> ([32]);
store_temp<uint128>([3]) -> ([33]);
store_temp<uint128>([26]) -> ([34]);
function_call<user@core::integer::uint128_sub>([32], [33], [34]) -> ([30], [31]);
enum_match<core::PanicResult::<core::integer::uint128>>([31]) { 51([35]) 54([36]) };
branch_align() -> ();
store_temp<uint128>([35]) -> ([37]);
jump() { 62() };
drop<uint128>([2]) -> ();
drop<uint128>([15]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::uint128>, 1>([36]) -> ([38]);
store_temp<RangeCheck>([30]) -> ([39]);
store_temp<core::PanicResult::<core::integer::uint128>>([38]) -> ([38]);
rename<core::PanicResult::<core::integer::uint128>>([38]) -> ([40]);
return([39], [40]);
store_temp<RangeCheck>([30]) -> ([43]);
store_temp<uint128>([2]) -> ([44]);
store_temp<uint128>([15]) -> ([45]);
store_temp<uint128>([37]) -> ([46]);
function_call<user@fib_uint128::fib_uint128::fib>([43], [44], [45], [46]) -> ([41], [42]);
enum_match<core::PanicResult::<core::integer::uint128>>([42]) { 68([47]) 71([48]) };
branch_align() -> ();
store_temp<uint128>([47]) -> ([49]);
jump() { 77() };
branch_align() -> ();
enum_init<core::PanicResult::<core::integer::uint128>, 1>([48]) -> ([50]);
store_temp<RangeCheck>([41]) -> ([51]);
store_temp<core::PanicResult::<core::integer::uint128>>([50]) -> ([50]);
rename<core::PanicResult::<core::integer::uint128>>([50]) -> ([52]);
return([51], [52]);
store_temp<RangeCheck>([41]) -> ([53]);
store_temp<uint128>([49]) -> ([54]);
rename<RangeCheck>([53]) -> ([6]);
rename<uint128>([54]) -> ([7]);
enum_init<core::PanicResult::<core::integer::uint128>, 0>([7]) -> ([55]);
store_temp<RangeCheck>([6]) -> ([56]);
store_temp<core::PanicResult::<core::integer::uint128>>([55]) -> ([55]);
rename<core::PanicResult::<core::integer::uint128>>([55]) -> ([57]);
return([56], [57]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<uint128>([1]) -> ([6]);
store_temp<uint128>([2]) -> ([7]);
function_call<user@core::integer::uint128_checked_add>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::uint128>>([4]) { 91([8]) 95([9]) };
branch_align() -> ();
store_temp<uint128>([8]) -> ([10]);
rename<uint128>([10]) -> ([11]);
jump() { 107() };
drop<Unit>([9]) -> ();
branch_align() -> ();
array_new<felt>() -> ([12]);
felt_const<1>() -> ([13]);
store_temp<Array<felt>>([12]) -> ([12]);
store_temp<felt>([13]) -> ([13]);
array_append<felt>([12], [13]) -> ([14]);
enum_init<core::PanicResult::<core::integer::uint128>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::PanicResult::<core::integer::uint128>>([15]) -> ([15]);
rename<core::PanicResult::<core::integer::uint128>>([15]) -> ([17]);
return([16], [17]);
enum_init<core::PanicResult::<core::integer::uint128>, 0>([11]) -> ([18]);
store_temp<RangeCheck>([3]) -> ([19]);
store_temp<core::PanicResult::<core::integer::uint128>>([18]) -> ([18]);
rename<core::PanicResult::<core::integer::uint128>>([18]) -> ([20]);
return([19], [20]);
store_temp<RangeCheck>([0]) -> ([4]);
store_temp<felt>([1]) -> ([5]);
function_call<user@core::integer::uint128_try_from_felt>([4], [5]) -> ([2], [3]);
enum_match<core::option::Option::<core::integer::uint128>>([3]) { 116([6]) 120([7]) };
branch_align() -> ();
store_temp<uint128>([6]) -> ([8]);
rename<uint128>([8]) -> ([9]);
jump() { 132() };
drop<Unit>([7]) -> ();
branch_align() -> ();
array_new<felt>() -> ([10]);
felt_const<1>() -> ([11]);
store_temp<Array<felt>>([10]) -> ([10]);
store_temp<felt>([11]) -> ([11]);
array_append<felt>([10], [11]) -> ([12]);
enum_init<core::PanicResult::<core::integer::uint128>, 1>([12]) -> ([13]);
store_temp<RangeCheck>([2]) -> ([14]);
store_temp<core::PanicResult::<core::integer::uint128>>([13]) -> ([13]);
rename<core::PanicResult::<core::integer::uint128>>([13]) -> ([15]);
return([14], [15]);
enum_init<core::PanicResult::<core::integer::uint128>, 0>([9]) -> ([16]);
store_temp<RangeCheck>([2]) -> ([17]);
store_temp<core::PanicResult::<core::integer::uint128>>([16]) -> ([16]);
rename<core::PanicResult::<core::integer::uint128>>([16]) -> ([18]);
return([17], [18]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<uint128>([1]) -> ([6]);
store_temp<uint128>([2]) -> ([7]);
function_call<user@core::integer::uint128_checked_sub>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::uint128>>([4]) { 142([8]) 146([9]) };
branch_align() -> ();
store_temp<uint128>([8]) -> ([10]);
rename<uint128>([10]) -> ([11]);
jump() { 158() };
drop<Unit>([9]) -> ();
branch_align() -> ();
array_new<felt>() -> ([12]);
felt_const<1>() -> ([13]);
store_temp<Array<felt>>([12]) -> ([12]);
store_temp<felt>([13]) -> ([13]);
array_append<felt>([12], [13]) -> ([14]);
enum_init<core::PanicResult::<core::integer::uint128>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::PanicResult::<core::integer::uint128>>([15]) -> ([15]);
rename<core::PanicResult::<core::integer::uint128>>([15]) -> ([17]);
return([16], [17]);
enum_init<core::PanicResult::<core::integer::uint128>, 0>([11]) -> ([18]);
store_temp<RangeCheck>([3]) -> ([19]);
store_temp<core::PanicResult::<core::integer::uint128>>([18]) -> ([18]);
rename<core::PanicResult::<core::integer::uint128>>([18]) -> ([20]);
return([19], [20]);
uint128_overflow_add([0], [1], [2]) { fallthrough([3], [4]) 171([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::uint128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::uint128>>([7]) -> ([9]);
jump() { 179() };
drop<uint128>([6]) -> ();
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::uint128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::uint128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::uint128>>([9]) -> ([13]);
return([12], [13]);
uint128s_from_felt([0], [1]) { fallthrough([2], [3]) 190([4], [5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::uint128>, 0>([3]) -> ([7]);
store_temp<RangeCheck>([2]) -> ([2]);
rename<RangeCheck>([2]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::uint128>>([7]) -> ([9]);
jump() { 199() };
branch_align() -> ();
struct_construct<Tuple<uint128, uint128>>([5], [6]) -> ([10]);
drop<Tuple<uint128, uint128>>([10]) -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::option::Option::<core::integer::uint128>, 1>([11]) -> ([12]);
store_temp<RangeCheck>([4]) -> ([4]);
rename<RangeCheck>([4]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([12]) -> ([12]);
rename<core::option::Option::<core::integer::uint128>>([12]) -> ([9]);
rename<RangeCheck>([8]) -> ([13]);
rename<core::option::Option::<core::integer::uint128>>([9]) -> ([14]);
return([13], [14]);
uint128_overflow_sub([0], [1], [2]) { fallthrough([3], [4]) 210([5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::uint128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([3]);
rename<RangeCheck>([3]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::uint128>>([7]) -> ([9]);
jump() { 218() };
drop<uint128>([6]) -> ();
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::option::Option::<core::integer::uint128>, 1>([10]) -> ([11]);
store_temp<RangeCheck>([5]) -> ([5]);
rename<RangeCheck>([5]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([11]) -> ([11]);
rename<core::option::Option::<core::integer::uint128>>([11]) -> ([9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::uint128>>([9]) -> ([13]);
return([12], [13]);

fib_uint128::fib_uint128::fib@0([0]: RangeCheck, [1]: uint128, [2]: uint128, [3]: uint128) -> (RangeCheck, core::PanicResult::<core::integer::uint128>);
core::integer::uint128_add@86([0]: RangeCheck, [1]: uint128, [2]: uint128) -> (RangeCheck, core::PanicResult::<core::integer::uint128>);
core::integer::uint128_from_felt@112([0]: RangeCheck, [1]: felt) -> (RangeCheck, core::PanicResult::<core::integer::uint128>);
core::integer::uint128_sub@137([0]: RangeCheck, [1]: uint128, [2]: uint128) -> (RangeCheck, core::PanicResult::<core::integer::uint128>);
core::integer::uint128_checked_add@163([0]: RangeCheck, [1]: uint128, [2]: uint128) -> (RangeCheck, core::option::Option::<core::integer::uint128>);
core::integer::uint128_try_from_felt@182([0]: RangeCheck, [1]: felt) -> (RangeCheck, core::option::Option::<core::integer::uint128>);
core::integer::uint128_checked_sub@202([0]: RangeCheck, [1]: uint128, [2]: uint128) -> (RangeCheck, core::option::Option::<core::integer::uint128>);
