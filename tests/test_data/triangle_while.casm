%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 1, ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -4], ap++;
call rel 9;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 0, ap++;
call rel 22;
ret;
[ap + 0] = [fp + -5] + 1, ap++;
[fp + -6] = [ap + 0] + [ap + -1], ap++;
jmp rel 6 if [ap + -1] != 0;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = [fp + -6], ap++;
ret;
[fp + -6] = [[fp + -3] + 0];
[ap + 0] = [fp + -6] + 1, ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3] + 1, ap++;
call rel -16;
ret;
[fp + -4] = [ap + 0] + [fp + -5], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -5] + 0], ap++;
jmp rel 8;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
jmp rel 8 if [ap + -2] != 0;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [fp + -3] + [ap + -3], ap++;
call rel -24;
ret;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [fp + -3], ap++;
ret;
