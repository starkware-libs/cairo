type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@examples::fib_loop::fib[expr22]> = function_call<user@examples::fib_loop::fib[expr22]>;
libfunc drop<felt252> = drop<felt252>;
libfunc rename<felt252> = rename<felt252>;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc branch_align = branch_align;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_const<1> = felt252_const<1>;
libfunc felt252_sub = felt252_sub;
libfunc felt252_add = felt252_add;

disable_ap_tracking() -> (); // 0
store_temp<felt252>([2]) -> ([7]); // 1
store_temp<felt252>([0]) -> ([8]); // 2
store_temp<felt252>([1]) -> ([9]); // 3
function_call<user@examples::fib_loop::fib[expr22]>([7], [8], [9]) -> ([3], [4], [5], [6]); // 4
drop<felt252>([3]) -> (); // 5
drop<felt252>([4]) -> (); // 6
drop<felt252>([5]) -> (); // 7
rename<felt252>([6]) -> ([10]); // 8
return([10]); // 9
disable_ap_tracking() -> (); // 10
dup<felt252>([0]) -> ([0], [3]); // 11
felt252_is_zero([3]) { fallthrough() 20([4]) }; // 12
branch_align() -> (); // 13
store_temp<felt252>([0]) -> ([5]); // 14
store_temp<felt252>([2]) -> ([6]); // 15
dup<felt252>([1]) -> ([1], [7]); // 16
store_temp<felt252>([7]) -> ([7]); // 17
store_temp<felt252>([1]) -> ([8]); // 18
return([5], [6], [7], [8]); // 19
branch_align() -> (); // 20
drop<NonZero<felt252>>([4]) -> (); // 21
felt252_const<1>() -> ([9]); // 22
felt252_sub([0], [9]) -> ([10]); // 23
dup<felt252>([2]) -> ([2], [12]); // 24
felt252_add([1], [12]) -> ([11]); // 25
store_temp<felt252>([10]) -> ([17]); // 26
store_temp<felt252>([2]) -> ([18]); // 27
store_temp<felt252>([11]) -> ([19]); // 28
function_call<user@examples::fib_loop::fib[expr22]>([17], [18], [19]) -> ([13], [14], [15], [16]); // 29
rename<felt252>([13]) -> ([20]); // 30
rename<felt252>([14]) -> ([21]); // 31
rename<felt252>([15]) -> ([22]); // 32
rename<felt252>([16]) -> ([23]); // 33
return([20], [21], [22], [23]); // 34

examples::fib_loop::fib@0([0]: felt252, [1]: felt252, [2]: felt252) -> (felt252);
examples::fib_loop::fib[expr22]@10([0]: felt252, [1]: felt252, [2]: felt252) -> (felt252, felt252, felt252, felt252);
