type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type core::panics::Panic = Struct<ut@core::panics::Panic>;
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>>;
type Tuple<Unit> = Struct<ut@Tuple, Unit>;
type core::panics::PanicResult::<((),)> = Enum<ut@core::panics::PanicResult::<((),)>, Tuple<Unit>, Tuple<core::panics::Panic, Array<felt252>>>;

libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc branch_align = branch_align;
libfunc drop<Unit> = drop<Unit>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<1> = felt252_const<1>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 1> = enum_init<core::panics::PanicResult::<((),)>, 1>;
libfunc store_temp<core::panics::PanicResult::<((),)>> = store_temp<core::panics::PanicResult::<((),)>>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 0> = enum_init<core::panics::PanicResult::<((),)>, 0>;

struct_construct<Unit>() -> ([0]);
enum_init<core::bool, 1>([0]) -> ([1]);
store_temp<core::bool>([1]) -> ([1]);
enum_match<core::bool>([1]) { fallthrough([2]) 15([3]) };
branch_align() -> ();
drop<Unit>([2]) -> ();
array_new<felt252>() -> ([4]);
felt252_const<1>() -> ([5]);
store_temp<felt252>([5]) -> ([5]);
array_append<felt252>([4], [5]) -> ([6]);
struct_construct<core::panics::Panic>() -> ([7]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([7], [6]) -> ([8]);
enum_init<core::panics::PanicResult::<((),)>, 1>([8]) -> ([9]);
store_temp<core::panics::PanicResult::<((),)>>([9]) -> ([10]);
return([10]);
branch_align() -> ();
drop<Unit>([3]) -> ();
struct_construct<Unit>() -> ([11]);
struct_construct<Tuple<Unit>>([11]) -> ([12]);
enum_init<core::panics::PanicResult::<((),)>, 0>([12]) -> ([13]);
store_temp<core::panics::PanicResult::<((),)>>([13]) -> ([14]);
return([14]);

examples::testing::run_tests@0() -> (core::panics::PanicResult::<((),)>);
