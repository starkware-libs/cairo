//! > cairo_code
use std::format;

fn foo(a: int) -> felt252 {
    return a;
}


//! > syntax
use                  source.cairo meta.use.cairo keyword.other.cairo
␣                    source.cairo meta.use.cairo
std                  source.cairo meta.use.cairo entity.name.namespace.cairo
::                   source.cairo meta.use.cairo keyword.operator.namespace.cairo
format               source.cairo meta.use.cairo
;                    source.cairo meta.use.cairo punctuation.semi.cairo
fn                   source.cairo meta.function.definition.cairo keyword.other.fn.cairo
␣                    source.cairo meta.function.definition.cairo
foo                  source.cairo meta.function.definition.cairo entity.name.function.cairo
(                    source.cairo meta.function.definition.cairo punctuation.brackets.round.cairo
a                    source.cairo meta.function.definition.cairo variable.other.cairo
:                    source.cairo meta.function.definition.cairo keyword.operator.key-value.cairo
␣                    source.cairo meta.function.definition.cairo
int                  source.cairo meta.function.definition.cairo variable.other.cairo
)                    source.cairo meta.function.definition.cairo punctuation.brackets.round.cairo
␣                    source.cairo meta.function.definition.cairo
->                   source.cairo meta.function.definition.cairo keyword.operator.arrow.skinny.cairo
␣                    source.cairo meta.function.definition.cairo
felt252              source.cairo meta.function.definition.cairo entity.name.type.numeric.cairo
␣                    source.cairo meta.function.definition.cairo
{                    source.cairo meta.function.definition.cairo punctuation.brackets.curly.cairo
return               source.cairo keyword.control.cairo
a                    source.cairo variable.other.cairo
;                    source.cairo punctuation.semi.cairo
}                    source.cairo punctuation.brackets.curly.cairo
