//! > cairo_code
fn test() {
    let expensive_closure =  || -> u32 {
        let x = num + 5;
        x
    };
}

//! > syntax
fn                   source.cairo meta.function.definition.cairo keyword.other.fn.cairo
␣                    source.cairo meta.function.definition.cairo
test                 source.cairo meta.function.definition.cairo entity.name.function.cairo
(                    source.cairo meta.function.definition.cairo punctuation.brackets.round.cairo
)                    source.cairo meta.function.definition.cairo punctuation.brackets.round.cairo
␣                    source.cairo meta.function.definition.cairo
{                    source.cairo meta.function.definition.cairo punctuation.brackets.curly.cairo
let                  source.cairo keyword.other.cairo storage.type.cairo
expensive_closure    source.cairo variable.other.cairo
=                    source.cairo keyword.operator.assignment.equal.cairo
|                    source.cairo keyword.operator.logical.cairo
|                    source.cairo keyword.operator.logical.cairo
->                   source.cairo keyword.operator.arrow.skinny.cairo
u32                  source.cairo entity.name.type.numeric.cairo
{                    source.cairo punctuation.brackets.curly.cairo
let                  source.cairo keyword.other.cairo storage.type.cairo
x                    source.cairo variable.other.cairo
=                    source.cairo keyword.operator.assignment.equal.cairo
num                  source.cairo variable.other.cairo
+                    source.cairo keyword.operator.math.cairo
5                    source.cairo constant.numeric.decimal.cairo
;                    source.cairo punctuation.semi.cairo
x                    source.cairo variable.other.cairo
}                    source.cairo punctuation.brackets.curly.cairo
;                    source.cairo punctuation.semi.cairo
}                    source.cairo punctuation.brackets.curly.cairo
