//! > cairo_code
fn foo (x:T) -> S
{
    let x = -5 + 3;
    let y : T = x*2 + 3*5; // Comment.
    let z = ;
    let v = bool::True == false;
    5 + Struct{a: 5, b: Struct2{_gg: ()}};
    return df == 6;
    x + y
}

pub impl A of B {
    fn foo() {
        if bla.
        // The module below should parse correctly, not inside this impl.
    }
}

pub mod my_mod{
    fn bar (x:T0, s: S) -> X {
        x.a *+-. s.s * foo(1,3)
    }
    struct A{
        x: a, // Comment.
        y: int
    }

}

skipped tokens


//! > syntax
fn                   source.cairo keyword.other.fn.cairo
foo                  source.cairo variable.other.cairo
(                    source.cairo punctuation.brackets.round.cairo
x                    source.cairo variable.other.cairo
:                    source.cairo keyword.operator.key-value.cairo
T                    source.cairo entity.name.type.cairo
)                    source.cairo punctuation.brackets.round.cairo
->                   source.cairo keyword.operator.arrow.skinny.cairo
S                    source.cairo entity.name.type.cairo
{                    source.cairo punctuation.brackets.curly.cairo
let                  source.cairo keyword.other.cairo storage.type.cairo
x                    source.cairo variable.other.cairo
=                    source.cairo keyword.operator.assignment.equal.cairo
-                    source.cairo keyword.operator.math.cairo
5                    source.cairo constant.numeric.decimal.cairo
+                    source.cairo keyword.operator.math.cairo
3                    source.cairo constant.numeric.decimal.cairo
;                    source.cairo punctuation.semi.cairo
let                  source.cairo keyword.other.cairo storage.type.cairo
y                    source.cairo variable.other.cairo
:                    source.cairo keyword.operator.key-value.cairo
T                    source.cairo entity.name.type.cairo
=                    source.cairo keyword.operator.assignment.equal.cairo
x                    source.cairo variable.other.cairo
*                    source.cairo keyword.operator.desnap.cairo
2                    source.cairo constant.numeric.decimal.cairo
+                    source.cairo keyword.operator.math.cairo
3                    source.cairo constant.numeric.decimal.cairo
*                    source.cairo keyword.operator.desnap.cairo
5                    source.cairo constant.numeric.decimal.cairo
;                    source.cairo punctuation.semi.cairo
//                   source.cairo comment.line.double-slash.cairo punctuation.definition.comment.cairo
␣Comment.            source.cairo comment.line.double-slash.cairo
let                  source.cairo keyword.other.cairo storage.type.cairo
z                    source.cairo variable.other.cairo
=                    source.cairo keyword.operator.assignment.equal.cairo
;                    source.cairo punctuation.semi.cairo
let                  source.cairo keyword.other.cairo storage.type.cairo
v                    source.cairo variable.other.cairo
=                    source.cairo keyword.operator.assignment.equal.cairo
bool                 source.cairo entity.name.type.primitive.cairo
::                   source.cairo keyword.operator.namespace.cairo
True                 source.cairo entity.name.type.cairo
==                   source.cairo keyword.operator.comparison.cairo
false                source.cairo constant.language.bool.cairo
;                    source.cairo punctuation.semi.cairo
5                    source.cairo constant.numeric.decimal.cairo
+                    source.cairo keyword.operator.math.cairo
Struct               source.cairo entity.name.type.cairo
{                    source.cairo punctuation.brackets.curly.cairo
a                    source.cairo variable.other.cairo
:                    source.cairo keyword.operator.key-value.cairo
5                    source.cairo constant.numeric.decimal.cairo
,                    source.cairo punctuation.comma.cairo
b                    source.cairo variable.other.cairo
:                    source.cairo keyword.operator.key-value.cairo
Struct2              source.cairo entity.name.type.cairo
{                    source.cairo punctuation.brackets.curly.cairo
_gg                  source.cairo variable.other.cairo
:                    source.cairo keyword.operator.key-value.cairo
(                    source.cairo punctuation.brackets.round.cairo
)                    source.cairo punctuation.brackets.round.cairo
}                    source.cairo punctuation.brackets.curly.cairo
}                    source.cairo punctuation.brackets.curly.cairo
;                    source.cairo punctuation.semi.cairo
return               source.cairo keyword.control.cairo
df                   source.cairo variable.other.cairo
==                   source.cairo keyword.operator.comparison.cairo
6                    source.cairo constant.numeric.decimal.cairo
;                    source.cairo punctuation.semi.cairo
x                    source.cairo variable.other.cairo
+                    source.cairo keyword.operator.math.cairo
y                    source.cairo variable.other.cairo
}                    source.cairo punctuation.brackets.curly.cairo
pub                  source.cairo keyword.other.cairo
impl                 source.cairo keyword.other.cairo
A                    source.cairo entity.name.type.cairo
of                   source.cairo keyword.other.cairo
B                    source.cairo entity.name.type.cairo
{                    source.cairo punctuation.brackets.curly.cairo
fn                   source.cairo meta.function.definition.cairo keyword.other.fn.cairo
␣                    source.cairo meta.function.definition.cairo
foo                  source.cairo meta.function.definition.cairo entity.name.function.cairo
(                    source.cairo meta.function.definition.cairo punctuation.brackets.round.cairo
)                    source.cairo meta.function.definition.cairo punctuation.brackets.round.cairo
␣                    source.cairo meta.function.definition.cairo
{                    source.cairo meta.function.definition.cairo punctuation.brackets.curly.cairo
if                   source.cairo keyword.control.cairo
bla                  source.cairo variable.other.cairo
.                    source.cairo keyword.operator.access.dot.cairo
//                   source.cairo comment.line.double-slash.cairo punctuation.definition.comment.cairo
␣The␣module␣below␣should␣parse␣correctly,␣not␣inside␣this␣impl. source.cairo comment.line.double-slash.cairo
}                    source.cairo punctuation.brackets.curly.cairo
}                    source.cairo punctuation.brackets.curly.cairo
pub                  source.cairo keyword.other.cairo
mod                  source.cairo storage.type.cairo
my_mod               source.cairo entity.name.module.cairo
{                    source.cairo punctuation.brackets.curly.cairo
fn                   source.cairo keyword.other.fn.cairo
bar                  source.cairo variable.other.cairo
(                    source.cairo punctuation.brackets.round.cairo
x                    source.cairo variable.other.cairo
:                    source.cairo keyword.operator.key-value.cairo
T0                   source.cairo entity.name.type.cairo
,                    source.cairo punctuation.comma.cairo
s                    source.cairo variable.other.cairo
:                    source.cairo keyword.operator.key-value.cairo
S                    source.cairo entity.name.type.cairo
)                    source.cairo punctuation.brackets.round.cairo
->                   source.cairo keyword.operator.arrow.skinny.cairo
X                    source.cairo entity.name.type.cairo
{                    source.cairo punctuation.brackets.curly.cairo
x                    source.cairo variable.other.cairo
.                    source.cairo keyword.operator.access.dot.cairo
a␣                   source.cairo
*                    source.cairo keyword.operator.math.cairo
+                    source.cairo keyword.operator.math.cairo
-                    source.cairo keyword.operator.math.cairo
.                    source.cairo keyword.operator.access.dot.cairo
s                    source.cairo variable.other.cairo
.                    source.cairo keyword.operator.access.dot.cairo
s␣                   source.cairo
*                    source.cairo keyword.operator.math.cairo
foo                  source.cairo meta.function.call.cairo entity.name.function.cairo
(                    source.cairo meta.function.call.cairo punctuation.brackets.round.cairo
1                    source.cairo meta.function.call.cairo constant.numeric.decimal.cairo
,                    source.cairo meta.function.call.cairo punctuation.comma.cairo
3                    source.cairo meta.function.call.cairo constant.numeric.decimal.cairo
)                    source.cairo meta.function.call.cairo punctuation.brackets.round.cairo
}                    source.cairo punctuation.brackets.curly.cairo
struct               source.cairo keyword.declaration.struct.cairo storage.type.cairo
A                    source.cairo entity.name.type.struct.cairo
{                    source.cairo punctuation.brackets.curly.cairo
x                    source.cairo variable.other.cairo
:                    source.cairo keyword.operator.key-value.cairo
a                    source.cairo variable.other.cairo
,                    source.cairo punctuation.comma.cairo
//                   source.cairo comment.line.double-slash.cairo punctuation.definition.comment.cairo
␣Comment.            source.cairo comment.line.double-slash.cairo
y                    source.cairo variable.other.cairo
:                    source.cairo keyword.operator.key-value.cairo
int                  source.cairo variable.other.cairo
}                    source.cairo punctuation.brackets.curly.cairo
}                    source.cairo punctuation.brackets.curly.cairo
skipped              source.cairo variable.other.cairo
tokens               source.cairo variable.other.cairo
