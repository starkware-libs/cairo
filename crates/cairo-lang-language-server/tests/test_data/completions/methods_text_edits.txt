//! > Test completion for methods with parameters.

//! > test_runner_name
test_completions_text_edits

//! > cairo_project.toml
[crate_roots]
hello = "src"

[config.global]
edition = "2024_07"

//! > cairo_code
mod hidden_trait {
    pub trait ATrait1<T> {
        fn some_method(self: @T, param1: i32, param2: String);
    }
    impl Felt252ATraitImpl of ATrait1<felt252> {
        fn some_method(self: @felt252, param1: i32, param2: String) {}
    }
}

use hidden_trait::ATrait1;

mod inner_mod {
    fn main() {
        let x = 5_felt252;
        x.some_method<caret>
    }
}

//! > Completions #0
        x.some_method<caret>
--------------------------
Completion: some_method()
Text edit: use super::ATrait1;

//! > ==========================================================================

//! > Test completion for methods without parameters.

//! > test_runner_name
test_completions_text_edits

//! > cairo_project.toml
[crate_roots]
hello = "src"

[config.global]
edition = "2024_07"

//! > cairo_code
mod hidden_trait {
    pub trait ATrait2<T> {
        fn no_param_method(self: @T);
    }
    impl Felt252ATraitImpl of ATrait2<felt252> {
        fn no_param_method(self: @felt252) {}
    }
}

use hidden_trait::ATrait2;

mod inner_mod {
    fn main() {
        let x = 5_felt252;
        x.no_param_method<caret>
    }
}

//! > Completions #0
        x.no_param_method<caret>
--------------------------
Completion: no_param_method()
Text edit: use super::ATrait2;
