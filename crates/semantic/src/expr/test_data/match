//! > Test match

//! > test_function_name
test_function_diagnostics

//! > function
enum A {
    a: (),
    b: felt,
}

func foo(b: A) -> felt {
	match (b, 4) {
      (A::a(x), _) => { 1 },
      (A::b(x), 1) => { x },
      (7, 1) => { x },
      (A::b(x), 1, _) => { x },
	}
    let x = (5,true);
    let (y,_) = x;
    y
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Unexpected type for literal pattern. Expected: felt. Got: "test_crate::A"
 --> lib.cairo:10:8
      (7, 1) => { x },
       ^

error: Wrong number of generic arguments. Expected 2, found: 3
 --> lib.cairo:11:7
      (A::b(x), 1, _) => { x },
      ^*************^
