//! > Test enum constructor.

//! > test_function_name
test_function_lowering

//! > function
func foo(a: felt) -> MyEnum {
    let x = true;
    MyEnum::B({(); 5})
}

//! > function_name
foo

//! > module_code
enum MyEnum {
  A: (),
  B: felt,
  C: Box::<((), felt)>,
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_format
blk0:
Inputs:
Statements:
  (v3: core::felt) <- 5u
  (v4: core::PanicResult::<test_crate::MyEnum>) <- PanicResult::Ok(v3)
Drops: v3
End:
  Callsite(v4)

blk1:
Inputs: v0: core::felt
Statements:
  (v1: ()) <- struct_construct()
  (v2: core::bool) <- bool::True(v1)
  (v5: core::PanicResult::<test_crate::MyEnum>) <- blk0()
  (v6: test_crate::MyEnum) <- MyEnum::B(v5)
  (v7: core::PanicResult::<test_crate::MyEnum>) <- PanicResult::Ok(v6)
Drops: v0, v1, v2
End:
  Callsite(v7)
