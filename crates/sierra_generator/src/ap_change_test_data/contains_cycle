//! > Test contains cycles.

//! > test_function_name
contains_cycles_test

//! > module_code
func non_cyclic() {
    non_cyclic2();
}

func non_cyclic2() {
}

func simple_cycle(x: felt) {
    if x == 0 {
        {
            simple_cycle(x)
        }
    }
}

func calls_simple_cycle(x: felt) {
    simple_cycle(x)
}

// a calls b, which then calls a.
func cycle_of_len2_a(x: felt) {
    cycle_of_len2_b(x)
}

func cycle_of_len2_b(x: felt) {
    cycle_of_len2_a(x)
}

func call_cycle_of_len2(x: felt) {
    cycle_of_len2_a(x)
}

//! > result
non_cyclic: Some(false)
non_cyclic2: Some(false)
simple_cycle: Some(true)
calls_simple_cycle: Some(true)
cycle_of_len2_a: Some(true)
cycle_of_len2_b: Some(true)
call_cycle_of_len2: Some(true)
