//! > Block

//! > test_function_name
check_find_local_variables

//! > function_name
foo

//! > function_code
func foo(x: felt) -> felt {
    let x1 = x + x;
    let x2 = x1 + x1;
    // TODO(lior): Replace with let (y, z) = { ... } and make sure z does not appear in the result.
    let y = {
        revoke_ap()
        x1 + x1
    };
    // TODO(lior): Replace with "let w = x1 + x2 + z".
    let w = x1 + x2;
    revoke_ap();
    x1 + y
}

//! > module_code
// Revokes ap since this function is recursive.
func revoke_ap() -> felt {
    revoke_ap()
}

//! > lowering_format
blk0:
Inputs:
Statements:
  (v3: core::felt) <- test::revoke_ap()
  (v4: core::felt) <- core::felt_add(v1, v1)
Drops: v3
End:
  Callsite(v4)

blk1 (root):
Inputs: v0: core::felt
Statements:
  (v1: core::felt) <- core::felt_add(v0, v0)
  (v2: core::felt) <- core::felt_add(v1, v1)
  (v5: core::felt) <- blk0()
  (v6: core::felt) <- core::felt_add(v1, v2)
  (v7: core::felt) <- test::revoke_ap()
  (v8: core::felt) <- core::felt_add(v1, v5)
Drops: v0, v1, v2, v5, v6, v7
End:
  Callsite(v8)

//! > local_variables
v1, v2, v5
