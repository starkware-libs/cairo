//! > Match extern

//! > test_function_name
check_find_local_variables

//! > function_name
foo

//! > function_code
func foo(x: felt) -> felt {
    match felt_jump_nz(x) {
        JumpNzResult::Zero(_) => 1,
        JumpNzResult::NonZero(y) => {
            revoke_ap()
            // y is not revoked, since it's the same as x, which is local.
            unwrap_nz::<felt>(y)
        },
    }
    let x2 = x + x;
    match felt_jump_nz(x2) {
        JumpNzResult::Zero(_) => 1,
        JumpNzResult::NonZero(y) => {
            revoke_ap()
            // x2 is revoked, since y is identical to x2.
            unwrap_nz::<felt>(y)
        },
    }
}

//! > module_code
// Revokes ap since this function is recursive.
func revoke_ap() -> felt {
    revoke_ap()
}

//! > lowering_format
blk0:
Inputs: v5: core::felt
Statements:
Drops:
End:
  Callsite(v5)

blk1:
Inputs: v6: core::felt
Statements:
  (v7: core::PanicResult::<core::felt>) <- PanicResult::Ok(v6)
Drops: v6, v4, v3, v0
End:
  Return(v7)

blk2:
Inputs:
Statements:
  (v4: core::PanicResult::<core::felt>) <- test_crate::revoke_ap()
  (v8: core::felt) <- match_enum(v4) {
    PanicResult::Ok => blk0,
    PanicResult::Ok => blk1,
  }
  (v9: core::felt) <- core::unwrap_nz<Type(core::felt),>(v3)
  (v10: core::PanicResult::<core::felt>) <- PanicResult::Ok(v9)
Drops: v8, v9
End:
  Callsite(v10)

blk3:
Inputs:
Statements:
  (v1: core::felt) <- 1u
  (v2: core::PanicResult::<core::felt>) <- PanicResult::Ok(v1)
Drops: v1
End:
  Callsite(v2)

blk4:
Inputs: v3: core::NonZero::<core::felt>
Statements:
  (v11: core::PanicResult::<core::felt>) <- blk2()
  (v12: core::PanicResult::<core::felt>) <- PanicResult::Ok(v11)
Drops:
End:
  Callsite(v12)

blk5:
Inputs: v19: core::felt
Statements:
Drops:
End:
  Callsite(v19)

blk6:
Inputs: v20: core::felt
Statements:
  (v21: core::PanicResult::<core::felt>) <- PanicResult::Ok(v20)
Drops: v20, v18, v17, v0, v13, v14
End:
  Return(v21)

blk7:
Inputs:
Statements:
  (v18: core::PanicResult::<core::felt>) <- test_crate::revoke_ap()
  (v22: core::felt) <- match_enum(v18) {
    PanicResult::Ok => blk5,
    PanicResult::Ok => blk6,
  }
  (v23: core::felt) <- core::unwrap_nz<Type(core::felt),>(v17)
  (v24: core::PanicResult::<core::felt>) <- PanicResult::Ok(v23)
Drops: v22, v23
End:
  Callsite(v24)

blk8:
Inputs:
Statements:
  (v15: core::felt) <- 1u
  (v16: core::PanicResult::<core::felt>) <- PanicResult::Ok(v15)
Drops: v15
End:
  Callsite(v16)

blk9:
Inputs: v17: core::NonZero::<core::felt>
Statements:
  (v25: core::PanicResult::<core::felt>) <- blk7()
  (v26: core::PanicResult::<core::felt>) <- PanicResult::Ok(v25)
Drops:
End:
  Callsite(v26)

blk10:
Inputs: v0: core::felt
Statements:
  (v13: core::PanicResult::<core::felt>) <- match core::felt_jump_nz(v0) {
    () => blk3,
    (v3) => blk4,
  }
  (v14: core::felt) <- core::felt_add(v0, v0)
  (v27: core::PanicResult::<core::felt>) <- match core::felt_jump_nz(v14) {
    () => blk8,
    (v17) => blk9,
  }
  (v28: core::PanicResult::<core::felt>) <- PanicResult::Ok(v27)
Drops: v0, v13, v14
End:
  Callsite(v28)

//! > local_variables
v14

//! > ==========================================================================

//! > Match extern - if

//! > test_function_name
check_find_local_variables

//! > function_name
foo

//! > function_code
func foo(x: felt) -> felt {
    let x1 = x + x;
    let x2 = x1 + x1;
    let x3 = if x2 == 0 { 1 } else { 2 };
    // The "if" revokes "x1".
    x1 + x3
    let x4 = if x1 == 0 { 1 } else { 2 };
    revoke_ap();
    x4
}

//! > module_code
// Revokes ap since this function is recursive.
func revoke_ap() -> felt {
    revoke_ap()
}

//! > lowering_format
blk0:
Inputs:
Statements:
  (v3: core::felt) <- 1u
  (v4: core::PanicResult::<core::felt>) <- PanicResult::Ok(v3)
Drops: v3
End:
  Callsite(v4)

blk1:
Inputs: v5: core::NonZero::<core::felt>
Statements:
  (v6: core::felt) <- 2u
  (v7: core::PanicResult::<core::felt>) <- PanicResult::Ok(v6)
Drops: v5, v6
End:
  Callsite(v7)

blk2:
Inputs:
Statements:
  (v10: core::felt) <- 1u
  (v11: core::PanicResult::<core::felt>) <- PanicResult::Ok(v10)
Drops: v10
End:
  Callsite(v11)

blk3:
Inputs: v12: core::NonZero::<core::felt>
Statements:
  (v13: core::felt) <- 2u
  (v14: core::PanicResult::<core::felt>) <- PanicResult::Ok(v13)
Drops: v12, v13
End:
  Callsite(v14)

blk4:
Inputs: v17: core::felt
Statements:
Drops:
End:
  Callsite(v17)

blk5:
Inputs: v18: core::felt
Statements:
  (v19: core::PanicResult::<core::felt>) <- PanicResult::Ok(v18)
Drops: v18, v0, v1, v2, v9, v15, v16
End:
  Return(v19)

blk6:
Inputs: v0: core::felt
Statements:
  (v1: core::felt) <- core::felt_add(v0, v0)
  (v2: core::felt) <- core::felt_add(v1, v1)
  (v8: core::PanicResult::<core::felt>) <- match core::felt_jump_nz(v2) {
    () => blk0,
    (v5) => blk1,
  }
  (v9: core::felt) <- core::felt_add(v1, v8)
  (v15: core::PanicResult::<core::felt>) <- match core::felt_jump_nz(v1) {
    () => blk2,
    (v12) => blk3,
  }
  (v16: core::PanicResult::<core::felt>) <- test_crate::revoke_ap()
  (v20: core::felt) <- match_enum(v16) {
    PanicResult::Ok => blk4,
    PanicResult::Ok => blk5,
  }
  (v21: core::PanicResult::<core::felt>) <- PanicResult::Ok(v15)
Drops: v0, v1, v2, v9, v20
End:
  Callsite(v21)

//! > local_variables
v1, v15

//! > ==========================================================================

//! > Match extern early return

//! > test_function_name
check_find_local_variables

//! > function_name
foo

//! > function_code
func foo(x: felt) -> felt {
    let w1 = x + x;

    match felt_jump_nz(x) {
        JumpNzResult::Zero(_) => 1,
        JumpNzResult::NonZero(y) => {
            revoke_ap()
            return 0;
        },
    }

    // w1 is not revoked.
    let w2 = w1 + x;

    match felt_jump_nz(x) {
        JumpNzResult::Zero(_) => 1,
        JumpNzResult::NonZero(y) => {
            // Same as above, without revoke_ap() and without an early return.
            2
        },
    }

    // w2 is revoked.
    w2 + x
}

//! > module_code
// Revokes ap since this function is recursive.
func revoke_ap() -> felt {
    revoke_ap()
}

//! > lowering_format
blk0:
Inputs: v6: core::felt
Statements:
Drops:
End:
  Callsite(v6)

blk1:
Inputs: v7: core::felt
Statements:
  (v8: core::PanicResult::<core::felt>) <- PanicResult::Ok(v7)
Drops: v7, v5, v4, v0, v1
End:
  Return(v8)

blk2:
Inputs:
Statements:
  (v5: core::PanicResult::<core::felt>) <- test_crate::revoke_ap()
  (v9: core::felt) <- match_enum(v5) {
    PanicResult::Ok => blk0,
    PanicResult::Ok => blk1,
  }
  (v10: core::felt) <- 0u
  (v11: core::PanicResult::<core::felt>) <- PanicResult::Ok(v10)
Drops: v9, v10, v4, v0, v1
End:
  Return(v11)

blk3:
Inputs:
Statements:
  (v2: core::felt) <- 1u
  (v3: core::PanicResult::<core::felt>) <- PanicResult::Ok(v2)
Drops: v2
End:
  Callsite(v3)

blk4:
Inputs: v4: core::NonZero::<core::felt>
Statements:
  () <- blk2()
Drops:
End:
  Unreachable

blk5:
Inputs:
Statements:
  (v17: core::felt) <- 2u
  (v18: core::PanicResult::<core::felt>) <- PanicResult::Ok(v17)
Drops: v17
End:
  Callsite(v18)

blk6:
Inputs:
Statements:
  (v14: core::felt) <- 1u
  (v15: core::PanicResult::<core::felt>) <- PanicResult::Ok(v14)
Drops: v14
End:
  Callsite(v15)

blk7:
Inputs: v16: core::NonZero::<core::felt>
Statements:
  (v19: core::PanicResult::<core::felt>) <- blk5()
  (v20: core::PanicResult::<core::felt>) <- PanicResult::Ok(v19)
Drops: v16
End:
  Callsite(v20)

blk8:
Inputs: v0: core::felt
Statements:
  (v1: core::felt) <- core::felt_add(v0, v0)
  (v12: core::PanicResult::<core::felt>) <- match core::felt_jump_nz(v0) {
    () => blk3,
    (v4) => blk4,
  }
  (v13: core::felt) <- core::felt_add(v1, v0)
  (v21: core::PanicResult::<core::felt>) <- match core::felt_jump_nz(v0) {
    () => blk6,
    (v16) => blk7,
  }
  (v22: core::felt) <- core::felt_add(v13, v0)
  (v23: core::PanicResult::<core::felt>) <- PanicResult::Ok(v22)
Drops: v0, v1, v12, v13, v21, v22
End:
  Callsite(v23)

//! > local_variables
v13
