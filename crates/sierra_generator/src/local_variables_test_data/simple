//! > Simple local variables

//! > test_function_name
check_find_local_variables

//! > function_name
foo

//! > function_code
func foo(x: felt) -> felt {
    let y0 = x + x;
    let y1 = y0 + y0;
    let y2 = y1 + y1;  // Note: y2 is not used below.
    revoke_ap();
    let z = x + y1;
    revoke_ap();
    let w = x + y1 + z;
    x
}

//! > module_code
// Revokes ap since this function is recursive.
func revoke_ap() -> felt {
    revoke_ap()
}

//! > lowering_format
blk0:
Inputs: v5: core::felt
Statements:
Drops:
End:
  Callsite(v5)

blk1:
Inputs: v6: core::felt
Statements:
  (v7: core::PanicResult::<core::felt>) <- PanicResult::Ok(v6)
Drops: v6, v0, v1, v2, v3, v4
End:
  Return(v7)

blk2:
Inputs: v11: core::felt
Statements:
Drops:
End:
  Callsite(v11)

blk3:
Inputs: v12: core::felt
Statements:
  (v13: core::PanicResult::<core::felt>) <- PanicResult::Ok(v12)
Drops: v12, v0, v1, v2, v3, v8, v9, v10
End:
  Return(v13)

blk4:
Inputs: v0: core::felt
Statements:
  (v1: core::felt) <- core::felt_add(v0, v0)
  (v2: core::felt) <- core::felt_add(v1, v1)
  (v3: core::felt) <- core::felt_add(v2, v2)
  (v4: core::PanicResult::<core::felt>) <- test_crate::revoke_ap()
  (v8: core::felt) <- match_enum(v4) {
    PanicResult::Ok => blk0,
    PanicResult::Ok => blk1,
  }
  (v9: core::felt) <- core::felt_add(v0, v2)
  (v10: core::PanicResult::<core::felt>) <- test_crate::revoke_ap()
  (v14: core::felt) <- match_enum(v10) {
    PanicResult::Ok => blk2,
    PanicResult::Ok => blk3,
  }
  (v15: core::felt) <- core::felt_add(v0, v2)
  (v16: core::felt) <- core::felt_add(v15, v9)
  (v17: core::PanicResult::<core::felt>) <- PanicResult::Ok(v0)
Drops: v0, v1, v2, v3, v8, v9, v14, v15, v16
End:
  Callsite(v17)

//! > local_variables
v2, v9

//! > ==========================================================================

//! > Return revoked value

//! > test_function_name
check_find_local_variables

//! > function_name
foo

//! > function_code
func foo(x: felt) -> felt {
    let y0 = x + x;
    revoke_ap();
    return y0;
}

//! > module_code
// Revokes ap since this function is recursive.
func revoke_ap() -> felt {
    revoke_ap()
}

//! > lowering_format
blk0:
Inputs: v3: core::felt
Statements:
Drops:
End:
  Callsite(v3)

blk1:
Inputs: v4: core::felt
Statements:
  (v5: core::PanicResult::<core::felt>) <- PanicResult::Ok(v4)
Drops: v4, v0, v1, v2
End:
  Return(v5)

blk2:
Inputs: v0: core::felt
Statements:
  (v1: core::felt) <- core::felt_add(v0, v0)
  (v2: core::PanicResult::<core::felt>) <- test_crate::revoke_ap()
  (v6: core::felt) <- match_enum(v2) {
    PanicResult::Ok => blk0,
    PanicResult::Ok => blk1,
  }
  (v7: core::PanicResult::<core::felt>) <- PanicResult::Ok(v1)
Drops: v0, v1, v6
End:
  Return(v7)

//! > local_variables
v1

//! > ==========================================================================

//! > SameAsParam

//! > test_function_name
check_find_local_variables

//! > function_name
foo

//! > function_code
func foo(x: felt) -> felt {
    let y = x + x;
    let z = y + y;
    let (z0, z1) = dup::<felt>(z);
    let (z2, z3) = dup::<felt>(z1);
    let (z4, z5) = dup::<felt>(z2);
    revoke_ap();
    z4 + z5
}

//! > module_code
// Revokes ap since this function is recursive.
func revoke_ap() -> felt {
    revoke_ap()
}

//! > lowering_format
blk0:
Inputs: v10: core::felt
Statements:
Drops:
End:
  Callsite(v10)

blk1:
Inputs: v11: core::felt
Statements:
  (v12: core::PanicResult::<core::felt>) <- PanicResult::Ok(v11)
Drops: v11, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9
End:
  Return(v12)

blk2:
Inputs: v0: core::felt
Statements:
  (v1: core::felt) <- core::felt_add(v0, v0)
  (v2: core::felt) <- core::felt_add(v1, v1)
  (v3: core::felt, v4: core::felt) <- core::dup<Type(core::felt),>(v2)
  (v5: core::felt, v6: core::felt) <- core::dup<Type(core::felt),>(v4)
  (v7: core::felt, v8: core::felt) <- core::dup<Type(core::felt),>(v5)
  (v9: core::PanicResult::<core::felt>) <- test_crate::revoke_ap()
  (v13: core::felt) <- match_enum(v9) {
    PanicResult::Ok => blk0,
    PanicResult::Ok => blk1,
  }
  (v14: core::felt) <- core::felt_add(v7, v8)
  (v15: core::PanicResult::<core::felt>) <- PanicResult::Ok(v14)
Drops: v0, v1, v2, v3, v4, v5, v6, v7, v8, v13, v14
End:
  Callsite(v15)

//! > local_variables
v2
