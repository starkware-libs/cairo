//! > Test trivial pow2 by add loop

//! > test_runner_name
test_profiling

//! > cairo_code
fn pow2_14000() {
    pow2_by_add_loop(14000, 1);
}

fn pow2_by_add_loop(n: felt252, x: felt252) -> felt252 {
    if n == 0 {
        return x;
    } else {
        return pow2_by_add_loop(n - 1, x + x);
    }
}

//! > max_stack_trace_depth
10

//! > function_name
pow2_14000

//! > expected_profiling_info
Weight by sierra statement:
  statement 27: 42003 (withdraw_gas([0], [1]) { fallthrough([4], [5]) 56([6], [7]) })
  statement 31: 14001 (store_temp<RangeCheck>([4]) -> ([4]))
  statement 32: 14001 (store_temp<GasBuiltin>([8]) -> ([8]))
  statement 33: 14001 (felt252_is_zero([9]) { fallthrough() 43([10]) })
  statement 50: 14000 (store_temp<RangeCheck>([4]) -> ([4]))
  statement 51: 14000 (store_temp<GasBuiltin>([14]) -> ([14]))
  statement 52: 14000 (store_temp<felt252>([16]) -> ([16]))
  statement 53: 14000 (store_temp<felt252>([18]) -> ([18]))
  statement 54: 14000 (function_call<user@test::pow2_by_add_loop>([4], [14], [16], [18]) -> ([19], [20], [21]))
  statement 55: 14000 (return([19], [20], [21]))
  statement 17: 3 (store_temp<core::panics::PanicResult::<((),)>>([12]) -> ([12]))
  statement 41: 3 (store_temp<core::panics::PanicResult::<(core::felt252,)>>([13]) -> ([13]))
  statement 3: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 4: 1 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 5: 1 (store_temp<felt252>([2]) -> ([2]))
  statement 6: 1 (store_temp<felt252>([3]) -> ([3]))
  statement 7: 1 (function_call<user@test::pow2_by_add_loop>([0], [1], [2], [3]) -> ([4], [5], [6]))
  statement 8: 1 (enum_match<core::panics::PanicResult::<(core::felt252,)>>([6]) { fallthrough([7]) 19([8]) })
  statement 15: 1 (store_temp<RangeCheck>([4]) -> ([4]))
  statement 16: 1 (store_temp<GasBuiltin>([9]) -> ([9]))
  statement 18: 1 (return([4], [9], [12]))
  statement 39: 1 (store_temp<RangeCheck>([4]) -> ([4]))
  statement 40: 1 (store_temp<GasBuiltin>([11]) -> ([11]))
  statement 42: 1 (return([4], [11], [13]))
Weight by concrete libfunc:
  libfunc withdraw_gas: 42003
  libfunc store_temp<GasBuiltin>: 28004
  libfunc store_temp<RangeCheck>: 28004
  libfunc store_temp<felt252>: 28002
  libfunc felt252_is_zero: 14001
  libfunc function_call<user@test::pow2_by_add_loop>: 14001
  libfunc store_temp<core::panics::PanicResult::<((),)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(core::felt252,)>>: 3
  libfunc enum_match<core::panics::PanicResult::<(core::felt252,)>>: 1
  return: 14002
Weight by generic libfunc:
  libfunc store_temp: 84016
  libfunc withdraw_gas: 42003
  libfunc felt252_is_zero: 14001
  libfunc function_call: 14001
  libfunc enum_match: 1
  return: 14002
Weight by user function (inc. generated):
  function test::pow2_by_add_loop: 168012
  function test::pow2_14000: 12
Weight by original user function (exc. generated):
  function test::pow2_by_add_loop: 168012
  function test::pow2_14000: 12
Weight by Cairo function:
  function lib.cairo::pow2_by_add_loop: 126009
  function core::Felt252PartialEq::eq: 42003
  function lib.cairo::pow2_14000: 12
Weight by Sierra stack trace:
  test::pow2_14000: 168024
  test::pow2_14000 -> test::pow2_by_add_loop: 168012
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 168000
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167988
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167976
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167964
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167952
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167940
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167928
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167916
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167904
Weight by Cairo stack trace:
  test::pow2_14000: 168024
  test::pow2_14000 -> test::pow2_by_add_loop: 168012
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 168000
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167988
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167976
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167964
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167952
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167940
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167928
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167916
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 167904

//! > ==========================================================================

//! > Test deserialization for calling `__validate__` with 2 calls

//! > test_runner_name
test_profiling

//! > cairo_code
#[starknet::contract(account)]
mod test_contract {
    use starknet::account::Call;

    #[storage]
    struct Storage {}

    #[external(v0)]
    fn __validate__(ref self: ContractState, calls: Array<Call>) {}
    #[external(v0)]
    fn __execute__(ref self: ContractState, mut calls: Array<Call>) -> Array<Span<felt252>> {
        array![]
    }
}

fn validate_call() {
    let serialized_args = array![
        0x2, // Array with 2 `Call`s.
        // Call 1.
        0xb, // to.
        0x219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c, // selector.
        0x3, // calldata length.
        0x7a6f98c03379b9513ca84cca1373ff452a7462a3b61598f0af5bb27ad7f76d1, // calldata 0.
        0x4db5d32, // calldata 1.
        0x0, // calldata 2.
        // Call 2.
        0xb, // to.
        0x2c0f7bf2d6cf5304c29171bf493feb222fef84bdaf17805a6574b0c2e8bcc87, // selector.
        0x9, // calldata length.
        0x4db5d32, // calldata 0.
        0x0, // calldata 1.
        0x896ba264a31df2, // calldata 2.
        0x0, // calldata 3.
        0x2, // calldata 4.
        0x53c91253bc9682c04929ca02ed00b3e423f6710d2ee7e0d5ebb06f3ecf368a8, // calldata 5.
        0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7, // calldata 6.
        0x54767f773cc172172c3afc5265bd0a76089c24cdef409635d27ac1a1fa96ca8, // calldata 7.
        0x65586264 // calldata 8.
    ]
        .span();
    test_contract::__wrapper____validate__(serialized_args);
}

//! > function_name
validate_call

//! > expected_profiling_info
Weight by sierra statement:
  statement 637: 16 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([44]) -> ([44]))
  statement 604: 14 (contract_address_try_from_felt252([0], [15]) { fallthrough([17], [18]) 663([19]) })
  statement 766: 12 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([40]) -> ([40]))
  statement 749: 10 (array_slice<felt252>([17], [21], [20], [22]) { fallthrough([23], [24]) 797([25]) })
  statement 758: 10 (array_slice<felt252>([29], [7], [18], [30]) { fallthrough([33], [34]) 768([35]) })
  statement 427: 9 (withdraw_gas([0], [1]) { fallthrough([5], [6]) 489([7], [8]) })
  statement 459: 8 (array_append<core::starknet::account::Call>([3], [24]) -> ([27]))
  statement 742: 8 (u32_try_from_felt252([0], [16]) { fallthrough([17], [18]) 811([19]) })
  statement 442: 6 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([15]) -> ([15]))
  statement 756: 6 (u32_overflowing_sub([23], [27], [28]) { fallthrough([29], [30]) 781([31], [32]) })
  statement 448: 4 (store_temp<core::array::Span::<core::felt252>>([2]) -> ([2]))
  statement 464: 4 (store_temp<core::array::Span::<core::felt252>>([22]) -> ([22]))
  statement 465: 4 (store_temp<Array<core::starknet::account::Call>>([27]) -> ([27]))
  statement 587: 4 (array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 595([5]) })
  statement 592: 4 (store_temp<Snapshot<Array<felt252>>>([3]) -> ([9]))
  statement 593: 4 (store_temp<core::option::Option::<core::felt252>>([8]) -> ([10]))
  statement 608: 4 (array_snapshot_pop_front<felt252>([9]) { fallthrough([20], [21]) 616([22]) })
  statement 613: 4 (store_temp<Snapshot<Array<felt252>>>([20]) -> ([26]))
  statement 614: 4 (store_temp<core::option::Option::<core::felt252>>([25]) -> ([27]))
  statement 625: 4 (store_temp<core::array::Span::<core::felt252>>([30]) -> ([30]))
  statement 724: 4 (array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 730([5]) })
  statement 727: 4 (store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]))
  statement 728: 4 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]))
  statement 755: 4 (store_temp<Snapshot<Array<felt252>>>([24]) -> ([24]))
  statement 77: 3 (store_temp<core::panics::PanicResult::<((),)>>([54]) -> ([54]))
  statement 96: 3 (withdraw_gas([0], [1]) { fallthrough([4], [5]) 231([6], [7]) })
  statement 143: 3 (array_snapshot_pop_front<felt252>([39]) { fallthrough([40], [41]) 161([42]) })
  statement 167: 3 (withdraw_gas_all([28], [51], [52]) { fallthrough([53], [54]) 181([55], [56]) })
  statement 179: 3 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([63]) -> ([63]))
  statement 431: 3 (store_temp<RangeCheck>([5]) -> ([5]))
  statement 432: 3 (store_temp<GasBuiltin>([9]) -> ([9]))
  statement 433: 3 (felt252_is_zero([10]) { fallthrough() 444([11]) })
  statement 65: 2 (store_temp<core::array::Span::<core::felt252>>([44]) -> ([44]))
  statement 103: 2 (array_snapshot_pop_front<felt252>([9]) { fallthrough([10], [11]) 111([12]) })
  statement 108: 2 (store_temp<Snapshot<Array<felt252>>>([10]) -> ([16]))
  statement 109: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([14]) -> ([17]))
  statement 128: 2 (store_temp<core::array::Span::<core::felt252>>([26]) -> ([26]))
  statement 129: 2 (store_temp<Array<core::starknet::account::Call>>([25]) -> ([25]))
  statement 164: 2 (get_builtin_costs() -> ([52]))
  statement 447: 2 (store_temp<RangeCheck>([5]) -> ([5]))
  statement 449: 2 (function_call<user@core::starknet::account::CallSerde::deserialize>([5], [2]) -> ([17], [18]))
  statement 450: 2 (store_temp<GasBuiltin>([16]) -> ([16]))
  statement 451: 2 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([18]) { fallthrough([19]) 480([20]) })
  statement 455: 2 (store_temp<GasBuiltin>([21]) -> ([21]))
  statement 456: 2 (enum_match<core::option::Option::<core::starknet::account::Call>>([23]) { fallthrough([24]) 469([25]) })
  statement 462: 2 (store_temp<RangeCheck>([17]) -> ([17]))
  statement 463: 2 (store_temp<GasBuiltin>([26]) -> ([26]))
  statement 466: 2 (store_temp<felt252>([29]) -> ([29]))
  statement 467: 2 (function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>([17], [26], [22], [27], [29]) -> ([30], [31], [32]))
  statement 468: 2 (return([30], [31], [32]))
  statement 594: 2 (jump() { 600() })
  statement 602: 2 (enum_match<core::option::Option::<core::felt252>>([10]) { fallthrough([15]) 667([16]) })
  statement 607: 2 (store_temp<RangeCheck>([17]) -> ([17]))
  statement 615: 2 (jump() { 621() })
  statement 622: 2 (enum_match<core::option::Option::<core::felt252>>([27]) { fallthrough([31]) 655([32]) })
  statement 624: 2 (store_temp<RangeCheck>([17]) -> ([17]))
  statement 626: 2 (function_call<user@core::array::SpanFelt252Serde::deserialize>([17], [30]) -> ([33], [34]))
  statement 627: 2 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([34]) { fallthrough([35]) 648([36]) })
  statement 630: 2 (enum_match<core::option::Option::<core::array::Span::<core::felt252>>>([38]) { fallthrough([39]) 639([40]) })
  statement 636: 2 (store_temp<RangeCheck>([33]) -> ([33]))
  statement 638: 2 (return([33], [44]))
  statement 729: 2 (jump() { 735() })
  statement 737: 2 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([13]) 820([14]) })
  statement 741: 2 (store_temp<felt252>([16]) -> ([16]))
  statement 748: 2 (store_temp<u32>([20]) -> ([20]))
  statement 754: 2 (store_temp<u32>([27]) -> ([27]))
  statement 759: 2 (branch_align() -> ())
  statement 765: 2 (store_temp<RangeCheck>([33]) -> ([33]))
  statement 767: 2 (return([33], [40]))
  statement 1: 1 (array_new<felt252>() -> ([3]))
  statement 3: 1 (store_temp<felt252>([4]) -> ([4]))
  statement 4: 1 (array_append<felt252>([3], [4]) -> ([5]))
  statement 6: 1 (store_temp<felt252>([6]) -> ([6]))
  statement 7: 1 (array_append<felt252>([5], [6]) -> ([7]))
  statement 9: 1 (store_temp<felt252>([8]) -> ([8]))
  statement 10: 1 (array_append<felt252>([7], [8]) -> ([9]))
  statement 12: 1 (store_temp<felt252>([10]) -> ([10]))
  statement 13: 1 (array_append<felt252>([9], [10]) -> ([11]))
  statement 15: 1 (store_temp<felt252>([12]) -> ([12]))
  statement 16: 1 (array_append<felt252>([11], [12]) -> ([13]))
  statement 18: 1 (store_temp<felt252>([14]) -> ([14]))
  statement 19: 1 (array_append<felt252>([13], [14]) -> ([15]))
  statement 21: 1 (store_temp<felt252>([16]) -> ([16]))
  statement 22: 1 (array_append<felt252>([15], [16]) -> ([17]))
  statement 24: 1 (store_temp<felt252>([18]) -> ([18]))
  statement 25: 1 (array_append<felt252>([17], [18]) -> ([19]))
  statement 27: 1 (store_temp<felt252>([20]) -> ([20]))
  statement 28: 1 (array_append<felt252>([19], [20]) -> ([21]))
  statement 30: 1 (store_temp<felt252>([22]) -> ([22]))
  statement 31: 1 (array_append<felt252>([21], [22]) -> ([23]))
  statement 33: 1 (store_temp<felt252>([24]) -> ([24]))
  statement 34: 1 (array_append<felt252>([23], [24]) -> ([25]))
  statement 36: 1 (store_temp<felt252>([26]) -> ([26]))
  statement 37: 1 (array_append<felt252>([25], [26]) -> ([27]))
  statement 39: 1 (store_temp<felt252>([28]) -> ([28]))
  statement 40: 1 (array_append<felt252>([27], [28]) -> ([29]))
  statement 42: 1 (store_temp<felt252>([30]) -> ([30]))
  statement 43: 1 (array_append<felt252>([29], [30]) -> ([31]))
  statement 45: 1 (store_temp<felt252>([32]) -> ([32]))
  statement 46: 1 (array_append<felt252>([31], [32]) -> ([33]))
  statement 48: 1 (store_temp<felt252>([34]) -> ([34]))
  statement 49: 1 (array_append<felt252>([33], [34]) -> ([35]))
  statement 51: 1 (store_temp<felt252>([36]) -> ([36]))
  statement 52: 1 (array_append<felt252>([35], [36]) -> ([37]))
  statement 54: 1 (store_temp<felt252>([38]) -> ([38]))
  statement 55: 1 (array_append<felt252>([37], [38]) -> ([39]))
  statement 57: 1 (store_temp<felt252>([40]) -> ([40]))
  statement 58: 1 (array_append<felt252>([39], [40]) -> ([41]))
  statement 62: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 63: 1 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 64: 1 (store_temp<System>([2]) -> ([2]))
  statement 66: 1 (function_call<user@test::test_contract::__wrapper____validate__>([0], [1], [2], [44]) -> ([45], [46], [47], [48]))
  statement 67: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([48]) { fallthrough([49]) 79([50]) })
  statement 74: 1 (store_temp<RangeCheck>([45]) -> ([45]))
  statement 75: 1 (store_temp<GasBuiltin>([51]) -> ([51]))
  statement 76: 1 (store_temp<System>([47]) -> ([47]))
  statement 78: 1 (return([45], [51], [47], [54]))
  statement 101: 1 (store_temp<RangeCheck>([4]) -> ([4]))
  statement 102: 1 (store_temp<GasBuiltin>([8]) -> ([8]))
  statement 107: 1 (store_temp<GasBuiltin>([13]) -> ([15]))
  statement 110: 1 (jump() { 118() })
  statement 118: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([17]) { fallthrough([21]) 211([22]) })
  statement 123: 1 (array_new<core::starknet::account::Call>() -> ([25]))
  statement 126: 1 (store_temp<RangeCheck>([4]) -> ([4]))
  statement 127: 1 (store_temp<GasBuiltin>([23]) -> ([23]))
  statement 130: 1 (store_temp<felt252>([27]) -> ([27]))
  statement 131: 1 (function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>([4], [23], [26], [25], [27]) -> ([28], [29], [30]))
  statement 132: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([30]) { fallthrough([31]) 203([32]) })
  statement 136: 1 (store_temp<GasBuiltin>([33]) -> ([33]))
  statement 137: 1 (enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>([35]) { fallthrough([36]) 196([37]) })
  statement 142: 1 (store_temp<GasBuiltin>([38]) -> ([38]))
  statement 165: 1 (store_temp<GasBuiltin>([51]) -> ([51]))
  statement 166: 1 (store_temp<BuiltinCosts>([52]) -> ([52]))
  statement 170: 1 (array_new<felt252>() -> ([58]))
  statement 176: 1 (store_temp<RangeCheck>([53]) -> ([53]))
  statement 177: 1 (store_temp<GasBuiltin>([57]) -> ([57]))
  statement 178: 1 (store_temp<System>([2]) -> ([2]))
  statement 180: 1 (return([53], [57], [2], [63]))
  statement 440: 1 (store_temp<RangeCheck>([5]) -> ([5]))
  statement 441: 1 (store_temp<GasBuiltin>([12]) -> ([12]))
  statement 443: 1 (return([5], [12], [15]))
Weight by concrete libfunc:
  libfunc store_temp<felt252>: 24
  libfunc store_temp<RangeCheck>: 21
  libfunc array_slice<felt252>: 20
  libfunc array_append<felt252>: 19
  libfunc store_temp<GasBuiltin>: 19
  libfunc store_temp<Snapshot<Array<felt252>>>: 18
  libfunc array_snapshot_pop_front<felt252>: 17
  libfunc store_temp<core::array::Span::<core::felt252>>: 16
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>: 16
  libfunc contract_address_try_from_felt252: 14
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>: 12
  libfunc withdraw_gas: 12
  libfunc array_append<core::starknet::account::Call>: 8
  libfunc store_temp<core::option::Option::<core::felt252>>: 8
  libfunc u32_try_from_felt252: 8
  libfunc jump: 7
  libfunc store_temp<Array<core::starknet::account::Call>>: 6
  libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>: 6
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>: 6
  libfunc u32_overflowing_sub: 6
  libfunc enum_match<core::option::Option::<core::felt252>>: 4
  libfunc store_temp<u32>: 4
  libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>: 3
  libfunc felt252_is_zero: 3
  libfunc function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>: 3
  libfunc store_temp<System>: 3
  libfunc store_temp<core::panics::PanicResult::<((),)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>: 3
  libfunc withdraw_gas_all: 3
  libfunc array_new<felt252>: 2
  libfunc branch_align: 2
  libfunc enum_match<core::option::Option::<core::array::Span::<core::felt252>>>: 2
  libfunc enum_match<core::option::Option::<core::starknet::account::Call>>: 2
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>: 2
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>: 2
  libfunc function_call<user@core::array::SpanFelt252Serde::deserialize>: 2
  libfunc function_call<user@core::starknet::account::CallSerde::deserialize>: 2
  libfunc get_builtin_costs: 2
  libfunc array_new<core::starknet::account::Call>: 1
  libfunc enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>: 1
  libfunc function_call<user@test::test_contract::__wrapper____validate__>: 1
  libfunc store_temp<BuiltinCosts>: 1
  return: 9
Weight by generic libfunc:
  libfunc store_temp: 166
  libfunc array_append: 27
  libfunc array_slice: 20
  libfunc enum_match: 18
  libfunc array_snapshot_pop_front: 17
  libfunc contract_address_try_from_felt252: 14
  libfunc withdraw_gas: 12
  libfunc function_call: 8
  libfunc u32_try_from_felt252: 8
  libfunc jump: 7
  libfunc u32_overflowing_sub: 6
  libfunc array_new: 3
  libfunc felt252_is_zero: 3
  libfunc withdraw_gas_all: 3
  libfunc branch_align: 2
  libfunc get_builtin_costs: 2
  return: 9
Weight by user function (inc. generated):
  function core::starknet::account::CallSerde::deserialize: 80
  function core::array::SpanFelt252Serde::deserialize: 78
  function core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 69
  function test::validate_call: 53
  function test::test_contract::__wrapper____validate__: 45
Weight by original user function (exc. generated):
  function core::starknet::account::CallSerde::deserialize: 80
  function core::array::SpanFelt252Serde::deserialize: 78
  function core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 69
  function test::validate_call: 53
  function test::test_contract::__wrapper____validate__: 45
Weight by Cairo function:
  function core::array::deserialize_array_helper: 52
  function core::array::ArrayImpl::append: 46
  function core::starknet::account::CallSerde::deserialize: 34
  function core::Felt252Serde::deserialize: 30
  function core::array::SpanImpl::pop_front: 27
  function core::array::SpanImpl::slice: 24
  function contract::__wrapper____validate__: 18
  function core::array::SpanFelt252Serde::deserialize: 16
  function core::starknet::contract_address::ContractAddressSerde::deserialize: 16
  function lib.cairo::validate_call: 14
  function core::integer::U32Sub::sub: 12
  function core::integer::Felt252TryIntoU32::try_into: 10
  function core::Felt252PartialEq::eq: 9
  function core::array::ArraySerde::deserialize: 8
  function core::array::SpanImpl::is_empty: 4
  function core::array::ArrayImpl::new: 3
  function core::option::OptionTraitImpl::expect: 2
Weight by Sierra stack trace:
  test::validate_call: 325
  test::validate_call -> test::test_contract::__wrapper____validate__: 272
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 227
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 121
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize: 79
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize: 79
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize: 39
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize: 39
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 15
Weight by Cairo stack trace:
  test::validate_call: 325
  test::validate_call -> test::test_contract::__wrapper____validate__: 272
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 227
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 121
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize: 79
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize: 79
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize: 39
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize: 39
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 15

//! > ==========================================================================

//! > Test deserialization for calling `__validate__` with 1 call

//! > test_runner_name
test_profiling

//! > cairo_code
#[starknet::contract(account)]
mod test_contract {
    use starknet::account::Call;

    #[storage]
    struct Storage {}

    #[external(v0)]
    fn __validate__(ref self: ContractState, calls: Array<Call>) {}
    #[external(v0)]
    fn __execute__(ref self: ContractState, mut calls: Array<Call>) -> Array<Span<felt252>> {
        array![]
    }
}

fn validate_call() {
    let serialized_args = array![
        0x1, // Array with a single `Call`.
        // Call 1.
        0xb, // to.
        0x219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c, // selector.
        0x3, // calldata length.
        0x7a6f98c03379b9513ca84cca1373ff452a7462a3b61598f0af5bb27ad7f76d1, // calldata 0.
        0x4db5d32, // calldata 1.
        0x0 // calldata 2.
    ]
        .span();
    test_contract::__wrapper____validate__(serialized_args);
}

//! > function_name
validate_call

//! > expected_profiling_info
Weight by sierra statement:
  statement 601: 8 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([44]) -> ([44]))
  statement 568: 7 (contract_address_try_from_felt252([0], [15]) { fallthrough([17], [18]) 627([19]) })
  statement 391: 6 (withdraw_gas([0], [1]) { fallthrough([5], [6]) 453([7], [8]) })
  statement 406: 6 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([15]) -> ([15]))
  statement 730: 6 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([40]) -> ([40]))
  statement 713: 5 (array_slice<felt252>([17], [21], [20], [22]) { fallthrough([23], [24]) 761([25]) })
  statement 722: 5 (array_slice<felt252>([29], [7], [18], [30]) { fallthrough([33], [34]) 732([35]) })
  statement 423: 4 (array_append<core::starknet::account::Call>([3], [24]) -> ([27]))
  statement 706: 4 (u32_try_from_felt252([0], [16]) { fallthrough([17], [18]) 775([19]) })
  statement 41: 3 (store_temp<core::panics::PanicResult::<((),)>>([30]) -> ([30]))
  statement 60: 3 (withdraw_gas([0], [1]) { fallthrough([4], [5]) 195([6], [7]) })
  statement 107: 3 (array_snapshot_pop_front<felt252>([39]) { fallthrough([40], [41]) 125([42]) })
  statement 131: 3 (withdraw_gas_all([28], [51], [52]) { fallthrough([53], [54]) 145([55], [56]) })
  statement 143: 3 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([63]) -> ([63]))
  statement 720: 3 (u32_overflowing_sub([23], [27], [28]) { fallthrough([29], [30]) 745([31], [32]) })
  statement 29: 2 (store_temp<core::array::Span::<core::felt252>>([20]) -> ([20]))
  statement 67: 2 (array_snapshot_pop_front<felt252>([9]) { fallthrough([10], [11]) 75([12]) })
  statement 72: 2 (store_temp<Snapshot<Array<felt252>>>([10]) -> ([16]))
  statement 73: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([14]) -> ([17]))
  statement 92: 2 (store_temp<core::array::Span::<core::felt252>>([26]) -> ([26]))
  statement 93: 2 (store_temp<Array<core::starknet::account::Call>>([25]) -> ([25]))
  statement 128: 2 (get_builtin_costs() -> ([52]))
  statement 395: 2 (store_temp<RangeCheck>([5]) -> ([5]))
  statement 396: 2 (store_temp<GasBuiltin>([9]) -> ([9]))
  statement 397: 2 (felt252_is_zero([10]) { fallthrough() 408([11]) })
  statement 412: 2 (store_temp<core::array::Span::<core::felt252>>([2]) -> ([2]))
  statement 428: 2 (store_temp<core::array::Span::<core::felt252>>([22]) -> ([22]))
  statement 429: 2 (store_temp<Array<core::starknet::account::Call>>([27]) -> ([27]))
  statement 551: 2 (array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 559([5]) })
  statement 556: 2 (store_temp<Snapshot<Array<felt252>>>([3]) -> ([9]))
  statement 557: 2 (store_temp<core::option::Option::<core::felt252>>([8]) -> ([10]))
  statement 572: 2 (array_snapshot_pop_front<felt252>([9]) { fallthrough([20], [21]) 580([22]) })
  statement 577: 2 (store_temp<Snapshot<Array<felt252>>>([20]) -> ([26]))
  statement 578: 2 (store_temp<core::option::Option::<core::felt252>>([25]) -> ([27]))
  statement 589: 2 (store_temp<core::array::Span::<core::felt252>>([30]) -> ([30]))
  statement 688: 2 (array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 694([5]) })
  statement 691: 2 (store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]))
  statement 692: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]))
  statement 719: 2 (store_temp<Snapshot<Array<felt252>>>([24]) -> ([24]))
  statement 1: 1 (array_new<felt252>() -> ([3]))
  statement 3: 1 (store_temp<felt252>([4]) -> ([4]))
  statement 4: 1 (array_append<felt252>([3], [4]) -> ([5]))
  statement 6: 1 (store_temp<felt252>([6]) -> ([6]))
  statement 7: 1 (array_append<felt252>([5], [6]) -> ([7]))
  statement 9: 1 (store_temp<felt252>([8]) -> ([8]))
  statement 10: 1 (array_append<felt252>([7], [8]) -> ([9]))
  statement 12: 1 (store_temp<felt252>([10]) -> ([10]))
  statement 13: 1 (array_append<felt252>([9], [10]) -> ([11]))
  statement 15: 1 (store_temp<felt252>([12]) -> ([12]))
  statement 16: 1 (array_append<felt252>([11], [12]) -> ([13]))
  statement 18: 1 (store_temp<felt252>([14]) -> ([14]))
  statement 19: 1 (array_append<felt252>([13], [14]) -> ([15]))
  statement 21: 1 (store_temp<felt252>([16]) -> ([16]))
  statement 22: 1 (array_append<felt252>([15], [16]) -> ([17]))
  statement 26: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 27: 1 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 28: 1 (store_temp<System>([2]) -> ([2]))
  statement 30: 1 (function_call<user@test::test_contract::__wrapper____validate__>([0], [1], [2], [20]) -> ([21], [22], [23], [24]))
  statement 31: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([24]) { fallthrough([25]) 43([26]) })
  statement 38: 1 (store_temp<RangeCheck>([21]) -> ([21]))
  statement 39: 1 (store_temp<GasBuiltin>([27]) -> ([27]))
  statement 40: 1 (store_temp<System>([23]) -> ([23]))
  statement 42: 1 (return([21], [27], [23], [30]))
  statement 65: 1 (store_temp<RangeCheck>([4]) -> ([4]))
  statement 66: 1 (store_temp<GasBuiltin>([8]) -> ([8]))
  statement 71: 1 (store_temp<GasBuiltin>([13]) -> ([15]))
  statement 74: 1 (jump() { 82() })
  statement 82: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([17]) { fallthrough([21]) 175([22]) })
  statement 87: 1 (array_new<core::starknet::account::Call>() -> ([25]))
  statement 90: 1 (store_temp<RangeCheck>([4]) -> ([4]))
  statement 91: 1 (store_temp<GasBuiltin>([23]) -> ([23]))
  statement 94: 1 (store_temp<felt252>([27]) -> ([27]))
  statement 95: 1 (function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>([4], [23], [26], [25], [27]) -> ([28], [29], [30]))
  statement 96: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([30]) { fallthrough([31]) 167([32]) })
  statement 100: 1 (store_temp<GasBuiltin>([33]) -> ([33]))
  statement 101: 1 (enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>([35]) { fallthrough([36]) 160([37]) })
  statement 106: 1 (store_temp<GasBuiltin>([38]) -> ([38]))
  statement 129: 1 (store_temp<GasBuiltin>([51]) -> ([51]))
  statement 130: 1 (store_temp<BuiltinCosts>([52]) -> ([52]))
  statement 134: 1 (array_new<felt252>() -> ([58]))
  statement 140: 1 (store_temp<RangeCheck>([53]) -> ([53]))
  statement 141: 1 (store_temp<GasBuiltin>([57]) -> ([57]))
  statement 142: 1 (store_temp<System>([2]) -> ([2]))
  statement 144: 1 (return([53], [57], [2], [63]))
  statement 404: 1 (store_temp<RangeCheck>([5]) -> ([5]))
  statement 405: 1 (store_temp<GasBuiltin>([12]) -> ([12]))
  statement 407: 1 (return([5], [12], [15]))
  statement 411: 1 (store_temp<RangeCheck>([5]) -> ([5]))
  statement 413: 1 (function_call<user@core::starknet::account::CallSerde::deserialize>([5], [2]) -> ([17], [18]))
  statement 414: 1 (store_temp<GasBuiltin>([16]) -> ([16]))
  statement 415: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([18]) { fallthrough([19]) 444([20]) })
  statement 419: 1 (store_temp<GasBuiltin>([21]) -> ([21]))
  statement 420: 1 (enum_match<core::option::Option::<core::starknet::account::Call>>([23]) { fallthrough([24]) 433([25]) })
  statement 426: 1 (store_temp<RangeCheck>([17]) -> ([17]))
  statement 427: 1 (store_temp<GasBuiltin>([26]) -> ([26]))
  statement 430: 1 (store_temp<felt252>([29]) -> ([29]))
  statement 431: 1 (function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>([17], [26], [22], [27], [29]) -> ([30], [31], [32]))
  statement 432: 1 (return([30], [31], [32]))
  statement 558: 1 (jump() { 564() })
  statement 566: 1 (enum_match<core::option::Option::<core::felt252>>([10]) { fallthrough([15]) 631([16]) })
  statement 571: 1 (store_temp<RangeCheck>([17]) -> ([17]))
  statement 579: 1 (jump() { 585() })
  statement 586: 1 (enum_match<core::option::Option::<core::felt252>>([27]) { fallthrough([31]) 619([32]) })
  statement 588: 1 (store_temp<RangeCheck>([17]) -> ([17]))
  statement 590: 1 (function_call<user@core::array::SpanFelt252Serde::deserialize>([17], [30]) -> ([33], [34]))
  statement 591: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([34]) { fallthrough([35]) 612([36]) })
  statement 594: 1 (enum_match<core::option::Option::<core::array::Span::<core::felt252>>>([38]) { fallthrough([39]) 603([40]) })
  statement 600: 1 (store_temp<RangeCheck>([33]) -> ([33]))
  statement 602: 1 (return([33], [44]))
  statement 693: 1 (jump() { 699() })
  statement 701: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([13]) 784([14]) })
  statement 705: 1 (store_temp<felt252>([16]) -> ([16]))
  statement 712: 1 (store_temp<u32>([20]) -> ([20]))
  statement 718: 1 (store_temp<u32>([27]) -> ([27]))
  statement 723: 1 (branch_align() -> ())
  statement 729: 1 (store_temp<RangeCheck>([33]) -> ([33]))
  statement 731: 1 (return([33], [40]))
Weight by concrete libfunc:
  libfunc store_temp<GasBuiltin>: 15
  libfunc store_temp<RangeCheck>: 14
  libfunc array_snapshot_pop_front<felt252>: 11
  libfunc array_slice<felt252>: 10
  libfunc store_temp<Snapshot<Array<felt252>>>: 10
  libfunc store_temp<core::array::Span::<core::felt252>>: 10
  libfunc store_temp<felt252>: 10
  libfunc withdraw_gas: 9
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>: 8
  libfunc array_append<felt252>: 7
  libfunc contract_address_try_from_felt252: 7
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>: 6
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>: 6
  libfunc array_append<core::starknet::account::Call>: 4
  libfunc jump: 4
  libfunc store_temp<Array<core::starknet::account::Call>>: 4
  libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>: 4
  libfunc store_temp<core::option::Option::<core::felt252>>: 4
  libfunc u32_try_from_felt252: 4
  libfunc store_temp<System>: 3
  libfunc store_temp<core::panics::PanicResult::<((),)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>: 3
  libfunc u32_overflowing_sub: 3
  libfunc withdraw_gas_all: 3
  libfunc array_new<felt252>: 2
  libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>: 2
  libfunc enum_match<core::option::Option::<core::felt252>>: 2
  libfunc felt252_is_zero: 2
  libfunc function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>: 2
  libfunc get_builtin_costs: 2
  libfunc store_temp<u32>: 2
  libfunc array_new<core::starknet::account::Call>: 1
  libfunc branch_align: 1
  libfunc enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>: 1
  libfunc enum_match<core::option::Option::<core::array::Span::<core::felt252>>>: 1
  libfunc enum_match<core::option::Option::<core::starknet::account::Call>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>: 1
  libfunc function_call<user@core::array::SpanFelt252Serde::deserialize>: 1
  libfunc function_call<user@core::starknet::account::CallSerde::deserialize>: 1
  libfunc function_call<user@test::test_contract::__wrapper____validate__>: 1
  libfunc store_temp<BuiltinCosts>: 1
  return: 6
Weight by generic libfunc:
  libfunc store_temp: 103
  libfunc array_append: 11
  libfunc array_snapshot_pop_front: 11
  libfunc enum_match: 11
  libfunc array_slice: 10
  libfunc withdraw_gas: 9
  libfunc contract_address_try_from_felt252: 7
  libfunc function_call: 5
  libfunc jump: 4
  libfunc u32_try_from_felt252: 4
  libfunc array_new: 3
  libfunc u32_overflowing_sub: 3
  libfunc withdraw_gas_all: 3
  libfunc felt252_is_zero: 2
  libfunc get_builtin_costs: 2
  libfunc branch_align: 1
  return: 6
Weight by user function (inc. generated):
  function test::test_contract::__wrapper____validate__: 45
  function core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 42
  function core::starknet::account::CallSerde::deserialize: 40
  function core::array::SpanFelt252Serde::deserialize: 39
  function test::validate_call: 29
Weight by original user function (exc. generated):
  function test::test_contract::__wrapper____validate__: 45
  function core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 42
  function core::starknet::account::CallSerde::deserialize: 40
  function core::array::SpanFelt252Serde::deserialize: 39
  function test::validate_call: 29
Weight by Cairo function:
  function core::array::deserialize_array_helper: 32
  function core::array::SpanImpl::pop_front: 19
  function contract::__wrapper____validate__: 18
  function core::array::ArrayImpl::append: 18
  function core::starknet::account::CallSerde::deserialize: 17
  function core::Felt252Serde::deserialize: 15
  function lib.cairo::validate_call: 14
  function core::array::SpanImpl::slice: 12
  function core::array::ArraySerde::deserialize: 8
  function core::array::SpanFelt252Serde::deserialize: 8
  function core::starknet::contract_address::ContractAddressSerde::deserialize: 8
  function core::Felt252PartialEq::eq: 6
  function core::integer::U32Sub::sub: 6
  function core::integer::Felt252TryIntoU32::try_into: 5
  function core::array::SpanImpl::is_empty: 4
  function core::array::ArrayImpl::new: 3
  function core::option::OptionTraitImpl::expect: 2
Weight by Sierra stack trace:
  test::validate_call: 195
  test::validate_call -> test::test_contract::__wrapper____validate__: 166
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 121
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize: 79
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize: 39
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 15
Weight by Cairo stack trace:
  test::validate_call: 195
  test::validate_call -> test::test_contract::__wrapper____validate__: 166
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 121
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize: 79
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize: 39
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 15

//! > ==========================================================================

//! > Test ecdsa validation.

//! > test_runner_name
test_profiling

//! > cairo_code
fn ecdsa_call() {
    let message_hash = 0x503f4bea29baee10b22a7f10bdc82dda071c977c1f25b8f3973d34e6b03b2c;
    let public_key = 0x7b7454acbe7845da996377f85eb0892044d75ae95d04d3325a391951f35d2ec;
    let signature_r = 0xbe96d72eb4f94078192c2e84d5230cde2a70f4b45c8797e2c907acff5060bb;
    let signature_s = 0x677ae6bba6daf00d2631fab14c8acf24be6579f9d9e98f67aa7f2770e57a1f5;
    core::ecdsa::check_ecdsa_signature(:message_hash, :public_key, :signature_r, :signature_s);
}

//! > function_name
ecdsa_call

//! > expected_profiling_info
Weight by sierra statement:
  statement 84: 14 (ec_point_from_x_nz([0], [3]) { fallthrough([28], [29]) 247([30]) })
  statement 88: 14 (ec_point_from_x_nz([28], [31]) { fallthrough([32], [33]) 234([34]) })
  statement 104: 12 (ec_state_try_finalize_nz([41]) { fallthrough([42]) 206() })
  statement 114: 12 (ec_state_try_finalize_nz([49]) { fallthrough([50]) 195() })
  statement 120: 12 (ec_state_try_finalize_nz([53]) { fallthrough([54]) 143() })
  statement 166: 12 (ec_state_try_finalize_nz([74]) { fallthrough([75]) 185() })
  statement 118: 10 (ec_state_add([51], [52]) -> ([53]))
  statement 164: 10 (ec_state_add([47], [66]) -> ([74]))
  statement 96: 7 (ec_point_try_new_nz([35], [36]) { fallthrough([37]) 220() })
  statement 98: 7 (ec_state_init() -> ([38]))
  statement 100: 5 (ec_state_add_mul([1], [39], [5], [33]) -> ([40], [41]))
  statement 109: 5 (ec_state_add_mul([40], [45], [2], [37]) -> ([46], [47]))
  statement 110: 5 (ec_state_add_mul([46], [38], [4], [29]) -> ([48], [49]))
  statement 19: 3 (store_temp<core::panics::PanicResult::<((),)>>([13]) -> ([13]))
  statement 101: 3 (store_temp<EcState>([41]) -> ([41]))
  statement 111: 3 (store_temp<EcState>([49]) -> ([49]))
  statement 112: 3 (store_temp<EcState>([47]) -> ([47]))
  statement 119: 3 (store_temp<EcState>([53]) -> ([53]))
  statement 165: 3 (store_temp<EcState>([74]) -> ([74]))
  statement 180: 3 (store_temp<core::panics::PanicResult::<(core::bool,)>>([83]) -> ([83]))
  statement 87: 2 (store_temp<NonZero<EcPoint>>([29]) -> ([29]))
  statement 95: 2 (store_temp<NonZero<EcPoint>>([33]) -> ([33]))
  statement 102: 2 (store_temp<NonZero<EcPoint>>([37]) -> ([37]))
  statement 146: 2 (store_temp<EcPoint>([65]) -> ([65]))
  statement 4: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 5: 1 (store_temp<EcOp>([1]) -> ([1]))
  statement 6: 1 (store_temp<felt252>([2]) -> ([2]))
  statement 7: 1 (store_temp<felt252>([3]) -> ([3]))
  statement 8: 1 (store_temp<felt252>([4]) -> ([4]))
  statement 9: 1 (store_temp<felt252>([5]) -> ([5]))
  statement 10: 1 (function_call<user@core::ecdsa::check_ecdsa_signature>([0], [1], [2], [3], [4], [5]) -> ([6], [7], [8]))
  statement 11: 1 (enum_match<core::panics::PanicResult::<(core::bool,)>>([8]) { fallthrough([9]) 21([10]) })
  statement 17: 1 (store_temp<RangeCheck>([6]) -> ([6]))
  statement 18: 1 (store_temp<EcOp>([7]) -> ([7]))
  statement 20: 1 (return([6], [7], [13]))
  statement 28: 1 (felt252_is_zero([6]) { fallthrough() 42([7]) })
  statement 47: 1 (store_temp<felt252>([14]) -> ([14]))
  statement 48: 1 (felt252_is_zero([14]) { fallthrough() 62([15]) })
  statement 67: 1 (store_temp<felt252>([22]) -> ([22]))
  statement 68: 1 (felt252_is_zero([22]) { fallthrough() 82([23]) })
  statement 92: 1 (store_temp<felt252>([35]) -> ([35]))
  statement 93: 1 (store_temp<felt252>([36]) -> ([36]))
  statement 94: 1 (store_temp<RangeCheck>([32]) -> ([32]))
  statement 103: 1 (store_temp<EcOp>([40]) -> ([40]))
  statement 113: 1 (store_temp<EcOp>([48]) -> ([48]))
  statement 126: 1 (store_temp<felt252>([58]) -> ([58]))
  statement 127: 1 (felt252_is_zero([58]) { fallthrough() 140([59]) })
  statement 142: 1 (jump() { 144() })
  statement 147: 1 (ec_point_is_zero([65]) { fallthrough() 163([66]) })
  statement 171: 1 (store_temp<felt252>([78]) -> ([78]))
  statement 172: 1 (felt252_is_zero([78]) { fallthrough() 182([79]) })
  statement 178: 1 (store_temp<RangeCheck>([32]) -> ([32]))
  statement 179: 1 (store_temp<EcOp>([48]) -> ([48]))
  statement 181: 1 (return([32], [48], [83]))
Weight by concrete libfunc:
  libfunc ec_state_try_finalize_nz: 48
  libfunc ec_point_from_x_nz: 28
  libfunc ec_state_add: 20
  libfunc ec_state_add_mul: 15
  libfunc store_temp<EcState>: 15
  libfunc store_temp<felt252>: 10
  libfunc ec_point_try_new_nz: 7
  libfunc ec_state_init: 7
  libfunc store_temp<NonZero<EcPoint>>: 6
  libfunc felt252_is_zero: 5
  libfunc store_temp<EcOp>: 5
  libfunc store_temp<RangeCheck>: 4
  libfunc store_temp<core::panics::PanicResult::<((),)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(core::bool,)>>: 3
  libfunc store_temp<EcPoint>: 2
  libfunc ec_point_is_zero: 1
  libfunc enum_match<core::panics::PanicResult::<(core::bool,)>>: 1
  libfunc function_call<user@core::ecdsa::check_ecdsa_signature>: 1
  libfunc jump: 1
  return: 2
Weight by generic libfunc:
  libfunc ec_state_try_finalize_nz: 48
  libfunc store_temp: 48
  libfunc ec_point_from_x_nz: 28
  libfunc ec_state_add: 20
  libfunc ec_state_add_mul: 15
  libfunc ec_point_try_new_nz: 7
  libfunc ec_state_init: 7
  libfunc felt252_is_zero: 5
  libfunc ec_point_is_zero: 1
  libfunc enum_match: 1
  libfunc function_call: 1
  libfunc jump: 1
  return: 2
Weight by user function (inc. generated):
  function core::ecdsa::check_ecdsa_signature: 170
  function test::ecdsa_call: 14
Weight by original user function (exc. generated):
  function core::ecdsa::check_ecdsa_signature: 170
  function test::ecdsa_call: 14
Weight by Cairo function:
  function core::ec::EcStateImpl::finalize_nz: 67
  function core::ec::EcPointImpl::new_nz_from_x: 30
  function core::ec::EcStateImpl::add_mul: 15
  function lib.cairo::ecdsa_call: 14
  function core::ec::EcPointImpl::new_nz: 12
  function core::Felt252PartialEq::eq: 10
  function core::ec::EcStateImpl::add: 10
  function core::ec::EcStateImpl::sub: 10
  function core::ec::EcStateImpl::init: 7
  function core::ecdsa::check_ecdsa_signature: 6
  function core::ec::EcPointTryIntoNonZero::try_into: 3
Weight by Sierra stack trace:
  test::ecdsa_call: 184
  test::ecdsa_call -> core::ecdsa::check_ecdsa_signature: 170
Weight by Cairo stack trace:
  test::ecdsa_call: 184
  test::ecdsa_call -> core::ecdsa::check_ecdsa_signature: 170

//! > ==========================================================================

//! > Test erc20_transfer

//! > test_runner_name
test_profiling

//! > cairo_code
use starknet::ContractAddress;

#[starknet::interface]
trait IERC20<TContractState> {
    fn transfer(ref self: TContractState, recipient: ContractAddress, amount: u256);
}

#[starknet::contract]
mod erc_20 {
    use core::num::traits::Zero;
    use starknet::storage::Map;
    use starknet::{ContractAddress, get_caller_address};


    #[storage]
    struct Storage {
        name: felt252,
        symbol: felt252,
        decimals: u8,
        total_supply: u256,
        balances: Map<ContractAddress, u256>,
        allowances: Map<(ContractAddress, ContractAddress), u256>,
    }

    #[event]
    #[derive(Drop, starknet::Event)]
    enum Event {
        Transfer: Transfer,
        Approval: Approval,
    }
    #[derive(Drop, starknet::Event)]
    struct Transfer {
        from: ContractAddress,
        to: ContractAddress,
        value: u256,
    }
    #[derive(Drop, starknet::Event)]
    struct Approval {
        owner: ContractAddress,
        spender: ContractAddress,
        value: u256,
    }

    #[abi(embed_v0)]
    impl IERC20Impl of super::IERC20<ContractState> {
        fn transfer(ref self: ContractState, recipient: ContractAddress, amount: u256) {
            let sender = get_caller_address();
            self.transfer_helper(sender, recipient, amount);
        }
    }

    #[generate_trait]
    impl StorageImpl of StorageTrait {
        fn transfer_helper(
            ref self: ContractState,
            sender: ContractAddress,
            recipient: ContractAddress,
            amount: u256,
        ) {
            assert(!Zero::is_zero(@sender), 'ERC20: transfer from 0');
            assert(!Zero::is_zero(@recipient), 'ERC20: transfer to 0');
            self.balances.write(sender, self.balances.read(sender) - amount);
            self.balances.write(recipient, self.balances.read(recipient) + amount);
            self.emit(Transfer { from: sender, to: recipient, value: amount });
        }
    }
}

fn erc20_transfer() {
    const CONTRACT_ADDRESS: ContractAddress = 2_felt252.try_into().unwrap();
    starknet::testing::set_caller_address(CONTRACT_ADDRESS);
    erc_20::__external::transfer(array![1, 0, 0].span());
}

//! > function_name
erc20_transfer

//! > expected_profiling_info
Weight by sierra statement:
  statement 440: 10 (storage_base_address_from_felt252([0], [41]) -> ([42], [43]))
  statement 536: 10 (storage_base_address_from_felt252([105], [126]) -> ([127], [128]))
  statement 571: 10 (storage_base_address_from_felt252([127], [158]) -> ([159], [160]))
  statement 667: 10 (storage_base_address_from_felt252([222], [243]) -> ([244], [245]))
  statement 708: 9 (emit_event_syscall([265], [261], [278], [279]) { fallthrough([280], [281]) 721([282], [283], [284]) })
  statement 546: 8 (storage_write_syscall([118], [69], [133], [131], [129]) { fallthrough([134], [135]) 899([136], [137], [138]) })
  statement 556: 8 (storage_write_syscall([139], [135], [132], [142], [140]) { fallthrough([143], [144]) 888([145], [146], [147]) })
  statement 677: 8 (storage_write_syscall([235], [186], [250], [248], [246]) { fallthrough([251], [252]) 745([253], [254], [255]) })
  statement 687: 8 (storage_write_syscall([256], [252], [249], [259], [257]) { fallthrough([260], [261]) 734([262], [263], [264]) })
  statement 86: 7 (contract_address_try_from_felt252([5], [24]) { fallthrough([27], [28]) 326([29]) })
  statement 454: 7 (storage_read_syscall([31], [3], [52], [50]) { fallthrough([53], [54], [55]) 1016([56], [57], [58]) })
  statement 470: 7 (storage_read_syscall([65], [54], [51], [67]) { fallthrough([68], [69], [70]) 979([71], [72], [73]) })
  statement 585: 7 (storage_read_syscall([148], [144], [169], [167]) { fallthrough([170], [171], [172]) 862([173], [174], [175]) })
  statement 601: 7 (storage_read_syscall([182], [171], [168], [184]) { fallthrough([185], [186], [187]) 825([188], [189], [190]) })
  statement 175: 6 (withdraw_gas_all([69], [86], [87]) { fallthrough([88], [89]) 249([90], [91]) })
  statement 180: 5 (get_execution_info_v2_syscall([92], [3]) { fallthrough([93], [94], [95]) 228([96], [97], [98]) })
  statement 697: 5 (store_temp<test::erc_20::Event>([271]) -> ([271]))
  statement 43: 3 (store_temp<core::panics::PanicResult::<((),)>>([33]) -> ([33]))
  statement 57: 3 (withdraw_gas([1], [2]) { fallthrough([5], [6]) 353([7], [8]) })
  statement 146: 3 (array_snapshot_pop_front<felt252>([59]) { fallthrough([75], [76]) 169([77]) })
  statement 216: 3 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([121]) -> ([121]))
  statement 485: 3 (u128_overflowing_sub([75], [76], [85]) { fallthrough([86], [87]) 495([88], [89]) })
  statement 503: 3 (u128_overflowing_sub([93], [61], [84]) { fallthrough([100], [101]) 511([102], [103]) })
  statement 616: 3 (u128_overflowing_add([192], [193], [202]) { fallthrough([203], [204]) 626([205], [206]) })
  statement 634: 3 (u128_overflowing_add([210], [178], [201]) { fallthrough([217], [218]) 642([219], [220]) })
  statement 719: 3 (store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([288]) -> ([288]))
  statement 10: 2 (store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]))
  statement 30: 2 (store_temp<core::array::Span::<core::felt252>>([22]) -> ([22]))
  statement 64: 2 (array_snapshot_pop_front<felt252>([10]) { fallthrough([11], [12]) 74([13]) })
  statement 71: 2 (store_temp<Snapshot<Array<felt252>>>([11]) -> ([19]))
  statement 72: 2 (store_temp<core::option::Option::<core::felt252>>([17]) -> ([20]))
  statement 92: 2 (array_snapshot_pop_front<felt252>([19]) { fallthrough([31], [32]) 100([33]) })
  statement 97: 2 (store_temp<Snapshot<Array<felt252>>>([31]) -> ([37]))
  statement 98: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([35]) -> ([38]))
  statement 114: 2 (u128s_from_felt252([27], [46]) { fallthrough([47], [48]) 292([49], [50], [51]) })
  statement 119: 2 (array_snapshot_pop_front<felt252>([37]) { fallthrough([53], [54]) 127([55]) })
  statement 124: 2 (store_temp<Snapshot<Array<felt252>>>([53]) -> ([59]))
  statement 125: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([57]) -> ([60]))
  statement 141: 2 (u128s_from_felt252([47], [68]) { fallthrough([69], [70]) 269([71], [72], [73]) })
  statement 172: 2 (get_builtin_costs() -> ([87]))
  statement 200: 2 (store_temp<core::integer::u256>([101]) -> ([101]))
  statement 438: 2 (pedersen([2], [39], [33]) -> ([40], [41]))
  statement 461: 2 (u128s_from_felt252([42], [55]) { fallthrough([60], [61]) 992([62], [63], [64]) })
  statement 477: 2 (u128s_from_felt252([60], [70]) { fallthrough([75], [76]) 960([77], [78], [79]) })
  statement 534: 2 (pedersen([40], [124], [120]) -> ([125], [126]))
  statement 569: 2 (pedersen([125], [156], [150]) -> ([157], [158]))
  statement 592: 2 (u128s_from_felt252([159], [172]) { fallthrough([177], [178]) 838([179], [180], [181]) })
  statement 608: 2 (u128s_from_felt252([177], [187]) { fallthrough([192], [193]) 806([194], [195], [196]) })
  statement 665: 2 (pedersen([157], [241], [237]) -> ([242], [243]))
  statement 698: 2 (store_temp<Array<felt252>>([266]) -> ([266]))
  statement 699: 2 (store_temp<Array<felt252>>([267]) -> ([267]))
  statement 1075: 2 (store_temp<Array<felt252>>([6]) -> ([6]))
  statement 1076: 2 (store_temp<Array<felt252>>([34]) -> ([34]))
  statement 6: 1 (store_temp<Tuple<felt252>>([8]) -> ([8]))
  statement 7: 1 (into_box<Tuple<felt252>>([8]) -> ([9]))
  statement 11: 1 (cheatcode<10052436086942832998170947883001859293934451>([11]) -> ([12]))
  statement 13: 1 (array_new<felt252>() -> ([13]))
  statement 15: 1 (store_temp<felt252>([14]) -> ([14]))
  statement 16: 1 (array_append<felt252>([13], [14]) -> ([15]))
  statement 18: 1 (store_temp<felt252>([16]) -> ([16]))
  statement 19: 1 (array_append<felt252>([15], [16]) -> ([17]))
  statement 21: 1 (store_temp<felt252>([18]) -> ([18]))
  statement 22: 1 (array_append<felt252>([17], [18]) -> ([19]))
  statement 26: 1 (store_temp<Pedersen>([2]) -> ([2]))
  statement 27: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 28: 1 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 29: 1 (store_temp<System>([3]) -> ([3]))
  statement 31: 1 (function_call<user@test::erc_20::__wrapper__IERC20Impl__transfer>([2], [0], [1], [3], [22]) -> ([23], [24], [25], [26], [27]))
  statement 32: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([27]) { fallthrough([28]) 45([29]) })
  statement 39: 1 (store_temp<RangeCheck>([24]) -> ([24]))
  statement 40: 1 (store_temp<GasBuiltin>([30]) -> ([30]))
  statement 41: 1 (store_temp<Pedersen>([23]) -> ([23]))
  statement 42: 1 (store_temp<System>([26]) -> ([26]))
  statement 44: 1 (return([24], [30], [23], [26], [33]))
  statement 62: 1 (store_temp<RangeCheck>([5]) -> ([5]))
  statement 63: 1 (store_temp<GasBuiltin>([9]) -> ([9]))
  statement 70: 1 (store_temp<GasBuiltin>([14]) -> ([18]))
  statement 73: 1 (jump() { 81() })
  statement 81: 1 (enum_match<core::option::Option::<core::felt252>>([20]) { fallthrough([24]) 332([25]) })
  statement 85: 1 (store_temp<GasBuiltin>([26]) -> ([26]))
  statement 90: 1 (store_temp<RangeCheck>([27]) -> ([27]))
  statement 91: 1 (store_temp<GasBuiltin>([30]) -> ([30]))
  statement 96: 1 (store_temp<GasBuiltin>([34]) -> ([36]))
  statement 99: 1 (jump() { 107() })
  statement 107: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([38]) { fallthrough([42]) 302([43]) })
  statement 112: 1 (store_temp<felt252>([46]) -> ([46]))
  statement 113: 1 (store_temp<GasBuiltin>([44]) -> ([44]))
  statement 117: 1 (store_temp<RangeCheck>([47]) -> ([47]))
  statement 118: 1 (store_temp<GasBuiltin>([52]) -> ([52]))
  statement 123: 1 (store_temp<GasBuiltin>([56]) -> ([58]))
  statement 126: 1 (jump() { 134() })
  statement 134: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([60]) { fallthrough([64]) 280([65]) })
  statement 139: 1 (store_temp<felt252>([68]) -> ([68]))
  statement 140: 1 (store_temp<GasBuiltin>([66]) -> ([66]))
  statement 144: 1 (store_temp<RangeCheck>([69]) -> ([69]))
  statement 145: 1 (store_temp<GasBuiltin>([74]) -> ([74]))
  statement 173: 1 (store_temp<GasBuiltin>([86]) -> ([86]))
  statement 174: 1 (store_temp<BuiltinCosts>([87]) -> ([87]))
  statement 178: 1 (store_temp<GasBuiltin>([92]) -> ([92]))
  statement 179: 1 (store_temp<RangeCheck>([88]) -> ([88]))
  statement 183: 1 (store_temp<GasBuiltin>([93]) -> ([93]))
  statement 185: 1 (store_temp<Box<core::starknet::info::v2::ExecutionInfo>>([95]) -> ([95]))
  statement 194: 1 (store_temp<RangeCheck>([88]) -> ([88]))
  statement 195: 1 (store_temp<GasBuiltin>([99]) -> ([99]))
  statement 196: 1 (store_temp<Pedersen>([0]) -> ([0]))
  statement 197: 1 (store_temp<System>([94]) -> ([94]))
  statement 198: 1 (store_temp<ContractAddress>([104]) -> ([104]))
  statement 199: 1 (store_temp<ContractAddress>([28]) -> ([28]))
  statement 201: 1 (function_call<user@test::erc_20::StorageImpl::transfer_helper>([88], [99], [0], [94], [107], [104], [28], [101]) -> ([108], [109], [110], [111], [112]))
  statement 202: 1 (enum_match<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([112]) { fallthrough([113]) 218([114]) })
  statement 206: 1 (array_new<felt252>() -> ([116]))
  statement 212: 1 (store_temp<Pedersen>([110]) -> ([110]))
  statement 213: 1 (store_temp<RangeCheck>([108]) -> ([108]))
  statement 214: 1 (store_temp<GasBuiltin>([115]) -> ([115]))
  statement 215: 1 (store_temp<System>([111]) -> ([111]))
  statement 217: 1 (return([110], [108], [115], [111], [121]))
  statement 378: 1 (felt252_is_zero([9]) { fallthrough() 399([10]) })
  statement 404: 1 (store_temp<GasBuiltin>([19]) -> ([19]))
  statement 405: 1 (felt252_is_zero([21]) { fallthrough() 426([22]) })
  statement 437: 1 (store_temp<felt252>([39]) -> ([39]))
  statement 439: 1 (store_temp<felt252>([41]) -> ([41]))
  statement 450: 1 (store_temp<GasBuiltin>([31]) -> ([31]))
  statement 451: 1 (store_temp<u32>([52]) -> ([52]))
  statement 452: 1 (store_temp<Pedersen>([40]) -> ([40]))
  statement 453: 1 (store_temp<RangeCheck>([42]) -> ([42]))
  statement 456: 1 (store_temp<GasBuiltin>([53]) -> ([53]))
  statement 458: 1 (store_temp<felt252>([55]) -> ([55]))
  statement 459: 1 (store_temp<System>([54]) -> ([54]))
  statement 460: 1 (store_temp<GasBuiltin>([59]) -> ([59]))
  statement 466: 1 (store_temp<GasBuiltin>([65]) -> ([65]))
  statement 467: 1 (store_temp<u32>([51]) -> ([51]))
  statement 468: 1 (store_temp<StorageAddress>([67]) -> ([67]))
  statement 469: 1 (store_temp<RangeCheck>([60]) -> ([60]))
  statement 472: 1 (store_temp<GasBuiltin>([68]) -> ([68]))
  statement 474: 1 (store_temp<felt252>([70]) -> ([70]))
  statement 475: 1 (store_temp<System>([69]) -> ([69]))
  statement 476: 1 (store_temp<GasBuiltin>([74]) -> ([74]))
  statement 484: 1 (store_temp<GasBuiltin>([80]) -> ([80]))
  statement 486: 1 (branch_align() -> ())
  statement 490: 1 (store_temp<RangeCheck>([86]) -> ([93]))
  statement 491: 1 (store_temp<GasBuiltin>([90]) -> ([94]))
  statement 492: 1 (store_temp<u128>([87]) -> ([95]))
  statement 493: 1 (store_temp<core::bool>([92]) -> ([96]))
  statement 494: 1 (jump() { 503() })
  statement 504: 1 (branch_align() -> ())
  statement 506: 1 (store_temp<RangeCheck>([100]) -> ([105]))
  statement 507: 1 (store_temp<GasBuiltin>([104]) -> ([106]))
  statement 508: 1 (store_temp<u128>([101]) -> ([107]))
  statement 509: 1 (store_temp<u128>([95]) -> ([108]))
  statement 510: 1 (jump() { 523() })
  statement 523: 1 (enum_match<core::bool>([96]) { fallthrough([116]) 921([117]) })
  statement 533: 1 (store_temp<felt252>([124]) -> ([124]))
  statement 535: 1 (store_temp<felt252>([126]) -> ([126]))
  statement 542: 1 (store_temp<GasBuiltin>([118]) -> ([118]))
  statement 543: 1 (store_temp<u32>([133]) -> ([133]))
  statement 544: 1 (store_temp<Pedersen>([125]) -> ([125]))
  statement 545: 1 (store_temp<RangeCheck>([127]) -> ([127]))
  statement 548: 1 (store_temp<GasBuiltin>([134]) -> ([134]))
  statement 553: 1 (store_temp<GasBuiltin>([139]) -> ([139]))
  statement 554: 1 (store_temp<u32>([132]) -> ([132]))
  statement 555: 1 (store_temp<StorageAddress>([142]) -> ([142]))
  statement 558: 1 (store_temp<GasBuiltin>([143]) -> ([143]))
  statement 568: 1 (store_temp<felt252>([156]) -> ([156]))
  statement 570: 1 (store_temp<felt252>([158]) -> ([158]))
  statement 581: 1 (store_temp<GasBuiltin>([148]) -> ([148]))
  statement 582: 1 (store_temp<u32>([169]) -> ([169]))
  statement 583: 1 (store_temp<Pedersen>([157]) -> ([157]))
  statement 584: 1 (store_temp<RangeCheck>([159]) -> ([159]))
  statement 587: 1 (store_temp<GasBuiltin>([170]) -> ([170]))
  statement 589: 1 (store_temp<felt252>([172]) -> ([172]))
  statement 590: 1 (store_temp<System>([171]) -> ([171]))
  statement 591: 1 (store_temp<GasBuiltin>([176]) -> ([176]))
  statement 597: 1 (store_temp<GasBuiltin>([182]) -> ([182]))
  statement 598: 1 (store_temp<u32>([168]) -> ([168]))
  statement 599: 1 (store_temp<StorageAddress>([184]) -> ([184]))
  statement 600: 1 (store_temp<RangeCheck>([177]) -> ([177]))
  statement 603: 1 (store_temp<GasBuiltin>([185]) -> ([185]))
  statement 605: 1 (store_temp<felt252>([187]) -> ([187]))
  statement 606: 1 (store_temp<System>([186]) -> ([186]))
  statement 607: 1 (store_temp<GasBuiltin>([191]) -> ([191]))
  statement 615: 1 (store_temp<GasBuiltin>([197]) -> ([197]))
  statement 617: 1 (branch_align() -> ())
  statement 621: 1 (store_temp<RangeCheck>([203]) -> ([210]))
  statement 622: 1 (store_temp<GasBuiltin>([207]) -> ([211]))
  statement 623: 1 (store_temp<u128>([204]) -> ([212]))
  statement 624: 1 (store_temp<core::bool>([209]) -> ([213]))
  statement 625: 1 (jump() { 634() })
  statement 635: 1 (branch_align() -> ())
  statement 637: 1 (store_temp<RangeCheck>([217]) -> ([222]))
  statement 638: 1 (store_temp<GasBuiltin>([221]) -> ([223]))
  statement 639: 1 (store_temp<u128>([218]) -> ([224]))
  statement 640: 1 (store_temp<u128>([212]) -> ([225]))
  statement 641: 1 (jump() { 654() })
  statement 654: 1 (enum_match<core::bool>([213]) { fallthrough([233]) 767([234]) })
  statement 664: 1 (store_temp<felt252>([241]) -> ([241]))
  statement 666: 1 (store_temp<felt252>([243]) -> ([243]))
  statement 673: 1 (store_temp<GasBuiltin>([235]) -> ([235]))
  statement 674: 1 (store_temp<u32>([250]) -> ([250]))
  statement 675: 1 (store_temp<Pedersen>([242]) -> ([242]))
  statement 676: 1 (store_temp<RangeCheck>([244]) -> ([244]))
  statement 679: 1 (store_temp<GasBuiltin>([251]) -> ([251]))
  statement 684: 1 (store_temp<GasBuiltin>([256]) -> ([256]))
  statement 685: 1 (store_temp<u32>([249]) -> ([249]))
  statement 686: 1 (store_temp<StorageAddress>([259]) -> ([259]))
  statement 689: 1 (store_temp<GasBuiltin>([260]) -> ([260]))
  statement 691: 1 (array_new<felt252>() -> ([266]))
  statement 692: 1 (array_new<felt252>() -> ([267]))
  statement 700: 1 (function_call<user@test::erc_20::EventIsEvent::append_keys_and_data>([271], [266], [267]) -> ([272], [273]))
  statement 707: 1 (store_temp<GasBuiltin>([265]) -> ([265]))
  statement 710: 1 (store_temp<GasBuiltin>([280]) -> ([280]))
  statement 715: 1 (store_temp<RangeCheck>([244]) -> ([244]))
  statement 716: 1 (store_temp<GasBuiltin>([285]) -> ([285]))
  statement 717: 1 (store_temp<Pedersen>([242]) -> ([242]))
  statement 718: 1 (store_temp<System>([281]) -> ([281]))
  statement 720: 1 (return([244], [285], [242], [281], [288]))
  statement 1042: 1 (enum_match<test::erc_20::Event>([0]) { fallthrough([3]) 1078([4]) })
  statement 1045: 1 (store_temp<felt252>([5]) -> ([5]))
  statement 1046: 1 (array_append<felt252>([1], [5]) -> ([6]))
  statement 1053: 1 (array_append<felt252>([2], [12]) -> ([13]))
  statement 1060: 1 (array_append<felt252>([13], [19]) -> ([20]))
  statement 1069: 1 (array_append<felt252>([20], [28]) -> ([29]))
  statement 1074: 1 (array_append<felt252>([29], [33]) -> ([34]))
  statement 1077: 1 (return([6], [34]))
Weight by concrete libfunc:
  libfunc store_temp<GasBuiltin>: 47
  libfunc storage_base_address_from_felt252: 40
  libfunc storage_write_syscall: 32
  libfunc storage_read_syscall: 28
  libfunc store_temp<RangeCheck>: 20
  libfunc store_temp<felt252>: 18
  libfunc u128s_from_felt252: 12
  libfunc array_snapshot_pop_front<felt252>: 9
  libfunc emit_event_syscall: 9
  libfunc store_temp<Pedersen>: 9
  libfunc store_temp<System>: 9
  libfunc array_append<felt252>: 8
  libfunc pedersen: 8
  libfunc store_temp<Array<felt252>>: 8
  libfunc store_temp<u32>: 8
  libfunc contract_address_try_from_felt252: 7
  libfunc jump: 7
  libfunc store_temp<Snapshot<Array<felt252>>>: 6
  libfunc store_temp<u128>: 6
  libfunc u128_overflowing_add: 6
  libfunc u128_overflowing_sub: 6
  libfunc withdraw_gas_all: 6
  libfunc get_execution_info_v2_syscall: 5
  libfunc store_temp<test::erc_20::Event>: 5
  libfunc array_new<felt252>: 4
  libfunc branch_align: 4
  libfunc store_temp<StorageAddress>: 4
  libfunc store_temp<core::array::Span::<core::felt252>>: 4
  libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>: 4
  libfunc store_temp<core::panics::PanicResult::<((),)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>: 3
  libfunc withdraw_gas: 3
  libfunc enum_match<core::bool>: 2
  libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>: 2
  libfunc felt252_is_zero: 2
  libfunc get_builtin_costs: 2
  libfunc store_temp<ContractAddress>: 2
  libfunc store_temp<core::bool>: 2
  libfunc store_temp<core::integer::u256>: 2
  libfunc store_temp<core::option::Option::<core::felt252>>: 2
  libfunc cheatcode<10052436086942832998170947883001859293934451>: 1
  libfunc enum_match<core::option::Option::<core::felt252>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>: 1
  libfunc enum_match<test::erc_20::Event>: 1
  libfunc function_call<user@test::erc_20::EventIsEvent::append_keys_and_data>: 1
  libfunc function_call<user@test::erc_20::StorageImpl::transfer_helper>: 1
  libfunc function_call<user@test::erc_20::__wrapper__IERC20Impl__transfer>: 1
  libfunc into_box<Tuple<felt252>>: 1
  libfunc store_temp<Box<core::starknet::info::v2::ExecutionInfo>>: 1
  libfunc store_temp<BuiltinCosts>: 1
  libfunc store_temp<Tuple<felt252>>: 1
  return: 4
Weight by generic libfunc:
  libfunc store_temp: 168
  libfunc storage_base_address_from_felt252: 40
  libfunc storage_write_syscall: 32
  libfunc storage_read_syscall: 28
  libfunc u128s_from_felt252: 12
  libfunc array_snapshot_pop_front: 9
  libfunc emit_event_syscall: 9
  libfunc array_append: 8
  libfunc enum_match: 8
  libfunc pedersen: 8
  libfunc contract_address_try_from_felt252: 7
  libfunc jump: 7
  libfunc u128_overflowing_add: 6
  libfunc u128_overflowing_sub: 6
  libfunc withdraw_gas_all: 6
  libfunc get_execution_info_v2_syscall: 5
  libfunc array_new: 4
  libfunc branch_align: 4
  libfunc function_call: 3
  libfunc withdraw_gas: 3
  libfunc felt252_is_zero: 2
  libfunc get_builtin_costs: 2
  libfunc cheatcode: 1
  libfunc into_box: 1
  return: 4
Weight by user function (inc. generated):
  function test::erc_20::StorageImpl::transfer_helper: 248
  function test::erc_20::__wrapper__IERC20Impl__transfer: 95
  function test::erc20_transfer: 28
  function test::erc_20::EventIsEvent::append_keys_and_data: 12
Weight by original user function (exc. generated):
  function test::erc_20::StorageImpl::transfer_helper: 248
  function test::erc_20::__wrapper__IERC20Impl__transfer: 95
  function test::erc20_transfer: 28
  function test::erc_20::EventIsEvent::append_keys_and_data: 12
Weight by Cairo function:
  function core::starknet::storage::StoragePathImpl::finalize: 44
  function contract::ContractStateEventEmitter::emit: 29
  function core::integer::u128_try_from_felt252: 28
  function core::starknet::storage_access::StoreFelt252::write: 26
  function core::starknet::storage_access::StoreFelt252::read: 24
  function core::starknet::storage_access::StoreFelt252::read_at_offset: 24
  function core::starknet::storage_access::StoreFelt252::write_at_offset: 24
  function contract::__wrapper__IERC20Impl__transfer: 22
  function core::array::SpanImpl::pop_front: 22
  function core::integer::u256_overflowing_add: 19
  function core::integer::u256_overflowing_sub: 19
  function core::array::ArrayImpl::append: 17
  function lib.cairo::erc20_transfer: 16
  function core::pedersen::HashStateImpl::update: 12
  function core::Felt252Serde::deserialize: 10
  function core::starknet::contract_address::ContractAddressSerde::deserialize: 9
  function lib.cairo::erc_20::IERC20Impl::transfer: 9
  function core::starknet::info::get_execution_info: 8
  function core::array::SpanImpl::is_empty: 5
  function core::array::ArrayImpl::new: 4
  function core::Felt252PartialEq::eq: 3
  function core::starknet::testing::set_caller_address: 3
  function core::box::BoxImpl::new: 2
  function core::box::BoxImpl::unbox: 1
  function core::integer::u256_checked_add: 1
  function core::integer::u256_checked_sub: 1
  function starknet_derive::EventIsEvent::append_keys_and_data: 1
Weight by Sierra stack trace:
  test::erc20_transfer: 383
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer: 355
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::StorageImpl::transfer_helper: 260
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::EventIsEvent::append_keys_and_data: 12
Weight by Cairo stack trace:
  test::erc20_transfer: 383
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer: 355
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::StorageImpl::transfer_helper: 260
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::EventIsEvent::append_keys_and_data: 12
