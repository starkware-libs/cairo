//! > Test trivial pow2 by add loop

//! > test_runner_name
test_profiling

//! > cairo_code
fn pow2_14000() {
  pow2_by_add_loop(14000, 1);
}

fn pow2_by_add_loop(n: felt252, x: felt252) -> felt252 {
  if n == 0 {
    return x;
  } else {
    return pow2_by_add_loop(n - 1, x + x);
  }
}

//! > max_stack_trace_depth
10

//! > function_name
pow2_14000

//! > expected_profiling_info
Weight by sierra statement:
  statement 27: 42003 (withdraw_gas_all([0], [1], [4]) { fallthrough([5], [6]) 52([7], [8]) })
  statement 25: 28002 (get_builtin_costs() -> ([4]))
  statement 26: 14001 (store_temp<BuiltinCosts>([4]) -> ([4]))
  statement 30: 14001 (store_temp<RangeCheck>([5]) -> ([5]))
  statement 31: 14001 (felt252_is_zero([9]) { fallthrough() 40([10]) })
  statement 46: 14000 (store_temp<RangeCheck>([5]) -> ([5]))
  statement 47: 14000 (store_temp<GasBuiltin>([6]) -> ([6]))
  statement 48: 14000 (store_temp<felt252>([14]) -> ([14]))
  statement 49: 14000 (store_temp<felt252>([16]) -> ([16]))
  statement 50: 14000 (function_call<user@test::pow2_by_add_loop>([5], [6], [14], [16]) -> ([17], [18], [19]))
  statement 51: 14000 (return([17], [18], [19]))
  statement 16: 3 (store_temp<core::panics::PanicResult::<((),)>>([11]) -> ([11]))
  statement 38: 3 (store_temp<core::panics::PanicResult::<(core::felt252,)>>([12]) -> ([12]))
  statement 3: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 4: 1 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 5: 1 (store_temp<felt252>([2]) -> ([2]))
  statement 6: 1 (store_temp<felt252>([3]) -> ([3]))
  statement 7: 1 (function_call<user@test::pow2_by_add_loop>([0], [1], [2], [3]) -> ([4], [5], [6]))
  statement 8: 1 (enum_match<core::panics::PanicResult::<(core::felt252,)>>([6]) { fallthrough([7]) 18([8]) })
  statement 14: 1 (store_temp<RangeCheck>([4]) -> ([4]))
  statement 15: 1 (store_temp<GasBuiltin>([5]) -> ([5]))
  statement 17: 1 (return([4], [5], [11]))
  statement 36: 1 (store_temp<RangeCheck>([5]) -> ([5]))
  statement 37: 1 (store_temp<GasBuiltin>([6]) -> ([6]))
  statement 39: 1 (return([5], [6], [12]))
Weight by concrete libfunc:
  libfunc withdraw_gas_all: 42003
  libfunc store_temp<RangeCheck>: 28004
  libfunc get_builtin_costs: 28002
  libfunc store_temp<felt252>: 28002
  libfunc store_temp<GasBuiltin>: 14003
  libfunc felt252_is_zero: 14001
  libfunc function_call<user@test::pow2_by_add_loop>: 14001
  libfunc store_temp<BuiltinCosts>: 14001
  libfunc store_temp<core::panics::PanicResult::<((),)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(core::felt252,)>>: 3
  libfunc enum_match<core::panics::PanicResult::<(core::felt252,)>>: 1
  return: 14002
Weight by generic libfunc:
  libfunc store_temp: 84016
  libfunc withdraw_gas_all: 42003
  libfunc get_builtin_costs: 28002
  libfunc felt252_is_zero: 14001
  libfunc function_call: 14001
  libfunc enum_match: 1
  return: 14002
Weight by user function (inc. generated):
  function test::pow2_by_add_loop: 196014
  function test::pow2_14000: 12
Weight by original user function (exc. generated):
  function test::pow2_by_add_loop: 196014
  function test::pow2_14000: 12
Weight by Cairo function:
  function lib.cairo::pow2_by_add_loop: 196014
  function lib.cairo::pow2_14000: 12
Weight by Sierra stack trace:
  test::pow2_14000: 196026
  test::pow2_14000 -> test::pow2_by_add_loop: 196014
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 196000
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195986
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195972
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195958
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195944
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195930
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195916
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195902
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195888
Weight by Cairo stack trace:
  test::pow2_14000: 196026
  test::pow2_14000 -> test::pow2_by_add_loop: 196014
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 196000
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195986
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195972
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195958
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195944
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195930
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195916
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195902
  test::pow2_14000 -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop -> test::pow2_by_add_loop: 195888

//! > Sierra Program
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type BuiltinCosts = BuiltinCosts [storable: true, drop: true, dup: true, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<Unit> = Struct<ut@Tuple, Unit> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<((),)> = Enum<ut@core::panics::PanicResult::<((),)>, Tuple<Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<felt252> = Struct<ut@Tuple, felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::felt252,)> = Enum<ut@core::panics::PanicResult::<(core::felt252,)>, Tuple<felt252>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type GasBuiltin = GasBuiltin [storable: true, drop: false, dup: false, zero_sized: false];
type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc felt252_const<14000> = felt252_const<14000>;
libfunc felt252_const<1> = felt252_const<1>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@test::pow2_by_add_loop> = function_call<user@test::pow2_by_add_loop>;
libfunc enum_match<core::panics::PanicResult::<(core::felt252,)>> = enum_match<core::panics::PanicResult::<(core::felt252,)>>;
libfunc branch_align = branch_align;
libfunc drop<Tuple<felt252>> = drop<Tuple<felt252>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 0> = enum_init<core::panics::PanicResult::<((),)>, 0>;
libfunc store_temp<core::panics::PanicResult::<((),)>> = store_temp<core::panics::PanicResult::<((),)>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 1> = enum_init<core::panics::PanicResult::<((),)>, 1>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc drop<felt252> = drop<felt252>;
libfunc struct_construct<Tuple<felt252>> = struct_construct<Tuple<felt252>>;
libfunc enum_init<core::panics::PanicResult::<(core::felt252,)>, 0> = enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::felt252,)>> = store_temp<core::panics::PanicResult::<(core::felt252,)>>;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_sub = felt252_sub;
libfunc felt252_add = felt252_add;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::felt252,)>, 1> = enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>;

disable_ap_tracking() -> (); // 0
felt252_const<14000>() -> ([2]); // 1
felt252_const<1>() -> ([3]); // 2
store_temp<RangeCheck>([0]) -> ([0]); // 3
store_temp<GasBuiltin>([1]) -> ([1]); // 4
store_temp<felt252>([2]) -> ([2]); // 5
store_temp<felt252>([3]) -> ([3]); // 6
function_call<user@test::pow2_by_add_loop>([0], [1], [2], [3]) -> ([4], [5], [6]); // 7
enum_match<core::panics::PanicResult::<(core::felt252,)>>([6]) { fallthrough([7]) 18([8]) }; // 8
branch_align() -> (); // 9
drop<Tuple<felt252>>([7]) -> (); // 10
struct_construct<Unit>() -> ([9]); // 11
struct_construct<Tuple<Unit>>([9]) -> ([10]); // 12
enum_init<core::panics::PanicResult::<((),)>, 0>([10]) -> ([11]); // 13
store_temp<RangeCheck>([4]) -> ([4]); // 14
store_temp<GasBuiltin>([5]) -> ([5]); // 15
store_temp<core::panics::PanicResult::<((),)>>([11]) -> ([11]); // 16
return([4], [5], [11]); // 17
branch_align() -> (); // 18
enum_init<core::panics::PanicResult::<((),)>, 1>([8]) -> ([12]); // 19
store_temp<RangeCheck>([4]) -> ([4]); // 20
store_temp<GasBuiltin>([5]) -> ([5]); // 21
store_temp<core::panics::PanicResult::<((),)>>([12]) -> ([12]); // 22
return([4], [5], [12]); // 23
disable_ap_tracking() -> (); // 24
get_builtin_costs() -> ([4]); // 25
store_temp<BuiltinCosts>([4]) -> ([4]); // 26
withdraw_gas_all([0], [1], [4]) { fallthrough([5], [6]) 52([7], [8]) }; // 27
branch_align() -> (); // 28
dup<felt252>([2]) -> ([2], [9]); // 29
store_temp<RangeCheck>([5]) -> ([5]); // 30
felt252_is_zero([9]) { fallthrough() 40([10]) }; // 31
branch_align() -> (); // 32
drop<felt252>([2]) -> (); // 33
struct_construct<Tuple<felt252>>([3]) -> ([11]); // 34
enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>([11]) -> ([12]); // 35
store_temp<RangeCheck>([5]) -> ([5]); // 36
store_temp<GasBuiltin>([6]) -> ([6]); // 37
store_temp<core::panics::PanicResult::<(core::felt252,)>>([12]) -> ([12]); // 38
return([5], [6], [12]); // 39
branch_align() -> (); // 40
drop<NonZero<felt252>>([10]) -> (); // 41
felt252_const<1>() -> ([13]); // 42
felt252_sub([2], [13]) -> ([14]); // 43
dup<felt252>([3]) -> ([3], [15]); // 44
felt252_add([15], [3]) -> ([16]); // 45
store_temp<RangeCheck>([5]) -> ([5]); // 46
store_temp<GasBuiltin>([6]) -> ([6]); // 47
store_temp<felt252>([14]) -> ([14]); // 48
store_temp<felt252>([16]) -> ([16]); // 49
function_call<user@test::pow2_by_add_loop>([5], [6], [14], [16]) -> ([17], [18], [19]); // 50
return([17], [18], [19]); // 51
branch_align() -> (); // 52
drop<felt252>([2]) -> (); // 53
drop<felt252>([3]) -> (); // 54
array_new<felt252>() -> ([20]); // 55
felt252_const<375233589013918064796019>() -> ([21]); // 56
store_temp<felt252>([21]) -> ([21]); // 57
array_append<felt252>([20], [21]) -> ([22]); // 58
struct_construct<core::panics::Panic>() -> ([23]); // 59
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([23], [22]) -> ([24]); // 60
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([24]) -> ([25]); // 61
store_temp<RangeCheck>([7]) -> ([7]); // 62
store_temp<GasBuiltin>([8]) -> ([8]); // 63
store_temp<core::panics::PanicResult::<(core::felt252,)>>([25]) -> ([25]); // 64
return([7], [8], [25]); // 65

test::pow2_14000@0([0]: RangeCheck, [1]: GasBuiltin) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<((),)>);
test::pow2_by_add_loop@24([0]: RangeCheck, [1]: GasBuiltin, [2]: felt252, [3]: felt252) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::felt252,)>);

//! > Casms Program
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 14000, ap++;
[ap + 0] = 1, ap++;
call rel 20;
jmp rel 11 if [ap + -3] != 0;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
ret;
call rel 51;
[ap + 0] = [ap + -1] + 50, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
%{ memory[ap + 0] = 1570 <= memory[fp + -5] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[fp + -5] = [ap + 0] + 1570, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -6] + 0];
jmp rel 25;
[fp + -5] = [ap + 0] + 1570, ap++;
[ap + -1] = [[fp + -6] + 0];
[ap + 0] = [fp + -6] + 1, ap++;
jmp rel 10 if [fp + -4] != 0;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -3], ap++;
ret;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [ap + -3], ap++;
[fp + -4] = [ap + 0] + 1, ap++;
[ap + 0] = [fp + -3] + [fp + -3], ap++;
call rel -34;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -6] + 1, ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6] + 1, ap++;
ret;

//! > ==========================================================================

//! > Test deserialization for calling `__validate__` with 2 calls

//! > test_runner_name
test_profiling

//! > cairo_code
#[starknet::contract(account)]
mod test_contract {
  use starknet::account::Call;

  #[storage]
  struct Storage {}

  #[external(v0)]
  fn __validate__(ref self: ContractState, calls: Array<Call>) {}
  #[external(v0)]
  fn __execute__(ref self: ContractState, mut calls: Array<Call>) -> Array<Span<felt252>> {
      array![]
  }
}

fn validate_call() {
  let serialized_args = array![
    0x2, // Array with 2 `Call`s.
    // Call 1.
    0xb, // to.
    0x219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c, // selector.
    0x3, // calldata length.
    0x7a6f98c03379b9513ca84cca1373ff452a7462a3b61598f0af5bb27ad7f76d1, // calldata 0.
    0x4db5d32, // calldata 1.
    0x0, // calldata 2.
    // Call 2.
    0xb, // to.
    0x2c0f7bf2d6cf5304c29171bf493feb222fef84bdaf17805a6574b0c2e8bcc87, // selector.
    0x9, // calldata length.
    0x4db5d32, // calldata 0.
    0x0, // calldata 1.
    0x896ba264a31df2, // calldata 2.
    0x0, // calldata 3.
    0x2, // calldata 4.
    0x53c91253bc9682c04929ca02ed00b3e423f6710d2ee7e0d5ebb06f3ecf368a8, // calldata 5.
    0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7, // calldata 6.
    0x54767f773cc172172c3afc5265bd0a76089c24cdef409635d27ac1a1fa96ca8, // calldata 7.
    0x65586264, // calldata 8.
  ].span();
  test_contract::__wrapper____validate__(serialized_args);
}

//! > function_name
validate_call

//! > expected_profiling_info
Weight by sierra statement:
  statement 537: 16 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([32]) -> ([32]))
  statement 606: 14 (contract_address_try_from_felt252([0], [15]) { fallthrough([16], [17]) 613([18]) })
  statement 676: 12 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([41]) -> ([41]))
  statement 655: 10 (array_slice<felt252>([17], [21], [20], [22]) { fallthrough([23], [24]) 698([25]) })
  statement 668: 10 (array_slice<felt252>([29], [7], [18], [33]) { fallthrough([34], [35]) 678([36]) })
  statement 358: 9 (withdraw_gas_all([0], [1], [5]) { fallthrough([6], [7]) 410([8], [9]) })
  statement 382: 8 (array_append<core::starknet::account::Call>([3], [21]) -> ([23]))
  statement 648: 8 (u32_try_from_felt252([0], [16]) { fallthrough([17], [18]) 711([19]) })
  statement 356: 6 (get_builtin_costs() -> ([5]))
  statement 370: 6 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([14]) -> ([14]))
  statement 788: 6 (u32_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 794([5], [6]) })
  statement 802: 6 (store_temp<core::panics::PanicResult::<(core::integer::u32,)>>([12]) -> ([12]))
  statement 809: 6 (store_temp<core::panics::PanicResult::<(core::integer::u32,)>>([5]) -> ([5]))
  statement 375: 4 (store_temp<core::array::Span::<core::felt252>>([2]) -> ([2]))
  statement 387: 4 (store_temp<core::array::Span::<core::felt252>>([19]) -> ([19]))
  statement 388: 4 (store_temp<Array<core::starknet::account::Call>>([23]) -> ([23]))
  statement 501: 4 (store_temp<core::array::Span::<core::felt252>>([1]) -> ([1]))
  statement 506: 4 (array_snapshot_pop_front<felt252>([7]) { fallthrough([8], [9]) 512([10]) })
  statement 509: 4 (store_temp<Snapshot<Array<felt252>>>([8]) -> ([12]))
  statement 510: 4 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([11]) -> ([13]))
  statement 518: 4 (store_temp<core::array::Span::<core::felt252>>([16]) -> ([16]))
  statement 523: 4 (store_temp<core::array::Span::<core::felt252>>([16]) -> ([16]))
  statement 588: 4 (array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 594([5]) })
  statement 591: 4 (store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]))
  statement 592: 4 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]))
  statement 600: 4 (store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]))
  statement 610: 4 (store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]))
  statement 611: 4 (store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([19]) -> ([19]))
  statement 629: 4 (array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 635([5]) })
  statement 632: 4 (store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]))
  statement 633: 4 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]))
  statement 642: 4 (store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]))
  statement 664: 4 (store_temp<Snapshot<Array<felt252>>>([24]) -> ([24]))
  statement 792: 4 (store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>([7]) -> ([9]))
  statement 76: 3 (store_temp<core::panics::PanicResult::<((),)>>([53]) -> ([53]))
  statement 95: 3 (withdraw_gas([0], [1]) { fallthrough([4], [5]) 176([6], [7]) })
  statement 108: 3 (array_snapshot_pop_front<felt252>([17]) { fallthrough([18], [19]) 124([20]) })
  statement 128: 3 (withdraw_gas_all([8], [9], [27]) { fallthrough([28], [29]) 141([30], [31]) })
  statement 139: 3 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([37]) -> ([37]))
  statement 357: 3 (store_temp<BuiltinCosts>([5]) -> ([5]))
  statement 361: 3 (store_temp<RangeCheck>([6]) -> ([6]))
  statement 362: 3 (felt252_is_zero([10]) { fallthrough() 372([11]) })
  statement 65: 2 (store_temp<core::array::Span::<core::felt252>>([44]) -> ([44]))
  statement 99: 2 (store_temp<core::array::Span::<core::felt252>>([3]) -> ([3]))
  statement 126: 2 (get_builtin_costs() -> ([27]))
  statement 307: 2 (array_snapshot_pop_front<felt252>([3]) { fallthrough([4], [5]) 313([6]) })
  statement 310: 2 (store_temp<Snapshot<Array<felt252>>>([4]) -> ([8]))
  statement 311: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([7]) -> ([9]))
  statement 319: 2 (store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]))
  statement 327: 2 (store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]))
  statement 328: 2 (store_temp<Array<core::starknet::account::Call>>([16]) -> ([16]))
  statement 374: 2 (store_temp<RangeCheck>([6]) -> ([6]))
  statement 376: 2 (function_call<user@core::starknet::account::CallSerde::deserialize>([6], [2]) -> ([15], [16]))
  statement 377: 2 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([16]) { fallthrough([17]) 402([18]) })
  statement 380: 2 (enum_match<core::option::Option::<core::starknet::account::Call>>([20]) { fallthrough([21]) 392([22]) })
  statement 385: 2 (store_temp<RangeCheck>([15]) -> ([15]))
  statement 386: 2 (store_temp<GasBuiltin>([7]) -> ([7]))
  statement 389: 2 (store_temp<felt252>([25]) -> ([25]))
  statement 390: 2 (function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>([15], [7], [19], [23], [25]) -> ([26], [27], [28]))
  statement 391: 2 (return([26], [27], [28]))
  statement 500: 2 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 502: 2 (function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([0], [1]) -> ([2], [3], [4]))
  statement 503: 2 (enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([4]) { fallthrough([5]) 565([6]) })
  statement 511: 2 (jump() { 517() })
  statement 519: 2 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([13]) { fallthrough([17]) 555([18]) })
  statement 522: 2 (store_temp<RangeCheck>([2]) -> ([2]))
  statement 524: 2 (function_call<user@core::array::SpanFelt252Serde::deserialize>([2], [16]) -> ([20], [21]))
  statement 525: 2 (store_temp<felt252>([19]) -> ([19]))
  statement 526: 2 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([21]) { fallthrough([22]) 548([23]) })
  statement 529: 2 (enum_match<core::option::Option::<core::array::Span::<core::felt252>>>([25]) { fallthrough([26]) 539([27]) })
  statement 536: 2 (store_temp<RangeCheck>([20]) -> ([20]))
  statement 538: 2 (return([20], [32]))
  statement 593: 2 (jump() { 599() })
  statement 601: 2 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 620([13]) })
  statement 605: 2 (store_temp<felt252>([15]) -> ([15]))
  statement 607: 2 (branch_align() -> ())
  statement 609: 2 (store_temp<RangeCheck>([16]) -> ([16]))
  statement 612: 2 (return([16], [11], [19]))
  statement 634: 2 (jump() { 640() })
  statement 643: 2 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([13]) 720([14]) })
  statement 647: 2 (store_temp<felt252>([16]) -> ([16]))
  statement 654: 2 (store_temp<u32>([20]) -> ([20]))
  statement 659: 2 (store_temp<RangeCheck>([23]) -> ([23]))
  statement 660: 2 (store_temp<u32>([27]) -> ([27]))
  statement 662: 2 (store_temp<u32>([28]) -> ([28]))
  statement 663: 2 (function_call<user@core::integer::U32Sub::sub>([23], [27], [28]) -> ([29], [30]))
  statement 665: 2 (enum_match<core::panics::PanicResult::<(core::integer::u32,)>>([30]) { fallthrough([31]) 690([32]) })
  statement 669: 2 (branch_align() -> ())
  statement 675: 2 (store_temp<RangeCheck>([34]) -> ([34]))
  statement 677: 2 (return([34], [41]))
  statement 789: 2 (branch_align() -> ())
  statement 791: 2 (store_temp<RangeCheck>([3]) -> ([8]))
  statement 793: 2 (jump() { 798() })
  statement 799: 2 (store_temp<felt252>([11]) -> ([11]))
  statement 800: 2 (function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>>([9], [11]) -> ([12]))
  statement 801: 2 (store_temp<RangeCheck>([8]) -> ([8]))
  statement 803: 2 (return([8], [12]))
  statement 804: 2 (enum_match<core::result::Result::<core::integer::u32, core::integer::u32>>([0]) { fallthrough([2]) 811([3]) })
  statement 805: 2 (branch_align() -> ())
  statement 810: 2 (return([5]))
  statement 1: 1 (array_new<felt252>() -> ([3]))
  statement 3: 1 (store_temp<felt252>([4]) -> ([4]))
  statement 4: 1 (array_append<felt252>([3], [4]) -> ([5]))
  statement 6: 1 (store_temp<felt252>([6]) -> ([6]))
  statement 7: 1 (array_append<felt252>([5], [6]) -> ([7]))
  statement 9: 1 (store_temp<felt252>([8]) -> ([8]))
  statement 10: 1 (array_append<felt252>([7], [8]) -> ([9]))
  statement 12: 1 (store_temp<felt252>([10]) -> ([10]))
  statement 13: 1 (array_append<felt252>([9], [10]) -> ([11]))
  statement 15: 1 (store_temp<felt252>([12]) -> ([12]))
  statement 16: 1 (array_append<felt252>([11], [12]) -> ([13]))
  statement 18: 1 (store_temp<felt252>([14]) -> ([14]))
  statement 19: 1 (array_append<felt252>([13], [14]) -> ([15]))
  statement 21: 1 (store_temp<felt252>([16]) -> ([16]))
  statement 22: 1 (array_append<felt252>([15], [16]) -> ([17]))
  statement 24: 1 (store_temp<felt252>([18]) -> ([18]))
  statement 25: 1 (array_append<felt252>([17], [18]) -> ([19]))
  statement 27: 1 (store_temp<felt252>([20]) -> ([20]))
  statement 28: 1 (array_append<felt252>([19], [20]) -> ([21]))
  statement 30: 1 (store_temp<felt252>([22]) -> ([22]))
  statement 31: 1 (array_append<felt252>([21], [22]) -> ([23]))
  statement 33: 1 (store_temp<felt252>([24]) -> ([24]))
  statement 34: 1 (array_append<felt252>([23], [24]) -> ([25]))
  statement 36: 1 (store_temp<felt252>([26]) -> ([26]))
  statement 37: 1 (array_append<felt252>([25], [26]) -> ([27]))
  statement 39: 1 (store_temp<felt252>([28]) -> ([28]))
  statement 40: 1 (array_append<felt252>([27], [28]) -> ([29]))
  statement 42: 1 (store_temp<felt252>([30]) -> ([30]))
  statement 43: 1 (array_append<felt252>([29], [30]) -> ([31]))
  statement 45: 1 (store_temp<felt252>([32]) -> ([32]))
  statement 46: 1 (array_append<felt252>([31], [32]) -> ([33]))
  statement 48: 1 (store_temp<felt252>([34]) -> ([34]))
  statement 49: 1 (array_append<felt252>([33], [34]) -> ([35]))
  statement 51: 1 (store_temp<felt252>([36]) -> ([36]))
  statement 52: 1 (array_append<felt252>([35], [36]) -> ([37]))
  statement 54: 1 (store_temp<felt252>([38]) -> ([38]))
  statement 55: 1 (array_append<felt252>([37], [38]) -> ([39]))
  statement 57: 1 (store_temp<felt252>([40]) -> ([40]))
  statement 58: 1 (array_append<felt252>([39], [40]) -> ([41]))
  statement 62: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 63: 1 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 64: 1 (store_temp<System>([2]) -> ([2]))
  statement 66: 1 (function_call<user@test::test_contract::__wrapper____validate__>([0], [1], [2], [44]) -> ([45], [46], [47], [48]))
  statement 67: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([48]) { fallthrough([49]) 78([50]) })
  statement 73: 1 (store_temp<RangeCheck>([45]) -> ([45]))
  statement 74: 1 (store_temp<GasBuiltin>([46]) -> ([46]))
  statement 75: 1 (store_temp<System>([47]) -> ([47]))
  statement 77: 1 (return([45], [46], [47], [53]))
  statement 97: 1 (store_temp<RangeCheck>([4]) -> ([4]))
  statement 98: 1 (store_temp<GasBuiltin>([5]) -> ([5]))
  statement 100: 1 (function_call<user@core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize>([4], [5], [3]) -> ([8], [9], [10]))
  statement 101: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([10]) { fallthrough([11]) 169([12]) })
  statement 104: 1 (enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>([14]) { fallthrough([15]) 154([16]) })
  statement 127: 1 (store_temp<BuiltinCosts>([27]) -> ([27]))
  statement 130: 1 (array_new<felt252>() -> ([32]))
  statement 136: 1 (store_temp<RangeCheck>([28]) -> ([28]))
  statement 137: 1 (store_temp<GasBuiltin>([29]) -> ([29]))
  statement 138: 1 (store_temp<System>([2]) -> ([2]))
  statement 140: 1 (return([28], [29], [2], [37]))
  statement 312: 1 (jump() { 318() })
  statement 320: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([9]) { fallthrough([13]) 332([14]) })
  statement 323: 1 (array_new<core::starknet::account::Call>() -> ([16]))
  statement 325: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 326: 1 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 329: 1 (store_temp<felt252>([17]) -> ([17]))
  statement 330: 1 (function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>([0], [1], [12], [16], [17]) -> ([18], [19], [20]))
  statement 331: 1 (return([18], [19], [20]))
  statement 368: 1 (store_temp<RangeCheck>([6]) -> ([6]))
  statement 369: 1 (store_temp<GasBuiltin>([7]) -> ([7]))
  statement 371: 1 (return([6], [7], [14]))
Weight by concrete libfunc:
  libfunc store_temp<core::array::Span::<core::felt252>>: 40
  libfunc store_temp<felt252>: 30
  libfunc store_temp<RangeCheck>: 29
  libfunc array_slice<felt252>: 20
  libfunc array_append<felt252>: 19
  libfunc store_temp<Snapshot<Array<felt252>>>: 18
  libfunc array_snapshot_pop_front<felt252>: 17
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>: 16
  libfunc contract_address_try_from_felt252: 14
  libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>: 14
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>: 12
  libfunc store_temp<core::panics::PanicResult::<(core::integer::u32,)>>: 12
  libfunc withdraw_gas_all: 12
  libfunc jump: 9
  libfunc array_append<core::starknet::account::Call>: 8
  libfunc branch_align: 8
  libfunc get_builtin_costs: 8
  libfunc store_temp<GasBuiltin>: 8
  libfunc u32_try_from_felt252: 8
  libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>: 7
  libfunc store_temp<Array<core::starknet::account::Call>>: 6
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>: 6
  libfunc store_temp<u32>: 6
  libfunc u32_overflowing_sub: 6
  libfunc store_temp<BuiltinCosts>: 4
  libfunc store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>: 4
  libfunc store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>: 4
  libfunc felt252_is_zero: 3
  libfunc function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>: 3
  libfunc store_temp<System>: 3
  libfunc store_temp<core::panics::PanicResult::<((),)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>: 3
  libfunc withdraw_gas: 3
  libfunc array_new<felt252>: 2
  libfunc enum_match<core::option::Option::<core::array::Span::<core::felt252>>>: 2
  libfunc enum_match<core::option::Option::<core::starknet::account::Call>>: 2
  libfunc enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>: 2
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>: 2
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>: 2
  libfunc enum_match<core::panics::PanicResult::<(core::integer::u32,)>>: 2
  libfunc enum_match<core::result::Result::<core::integer::u32, core::integer::u32>>: 2
  libfunc function_call<user@core::array::SpanFelt252Serde::deserialize>: 2
  libfunc function_call<user@core::integer::U32Sub::sub>: 2
  libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>>: 2
  libfunc function_call<user@core::starknet::account::CallSerde::deserialize>: 2
  libfunc function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>: 2
  libfunc array_new<core::starknet::account::Call>: 1
  libfunc enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>: 1
  libfunc function_call<user@core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize>: 1
  libfunc function_call<user@test::test_contract::__wrapper____validate__>: 1
  return: 16
Weight by generic libfunc:
  libfunc store_temp: 218
  libfunc array_append: 27
  libfunc enum_match: 24
  libfunc array_slice: 20
  libfunc array_snapshot_pop_front: 17
  libfunc function_call: 15
  libfunc contract_address_try_from_felt252: 14
  libfunc withdraw_gas_all: 12
  libfunc jump: 9
  libfunc branch_align: 8
  libfunc get_builtin_costs: 8
  libfunc u32_try_from_felt252: 8
  libfunc u32_overflowing_sub: 6
  libfunc array_new: 3
  libfunc felt252_is_zero: 3
  libfunc withdraw_gas: 3
  return: 16
Weight by user function (inc. generated):
  function core::array::SpanFelt252Serde::deserialize: 84
  function core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 71
  function core::starknet::account::CallSerde::deserialize: 64
  function test::validate_call: 53
  function core::starknet::contract_address::ContractAddressSerde::deserialize: 50
  function core::integer::U32Sub::sub: 30
  function test::test_contract::__wrapper____validate__: 27
  function core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize: 20
  function core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>: 12
Weight by original user function (exc. generated):
  function core::array::SpanFelt252Serde::deserialize: 84
  function core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 71
  function core::starknet::account::CallSerde::deserialize: 64
  function test::validate_call: 53
  function core::starknet::contract_address::ContractAddressSerde::deserialize: 50
  function core::integer::U32Sub::sub: 30
  function test::test_contract::__wrapper____validate__: 27
  function core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize: 20
  function core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>: 12
Weight by Cairo function:
  function array.cairo::SpanImpl::pop_front: 70
  function array.cairo::deserialize_array_helper: 63
  function array.cairo::ArrayImpl::append: 46
  function impls::CallSerde::deserialize: 44
  function array.cairo::SpanFelt252Serde::deserialize: 30
  function contract_address.cairo::ContractAddressSerde::deserialize: 30
  function integer.cairo::U32Sub::sub: 30
  function array.cairo::SpanImpl::slice: 24
  function contract::__wrapper____validate__: 22
  function lib.cairo::validate_call: 14
  function result.cairo::ResultTraitImpl::expect: 12
  function integer.cairo::Felt252TryIntoU32::try_into: 10
  function array.cairo::ArraySerde::deserialize: 9
  function array.cairo::ArrayImpl::new: 3
  function array.cairo::SpanImpl::is_empty: 3
  function option.cairo::OptionTraitImpl::expect: 1
Weight by Sierra stack trace:
  test::validate_call: 411
  test::validate_call -> test::test_contract::__wrapper____validate__: 358
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize: 331
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 311
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 164
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize: 120
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize: 120
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize: 63
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize: 63
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::starknet::contract_address::ContractAddressSerde::deserialize: 25
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::starknet::contract_address::ContractAddressSerde::deserialize: 25
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize -> core::integer::U32Sub::sub: 21
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize -> core::integer::U32Sub::sub: 21
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 17
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize -> core::integer::U32Sub::sub -> core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>: 6
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize -> core::integer::U32Sub::sub -> core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>: 6
Weight by Cairo stack trace:
  test::validate_call: 411
  test::validate_call -> test::test_contract::__wrapper____validate__: 358
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize: 331
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 311
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 164
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize: 120
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize: 120
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize: 63
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize: 63
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::starknet::contract_address::ContractAddressSerde::deserialize: 25
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::starknet::contract_address::ContractAddressSerde::deserialize: 25
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize -> core::integer::U32Sub::sub: 21
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize -> core::integer::U32Sub::sub: 21
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 17
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize -> core::integer::U32Sub::sub -> core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>: 6
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize -> core::integer::U32Sub::sub -> core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>: 6

//! > Sierra Program
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type u32 = u32 [storable: true, drop: true, dup: true, zero_sized: false];
type core::result::Result::<core::integer::u32, core::integer::u32> = Enum<ut@core::result::Result::<core::integer::u32, core::integer::u32>, u32, u32> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<u32> = Struct<ut@Tuple, u32> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<(core::integer::u32,)> = Enum<ut@core::panics::PanicResult::<(core::integer::u32,)>, Tuple<u32>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::array::Span::<core::felt252> = Struct<ut@core::array::Span::<core::felt252>, Snapshot<Array<felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type core::option::Option::<core::array::Span::<core::felt252>> = Enum<ut@core::option::Option::<core::array::Span::<core::felt252>>, core::array::Span::<core::felt252>, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>> = Struct<ut@Tuple, core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)> = Enum<ut@core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type ContractAddress = ContractAddress [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::starknet::contract_address::ContractAddress> = Enum<ut@core::option::Option::<core::starknet::contract_address::ContractAddress>, ContractAddress, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Box<core::array::Span::<core::felt252>> = Box<core::array::Span::<core::felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>> = Enum<ut@core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, Box<core::array::Span::<core::felt252>>, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Array<core::array::Span::<core::felt252>> = Array<core::array::Span::<core::felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type Snapshot<Array<core::array::Span::<core::felt252>>> = Snapshot<Array<core::array::Span::<core::felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];
type Uninitialized<Snapshot<Array<core::array::Span::<core::felt252>>>> = Uninitialized<Snapshot<Array<core::array::Span::<core::felt252>>>> [storable: false, drop: true, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::account::Call = Struct<ut@core::starknet::account::Call, ContractAddress, felt252, core::array::Span::<core::felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::starknet::account::Call> = Enum<ut@core::option::Option::<core::starknet::account::Call>, core::starknet::account::Call, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>> = Struct<ut@Tuple, core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)> = Enum<ut@core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type core::array::Span::<core::array::Span::<core::felt252>> = Struct<ut@core::array::Span::<core::array::Span::<core::felt252>>, Snapshot<Array<core::array::Span::<core::felt252>>>> [storable: true, drop: true, dup: true, zero_sized: false];
type Box<felt252> = Box<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::box::Box::<@core::felt252>> = Enum<ut@core::option::Option::<core::box::Box::<@core::felt252>>, Box<felt252>, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<Array<felt252>, Unit> = Struct<ut@Tuple, Array<felt252>, Unit> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())> = Enum<ut@core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, Tuple<Array<felt252>, Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type BuiltinCosts = BuiltinCosts [storable: true, drop: true, dup: true, zero_sized: false];
type Array<core::starknet::account::Call> = Array<core::starknet::account::Call> [storable: true, drop: true, dup: false, zero_sized: false];
type core::option::Option::<core::array::Array::<core::starknet::account::Call>> = Enum<ut@core::option::Option::<core::array::Array::<core::starknet::account::Call>>, Array<core::starknet::account::Call>, Unit> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>> = Struct<ut@Tuple, core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)> = Enum<ut@core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type test::test_contract::ContractState = Struct<ut@test::test_contract::ContractState> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<Unit> = Struct<ut@Tuple, Unit> [storable: true, drop: true, dup: true, zero_sized: true];
type core::panics::PanicResult::<((),)> = Enum<ut@core::panics::PanicResult::<((),)>, Tuple<Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<core::array::Span::<core::felt252>> = Struct<ut@Tuple, core::array::Span::<core::felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::array::Span::<core::felt252>,)> = Enum<ut@core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, Tuple<core::array::Span::<core::felt252>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type System = System [storable: true, drop: false, dup: false, zero_sized: false];
type GasBuiltin = GasBuiltin [storable: true, drop: false, dup: false, zero_sized: false];
type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<2> = felt252_const<2>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc felt252_const<11> = felt252_const<11>;
libfunc felt252_const<949021990203918389843157787496164629863144228991510976554585288817234167820> = felt252_const<949021990203918389843157787496164629863144228991510976554585288817234167820>;
libfunc felt252_const<3> = felt252_const<3>;
libfunc felt252_const<3461208862407773342635871960084685728498932599526891269545319004528055383761> = felt252_const<3461208862407773342635871960084685728498932599526891269545319004528055383761>;
libfunc felt252_const<81485106> = felt252_const<81485106>;
libfunc felt252_const<0> = felt252_const<0>;
libfunc felt252_const<1245570219085329014176261566038427188720157448719795888519090757413574003847> = felt252_const<1245570219085329014176261566038427188720157448719795888519090757413574003847>;
libfunc felt252_const<9> = felt252_const<9>;
libfunc felt252_const<38680417026645490> = felt252_const<38680417026645490>;
libfunc felt252_const<2368576823837625528275935341135881659748932889268308403712618244410713532584> = felt252_const<2368576823837625528275935341135881659748932889268308403712618244410713532584>;
libfunc felt252_const<2087021424722619777119509474943472645767659996348769578120564519014510906823> = felt252_const<2087021424722619777119509474943472645767659996348769578120564519014510906823>;
libfunc felt252_const<2387727935691014887386018108409351696155809189117188913679269984352887991464> = felt252_const<2387727935691014887386018108409351696155809189117188913679269984352887991464>;
libfunc felt252_const<1700291172> = felt252_const<1700291172>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc struct_construct<core::array::Span::<core::felt252>> = struct_construct<core::array::Span::<core::felt252>>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::array::Span::<core::felt252>> = store_temp<core::array::Span::<core::felt252>>;
libfunc function_call<user@test::test_contract::__wrapper____validate__> = function_call<user@test::test_contract::__wrapper____validate__>;
libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>> = enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc branch_align = branch_align;
libfunc drop<Tuple<core::array::Span::<core::felt252>>> = drop<Tuple<core::array::Span::<core::felt252>>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 0> = enum_init<core::panics::PanicResult::<((),)>, 0>;
libfunc store_temp<core::panics::PanicResult::<((),)>> = store_temp<core::panics::PanicResult::<((),)>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 1> = enum_init<core::panics::PanicResult::<((),)>, 1>;
libfunc drop<Array<core::starknet::account::Call>> = drop<Array<core::starknet::account::Call>>;
libfunc array_new<core::array::Span::<core::felt252>> = array_new<core::array::Span::<core::felt252>>;
libfunc store_temp<Array<core::array::Span::<core::felt252>>> = store_temp<Array<core::array::Span::<core::felt252>>>;
libfunc struct_construct<test::test_contract::ContractState> = struct_construct<test::test_contract::ContractState>;
libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc function_call<user@core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize> = function_call<user@core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize>;
libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>> = enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>;
libfunc struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>> = struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>;
libfunc enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>> = enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>;
libfunc struct_deconstruct<core::array::Span::<core::felt252>> = struct_deconstruct<core::array::Span::<core::felt252>>;
libfunc array_snapshot_pop_front<felt252> = array_snapshot_pop_front<felt252>;
libfunc drop<Snapshot<Array<felt252>>> = drop<Snapshot<Array<felt252>>>;
libfunc drop<Box<felt252>> = drop<Box<felt252>>;
libfunc felt252_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>> = store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>>> = struct_construct<Tuple<core::array::Span::<core::felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc drop<Unit> = drop<Unit>;
libfunc drop<core::array::Span::<core::felt252>> = drop<core::array::Span::<core::felt252>>;
libfunc felt252_const<485748461484230571791265682659113160264223489397539653310998840191492913> = felt252_const<485748461484230571791265682659113160264223489397539653310998840191492913>;
libfunc snapshot_take<Array<core::array::Span::<core::felt252>>> = snapshot_take<Array<core::array::Span::<core::felt252>>>;
libfunc drop<Array<core::array::Span::<core::felt252>>> = drop<Array<core::array::Span::<core::felt252>>>;
libfunc store_temp<Snapshot<Array<core::array::Span::<core::felt252>>>> = store_temp<Snapshot<Array<core::array::Span::<core::felt252>>>>;
libfunc store_temp<Array<felt252>> = store_temp<Array<felt252>>;
libfunc function_call<user@core::array::ArraySerde::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>::serialize> = function_call<user@core::array::ArraySerde::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>::serialize>;
libfunc enum_match<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>> = enum_match<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>;
libfunc struct_deconstruct<Tuple<Array<felt252>, Unit>> = struct_deconstruct<Tuple<Array<felt252>, Unit>>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>;
libfunc store_temp<Snapshot<Array<felt252>>> = store_temp<Snapshot<Array<felt252>>>;
libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>> = store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>;
libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>> = enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc unbox<felt252> = unbox<felt252>;
libfunc array_new<core::starknet::account::Call> = array_new<core::starknet::account::Call>;
libfunc rename<felt252> = rename<felt252>;
libfunc store_temp<Array<core::starknet::account::Call>> = store_temp<Array<core::starknet::account::Call>>;
libfunc function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>> = function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>;
libfunc enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 1> = enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 1>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>> = struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 0> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>> = store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>;
libfunc dup<Snapshot<Array<core::array::Span::<core::felt252>>>> = dup<Snapshot<Array<core::array::Span::<core::felt252>>>>;
libfunc array_len<core::array::Span::<core::felt252>> = array_len<core::array::Span::<core::felt252>>;
libfunc u32_to_felt252 = u32_to_felt252;
libfunc struct_construct<core::array::Span::<core::array::Span::<core::felt252>>> = struct_construct<core::array::Span::<core::array::Span::<core::felt252>>>;
libfunc store_temp<core::array::Span::<core::array::Span::<core::felt252>>> = store_temp<core::array::Span::<core::array::Span::<core::felt252>>>;
libfunc function_call<user@core::array::serialize_array_helper::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>> = function_call<user@core::array::serialize_array_helper::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>>;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc drop<felt252> = drop<felt252>;
libfunc enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 0> = enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 0>;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc function_call<user@core::starknet::account::CallSerde::deserialize> = function_call<user@core::starknet::account::CallSerde::deserialize>;
libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>> = enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>;
libfunc struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>> = struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>;
libfunc enum_match<core::option::Option::<core::starknet::account::Call>> = enum_match<core::option::Option::<core::starknet::account::Call>>;
libfunc array_append<core::starknet::account::Call> = array_append<core::starknet::account::Call>;
libfunc felt252_const<1> = felt252_const<1>;
libfunc felt252_sub = felt252_sub;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 1> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 1>;
libfunc alloc_local<Snapshot<Array<core::array::Span::<core::felt252>>>> = alloc_local<Snapshot<Array<core::array::Span::<core::felt252>>>>;
libfunc finalize_locals = finalize_locals;
libfunc struct_deconstruct<core::array::Span::<core::array::Span::<core::felt252>>> = struct_deconstruct<core::array::Span::<core::array::Span::<core::felt252>>>;
libfunc enable_ap_tracking = enable_ap_tracking;
libfunc array_snapshot_pop_front<core::array::Span::<core::felt252>> = array_snapshot_pop_front<core::array::Span::<core::felt252>>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, 0> = enum_init<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, 0>;
libfunc store_temp<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>> = store_temp<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, 1> = enum_init<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, 1>;
libfunc store_local<Snapshot<Array<core::array::Span::<core::felt252>>>> = store_local<Snapshot<Array<core::array::Span::<core::felt252>>>>;
libfunc enum_match<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>> = enum_match<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>>;
libfunc unbox<core::array::Span::<core::felt252>> = unbox<core::array::Span::<core::felt252>>;
libfunc function_call<user@core::array::SpanFelt252Serde::serialize> = function_call<user@core::array::SpanFelt252Serde::serialize>;
libfunc drop<Snapshot<Array<core::array::Span::<core::felt252>>>> = drop<Snapshot<Array<core::array::Span::<core::felt252>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1> = enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>> = store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>;
libfunc struct_construct<Tuple<Array<felt252>, Unit>> = struct_construct<Tuple<Array<felt252>, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 0> = enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 0>;
libfunc drop<Uninitialized<Snapshot<Array<core::array::Span::<core::felt252>>>>> = drop<Uninitialized<Snapshot<Array<core::array::Span::<core::felt252>>>>>;
libfunc drop<core::array::Span::<core::array::Span::<core::felt252>>> = drop<core::array::Span::<core::array::Span::<core::felt252>>>;
libfunc function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize> = function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>;
libfunc enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>> = enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc function_call<user@core::array::SpanFelt252Serde::deserialize> = function_call<user@core::array::SpanFelt252Serde::deserialize>;
libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>> = enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>;
libfunc struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>> = struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>>;
libfunc enum_match<core::option::Option::<core::array::Span::<core::felt252>>> = enum_match<core::option::Option::<core::array::Span::<core::felt252>>>;
libfunc struct_construct<core::starknet::account::Call> = struct_construct<core::starknet::account::Call>;
libfunc enum_init<core::option::Option::<core::starknet::account::Call>, 0> = enum_init<core::option::Option::<core::starknet::account::Call>, 0>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>> = struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 0> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>> = store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>;
libfunc drop<ContractAddress> = drop<ContractAddress>;
libfunc enum_init<core::option::Option::<core::starknet::account::Call>, 1> = enum_init<core::option::Option::<core::starknet::account::Call>, 1>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 1> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 1>;
libfunc dup<core::array::Span::<core::felt252>> = dup<core::array::Span::<core::felt252>>;
libfunc rename<core::array::Span::<core::felt252>> = rename<core::array::Span::<core::felt252>>;
libfunc array_len<felt252> = array_len<felt252>;
libfunc function_call<user@core::array::serialize_array_helper::<core::felt252, core::Felt252Serde, core::felt252Drop>> = function_call<user@core::array::serialize_array_helper::<core::felt252, core::Felt252Serde, core::felt252Drop>>;
libfunc contract_address_try_from_felt252 = contract_address_try_from_felt252;
libfunc enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0> = enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>;
libfunc store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>> = store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1> = enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>;
libfunc dup<Snapshot<Array<felt252>>> = dup<Snapshot<Array<felt252>>>;
libfunc u32_try_from_felt252 = u32_try_from_felt252;
libfunc u32_const<0> = u32_const<0>;
libfunc dup<u32> = dup<u32>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc array_slice<felt252> = array_slice<felt252>;
libfunc function_call<user@core::integer::U32Sub::sub> = function_call<user@core::integer::U32Sub::sub>;
libfunc enum_match<core::panics::PanicResult::<(core::integer::u32,)>> = enum_match<core::panics::PanicResult::<(core::integer::u32,)>>;
libfunc struct_deconstruct<Tuple<u32>> = struct_deconstruct<Tuple<u32>>;
libfunc enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 0> = enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>> = struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 0> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>> = store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>;
libfunc felt252_const<1637570914057682275393755530660268060279989363> = felt252_const<1637570914057682275393755530660268060279989363>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 1> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 1>;
libfunc drop<u32> = drop<u32>;
libfunc enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 1> = enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 1>;
libfunc u32_overflowing_sub = u32_overflowing_sub;
libfunc enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 0> = enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u32, core::integer::u32>> = store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>;
libfunc enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 1> = enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 1>;
libfunc felt252_const<155785504329508738615720351733824384887> = felt252_const<155785504329508738615720351733824384887>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>>;
libfunc store_temp<core::panics::PanicResult::<(core::integer::u32,)>> = store_temp<core::panics::PanicResult::<(core::integer::u32,)>>;
libfunc enum_match<core::result::Result::<core::integer::u32, core::integer::u32>> = enum_match<core::result::Result::<core::integer::u32, core::integer::u32>>;
libfunc struct_construct<Tuple<u32>> = struct_construct<Tuple<u32>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u32,)>, 0> = enum_init<core::panics::PanicResult::<(core::integer::u32,)>, 0>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u32,)>, 1> = enum_init<core::panics::PanicResult::<(core::integer::u32,)>, 1>;

disable_ap_tracking() -> (); // 0
array_new<felt252>() -> ([3]); // 1
felt252_const<2>() -> ([4]); // 2
store_temp<felt252>([4]) -> ([4]); // 3
array_append<felt252>([3], [4]) -> ([5]); // 4
felt252_const<11>() -> ([6]); // 5
store_temp<felt252>([6]) -> ([6]); // 6
array_append<felt252>([5], [6]) -> ([7]); // 7
felt252_const<949021990203918389843157787496164629863144228991510976554585288817234167820>() -> ([8]); // 8
store_temp<felt252>([8]) -> ([8]); // 9
array_append<felt252>([7], [8]) -> ([9]); // 10
felt252_const<3>() -> ([10]); // 11
store_temp<felt252>([10]) -> ([10]); // 12
array_append<felt252>([9], [10]) -> ([11]); // 13
felt252_const<3461208862407773342635871960084685728498932599526891269545319004528055383761>() -> ([12]); // 14
store_temp<felt252>([12]) -> ([12]); // 15
array_append<felt252>([11], [12]) -> ([13]); // 16
felt252_const<81485106>() -> ([14]); // 17
store_temp<felt252>([14]) -> ([14]); // 18
array_append<felt252>([13], [14]) -> ([15]); // 19
felt252_const<0>() -> ([16]); // 20
store_temp<felt252>([16]) -> ([16]); // 21
array_append<felt252>([15], [16]) -> ([17]); // 22
felt252_const<11>() -> ([18]); // 23
store_temp<felt252>([18]) -> ([18]); // 24
array_append<felt252>([17], [18]) -> ([19]); // 25
felt252_const<1245570219085329014176261566038427188720157448719795888519090757413574003847>() -> ([20]); // 26
store_temp<felt252>([20]) -> ([20]); // 27
array_append<felt252>([19], [20]) -> ([21]); // 28
felt252_const<9>() -> ([22]); // 29
store_temp<felt252>([22]) -> ([22]); // 30
array_append<felt252>([21], [22]) -> ([23]); // 31
felt252_const<81485106>() -> ([24]); // 32
store_temp<felt252>([24]) -> ([24]); // 33
array_append<felt252>([23], [24]) -> ([25]); // 34
felt252_const<0>() -> ([26]); // 35
store_temp<felt252>([26]) -> ([26]); // 36
array_append<felt252>([25], [26]) -> ([27]); // 37
felt252_const<38680417026645490>() -> ([28]); // 38
store_temp<felt252>([28]) -> ([28]); // 39
array_append<felt252>([27], [28]) -> ([29]); // 40
felt252_const<0>() -> ([30]); // 41
store_temp<felt252>([30]) -> ([30]); // 42
array_append<felt252>([29], [30]) -> ([31]); // 43
felt252_const<2>() -> ([32]); // 44
store_temp<felt252>([32]) -> ([32]); // 45
array_append<felt252>([31], [32]) -> ([33]); // 46
felt252_const<2368576823837625528275935341135881659748932889268308403712618244410713532584>() -> ([34]); // 47
store_temp<felt252>([34]) -> ([34]); // 48
array_append<felt252>([33], [34]) -> ([35]); // 49
felt252_const<2087021424722619777119509474943472645767659996348769578120564519014510906823>() -> ([36]); // 50
store_temp<felt252>([36]) -> ([36]); // 51
array_append<felt252>([35], [36]) -> ([37]); // 52
felt252_const<2387727935691014887386018108409351696155809189117188913679269984352887991464>() -> ([38]); // 53
store_temp<felt252>([38]) -> ([38]); // 54
array_append<felt252>([37], [38]) -> ([39]); // 55
felt252_const<1700291172>() -> ([40]); // 56
store_temp<felt252>([40]) -> ([40]); // 57
array_append<felt252>([39], [40]) -> ([41]); // 58
snapshot_take<Array<felt252>>([41]) -> ([42], [43]); // 59
drop<Array<felt252>>([42]) -> (); // 60
struct_construct<core::array::Span::<core::felt252>>([43]) -> ([44]); // 61
store_temp<RangeCheck>([0]) -> ([0]); // 62
store_temp<GasBuiltin>([1]) -> ([1]); // 63
store_temp<System>([2]) -> ([2]); // 64
store_temp<core::array::Span::<core::felt252>>([44]) -> ([44]); // 65
function_call<user@test::test_contract::__wrapper____validate__>([0], [1], [2], [44]) -> ([45], [46], [47], [48]); // 66
enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([48]) { fallthrough([49]) 78([50]) }; // 67
branch_align() -> (); // 68
drop<Tuple<core::array::Span::<core::felt252>>>([49]) -> (); // 69
struct_construct<Unit>() -> ([51]); // 70
struct_construct<Tuple<Unit>>([51]) -> ([52]); // 71
enum_init<core::panics::PanicResult::<((),)>, 0>([52]) -> ([53]); // 72
store_temp<RangeCheck>([45]) -> ([45]); // 73
store_temp<GasBuiltin>([46]) -> ([46]); // 74
store_temp<System>([47]) -> ([47]); // 75
store_temp<core::panics::PanicResult::<((),)>>([53]) -> ([53]); // 76
return([45], [46], [47], [53]); // 77
branch_align() -> (); // 78
enum_init<core::panics::PanicResult::<((),)>, 1>([50]) -> ([54]); // 79
store_temp<RangeCheck>([45]) -> ([45]); // 80
store_temp<GasBuiltin>([46]) -> ([46]); // 81
store_temp<System>([47]) -> ([47]); // 82
store_temp<core::panics::PanicResult::<((),)>>([54]) -> ([54]); // 83
return([45], [46], [47], [54]); // 84
drop<Array<core::starknet::account::Call>>([1]) -> (); // 85
struct_construct<Unit>() -> ([2]); // 86
return([0], [2]); // 87
drop<Array<core::starknet::account::Call>>([1]) -> (); // 88
array_new<core::array::Span::<core::felt252>>() -> ([2]); // 89
store_temp<Array<core::array::Span::<core::felt252>>>([2]) -> ([2]); // 90
return([0], [2]); // 91
struct_construct<test::test_contract::ContractState>() -> ([0]); // 92
return([0]); // 93
revoke_ap_tracking() -> (); // 94
withdraw_gas([0], [1]) { fallthrough([4], [5]) 176([6], [7]) }; // 95
branch_align() -> (); // 96
store_temp<RangeCheck>([4]) -> ([4]); // 97
store_temp<GasBuiltin>([5]) -> ([5]); // 98
store_temp<core::array::Span::<core::felt252>>([3]) -> ([3]); // 99
function_call<user@core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize>([4], [5], [3]) -> ([8], [9], [10]); // 100
enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([10]) { fallthrough([11]) 169([12]) }; // 101
branch_align() -> (); // 102
struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>([11]) -> ([13], [14]); // 103
enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>([14]) { fallthrough([15]) 154([16]) }; // 104
branch_align() -> (); // 105
drop<Array<core::starknet::account::Call>>([15]) -> (); // 106
struct_deconstruct<core::array::Span::<core::felt252>>([13]) -> ([17]); // 107
array_snapshot_pop_front<felt252>([17]) { fallthrough([18], [19]) 124([20]) }; // 108
branch_align() -> (); // 109
drop<Snapshot<Array<felt252>>>([18]) -> (); // 110
drop<Box<felt252>>([19]) -> (); // 111
array_new<felt252>() -> ([21]); // 112
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([22]); // 113
store_temp<felt252>([22]) -> ([22]); // 114
array_append<felt252>([21], [22]) -> ([23]); // 115
struct_construct<core::panics::Panic>() -> ([24]); // 116
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([24], [23]) -> ([25]); // 117
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([25]) -> ([26]); // 118
store_temp<RangeCheck>([8]) -> ([8]); // 119
store_temp<GasBuiltin>([9]) -> ([9]); // 120
store_temp<System>([2]) -> ([2]); // 121
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([26]) -> ([26]); // 122
return([8], [9], [2], [26]); // 123
branch_align() -> (); // 124
drop<Snapshot<Array<felt252>>>([20]) -> (); // 125
get_builtin_costs() -> ([27]); // 126
store_temp<BuiltinCosts>([27]) -> ([27]); // 127
withdraw_gas_all([8], [9], [27]) { fallthrough([28], [29]) 141([30], [31]) }; // 128
branch_align() -> (); // 129
array_new<felt252>() -> ([32]); // 130
snapshot_take<Array<felt252>>([32]) -> ([33], [34]); // 131
drop<Array<felt252>>([33]) -> (); // 132
struct_construct<core::array::Span::<core::felt252>>([34]) -> ([35]); // 133
struct_construct<Tuple<core::array::Span::<core::felt252>>>([35]) -> ([36]); // 134
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([36]) -> ([37]); // 135
store_temp<RangeCheck>([28]) -> ([28]); // 136
store_temp<GasBuiltin>([29]) -> ([29]); // 137
store_temp<System>([2]) -> ([2]); // 138
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([37]) -> ([37]); // 139
return([28], [29], [2], [37]); // 140
branch_align() -> (); // 141
array_new<felt252>() -> ([38]); // 142
felt252_const<375233589013918064796019>() -> ([39]); // 143
store_temp<felt252>([39]) -> ([39]); // 144
array_append<felt252>([38], [39]) -> ([40]); // 145
struct_construct<core::panics::Panic>() -> ([41]); // 146
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([41], [40]) -> ([42]); // 147
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([42]) -> ([43]); // 148
store_temp<RangeCheck>([30]) -> ([30]); // 149
store_temp<GasBuiltin>([31]) -> ([31]); // 150
store_temp<System>([2]) -> ([2]); // 151
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([43]) -> ([43]); // 152
return([30], [31], [2], [43]); // 153
branch_align() -> (); // 154
drop<Unit>([16]) -> (); // 155
drop<core::array::Span::<core::felt252>>([13]) -> (); // 156
array_new<felt252>() -> ([44]); // 157
felt252_const<485748461484230571791265682659113160264223489397539653310998840191492913>() -> ([45]); // 158
store_temp<felt252>([45]) -> ([45]); // 159
array_append<felt252>([44], [45]) -> ([46]); // 160
struct_construct<core::panics::Panic>() -> ([47]); // 161
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([47], [46]) -> ([48]); // 162
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([48]) -> ([49]); // 163
store_temp<RangeCheck>([8]) -> ([8]); // 164
store_temp<GasBuiltin>([9]) -> ([9]); // 165
store_temp<System>([2]) -> ([2]); // 166
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([49]) -> ([49]); // 167
return([8], [9], [2], [49]); // 168
branch_align() -> (); // 169
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([12]) -> ([50]); // 170
store_temp<RangeCheck>([8]) -> ([8]); // 171
store_temp<GasBuiltin>([9]) -> ([9]); // 172
store_temp<System>([2]) -> ([2]); // 173
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([50]) -> ([50]); // 174
return([8], [9], [2], [50]); // 175
branch_align() -> (); // 176
drop<core::array::Span::<core::felt252>>([3]) -> (); // 177
array_new<felt252>() -> ([51]); // 178
felt252_const<375233589013918064796019>() -> ([52]); // 179
store_temp<felt252>([52]) -> ([52]); // 180
array_append<felt252>([51], [52]) -> ([53]); // 181
struct_construct<core::panics::Panic>() -> ([54]); // 182
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([54], [53]) -> ([55]); // 183
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([55]) -> ([56]); // 184
store_temp<RangeCheck>([6]) -> ([6]); // 185
store_temp<GasBuiltin>([7]) -> ([7]); // 186
store_temp<System>([2]) -> ([2]); // 187
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([56]) -> ([56]); // 188
return([6], [7], [2], [56]); // 189
revoke_ap_tracking() -> (); // 190
withdraw_gas([0], [1]) { fallthrough([4], [5]) 291([6], [7]) }; // 191
branch_align() -> (); // 192
store_temp<RangeCheck>([4]) -> ([4]); // 193
store_temp<GasBuiltin>([5]) -> ([5]); // 194
store_temp<core::array::Span::<core::felt252>>([3]) -> ([3]); // 195
function_call<user@core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize>([4], [5], [3]) -> ([8], [9], [10]); // 196
enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([10]) { fallthrough([11]) 284([12]) }; // 197
branch_align() -> (); // 198
struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>([11]) -> ([13], [14]); // 199
enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>([14]) { fallthrough([15]) 269([16]) }; // 200
branch_align() -> (); // 201
drop<Array<core::starknet::account::Call>>([15]) -> (); // 202
struct_deconstruct<core::array::Span::<core::felt252>>([13]) -> ([17]); // 203
array_snapshot_pop_front<felt252>([17]) { fallthrough([18], [19]) 220([20]) }; // 204
branch_align() -> (); // 205
drop<Snapshot<Array<felt252>>>([18]) -> (); // 206
drop<Box<felt252>>([19]) -> (); // 207
array_new<felt252>() -> ([21]); // 208
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([22]); // 209
store_temp<felt252>([22]) -> ([22]); // 210
array_append<felt252>([21], [22]) -> ([23]); // 211
struct_construct<core::panics::Panic>() -> ([24]); // 212
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([24], [23]) -> ([25]); // 213
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([25]) -> ([26]); // 214
store_temp<RangeCheck>([8]) -> ([8]); // 215
store_temp<GasBuiltin>([9]) -> ([9]); // 216
store_temp<System>([2]) -> ([2]); // 217
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([26]) -> ([26]); // 218
return([8], [9], [2], [26]); // 219
branch_align() -> (); // 220
drop<Snapshot<Array<felt252>>>([20]) -> (); // 221
get_builtin_costs() -> ([27]); // 222
store_temp<BuiltinCosts>([27]) -> ([27]); // 223
withdraw_gas_all([8], [9], [27]) { fallthrough([28], [29]) 256([30], [31]) }; // 224
branch_align() -> (); // 225
array_new<core::array::Span::<core::felt252>>() -> ([32]); // 226
array_new<felt252>() -> ([33]); // 227
snapshot_take<Array<core::array::Span::<core::felt252>>>([32]) -> ([34], [35]); // 228
drop<Array<core::array::Span::<core::felt252>>>([34]) -> (); // 229
store_temp<RangeCheck>([28]) -> ([28]); // 230
store_temp<GasBuiltin>([29]) -> ([29]); // 231
store_temp<Snapshot<Array<core::array::Span::<core::felt252>>>>([35]) -> ([35]); // 232
store_temp<Array<felt252>>([33]) -> ([33]); // 233
function_call<user@core::array::ArraySerde::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>::serialize>([28], [29], [35], [33]) -> ([36], [37], [38]); // 234
enum_match<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([38]) { fallthrough([39]) 249([40]) }; // 235
branch_align() -> (); // 236
struct_deconstruct<Tuple<Array<felt252>, Unit>>([39]) -> ([41], [42]); // 237
drop<Unit>([42]) -> (); // 238
snapshot_take<Array<felt252>>([41]) -> ([43], [44]); // 239
drop<Array<felt252>>([43]) -> (); // 240
struct_construct<core::array::Span::<core::felt252>>([44]) -> ([45]); // 241
struct_construct<Tuple<core::array::Span::<core::felt252>>>([45]) -> ([46]); // 242
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([46]) -> ([47]); // 243
store_temp<RangeCheck>([36]) -> ([36]); // 244
store_temp<GasBuiltin>([37]) -> ([37]); // 245
store_temp<System>([2]) -> ([2]); // 246
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([47]) -> ([47]); // 247
return([36], [37], [2], [47]); // 248
branch_align() -> (); // 249
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([40]) -> ([48]); // 250
store_temp<RangeCheck>([36]) -> ([36]); // 251
store_temp<GasBuiltin>([37]) -> ([37]); // 252
store_temp<System>([2]) -> ([2]); // 253
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([48]) -> ([48]); // 254
return([36], [37], [2], [48]); // 255
branch_align() -> (); // 256
array_new<felt252>() -> ([49]); // 257
felt252_const<375233589013918064796019>() -> ([50]); // 258
store_temp<felt252>([50]) -> ([50]); // 259
array_append<felt252>([49], [50]) -> ([51]); // 260
struct_construct<core::panics::Panic>() -> ([52]); // 261
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([52], [51]) -> ([53]); // 262
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([53]) -> ([54]); // 263
store_temp<RangeCheck>([30]) -> ([30]); // 264
store_temp<GasBuiltin>([31]) -> ([31]); // 265
store_temp<System>([2]) -> ([2]); // 266
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([54]) -> ([54]); // 267
return([30], [31], [2], [54]); // 268
branch_align() -> (); // 269
drop<Unit>([16]) -> (); // 270
drop<core::array::Span::<core::felt252>>([13]) -> (); // 271
array_new<felt252>() -> ([55]); // 272
felt252_const<485748461484230571791265682659113160264223489397539653310998840191492913>() -> ([56]); // 273
store_temp<felt252>([56]) -> ([56]); // 274
array_append<felt252>([55], [56]) -> ([57]); // 275
struct_construct<core::panics::Panic>() -> ([58]); // 276
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([58], [57]) -> ([59]); // 277
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([59]) -> ([60]); // 278
store_temp<RangeCheck>([8]) -> ([8]); // 279
store_temp<GasBuiltin>([9]) -> ([9]); // 280
store_temp<System>([2]) -> ([2]); // 281
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([60]) -> ([60]); // 282
return([8], [9], [2], [60]); // 283
branch_align() -> (); // 284
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([12]) -> ([61]); // 285
store_temp<RangeCheck>([8]) -> ([8]); // 286
store_temp<GasBuiltin>([9]) -> ([9]); // 287
store_temp<System>([2]) -> ([2]); // 288
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([61]) -> ([61]); // 289
return([8], [9], [2], [61]); // 290
branch_align() -> (); // 291
drop<core::array::Span::<core::felt252>>([3]) -> (); // 292
array_new<felt252>() -> ([62]); // 293
felt252_const<375233589013918064796019>() -> ([63]); // 294
store_temp<felt252>([63]) -> ([63]); // 295
array_append<felt252>([62], [63]) -> ([64]); // 296
struct_construct<core::panics::Panic>() -> ([65]); // 297
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([65], [64]) -> ([66]); // 298
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([66]) -> ([67]); // 299
store_temp<RangeCheck>([6]) -> ([6]); // 300
store_temp<GasBuiltin>([7]) -> ([7]); // 301
store_temp<System>([2]) -> ([2]); // 302
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([67]) -> ([67]); // 303
return([6], [7], [2], [67]); // 304
disable_ap_tracking() -> (); // 305
struct_deconstruct<core::array::Span::<core::felt252>>([2]) -> ([3]); // 306
array_snapshot_pop_front<felt252>([3]) { fallthrough([4], [5]) 313([6]) }; // 307
branch_align() -> (); // 308
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([5]) -> ([7]); // 309
store_temp<Snapshot<Array<felt252>>>([4]) -> ([8]); // 310
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([7]) -> ([9]); // 311
jump() { 318() }; // 312
branch_align() -> (); // 313
struct_construct<Unit>() -> ([10]); // 314
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([10]) -> ([11]); // 315
store_temp<Snapshot<Array<felt252>>>([6]) -> ([8]); // 316
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([11]) -> ([9]); // 317
struct_construct<core::array::Span::<core::felt252>>([8]) -> ([12]); // 318
store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]); // 319
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([9]) { fallthrough([13]) 332([14]) }; // 320
branch_align() -> (); // 321
unbox<felt252>([13]) -> ([15]); // 322
array_new<core::starknet::account::Call>() -> ([16]); // 323
rename<felt252>([15]) -> ([17]); // 324
store_temp<RangeCheck>([0]) -> ([0]); // 325
store_temp<GasBuiltin>([1]) -> ([1]); // 326
store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]); // 327
store_temp<Array<core::starknet::account::Call>>([16]) -> ([16]); // 328
store_temp<felt252>([17]) -> ([17]); // 329
function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>([0], [1], [12], [16], [17]) -> ([18], [19], [20]); // 330
return([18], [19], [20]); // 331
branch_align() -> (); // 332
drop<Unit>([14]) -> (); // 333
struct_construct<Unit>() -> ([21]); // 334
enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 1>([21]) -> ([22]); // 335
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>([12], [22]) -> ([23]); // 336
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 0>([23]) -> ([24]); // 337
store_temp<RangeCheck>([0]) -> ([0]); // 338
store_temp<GasBuiltin>([1]) -> ([1]); // 339
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([24]) -> ([24]); // 340
return([0], [1], [24]); // 341
disable_ap_tracking() -> (); // 342
dup<Snapshot<Array<core::array::Span::<core::felt252>>>>([2]) -> ([2], [4]); // 343
array_len<core::array::Span::<core::felt252>>([4]) -> ([5]); // 344
u32_to_felt252([5]) -> ([6]); // 345
store_temp<felt252>([6]) -> ([6]); // 346
array_append<felt252>([3], [6]) -> ([7]); // 347
struct_construct<core::array::Span::<core::array::Span::<core::felt252>>>([2]) -> ([8]); // 348
store_temp<RangeCheck>([0]) -> ([0]); // 349
store_temp<GasBuiltin>([1]) -> ([1]); // 350
store_temp<core::array::Span::<core::array::Span::<core::felt252>>>([8]) -> ([8]); // 351
store_temp<Array<felt252>>([7]) -> ([7]); // 352
function_call<user@core::array::serialize_array_helper::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>>([0], [1], [8], [7]) -> ([9], [10], [11]); // 353
return([9], [10], [11]); // 354
disable_ap_tracking() -> (); // 355
get_builtin_costs() -> ([5]); // 356
store_temp<BuiltinCosts>([5]) -> ([5]); // 357
withdraw_gas_all([0], [1], [5]) { fallthrough([6], [7]) 410([8], [9]) }; // 358
branch_align() -> (); // 359
dup<felt252>([4]) -> ([4], [10]); // 360
store_temp<RangeCheck>([6]) -> ([6]); // 361
felt252_is_zero([10]) { fallthrough() 372([11]) }; // 362
branch_align() -> (); // 363
drop<felt252>([4]) -> (); // 364
enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 0>([3]) -> ([12]); // 365
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>([2], [12]) -> ([13]); // 366
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 0>([13]) -> ([14]); // 367
store_temp<RangeCheck>([6]) -> ([6]); // 368
store_temp<GasBuiltin>([7]) -> ([7]); // 369
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([14]) -> ([14]); // 370
return([6], [7], [14]); // 371
branch_align() -> (); // 372
drop<NonZero<felt252>>([11]) -> (); // 373
store_temp<RangeCheck>([6]) -> ([6]); // 374
store_temp<core::array::Span::<core::felt252>>([2]) -> ([2]); // 375
function_call<user@core::starknet::account::CallSerde::deserialize>([6], [2]) -> ([15], [16]); // 376
enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([16]) { fallthrough([17]) 402([18]) }; // 377
branch_align() -> (); // 378
struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>([17]) -> ([19], [20]); // 379
enum_match<core::option::Option::<core::starknet::account::Call>>([20]) { fallthrough([21]) 392([22]) }; // 380
branch_align() -> (); // 381
array_append<core::starknet::account::Call>([3], [21]) -> ([23]); // 382
felt252_const<1>() -> ([24]); // 383
felt252_sub([4], [24]) -> ([25]); // 384
store_temp<RangeCheck>([15]) -> ([15]); // 385
store_temp<GasBuiltin>([7]) -> ([7]); // 386
store_temp<core::array::Span::<core::felt252>>([19]) -> ([19]); // 387
store_temp<Array<core::starknet::account::Call>>([23]) -> ([23]); // 388
store_temp<felt252>([25]) -> ([25]); // 389
function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>([15], [7], [19], [23], [25]) -> ([26], [27], [28]); // 390
return([26], [27], [28]); // 391
branch_align() -> (); // 392
drop<felt252>([4]) -> (); // 393
drop<Array<core::starknet::account::Call>>([3]) -> (); // 394
enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 1>([22]) -> ([29]); // 395
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>([19], [29]) -> ([30]); // 396
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 0>([30]) -> ([31]); // 397
store_temp<RangeCheck>([15]) -> ([15]); // 398
store_temp<GasBuiltin>([7]) -> ([7]); // 399
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([31]) -> ([31]); // 400
return([15], [7], [31]); // 401
branch_align() -> (); // 402
drop<felt252>([4]) -> (); // 403
drop<Array<core::starknet::account::Call>>([3]) -> (); // 404
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 1>([18]) -> ([32]); // 405
store_temp<RangeCheck>([15]) -> ([15]); // 406
store_temp<GasBuiltin>([7]) -> ([7]); // 407
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([32]) -> ([32]); // 408
return([15], [7], [32]); // 409
branch_align() -> (); // 410
drop<felt252>([4]) -> (); // 411
drop<Array<core::starknet::account::Call>>([3]) -> (); // 412
drop<core::array::Span::<core::felt252>>([2]) -> (); // 413
array_new<felt252>() -> ([33]); // 414
felt252_const<375233589013918064796019>() -> ([34]); // 415
store_temp<felt252>([34]) -> ([34]); // 416
array_append<felt252>([33], [34]) -> ([35]); // 417
struct_construct<core::panics::Panic>() -> ([36]); // 418
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([36], [35]) -> ([37]); // 419
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 1>([37]) -> ([38]); // 420
store_temp<RangeCheck>([8]) -> ([8]); // 421
store_temp<GasBuiltin>([9]) -> ([9]); // 422
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([38]) -> ([38]); // 423
return([8], [9], [38]); // 424
alloc_local<Snapshot<Array<core::array::Span::<core::felt252>>>>() -> ([5]); // 425
finalize_locals() -> (); // 426
disable_ap_tracking() -> (); // 427
get_builtin_costs() -> ([6]); // 428
store_temp<BuiltinCosts>([6]) -> ([6]); // 429
withdraw_gas_all([0], [1], [6]) { fallthrough([7], [8]) 485([9], [10]) }; // 430
branch_align() -> (); // 431
struct_deconstruct<core::array::Span::<core::array::Span::<core::felt252>>>([2]) -> ([11]); // 432
enable_ap_tracking() -> (); // 433
store_temp<RangeCheck>([7]) -> ([7]); // 434
array_snapshot_pop_front<core::array::Span::<core::felt252>>([11]) { fallthrough([12], [13]) 441([14]) }; // 435
branch_align() -> (); // 436
enum_init<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, 0>([13]) -> ([15]); // 437
store_temp<Snapshot<Array<core::array::Span::<core::felt252>>>>([12]) -> ([4]); // 438
store_temp<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>>([15]) -> ([16]); // 439
jump() { 446() }; // 440
branch_align() -> (); // 441
struct_construct<Unit>() -> ([17]); // 442
enum_init<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, 1>([17]) -> ([18]); // 443
store_temp<Snapshot<Array<core::array::Span::<core::felt252>>>>([14]) -> ([4]); // 444
store_temp<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>>([18]) -> ([16]); // 445
store_local<Snapshot<Array<core::array::Span::<core::felt252>>>>([5], [4]) -> ([4]); // 446
enum_match<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>>([16]) { fallthrough([19]) 474([20]) }; // 447
branch_align() -> (); // 448
disable_ap_tracking() -> (); // 449
unbox<core::array::Span::<core::felt252>>([19]) -> ([21]); // 450
store_temp<RangeCheck>([7]) -> ([7]); // 451
store_temp<GasBuiltin>([8]) -> ([8]); // 452
store_temp<core::array::Span::<core::felt252>>([21]) -> ([21]); // 453
store_temp<Array<felt252>>([3]) -> ([3]); // 454
function_call<user@core::array::SpanFelt252Serde::serialize>([7], [8], [21], [3]) -> ([22], [23], [24]); // 455
enum_match<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([24]) { fallthrough([25]) 467([26]) }; // 456
branch_align() -> (); // 457
struct_deconstruct<Tuple<Array<felt252>, Unit>>([25]) -> ([27], [28]); // 458
drop<Unit>([28]) -> (); // 459
struct_construct<core::array::Span::<core::array::Span::<core::felt252>>>([4]) -> ([29]); // 460
store_temp<RangeCheck>([22]) -> ([22]); // 461
store_temp<GasBuiltin>([23]) -> ([23]); // 462
store_temp<core::array::Span::<core::array::Span::<core::felt252>>>([29]) -> ([29]); // 463
store_temp<Array<felt252>>([27]) -> ([27]); // 464
function_call<user@core::array::serialize_array_helper::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>>([22], [23], [29], [27]) -> ([30], [31], [32]); // 465
return([30], [31], [32]); // 466
branch_align() -> (); // 467
drop<Snapshot<Array<core::array::Span::<core::felt252>>>>([4]) -> (); // 468
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1>([26]) -> ([33]); // 469
store_temp<RangeCheck>([22]) -> ([22]); // 470
store_temp<GasBuiltin>([23]) -> ([23]); // 471
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([33]) -> ([33]); // 472
return([22], [23], [33]); // 473
branch_align() -> (); // 474
disable_ap_tracking() -> (); // 475
drop<Unit>([20]) -> (); // 476
drop<Snapshot<Array<core::array::Span::<core::felt252>>>>([4]) -> (); // 477
struct_construct<Unit>() -> ([34]); // 478
struct_construct<Tuple<Array<felt252>, Unit>>([3], [34]) -> ([35]); // 479
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 0>([35]) -> ([36]); // 480
store_temp<RangeCheck>([7]) -> ([7]); // 481
store_temp<GasBuiltin>([8]) -> ([8]); // 482
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([36]) -> ([36]); // 483
return([7], [8], [36]); // 484
branch_align() -> (); // 485
drop<Uninitialized<Snapshot<Array<core::array::Span::<core::felt252>>>>>([5]) -> (); // 486
drop<Array<felt252>>([3]) -> (); // 487
drop<core::array::Span::<core::array::Span::<core::felt252>>>([2]) -> (); // 488
array_new<felt252>() -> ([37]); // 489
felt252_const<375233589013918064796019>() -> ([38]); // 490
store_temp<felt252>([38]) -> ([38]); // 491
array_append<felt252>([37], [38]) -> ([39]); // 492
struct_construct<core::panics::Panic>() -> ([40]); // 493
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([40], [39]) -> ([41]); // 494
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1>([41]) -> ([42]); // 495
store_temp<RangeCheck>([9]) -> ([9]); // 496
store_temp<GasBuiltin>([10]) -> ([10]); // 497
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([42]) -> ([42]); // 498
return([9], [10], [42]); // 499
store_temp<RangeCheck>([0]) -> ([0]); // 500
store_temp<core::array::Span::<core::felt252>>([1]) -> ([1]); // 501
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([0], [1]) -> ([2], [3], [4]); // 502
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([4]) { fallthrough([5]) 565([6]) }; // 503
branch_align() -> (); // 504
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([7]); // 505
array_snapshot_pop_front<felt252>([7]) { fallthrough([8], [9]) 512([10]) }; // 506
branch_align() -> (); // 507
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([9]) -> ([11]); // 508
store_temp<Snapshot<Array<felt252>>>([8]) -> ([12]); // 509
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([11]) -> ([13]); // 510
jump() { 517() }; // 511
branch_align() -> (); // 512
struct_construct<Unit>() -> ([14]); // 513
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([14]) -> ([15]); // 514
store_temp<Snapshot<Array<felt252>>>([10]) -> ([12]); // 515
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([15]) -> ([13]); // 516
struct_construct<core::array::Span::<core::felt252>>([12]) -> ([16]); // 517
store_temp<core::array::Span::<core::felt252>>([16]) -> ([16]); // 518
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([13]) { fallthrough([17]) 555([18]) }; // 519
branch_align() -> (); // 520
unbox<felt252>([17]) -> ([19]); // 521
store_temp<RangeCheck>([2]) -> ([2]); // 522
store_temp<core::array::Span::<core::felt252>>([16]) -> ([16]); // 523
function_call<user@core::array::SpanFelt252Serde::deserialize>([2], [16]) -> ([20], [21]); // 524
store_temp<felt252>([19]) -> ([19]); // 525
enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([21]) { fallthrough([22]) 548([23]) }; // 526
branch_align() -> (); // 527
struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>>([22]) -> ([24], [25]); // 528
enum_match<core::option::Option::<core::array::Span::<core::felt252>>>([25]) { fallthrough([26]) 539([27]) }; // 529
branch_align() -> (); // 530
rename<felt252>([19]) -> ([28]); // 531
struct_construct<core::starknet::account::Call>([5], [28], [26]) -> ([29]); // 532
enum_init<core::option::Option::<core::starknet::account::Call>, 0>([29]) -> ([30]); // 533
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>([24], [30]) -> ([31]); // 534
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 0>([31]) -> ([32]); // 535
store_temp<RangeCheck>([20]) -> ([20]); // 536
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([32]) -> ([32]); // 537
return([20], [32]); // 538
branch_align() -> (); // 539
drop<felt252>([19]) -> (); // 540
drop<ContractAddress>([5]) -> (); // 541
enum_init<core::option::Option::<core::starknet::account::Call>, 1>([27]) -> ([33]); // 542
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>([24], [33]) -> ([34]); // 543
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 0>([34]) -> ([35]); // 544
store_temp<RangeCheck>([20]) -> ([20]); // 545
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([35]) -> ([35]); // 546
return([20], [35]); // 547
branch_align() -> (); // 548
drop<ContractAddress>([5]) -> (); // 549
drop<felt252>([19]) -> (); // 550
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 1>([23]) -> ([36]); // 551
store_temp<RangeCheck>([20]) -> ([20]); // 552
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([36]) -> ([36]); // 553
return([20], [36]); // 554
branch_align() -> (); // 555
drop<Unit>([18]) -> (); // 556
drop<ContractAddress>([5]) -> (); // 557
struct_construct<Unit>() -> ([37]); // 558
enum_init<core::option::Option::<core::starknet::account::Call>, 1>([37]) -> ([38]); // 559
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>([16], [38]) -> ([39]); // 560
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 0>([39]) -> ([40]); // 561
store_temp<RangeCheck>([2]) -> ([2]); // 562
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([40]) -> ([40]); // 563
return([2], [40]); // 564
branch_align() -> (); // 565
enum_init<core::option::Option::<core::starknet::account::Call>, 1>([6]) -> ([41]); // 566
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>([3], [41]) -> ([42]); // 567
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 0>([42]) -> ([43]); // 568
store_temp<RangeCheck>([2]) -> ([2]); // 569
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([43]) -> ([43]); // 570
return([2], [43]); // 571
disable_ap_tracking() -> (); // 572
dup<core::array::Span::<core::felt252>>([2]) -> ([2], [4]); // 573
rename<core::array::Span::<core::felt252>>([4]) -> ([5]); // 574
struct_deconstruct<core::array::Span::<core::felt252>>([5]) -> ([6]); // 575
array_len<felt252>([6]) -> ([7]); // 576
u32_to_felt252([7]) -> ([8]); // 577
store_temp<felt252>([8]) -> ([8]); // 578
array_append<felt252>([3], [8]) -> ([9]); // 579
rename<core::array::Span::<core::felt252>>([2]) -> ([10]); // 580
store_temp<RangeCheck>([0]) -> ([0]); // 581
store_temp<GasBuiltin>([1]) -> ([1]); // 582
store_temp<core::array::Span::<core::felt252>>([10]) -> ([10]); // 583
store_temp<Array<felt252>>([9]) -> ([9]); // 584
function_call<user@core::array::serialize_array_helper::<core::felt252, core::Felt252Serde, core::felt252Drop>>([0], [1], [10], [9]) -> ([11], [12], [13]); // 585
return([11], [12], [13]); // 586
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]); // 587
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 594([5]) }; // 588
branch_align() -> (); // 589
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]); // 590
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]); // 591
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]); // 592
jump() { 599() }; // 593
branch_align() -> (); // 594
struct_construct<Unit>() -> ([9]); // 595
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]); // 596
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]); // 597
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]); // 598
struct_construct<core::array::Span::<core::felt252>>([7]) -> ([11]); // 599
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]); // 600
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 620([13]) }; // 601
branch_align() -> (); // 602
unbox<felt252>([12]) -> ([14]); // 603
rename<felt252>([14]) -> ([15]); // 604
store_temp<felt252>([15]) -> ([15]); // 605
contract_address_try_from_felt252([0], [15]) { fallthrough([16], [17]) 613([18]) }; // 606
branch_align() -> (); // 607
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>([17]) -> ([19]); // 608
store_temp<RangeCheck>([16]) -> ([16]); // 609
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]); // 610
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([19]) -> ([19]); // 611
return([16], [11], [19]); // 612
branch_align() -> (); // 613
struct_construct<Unit>() -> ([20]); // 614
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([20]) -> ([21]); // 615
store_temp<RangeCheck>([18]) -> ([18]); // 616
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]); // 617
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([21]) -> ([21]); // 618
return([18], [11], [21]); // 619
branch_align() -> (); // 620
drop<Unit>([13]) -> (); // 621
struct_construct<Unit>() -> ([22]); // 622
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([22]) -> ([23]); // 623
store_temp<RangeCheck>([0]) -> ([0]); // 624
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]); // 625
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([23]) -> ([23]); // 626
return([0], [11], [23]); // 627
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]); // 628
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 635([5]) }; // 629
branch_align() -> (); // 630
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]); // 631
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]); // 632
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]); // 633
jump() { 640() }; // 634
branch_align() -> (); // 635
struct_construct<Unit>() -> ([9]); // 636
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]); // 637
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]); // 638
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]); // 639
dup<Snapshot<Array<felt252>>>([7]) -> ([7], [11]); // 640
struct_construct<core::array::Span::<core::felt252>>([11]) -> ([12]); // 641
store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]); // 642
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([13]) 720([14]) }; // 643
branch_align() -> (); // 644
unbox<felt252>([13]) -> ([15]); // 645
rename<felt252>([15]) -> ([16]); // 646
store_temp<felt252>([16]) -> ([16]); // 647
u32_try_from_felt252([0], [16]) { fallthrough([17], [18]) 711([19]) }; // 648
branch_align() -> (); // 649
drop<core::array::Span::<core::felt252>>([12]) -> (); // 650
u32_const<0>() -> ([20]); // 651
dup<Snapshot<Array<felt252>>>([7]) -> ([7], [21]); // 652
dup<u32>([18]) -> ([18], [22]); // 653
store_temp<u32>([20]) -> ([20]); // 654
array_slice<felt252>([17], [21], [20], [22]) { fallthrough([23], [24]) 698([25]) }; // 655
branch_align() -> (); // 656
dup<Snapshot<Array<felt252>>>([7]) -> ([7], [26]); // 657
array_len<felt252>([26]) -> ([27]); // 658
store_temp<RangeCheck>([23]) -> ([23]); // 659
store_temp<u32>([27]) -> ([27]); // 660
dup<u32>([18]) -> ([18], [28]); // 661
store_temp<u32>([28]) -> ([28]); // 662
function_call<user@core::integer::U32Sub::sub>([23], [27], [28]) -> ([29], [30]); // 663
store_temp<Snapshot<Array<felt252>>>([24]) -> ([24]); // 664
enum_match<core::panics::PanicResult::<(core::integer::u32,)>>([30]) { fallthrough([31]) 690([32]) }; // 665
branch_align() -> (); // 666
struct_deconstruct<Tuple<u32>>([31]) -> ([33]); // 667
array_slice<felt252>([29], [7], [18], [33]) { fallthrough([34], [35]) 678([36]) }; // 668
branch_align() -> (); // 669
struct_construct<core::array::Span::<core::felt252>>([24]) -> ([37]); // 670
enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 0>([37]) -> ([38]); // 671
struct_construct<core::array::Span::<core::felt252>>([35]) -> ([39]); // 672
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>>([39], [38]) -> ([40]); // 673
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 0>([40]) -> ([41]); // 674
store_temp<RangeCheck>([34]) -> ([34]); // 675
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([41]) -> ([41]); // 676
return([34], [41]); // 677
branch_align() -> (); // 678
drop<Snapshot<Array<felt252>>>([24]) -> (); // 679
array_new<felt252>() -> ([42]); // 680
felt252_const<1637570914057682275393755530660268060279989363>() -> ([43]); // 681
store_temp<felt252>([43]) -> ([43]); // 682
array_append<felt252>([42], [43]) -> ([44]); // 683
struct_construct<core::panics::Panic>() -> ([45]); // 684
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([45], [44]) -> ([46]); // 685
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 1>([46]) -> ([47]); // 686
store_temp<RangeCheck>([36]) -> ([36]); // 687
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([47]) -> ([47]); // 688
return([36], [47]); // 689
branch_align() -> (); // 690
drop<Snapshot<Array<felt252>>>([24]) -> (); // 691
drop<u32>([18]) -> (); // 692
drop<Snapshot<Array<felt252>>>([7]) -> (); // 693
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 1>([32]) -> ([48]); // 694
store_temp<RangeCheck>([29]) -> ([29]); // 695
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([48]) -> ([48]); // 696
return([29], [48]); // 697
branch_align() -> (); // 698
drop<u32>([18]) -> (); // 699
drop<Snapshot<Array<felt252>>>([7]) -> (); // 700
array_new<felt252>() -> ([49]); // 701
felt252_const<1637570914057682275393755530660268060279989363>() -> ([50]); // 702
store_temp<felt252>([50]) -> ([50]); // 703
array_append<felt252>([49], [50]) -> ([51]); // 704
struct_construct<core::panics::Panic>() -> ([52]); // 705
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([52], [51]) -> ([53]); // 706
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 1>([53]) -> ([54]); // 707
store_temp<RangeCheck>([25]) -> ([25]); // 708
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([54]) -> ([54]); // 709
return([25], [54]); // 710
branch_align() -> (); // 711
drop<Snapshot<Array<felt252>>>([7]) -> (); // 712
struct_construct<Unit>() -> ([55]); // 713
enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 1>([55]) -> ([56]); // 714
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>>([12], [56]) -> ([57]); // 715
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 0>([57]) -> ([58]); // 716
store_temp<RangeCheck>([19]) -> ([19]); // 717
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([58]) -> ([58]); // 718
return([19], [58]); // 719
branch_align() -> (); // 720
drop<Unit>([14]) -> (); // 721
drop<Snapshot<Array<felt252>>>([7]) -> (); // 722
struct_construct<Unit>() -> ([59]); // 723
enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 1>([59]) -> ([60]); // 724
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>>([12], [60]) -> ([61]); // 725
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 0>([61]) -> ([62]); // 726
store_temp<RangeCheck>([0]) -> ([0]); // 727
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([62]) -> ([62]); // 728
return([0], [62]); // 729
disable_ap_tracking() -> (); // 730
get_builtin_costs() -> ([4]); // 731
store_temp<BuiltinCosts>([4]) -> ([4]); // 732
withdraw_gas_all([0], [1], [4]) { fallthrough([5], [6]) 774([7], [8]) }; // 733
branch_align() -> (); // 734
struct_deconstruct<core::array::Span::<core::felt252>>([2]) -> ([9]); // 735
enable_ap_tracking() -> (); // 736
store_temp<RangeCheck>([5]) -> ([5]); // 737
array_snapshot_pop_front<felt252>([9]) { fallthrough([10], [11]) 744([12]) }; // 738
branch_align() -> (); // 739
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([11]) -> ([13]); // 740
store_temp<Snapshot<Array<felt252>>>([10]) -> ([14]); // 741
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([13]) -> ([15]); // 742
jump() { 749() }; // 743
branch_align() -> (); // 744
struct_construct<Unit>() -> ([16]); // 745
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([16]) -> ([17]); // 746
store_temp<Snapshot<Array<felt252>>>([12]) -> ([14]); // 747
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([17]) -> ([15]); // 748
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([15]) { fallthrough([18]) 763([19]) }; // 749
branch_align() -> (); // 750
disable_ap_tracking() -> (); // 751
unbox<felt252>([18]) -> ([20]); // 752
rename<felt252>([20]) -> ([21]); // 753
store_temp<felt252>([21]) -> ([21]); // 754
array_append<felt252>([3], [21]) -> ([22]); // 755
struct_construct<core::array::Span::<core::felt252>>([14]) -> ([23]); // 756
store_temp<RangeCheck>([5]) -> ([5]); // 757
store_temp<GasBuiltin>([6]) -> ([6]); // 758
store_temp<core::array::Span::<core::felt252>>([23]) -> ([23]); // 759
store_temp<Array<felt252>>([22]) -> ([22]); // 760
function_call<user@core::array::serialize_array_helper::<core::felt252, core::Felt252Serde, core::felt252Drop>>([5], [6], [23], [22]) -> ([24], [25], [26]); // 761
return([24], [25], [26]); // 762
branch_align() -> (); // 763
disable_ap_tracking() -> (); // 764
drop<Unit>([19]) -> (); // 765
drop<Snapshot<Array<felt252>>>([14]) -> (); // 766
struct_construct<Unit>() -> ([27]); // 767
struct_construct<Tuple<Array<felt252>, Unit>>([3], [27]) -> ([28]); // 768
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 0>([28]) -> ([29]); // 769
store_temp<RangeCheck>([5]) -> ([5]); // 770
store_temp<GasBuiltin>([6]) -> ([6]); // 771
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([29]) -> ([29]); // 772
return([5], [6], [29]); // 773
branch_align() -> (); // 774
drop<Array<felt252>>([3]) -> (); // 775
drop<core::array::Span::<core::felt252>>([2]) -> (); // 776
array_new<felt252>() -> ([30]); // 777
felt252_const<375233589013918064796019>() -> ([31]); // 778
store_temp<felt252>([31]) -> ([31]); // 779
array_append<felt252>([30], [31]) -> ([32]); // 780
struct_construct<core::panics::Panic>() -> ([33]); // 781
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([33], [32]) -> ([34]); // 782
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1>([34]) -> ([35]); // 783
store_temp<RangeCheck>([7]) -> ([7]); // 784
store_temp<GasBuiltin>([8]) -> ([8]); // 785
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([35]) -> ([35]); // 786
return([7], [8], [35]); // 787
u32_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 794([5], [6]) }; // 788
branch_align() -> (); // 789
enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 0>([4]) -> ([7]); // 790
store_temp<RangeCheck>([3]) -> ([8]); // 791
store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>([7]) -> ([9]); // 792
jump() { 798() }; // 793
branch_align() -> (); // 794
enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 1>([6]) -> ([10]); // 795
store_temp<RangeCheck>([5]) -> ([8]); // 796
store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>([10]) -> ([9]); // 797
felt252_const<155785504329508738615720351733824384887>() -> ([11]); // 798
store_temp<felt252>([11]) -> ([11]); // 799
function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>>([9], [11]) -> ([12]); // 800
store_temp<RangeCheck>([8]) -> ([8]); // 801
store_temp<core::panics::PanicResult::<(core::integer::u32,)>>([12]) -> ([12]); // 802
return([8], [12]); // 803
enum_match<core::result::Result::<core::integer::u32, core::integer::u32>>([0]) { fallthrough([2]) 811([3]) }; // 804
branch_align() -> (); // 805
drop<felt252>([1]) -> (); // 806
struct_construct<Tuple<u32>>([2]) -> ([4]); // 807
enum_init<core::panics::PanicResult::<(core::integer::u32,)>, 0>([4]) -> ([5]); // 808
store_temp<core::panics::PanicResult::<(core::integer::u32,)>>([5]) -> ([5]); // 809
return([5]); // 810
branch_align() -> (); // 811
drop<u32>([3]) -> (); // 812
array_new<felt252>() -> ([6]); // 813
array_append<felt252>([6], [1]) -> ([7]); // 814
struct_construct<core::panics::Panic>() -> ([8]); // 815
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([8], [7]) -> ([9]); // 816
enum_init<core::panics::PanicResult::<(core::integer::u32,)>, 1>([9]) -> ([10]); // 817
store_temp<core::panics::PanicResult::<(core::integer::u32,)>>([10]) -> ([10]); // 818
return([10]); // 819

test::validate_call@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<((),)>);
test::test_contract::__validate__@85([0]: test::test_contract::ContractState, [1]: Array<core::starknet::account::Call>) -> (test::test_contract::ContractState, Unit);
test::test_contract::__execute__@88([0]: test::test_contract::ContractState, [1]: Array<core::starknet::account::Call>) -> (test::test_contract::ContractState, Array<core::array::Span::<core::felt252>>);
test::test_contract::unsafe_new_contract_state@92() -> (test::test_contract::ContractState);
test::test_contract::__wrapper____validate__@94([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
test::test_contract::__wrapper____execute__@190([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize@305([0]: RangeCheck, [1]: GasBuiltin, [2]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>);
core::array::ArraySerde::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>::serialize@342([0]: RangeCheck, [1]: GasBuiltin, [2]: Snapshot<Array<core::array::Span::<core::felt252>>>, [3]: Array<felt252>) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>);
core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>@355([0]: RangeCheck, [1]: GasBuiltin, [2]: core::array::Span::<core::felt252>, [3]: Array<core::starknet::account::Call>, [4]: felt252) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>);
core::array::serialize_array_helper::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>@425([0]: RangeCheck, [1]: GasBuiltin, [2]: core::array::Span::<core::array::Span::<core::felt252>>, [3]: Array<felt252>) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>);
core::starknet::account::CallSerde::deserialize@500([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>);
core::array::SpanFelt252Serde::serialize@572([0]: RangeCheck, [1]: GasBuiltin, [2]: core::array::Span::<core::felt252>, [3]: Array<felt252>) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>);
core::starknet::contract_address::ContractAddressSerde::deserialize@587([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::starknet::contract_address::ContractAddress>);
core::array::SpanFelt252Serde::deserialize@628([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>);
core::array::serialize_array_helper::<core::felt252, core::Felt252Serde, core::felt252Drop>@730([0]: RangeCheck, [1]: GasBuiltin, [2]: core::array::Span::<core::felt252>, [3]: Array<felt252>) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>);
core::integer::U32Sub::sub@788([0]: RangeCheck, [1]: u32, [2]: u32) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u32,)>);
core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>@804([0]: core::result::Result::<core::integer::u32, core::integer::u32>, [1]: felt252) -> (core::panics::PanicResult::<(core::integer::u32,)>);

//! > Casms Program
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 2, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = 11, ap++;
[ap + -1] = [[ap + -3] + 1];
[ap + 0] = 949021990203918389843157787496164629863144228991510976554585288817234167820, ap++;
[ap + -1] = [[ap + -4] + 2];
[ap + 0] = 3, ap++;
[ap + -1] = [[ap + -5] + 3];
[ap + 0] = 3461208862407773342635871960084685728498932599526891269545319004528055383761, ap++;
[ap + -1] = [[ap + -6] + 4];
[ap + 0] = 81485106, ap++;
[ap + -1] = [[ap + -7] + 5];
[ap + 0] = 0, ap++;
[ap + -1] = [[ap + -8] + 6];
[ap + 0] = 11, ap++;
[ap + -1] = [[ap + -9] + 7];
[ap + 0] = 1245570219085329014176261566038427188720157448719795888519090757413574003847, ap++;
[ap + -1] = [[ap + -10] + 8];
[ap + 0] = 9, ap++;
[ap + -1] = [[ap + -11] + 9];
[ap + 0] = 81485106, ap++;
[ap + -1] = [[ap + -12] + 10];
[ap + 0] = 0, ap++;
[ap + -1] = [[ap + -13] + 11];
[ap + 0] = 38680417026645490, ap++;
[ap + -1] = [[ap + -14] + 12];
[ap + 0] = 0, ap++;
[ap + -1] = [[ap + -15] + 13];
[ap + 0] = 2, ap++;
[ap + -1] = [[ap + -16] + 14];
[ap + 0] = 2368576823837625528275935341135881659748932889268308403712618244410713532584, ap++;
[ap + -1] = [[ap + -17] + 15];
[ap + 0] = 2087021424722619777119509474943472645767659996348769578120564519014510906823, ap++;
[ap + -1] = [[ap + -18] + 16];
[ap + 0] = 2387727935691014887386018108409351696155809189117188913679269984352887991464, ap++;
[ap + -1] = [[ap + -19] + 17];
[ap + 0] = 1700291172, ap++;
[ap + -1] = [[ap + -20] + 18];
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = [ap + -23], ap++;
[ap + 0] = [ap + -24] + 19, ap++;
call rel 29;
jmp rel 12 if [ap + -3] != 0;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [ap + -2], ap++;
ret;
ret;
%{ memory[ap + 0] = 6040 <= memory[fp + -6] %}
jmp rel 7 if [ap + 0] != 0, ap++;
[ap + 0] = [fp + -6] + 340282366920938463463374607431768205416, ap++;
[ap + -1] = [[fp + -7] + 0];
jmp rel 100;
[fp + -6] = [ap + 0] + 6040, ap++;
[ap + -1] = [[fp + -7] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 245;
jmp rel 80 if [ap + -6] != 0;
jmp rel 64 if [ap + -3] != 0;
[ap + -4] = [ap + 0] + [ap + -5], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 16;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 7733229381460288120802334208475838166080759535023995805565484692595, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
call rel 986;
[ap + 0] = [ap + -1] + 985, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
%{ memory[ap + 0] = 0 <= memory[ap + -12] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[ap + -13] = [ap + 0] + 0, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[ap + -16] + 0];
jmp rel 16;
[ap + -13] = [ap + 0] + 0, ap++;
[ap + -1] = [[ap + -15] + 0];
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = [ap + -16] + 1, ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -18] + 1, ap++;
[ap + 0] = [ap + -18], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 485748461484230571791265682659113160264223489397539653310998840191492913, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
%{ memory[ap + 0] = 6040 <= memory[fp + -6] %}
jmp rel 7 if [ap + 0] != 0, ap++;
[ap + 0] = [fp + -6] + 340282366920938463463374607431768205416, ap++;
[ap + -1] = [[fp + -7] + 0];
jmp rel 120;
[fp + -6] = [ap + 0] + 6040, ap++;
[ap + -1] = [[fp + -7] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 125;
jmp rel 100 if [ap + -6] != 0;
jmp rel 84 if [ap + -3] != 0;
[ap + -4] = [ap + 0] + [ap + -5], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 16;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 7733229381460288120802334208475838166080759535023995805565484692595, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
call rel 866;
[ap + 0] = [ap + -1] + 865, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
%{ memory[ap + 0] = 3590 <= memory[ap + -12] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[ap + -13] = [ap + 0] + 3590, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[ap + -16] + 0];
jmp rel 36;
[ap + -13] = [ap + 0] + 3590, ap++;
[ap + -1] = [[ap + -15] + 0];
%{ memory[ap + 0] = segments.add() %}
ap += 1;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = [ap + -17] + 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6], ap++;
call rel 120;
jmp rel 10 if [ap + -3] != 0;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -18] + 1, ap++;
[ap + 0] = [ap + -18], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 485748461484230571791265682659113160264223489397539653310998840191492913, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
[fp + -3] = [ap + 0] + [fp + -4], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -4] + 1, ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
jmp rel 8;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 14 if [ap + -4] != 0;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [[ap + -10] + 0], ap++;
call rel 30;
ret;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[fp + -5] = [ap + 0] + [fp + -6], ap++;
[ap + -1] = [ap + 0] * 2, ap++;
[ap + -1] = [[fp + -3] + 0];
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3] + 1, ap++;
call rel 106;
ret;
call rel 704;
[ap + 0] = [ap + -1] + 703, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
%{ memory[ap + 0] = 16040 <= memory[fp + -8] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[fp + -8] = [ap + 0] + 16040, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -9] + 0];
jmp rel 71;
[fp + -8] = [ap + 0] + 16040, ap++;
[ap + -1] = [[fp + -9] + 0];
[ap + 0] = [fp + -9] + 1, ap++;
jmp rel 13 if [fp + -3] != 0;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
ret;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [fp + -6], ap++;
call rel 159;
jmp rel 33 if [ap + -8] != 0;
jmp rel 18 if [ap + -5] != 0;
[ap + -4] = [[fp + -4] + 0];
[ap + -3] = [[fp + -4] + 1];
[ap + -2] = [[fp + -4] + 2];
[ap + -1] = [[fp + -4] + 3];
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -107], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4] + 4, ap++;
[fp + -3] = [ap + 0] + 1, ap++;
call rel -54;
ret;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -107], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -107], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -9] + 1, ap++;
[ap + 0] = [fp + -8], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -9] + 1, ap++;
ret;
ap += 2;
call rel 599;
[ap + 0] = [ap + -1] + 598, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
%{ memory[ap + 0] = 6440 <= memory[fp + -7] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[fp + -7] = [ap + 0] + 6440, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -8] + 0];
jmp rel 63;
[fp + -7] = [ap + 0] + 6440, ap++;
[ap + -1] = [[fp + -8] + 0];
[ap + 0] = [fp + -8] + 1, ap++;
[fp + -5] = [ap + 0] + [fp + -6], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -6] + 2, ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -6], ap++;
jmp rel 8;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[fp + 0] = [ap + -4];
[fp + 1] = [ap + -3];
jmp rel 28 if [ap + -2] != 0;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [[ap + -3] + 0], ap++;
[ap + 0] = [[ap + -4] + 1], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 161;
jmp rel 11 if [ap + -3] != 0;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [fp + 0], ap++;
[ap + 0] = [fp + 1], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
call rel -60;
ret;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
ret;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -8] + 1, ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6] + 1, ap++;
ret;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 129;
jmp rel 97 if [ap + -2] != 0;
[ap + -3] = [ap + 0] + [ap + -4], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [ap + -5] + 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -8], ap++;
jmp rel 8;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 56 if [ap + -4] != 0;
[ap + 0] = [ap + -12], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -3], ap++;
call rel 174;
[ap + 0] = [[ap + -61] + 0], ap++;
jmp rel 32 if [ap + -7] != 0;
jmp rel 14 if [ap + -4] != 0;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -72], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
ret;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
ret;
ap += 59;
[ap + 0] = [ap + -71], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -63], ap++;
[ap + 0] = [ap + -63], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 66;
[ap + 0] = [ap + -71], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -72], ap++;
[ap + 0] = [ap + -72], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[fp + -5] = [ap + 0] + [fp + -6], ap++;
[ap + -1] = [[fp + -3] + 0];
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3] + 1, ap++;
call rel 256;
ret;
[fp + -3] = [ap + 0] + [fp + -4], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -4] + 1, ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
jmp rel 8;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 44 if [ap + -4] != 0;
[ap + 0] = [[ap + -3] + 0], ap++;
%{ memory[ap + 4] = memory[ap + -1] < 3618502788666131106986593281521497120414687020801267626233049500247285301248 %}
jmp rel 14 if [ap + 4] != 0, ap++;
[ap + -2] = [ap + 4] + 3618502788666131106986593281521497120414687020801267626233049500247285301248, ap++;
%{
(value, scalar) = (memory[ap + 3], 313594649253062377472)
x = min(value // scalar, 340282366920938463463374607431768211455)
y = value - x * scalar
memory[ap + -2] = x
memory[ap + -1] = y
%}
[ap + 0] = [ap + -2] * 313594649253062377472, ap++;
[ap + 2] = [ap + -1] + [ap + -2], ap++;
[ap + -4] = [[fp + -5] + 0], ap++;
[ap + -4] = [[fp + -5] + 1], ap++;
[ap + -3] = [ap + -5] + 340282366920938463149779958178705833983;
[ap + -3] = [[fp + -5] + 2];
jmp rel 20;
%{
(value, scalar) = (memory[ap + -2], 10633823966279326983230456482242756608)
x = min(value // scalar, 340282366920938463463374607431768211455)
y = value - x * scalar
memory[ap + -1] = x
memory[ap + 0] = y
%}
[ap + 1] = [ap + -1] * 10633823966279326983230456482242756608, ap++;
[ap + -3] = [ap + 0] + [ap + -1], ap++;
[ap + -3] = [[fp + -5] + 0], ap++;
[ap + -3] = [[fp + -5] + 1], ap++;
[ap + -2] = [ap + -4] + 329648542954659136480144150949525454848;
[ap + -2] = [[fp + -5] + 2];
ap += 1;
[ap + 0] = [fp + -5] + 3, ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -11], ap++;
ret;
[ap + 0] = [fp + -5] + 3, ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 7;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
ret;
[fp + -3] = [ap + 0] + [fp + -4], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -4] + 1, ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
jmp rel 8;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 143 if [ap + -4] != 0;
[ap + 0] = [[ap + -3] + 0], ap++;
%{ memory[ap + 0] = (memory[ap + -1] + 0) % PRIME < 4294967296 %}
jmp rel 18 if [ap + 0] != 0, ap++;
[ap + -2] = [ap + 0] + 4294967296, ap++;
%{
(value, scalar) = (memory[ap + -1], 10633823966279327296825105735305134080)
x = min(value // scalar, 340282366920938463463374607431768211454)
y = value - x * scalar
memory[ap + 0] = x
memory[ap + 1] = y
%}
[ap + 2] = [ap + 0] * 10633823966279327296825105735305134080, ap++;
[ap + -2] = [ap + 1] + [ap + 0], ap++;
[ap + -1] = [[fp + -5] + 0], ap++;
[ap + 0] = [ap + -2] + 319014718988379808869724395965452910591, ap++;
[ap + -1] = [[fp + -5] + 1], ap++;
[ap + -5] = [[fp + -5] + 2];
[ap + -5] = [ap + -1] + 340282366920938463463374607431768211455;
jmp rel 111 if [ap + -1] != 0;
[fp + -1] = [fp + -1] + 1;
[ap + -2] = [[fp + -5] + 0];
[ap + 0] = [ap + -2] + 340282366920938463463374607427473244160, ap++;
[ap + -1] = [[fp + -5] + 1];
[ap + 0] = 0, ap++;
[ap + -9] = [ap + 0] + [ap + -10], ap++;
[ap + 0] = [ap + -2] + [ap + -5], ap++;
%{ memory[ap + 0] = memory[ap + -1] <= memory[ap + -2] %}
jmp rel 8 if [ap + 0] != 0, ap++;
[ap + 0] = [ap + -3] + 1, ap++;
[ap + -3] = [ap + 0] + [ap + -1], ap++;
[ap + -1] = [[fp + -5] + 2];
jmp rel 72;
[ap + -3] = [ap + 0] + [ap + -2], ap++;
[ap + -1] = [[fp + -5] + 2];
[ap + 0] = [fp + -5] + 3, ap++;
[ap + -14] = [ap + 0] + [ap + -15], ap++;
[ap + 0] = [ap + -10], ap++;
call rel 187;
[ap + 0] = [ap + -36] + [ap + -27], ap++;
[ap + 0] = [ap + -37] + [ap + -26], ap++;
jmp rel 46 if [ap + -5] != 0;
[ap + -37] = [ap + 0] + [ap + -38], ap++;
[ap + 0] = [ap + -33] + [ap + -4], ap++;
%{ memory[ap + 0] = memory[ap + -1] <= memory[ap + -2] %}
jmp rel 8 if [ap + 0] != 0, ap++;
[ap + 0] = [ap + -3] + 1, ap++;
[ap + -3] = [ap + 0] + [ap + -1], ap++;
[ap + -1] = [[ap + -11] + 0];
jmp rel 17;
[ap + -3] = [ap + 0] + [ap + -2], ap++;
[ap + -1] = [[ap + -10] + 0];
ap += 3;
[ap + 0] = [ap + -13] + 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -47] + [ap + -41], ap++;
[ap + 0] = [ap + -48] + [ap + -9], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -14], ap++;
[ap + 0] = [ap + -14], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 1637570914057682275393755530660268060279989363, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -13] + 1, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
ap += 7;
[ap + 0] = [ap + -13], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -16], ap++;
[ap + 0] = [ap + -16], ap++;
ret;
ap += 28;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 1637570914057682275393755530660268060279989363, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -5] + 3, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
ap += 31;
[ap + 0] = [fp + -5] + 3, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -43], ap++;
[ap + 0] = [ap + -43], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 39;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -43], ap++;
[ap + 0] = [ap + -43], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
call rel 125;
[ap + 0] = [ap + -1] + 124, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
%{ memory[ap + 0] = 2670 <= memory[fp + -7] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[fp + -7] = [ap + 0] + 2670, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -8] + 0];
jmp rel 47;
[fp + -7] = [ap + 0] + 2670, ap++;
[ap + -1] = [[fp + -8] + 0];
[ap + 0] = [fp + -8] + 1, ap++;
[fp + -5] = [ap + 0] + [fp + -6], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -6] + 1, ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -6], ap++;
jmp rel 8;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
jmp rel 14 if [ap + -2] != 0;
[ap + 0] = [[ap + -1] + 0], ap++;
[ap + -1] = [[fp + -3] + 0];
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3] + 1, ap++;
call rel -49;
ret;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -8] + 1, ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6] + 1, ap++;
ret;
[fp + -4] = [ap + 1] + [fp + -3], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 4294967296 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -5] + 0];
jmp rel 12;
[ap + -1] = [[fp + -5] + 0];
ap += 1;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 8;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4] + 4294967296, ap++;
[ap + 0] = 155785504329508738615720351733824384887, ap++;
call rel 7;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
ret;
jmp rel 10 if [fp + -5] != 0;
ap += 1;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[fp + -3] = [[ap + -1] + 0];
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [ap + -3] + 1, ap++;
ret;

//! > ==========================================================================

//! > Test deserialization for calling `__validate__` with 1 call

//! > test_runner_name
test_profiling

//! > cairo_code
#[starknet::contract(account)]
mod test_contract {
  use starknet::account::Call;

  #[storage]
  struct Storage {}

  #[external(v0)]
  fn __validate__(ref self: ContractState, calls: Array<Call>) {}
  #[external(v0)]
  fn __execute__(ref self: ContractState, mut calls: Array<Call>) -> Array<Span<felt252>> {
      array![]
  }
}

fn validate_call() {
  let serialized_args = array![
    0x1, // Array with a single `Call`.
    // Call 1.
    0xb, // to.
    0x219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c, // selector.
    0x3, // calldata length.
    0x7a6f98c03379b9513ca84cca1373ff452a7462a3b61598f0af5bb27ad7f76d1, // calldata 0.
    0x4db5d32, // calldata 1.
    0x0, // calldata 2.
  ].span();
  test_contract::__wrapper____validate__(serialized_args);
}

//! > function_name
validate_call

//! > expected_profiling_info
Weight by sierra statement:
  statement 501: 8 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([32]) -> ([32]))
  statement 570: 7 (contract_address_try_from_felt252([0], [15]) { fallthrough([16], [17]) 577([18]) })
  statement 322: 6 (withdraw_gas_all([0], [1], [5]) { fallthrough([6], [7]) 374([8], [9]) })
  statement 334: 6 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([14]) -> ([14]))
  statement 640: 6 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([41]) -> ([41]))
  statement 619: 5 (array_slice<felt252>([17], [21], [20], [22]) { fallthrough([23], [24]) 662([25]) })
  statement 632: 5 (array_slice<felt252>([29], [7], [18], [33]) { fallthrough([34], [35]) 642([36]) })
  statement 320: 4 (get_builtin_costs() -> ([5]))
  statement 346: 4 (array_append<core::starknet::account::Call>([3], [21]) -> ([23]))
  statement 612: 4 (u32_try_from_felt252([0], [16]) { fallthrough([17], [18]) 675([19]) })
  statement 40: 3 (store_temp<core::panics::PanicResult::<((),)>>([29]) -> ([29]))
  statement 59: 3 (withdraw_gas([0], [1]) { fallthrough([4], [5]) 140([6], [7]) })
  statement 72: 3 (array_snapshot_pop_front<felt252>([17]) { fallthrough([18], [19]) 88([20]) })
  statement 92: 3 (withdraw_gas_all([8], [9], [27]) { fallthrough([28], [29]) 105([30], [31]) })
  statement 103: 3 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([37]) -> ([37]))
  statement 752: 3 (u32_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 758([5], [6]) })
  statement 766: 3 (store_temp<core::panics::PanicResult::<(core::integer::u32,)>>([12]) -> ([12]))
  statement 773: 3 (store_temp<core::panics::PanicResult::<(core::integer::u32,)>>([5]) -> ([5]))
  statement 29: 2 (store_temp<core::array::Span::<core::felt252>>([20]) -> ([20]))
  statement 63: 2 (store_temp<core::array::Span::<core::felt252>>([3]) -> ([3]))
  statement 90: 2 (get_builtin_costs() -> ([27]))
  statement 271: 2 (array_snapshot_pop_front<felt252>([3]) { fallthrough([4], [5]) 277([6]) })
  statement 274: 2 (store_temp<Snapshot<Array<felt252>>>([4]) -> ([8]))
  statement 275: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([7]) -> ([9]))
  statement 283: 2 (store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]))
  statement 291: 2 (store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]))
  statement 292: 2 (store_temp<Array<core::starknet::account::Call>>([16]) -> ([16]))
  statement 321: 2 (store_temp<BuiltinCosts>([5]) -> ([5]))
  statement 325: 2 (store_temp<RangeCheck>([6]) -> ([6]))
  statement 326: 2 (felt252_is_zero([10]) { fallthrough() 336([11]) })
  statement 339: 2 (store_temp<core::array::Span::<core::felt252>>([2]) -> ([2]))
  statement 351: 2 (store_temp<core::array::Span::<core::felt252>>([19]) -> ([19]))
  statement 352: 2 (store_temp<Array<core::starknet::account::Call>>([23]) -> ([23]))
  statement 465: 2 (store_temp<core::array::Span::<core::felt252>>([1]) -> ([1]))
  statement 470: 2 (array_snapshot_pop_front<felt252>([7]) { fallthrough([8], [9]) 476([10]) })
  statement 473: 2 (store_temp<Snapshot<Array<felt252>>>([8]) -> ([12]))
  statement 474: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([11]) -> ([13]))
  statement 482: 2 (store_temp<core::array::Span::<core::felt252>>([16]) -> ([16]))
  statement 487: 2 (store_temp<core::array::Span::<core::felt252>>([16]) -> ([16]))
  statement 552: 2 (array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 558([5]) })
  statement 555: 2 (store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]))
  statement 556: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]))
  statement 564: 2 (store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]))
  statement 574: 2 (store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]))
  statement 575: 2 (store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([19]) -> ([19]))
  statement 593: 2 (array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 599([5]) })
  statement 596: 2 (store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]))
  statement 597: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]))
  statement 606: 2 (store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]))
  statement 628: 2 (store_temp<Snapshot<Array<felt252>>>([24]) -> ([24]))
  statement 756: 2 (store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>([7]) -> ([9]))
  statement 1: 1 (array_new<felt252>() -> ([3]))
  statement 3: 1 (store_temp<felt252>([4]) -> ([4]))
  statement 4: 1 (array_append<felt252>([3], [4]) -> ([5]))
  statement 6: 1 (store_temp<felt252>([6]) -> ([6]))
  statement 7: 1 (array_append<felt252>([5], [6]) -> ([7]))
  statement 9: 1 (store_temp<felt252>([8]) -> ([8]))
  statement 10: 1 (array_append<felt252>([7], [8]) -> ([9]))
  statement 12: 1 (store_temp<felt252>([10]) -> ([10]))
  statement 13: 1 (array_append<felt252>([9], [10]) -> ([11]))
  statement 15: 1 (store_temp<felt252>([12]) -> ([12]))
  statement 16: 1 (array_append<felt252>([11], [12]) -> ([13]))
  statement 18: 1 (store_temp<felt252>([14]) -> ([14]))
  statement 19: 1 (array_append<felt252>([13], [14]) -> ([15]))
  statement 21: 1 (store_temp<felt252>([16]) -> ([16]))
  statement 22: 1 (array_append<felt252>([15], [16]) -> ([17]))
  statement 26: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 27: 1 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 28: 1 (store_temp<System>([2]) -> ([2]))
  statement 30: 1 (function_call<user@test::test_contract::__wrapper____validate__>([0], [1], [2], [20]) -> ([21], [22], [23], [24]))
  statement 31: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([24]) { fallthrough([25]) 42([26]) })
  statement 37: 1 (store_temp<RangeCheck>([21]) -> ([21]))
  statement 38: 1 (store_temp<GasBuiltin>([22]) -> ([22]))
  statement 39: 1 (store_temp<System>([23]) -> ([23]))
  statement 41: 1 (return([21], [22], [23], [29]))
  statement 61: 1 (store_temp<RangeCheck>([4]) -> ([4]))
  statement 62: 1 (store_temp<GasBuiltin>([5]) -> ([5]))
  statement 64: 1 (function_call<user@core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize>([4], [5], [3]) -> ([8], [9], [10]))
  statement 65: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([10]) { fallthrough([11]) 133([12]) })
  statement 68: 1 (enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>([14]) { fallthrough([15]) 118([16]) })
  statement 91: 1 (store_temp<BuiltinCosts>([27]) -> ([27]))
  statement 94: 1 (array_new<felt252>() -> ([32]))
  statement 100: 1 (store_temp<RangeCheck>([28]) -> ([28]))
  statement 101: 1 (store_temp<GasBuiltin>([29]) -> ([29]))
  statement 102: 1 (store_temp<System>([2]) -> ([2]))
  statement 104: 1 (return([28], [29], [2], [37]))
  statement 276: 1 (jump() { 282() })
  statement 284: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([9]) { fallthrough([13]) 296([14]) })
  statement 287: 1 (array_new<core::starknet::account::Call>() -> ([16]))
  statement 289: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 290: 1 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 293: 1 (store_temp<felt252>([17]) -> ([17]))
  statement 294: 1 (function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>([0], [1], [12], [16], [17]) -> ([18], [19], [20]))
  statement 295: 1 (return([18], [19], [20]))
  statement 332: 1 (store_temp<RangeCheck>([6]) -> ([6]))
  statement 333: 1 (store_temp<GasBuiltin>([7]) -> ([7]))
  statement 335: 1 (return([6], [7], [14]))
  statement 338: 1 (store_temp<RangeCheck>([6]) -> ([6]))
  statement 340: 1 (function_call<user@core::starknet::account::CallSerde::deserialize>([6], [2]) -> ([15], [16]))
  statement 341: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([16]) { fallthrough([17]) 366([18]) })
  statement 344: 1 (enum_match<core::option::Option::<core::starknet::account::Call>>([20]) { fallthrough([21]) 356([22]) })
  statement 349: 1 (store_temp<RangeCheck>([15]) -> ([15]))
  statement 350: 1 (store_temp<GasBuiltin>([7]) -> ([7]))
  statement 353: 1 (store_temp<felt252>([25]) -> ([25]))
  statement 354: 1 (function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>([15], [7], [19], [23], [25]) -> ([26], [27], [28]))
  statement 355: 1 (return([26], [27], [28]))
  statement 464: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 466: 1 (function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([0], [1]) -> ([2], [3], [4]))
  statement 467: 1 (enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([4]) { fallthrough([5]) 529([6]) })
  statement 475: 1 (jump() { 481() })
  statement 483: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([13]) { fallthrough([17]) 519([18]) })
  statement 486: 1 (store_temp<RangeCheck>([2]) -> ([2]))
  statement 488: 1 (function_call<user@core::array::SpanFelt252Serde::deserialize>([2], [16]) -> ([20], [21]))
  statement 489: 1 (store_temp<felt252>([19]) -> ([19]))
  statement 490: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([21]) { fallthrough([22]) 512([23]) })
  statement 493: 1 (enum_match<core::option::Option::<core::array::Span::<core::felt252>>>([25]) { fallthrough([26]) 503([27]) })
  statement 500: 1 (store_temp<RangeCheck>([20]) -> ([20]))
  statement 502: 1 (return([20], [32]))
  statement 557: 1 (jump() { 563() })
  statement 565: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 584([13]) })
  statement 569: 1 (store_temp<felt252>([15]) -> ([15]))
  statement 571: 1 (branch_align() -> ())
  statement 573: 1 (store_temp<RangeCheck>([16]) -> ([16]))
  statement 576: 1 (return([16], [11], [19]))
  statement 598: 1 (jump() { 604() })
  statement 607: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([13]) 684([14]) })
  statement 611: 1 (store_temp<felt252>([16]) -> ([16]))
  statement 618: 1 (store_temp<u32>([20]) -> ([20]))
  statement 623: 1 (store_temp<RangeCheck>([23]) -> ([23]))
  statement 624: 1 (store_temp<u32>([27]) -> ([27]))
  statement 626: 1 (store_temp<u32>([28]) -> ([28]))
  statement 627: 1 (function_call<user@core::integer::U32Sub::sub>([23], [27], [28]) -> ([29], [30]))
  statement 629: 1 (enum_match<core::panics::PanicResult::<(core::integer::u32,)>>([30]) { fallthrough([31]) 654([32]) })
  statement 633: 1 (branch_align() -> ())
  statement 639: 1 (store_temp<RangeCheck>([34]) -> ([34]))
  statement 641: 1 (return([34], [41]))
  statement 753: 1 (branch_align() -> ())
  statement 755: 1 (store_temp<RangeCheck>([3]) -> ([8]))
  statement 757: 1 (jump() { 762() })
  statement 763: 1 (store_temp<felt252>([11]) -> ([11]))
  statement 764: 1 (function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>>([9], [11]) -> ([12]))
  statement 765: 1 (store_temp<RangeCheck>([8]) -> ([8]))
  statement 767: 1 (return([8], [12]))
  statement 768: 1 (enum_match<core::result::Result::<core::integer::u32, core::integer::u32>>([0]) { fallthrough([2]) 775([3]) })
  statement 769: 1 (branch_align() -> ())
  statement 774: 1 (return([5]))
Weight by concrete libfunc:
  libfunc store_temp<core::array::Span::<core::felt252>>: 24
  libfunc store_temp<RangeCheck>: 18
  libfunc store_temp<felt252>: 13
  libfunc array_snapshot_pop_front<felt252>: 11
  libfunc array_slice<felt252>: 10
  libfunc store_temp<Snapshot<Array<felt252>>>: 10
  libfunc withdraw_gas_all: 9
  libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>: 8
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>: 8
  libfunc array_append<felt252>: 7
  libfunc contract_address_try_from_felt252: 7
  libfunc store_temp<GasBuiltin>: 7
  libfunc get_builtin_costs: 6
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>: 6
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>: 6
  libfunc store_temp<core::panics::PanicResult::<(core::integer::u32,)>>: 6
  libfunc jump: 5
  libfunc array_append<core::starknet::account::Call>: 4
  libfunc branch_align: 4
  libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>: 4
  libfunc store_temp<Array<core::starknet::account::Call>>: 4
  libfunc u32_try_from_felt252: 4
  libfunc store_temp<BuiltinCosts>: 3
  libfunc store_temp<System>: 3
  libfunc store_temp<core::panics::PanicResult::<((),)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>: 3
  libfunc store_temp<u32>: 3
  libfunc u32_overflowing_sub: 3
  libfunc withdraw_gas: 3
  libfunc array_new<felt252>: 2
  libfunc felt252_is_zero: 2
  libfunc function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>: 2
  libfunc store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>: 2
  libfunc store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>: 2
  libfunc array_new<core::starknet::account::Call>: 1
  libfunc enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>: 1
  libfunc enum_match<core::option::Option::<core::array::Span::<core::felt252>>>: 1
  libfunc enum_match<core::option::Option::<core::starknet::account::Call>>: 1
  libfunc enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::integer::u32,)>>: 1
  libfunc enum_match<core::result::Result::<core::integer::u32, core::integer::u32>>: 1
  libfunc function_call<user@core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize>: 1
  libfunc function_call<user@core::array::SpanFelt252Serde::deserialize>: 1
  libfunc function_call<user@core::integer::U32Sub::sub>: 1
  libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>>: 1
  libfunc function_call<user@core::starknet::account::CallSerde::deserialize>: 1
  libfunc function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>: 1
  libfunc function_call<user@test::test_contract::__wrapper____validate__>: 1
  return: 10
Weight by generic libfunc:
  libfunc store_temp: 129
  libfunc enum_match: 14
  libfunc array_append: 11
  libfunc array_snapshot_pop_front: 11
  libfunc array_slice: 10
  libfunc function_call: 9
  libfunc withdraw_gas_all: 9
  libfunc contract_address_try_from_felt252: 7
  libfunc get_builtin_costs: 6
  libfunc jump: 5
  libfunc branch_align: 4
  libfunc u32_try_from_felt252: 4
  libfunc array_new: 3
  libfunc u32_overflowing_sub: 3
  libfunc withdraw_gas: 3
  libfunc felt252_is_zero: 2
  return: 10
Weight by user function (inc. generated):
  function core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 44
  function core::array::SpanFelt252Serde::deserialize: 42
  function core::starknet::account::CallSerde::deserialize: 32
  function test::validate_call: 29
  function test::test_contract::__wrapper____validate__: 27
  function core::starknet::contract_address::ContractAddressSerde::deserialize: 25
  function core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize: 20
  function core::integer::U32Sub::sub: 15
  function core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>: 6
Weight by original user function (exc. generated):
  function core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 44
  function core::array::SpanFelt252Serde::deserialize: 42
  function core::starknet::account::CallSerde::deserialize: 32
  function test::validate_call: 29
  function test::test_contract::__wrapper____validate__: 27
  function core::starknet::contract_address::ContractAddressSerde::deserialize: 25
  function core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize: 20
  function core::integer::U32Sub::sub: 15
  function core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>: 6
Weight by Cairo function:
  function array.cairo::SpanImpl::pop_front: 40
  function array.cairo::deserialize_array_helper: 40
  function contract::__wrapper____validate__: 22
  function impls::CallSerde::deserialize: 22
  function array.cairo::ArrayImpl::append: 18
  function array.cairo::SpanFelt252Serde::deserialize: 15
  function contract_address.cairo::ContractAddressSerde::deserialize: 15
  function integer.cairo::U32Sub::sub: 15
  function lib.cairo::validate_call: 14
  function array.cairo::SpanImpl::slice: 12
  function array.cairo::ArraySerde::deserialize: 9
  function result.cairo::ResultTraitImpl::expect: 6
  function integer.cairo::Felt252TryIntoU32::try_into: 5
  function array.cairo::ArrayImpl::new: 3
  function array.cairo::SpanImpl::is_empty: 3
  function option.cairo::OptionTraitImpl::expect: 1
Weight by Sierra stack trace:
  test::validate_call: 240
  test::validate_call -> test::test_contract::__wrapper____validate__: 211
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize: 184
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 164
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize: 120
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize: 63
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::starknet::contract_address::ContractAddressSerde::deserialize: 25
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize -> core::integer::U32Sub::sub: 21
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 17
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize -> core::integer::U32Sub::sub -> core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>: 6
Weight by Cairo stack trace:
  test::validate_call: 240
  test::validate_call -> test::test_contract::__wrapper____validate__: 211
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize: 184
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 164
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize: 120
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize: 63
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::starknet::contract_address::ContractAddressSerde::deserialize: 25
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize -> core::integer::U32Sub::sub: 21
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>: 17
  test::validate_call -> test::test_contract::__wrapper____validate__ -> core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize -> core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop> -> core::starknet::account::CallSerde::deserialize -> core::array::SpanFelt252Serde::deserialize -> core::integer::U32Sub::sub -> core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>: 6

//! > Sierra Program
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type u32 = u32 [storable: true, drop: true, dup: true, zero_sized: false];
type core::result::Result::<core::integer::u32, core::integer::u32> = Enum<ut@core::result::Result::<core::integer::u32, core::integer::u32>, u32, u32> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<u32> = Struct<ut@Tuple, u32> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<(core::integer::u32,)> = Enum<ut@core::panics::PanicResult::<(core::integer::u32,)>, Tuple<u32>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::array::Span::<core::felt252> = Struct<ut@core::array::Span::<core::felt252>, Snapshot<Array<felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type core::option::Option::<core::array::Span::<core::felt252>> = Enum<ut@core::option::Option::<core::array::Span::<core::felt252>>, core::array::Span::<core::felt252>, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>> = Struct<ut@Tuple, core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)> = Enum<ut@core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type ContractAddress = ContractAddress [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::starknet::contract_address::ContractAddress> = Enum<ut@core::option::Option::<core::starknet::contract_address::ContractAddress>, ContractAddress, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Box<core::array::Span::<core::felt252>> = Box<core::array::Span::<core::felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>> = Enum<ut@core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, Box<core::array::Span::<core::felt252>>, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Array<core::array::Span::<core::felt252>> = Array<core::array::Span::<core::felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type Snapshot<Array<core::array::Span::<core::felt252>>> = Snapshot<Array<core::array::Span::<core::felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];
type Uninitialized<Snapshot<Array<core::array::Span::<core::felt252>>>> = Uninitialized<Snapshot<Array<core::array::Span::<core::felt252>>>> [storable: false, drop: true, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::account::Call = Struct<ut@core::starknet::account::Call, ContractAddress, felt252, core::array::Span::<core::felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::starknet::account::Call> = Enum<ut@core::option::Option::<core::starknet::account::Call>, core::starknet::account::Call, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>> = Struct<ut@Tuple, core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)> = Enum<ut@core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type core::array::Span::<core::array::Span::<core::felt252>> = Struct<ut@core::array::Span::<core::array::Span::<core::felt252>>, Snapshot<Array<core::array::Span::<core::felt252>>>> [storable: true, drop: true, dup: true, zero_sized: false];
type Box<felt252> = Box<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::box::Box::<@core::felt252>> = Enum<ut@core::option::Option::<core::box::Box::<@core::felt252>>, Box<felt252>, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<Array<felt252>, Unit> = Struct<ut@Tuple, Array<felt252>, Unit> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())> = Enum<ut@core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, Tuple<Array<felt252>, Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type BuiltinCosts = BuiltinCosts [storable: true, drop: true, dup: true, zero_sized: false];
type Array<core::starknet::account::Call> = Array<core::starknet::account::Call> [storable: true, drop: true, dup: false, zero_sized: false];
type core::option::Option::<core::array::Array::<core::starknet::account::Call>> = Enum<ut@core::option::Option::<core::array::Array::<core::starknet::account::Call>>, Array<core::starknet::account::Call>, Unit> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>> = Struct<ut@Tuple, core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)> = Enum<ut@core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type test::test_contract::ContractState = Struct<ut@test::test_contract::ContractState> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<Unit> = Struct<ut@Tuple, Unit> [storable: true, drop: true, dup: true, zero_sized: true];
type core::panics::PanicResult::<((),)> = Enum<ut@core::panics::PanicResult::<((),)>, Tuple<Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<core::array::Span::<core::felt252>> = Struct<ut@Tuple, core::array::Span::<core::felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::array::Span::<core::felt252>,)> = Enum<ut@core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, Tuple<core::array::Span::<core::felt252>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type System = System [storable: true, drop: false, dup: false, zero_sized: false];
type GasBuiltin = GasBuiltin [storable: true, drop: false, dup: false, zero_sized: false];
type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<1> = felt252_const<1>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc felt252_const<11> = felt252_const<11>;
libfunc felt252_const<949021990203918389843157787496164629863144228991510976554585288817234167820> = felt252_const<949021990203918389843157787496164629863144228991510976554585288817234167820>;
libfunc felt252_const<3> = felt252_const<3>;
libfunc felt252_const<3461208862407773342635871960084685728498932599526891269545319004528055383761> = felt252_const<3461208862407773342635871960084685728498932599526891269545319004528055383761>;
libfunc felt252_const<81485106> = felt252_const<81485106>;
libfunc felt252_const<0> = felt252_const<0>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc struct_construct<core::array::Span::<core::felt252>> = struct_construct<core::array::Span::<core::felt252>>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::array::Span::<core::felt252>> = store_temp<core::array::Span::<core::felt252>>;
libfunc function_call<user@test::test_contract::__wrapper____validate__> = function_call<user@test::test_contract::__wrapper____validate__>;
libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>> = enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc branch_align = branch_align;
libfunc drop<Tuple<core::array::Span::<core::felt252>>> = drop<Tuple<core::array::Span::<core::felt252>>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 0> = enum_init<core::panics::PanicResult::<((),)>, 0>;
libfunc store_temp<core::panics::PanicResult::<((),)>> = store_temp<core::panics::PanicResult::<((),)>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 1> = enum_init<core::panics::PanicResult::<((),)>, 1>;
libfunc drop<Array<core::starknet::account::Call>> = drop<Array<core::starknet::account::Call>>;
libfunc array_new<core::array::Span::<core::felt252>> = array_new<core::array::Span::<core::felt252>>;
libfunc store_temp<Array<core::array::Span::<core::felt252>>> = store_temp<Array<core::array::Span::<core::felt252>>>;
libfunc struct_construct<test::test_contract::ContractState> = struct_construct<test::test_contract::ContractState>;
libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc function_call<user@core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize> = function_call<user@core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize>;
libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>> = enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>;
libfunc struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>> = struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>;
libfunc enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>> = enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>;
libfunc struct_deconstruct<core::array::Span::<core::felt252>> = struct_deconstruct<core::array::Span::<core::felt252>>;
libfunc array_snapshot_pop_front<felt252> = array_snapshot_pop_front<felt252>;
libfunc drop<Snapshot<Array<felt252>>> = drop<Snapshot<Array<felt252>>>;
libfunc drop<Box<felt252>> = drop<Box<felt252>>;
libfunc felt252_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>> = store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>>> = struct_construct<Tuple<core::array::Span::<core::felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc drop<Unit> = drop<Unit>;
libfunc drop<core::array::Span::<core::felt252>> = drop<core::array::Span::<core::felt252>>;
libfunc felt252_const<485748461484230571791265682659113160264223489397539653310998840191492913> = felt252_const<485748461484230571791265682659113160264223489397539653310998840191492913>;
libfunc snapshot_take<Array<core::array::Span::<core::felt252>>> = snapshot_take<Array<core::array::Span::<core::felt252>>>;
libfunc drop<Array<core::array::Span::<core::felt252>>> = drop<Array<core::array::Span::<core::felt252>>>;
libfunc store_temp<Snapshot<Array<core::array::Span::<core::felt252>>>> = store_temp<Snapshot<Array<core::array::Span::<core::felt252>>>>;
libfunc store_temp<Array<felt252>> = store_temp<Array<felt252>>;
libfunc function_call<user@core::array::ArraySerde::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>::serialize> = function_call<user@core::array::ArraySerde::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>::serialize>;
libfunc enum_match<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>> = enum_match<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>;
libfunc struct_deconstruct<Tuple<Array<felt252>, Unit>> = struct_deconstruct<Tuple<Array<felt252>, Unit>>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>;
libfunc store_temp<Snapshot<Array<felt252>>> = store_temp<Snapshot<Array<felt252>>>;
libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>> = store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>;
libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>> = enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc unbox<felt252> = unbox<felt252>;
libfunc array_new<core::starknet::account::Call> = array_new<core::starknet::account::Call>;
libfunc rename<felt252> = rename<felt252>;
libfunc store_temp<Array<core::starknet::account::Call>> = store_temp<Array<core::starknet::account::Call>>;
libfunc function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>> = function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>;
libfunc enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 1> = enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 1>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>> = struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 0> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>> = store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>;
libfunc dup<Snapshot<Array<core::array::Span::<core::felt252>>>> = dup<Snapshot<Array<core::array::Span::<core::felt252>>>>;
libfunc array_len<core::array::Span::<core::felt252>> = array_len<core::array::Span::<core::felt252>>;
libfunc u32_to_felt252 = u32_to_felt252;
libfunc struct_construct<core::array::Span::<core::array::Span::<core::felt252>>> = struct_construct<core::array::Span::<core::array::Span::<core::felt252>>>;
libfunc store_temp<core::array::Span::<core::array::Span::<core::felt252>>> = store_temp<core::array::Span::<core::array::Span::<core::felt252>>>;
libfunc function_call<user@core::array::serialize_array_helper::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>> = function_call<user@core::array::serialize_array_helper::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>>;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc drop<felt252> = drop<felt252>;
libfunc enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 0> = enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 0>;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc function_call<user@core::starknet::account::CallSerde::deserialize> = function_call<user@core::starknet::account::CallSerde::deserialize>;
libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>> = enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>;
libfunc struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>> = struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>;
libfunc enum_match<core::option::Option::<core::starknet::account::Call>> = enum_match<core::option::Option::<core::starknet::account::Call>>;
libfunc array_append<core::starknet::account::Call> = array_append<core::starknet::account::Call>;
libfunc felt252_sub = felt252_sub;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 1> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 1>;
libfunc alloc_local<Snapshot<Array<core::array::Span::<core::felt252>>>> = alloc_local<Snapshot<Array<core::array::Span::<core::felt252>>>>;
libfunc finalize_locals = finalize_locals;
libfunc struct_deconstruct<core::array::Span::<core::array::Span::<core::felt252>>> = struct_deconstruct<core::array::Span::<core::array::Span::<core::felt252>>>;
libfunc enable_ap_tracking = enable_ap_tracking;
libfunc array_snapshot_pop_front<core::array::Span::<core::felt252>> = array_snapshot_pop_front<core::array::Span::<core::felt252>>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, 0> = enum_init<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, 0>;
libfunc store_temp<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>> = store_temp<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, 1> = enum_init<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, 1>;
libfunc store_local<Snapshot<Array<core::array::Span::<core::felt252>>>> = store_local<Snapshot<Array<core::array::Span::<core::felt252>>>>;
libfunc enum_match<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>> = enum_match<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>>;
libfunc unbox<core::array::Span::<core::felt252>> = unbox<core::array::Span::<core::felt252>>;
libfunc function_call<user@core::array::SpanFelt252Serde::serialize> = function_call<user@core::array::SpanFelt252Serde::serialize>;
libfunc drop<Snapshot<Array<core::array::Span::<core::felt252>>>> = drop<Snapshot<Array<core::array::Span::<core::felt252>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1> = enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>> = store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>;
libfunc struct_construct<Tuple<Array<felt252>, Unit>> = struct_construct<Tuple<Array<felt252>, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 0> = enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 0>;
libfunc drop<Uninitialized<Snapshot<Array<core::array::Span::<core::felt252>>>>> = drop<Uninitialized<Snapshot<Array<core::array::Span::<core::felt252>>>>>;
libfunc drop<core::array::Span::<core::array::Span::<core::felt252>>> = drop<core::array::Span::<core::array::Span::<core::felt252>>>;
libfunc function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize> = function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>;
libfunc enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>> = enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc function_call<user@core::array::SpanFelt252Serde::deserialize> = function_call<user@core::array::SpanFelt252Serde::deserialize>;
libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>> = enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>;
libfunc struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>> = struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>>;
libfunc enum_match<core::option::Option::<core::array::Span::<core::felt252>>> = enum_match<core::option::Option::<core::array::Span::<core::felt252>>>;
libfunc struct_construct<core::starknet::account::Call> = struct_construct<core::starknet::account::Call>;
libfunc enum_init<core::option::Option::<core::starknet::account::Call>, 0> = enum_init<core::option::Option::<core::starknet::account::Call>, 0>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>> = struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 0> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>> = store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>;
libfunc drop<ContractAddress> = drop<ContractAddress>;
libfunc enum_init<core::option::Option::<core::starknet::account::Call>, 1> = enum_init<core::option::Option::<core::starknet::account::Call>, 1>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 1> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 1>;
libfunc dup<core::array::Span::<core::felt252>> = dup<core::array::Span::<core::felt252>>;
libfunc rename<core::array::Span::<core::felt252>> = rename<core::array::Span::<core::felt252>>;
libfunc array_len<felt252> = array_len<felt252>;
libfunc function_call<user@core::array::serialize_array_helper::<core::felt252, core::Felt252Serde, core::felt252Drop>> = function_call<user@core::array::serialize_array_helper::<core::felt252, core::Felt252Serde, core::felt252Drop>>;
libfunc contract_address_try_from_felt252 = contract_address_try_from_felt252;
libfunc enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0> = enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>;
libfunc store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>> = store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1> = enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>;
libfunc dup<Snapshot<Array<felt252>>> = dup<Snapshot<Array<felt252>>>;
libfunc u32_try_from_felt252 = u32_try_from_felt252;
libfunc u32_const<0> = u32_const<0>;
libfunc dup<u32> = dup<u32>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc array_slice<felt252> = array_slice<felt252>;
libfunc function_call<user@core::integer::U32Sub::sub> = function_call<user@core::integer::U32Sub::sub>;
libfunc enum_match<core::panics::PanicResult::<(core::integer::u32,)>> = enum_match<core::panics::PanicResult::<(core::integer::u32,)>>;
libfunc struct_deconstruct<Tuple<u32>> = struct_deconstruct<Tuple<u32>>;
libfunc enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 0> = enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>> = struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 0> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>> = store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>;
libfunc felt252_const<1637570914057682275393755530660268060279989363> = felt252_const<1637570914057682275393755530660268060279989363>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 1> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 1>;
libfunc drop<u32> = drop<u32>;
libfunc enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 1> = enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 1>;
libfunc u32_overflowing_sub = u32_overflowing_sub;
libfunc enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 0> = enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u32, core::integer::u32>> = store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>;
libfunc enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 1> = enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 1>;
libfunc felt252_const<155785504329508738615720351733824384887> = felt252_const<155785504329508738615720351733824384887>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>>;
libfunc store_temp<core::panics::PanicResult::<(core::integer::u32,)>> = store_temp<core::panics::PanicResult::<(core::integer::u32,)>>;
libfunc enum_match<core::result::Result::<core::integer::u32, core::integer::u32>> = enum_match<core::result::Result::<core::integer::u32, core::integer::u32>>;
libfunc struct_construct<Tuple<u32>> = struct_construct<Tuple<u32>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u32,)>, 0> = enum_init<core::panics::PanicResult::<(core::integer::u32,)>, 0>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u32,)>, 1> = enum_init<core::panics::PanicResult::<(core::integer::u32,)>, 1>;

disable_ap_tracking() -> (); // 0
array_new<felt252>() -> ([3]); // 1
felt252_const<1>() -> ([4]); // 2
store_temp<felt252>([4]) -> ([4]); // 3
array_append<felt252>([3], [4]) -> ([5]); // 4
felt252_const<11>() -> ([6]); // 5
store_temp<felt252>([6]) -> ([6]); // 6
array_append<felt252>([5], [6]) -> ([7]); // 7
felt252_const<949021990203918389843157787496164629863144228991510976554585288817234167820>() -> ([8]); // 8
store_temp<felt252>([8]) -> ([8]); // 9
array_append<felt252>([7], [8]) -> ([9]); // 10
felt252_const<3>() -> ([10]); // 11
store_temp<felt252>([10]) -> ([10]); // 12
array_append<felt252>([9], [10]) -> ([11]); // 13
felt252_const<3461208862407773342635871960084685728498932599526891269545319004528055383761>() -> ([12]); // 14
store_temp<felt252>([12]) -> ([12]); // 15
array_append<felt252>([11], [12]) -> ([13]); // 16
felt252_const<81485106>() -> ([14]); // 17
store_temp<felt252>([14]) -> ([14]); // 18
array_append<felt252>([13], [14]) -> ([15]); // 19
felt252_const<0>() -> ([16]); // 20
store_temp<felt252>([16]) -> ([16]); // 21
array_append<felt252>([15], [16]) -> ([17]); // 22
snapshot_take<Array<felt252>>([17]) -> ([18], [19]); // 23
drop<Array<felt252>>([18]) -> (); // 24
struct_construct<core::array::Span::<core::felt252>>([19]) -> ([20]); // 25
store_temp<RangeCheck>([0]) -> ([0]); // 26
store_temp<GasBuiltin>([1]) -> ([1]); // 27
store_temp<System>([2]) -> ([2]); // 28
store_temp<core::array::Span::<core::felt252>>([20]) -> ([20]); // 29
function_call<user@test::test_contract::__wrapper____validate__>([0], [1], [2], [20]) -> ([21], [22], [23], [24]); // 30
enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([24]) { fallthrough([25]) 42([26]) }; // 31
branch_align() -> (); // 32
drop<Tuple<core::array::Span::<core::felt252>>>([25]) -> (); // 33
struct_construct<Unit>() -> ([27]); // 34
struct_construct<Tuple<Unit>>([27]) -> ([28]); // 35
enum_init<core::panics::PanicResult::<((),)>, 0>([28]) -> ([29]); // 36
store_temp<RangeCheck>([21]) -> ([21]); // 37
store_temp<GasBuiltin>([22]) -> ([22]); // 38
store_temp<System>([23]) -> ([23]); // 39
store_temp<core::panics::PanicResult::<((),)>>([29]) -> ([29]); // 40
return([21], [22], [23], [29]); // 41
branch_align() -> (); // 42
enum_init<core::panics::PanicResult::<((),)>, 1>([26]) -> ([30]); // 43
store_temp<RangeCheck>([21]) -> ([21]); // 44
store_temp<GasBuiltin>([22]) -> ([22]); // 45
store_temp<System>([23]) -> ([23]); // 46
store_temp<core::panics::PanicResult::<((),)>>([30]) -> ([30]); // 47
return([21], [22], [23], [30]); // 48
drop<Array<core::starknet::account::Call>>([1]) -> (); // 49
struct_construct<Unit>() -> ([2]); // 50
return([0], [2]); // 51
drop<Array<core::starknet::account::Call>>([1]) -> (); // 52
array_new<core::array::Span::<core::felt252>>() -> ([2]); // 53
store_temp<Array<core::array::Span::<core::felt252>>>([2]) -> ([2]); // 54
return([0], [2]); // 55
struct_construct<test::test_contract::ContractState>() -> ([0]); // 56
return([0]); // 57
revoke_ap_tracking() -> (); // 58
withdraw_gas([0], [1]) { fallthrough([4], [5]) 140([6], [7]) }; // 59
branch_align() -> (); // 60
store_temp<RangeCheck>([4]) -> ([4]); // 61
store_temp<GasBuiltin>([5]) -> ([5]); // 62
store_temp<core::array::Span::<core::felt252>>([3]) -> ([3]); // 63
function_call<user@core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize>([4], [5], [3]) -> ([8], [9], [10]); // 64
enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([10]) { fallthrough([11]) 133([12]) }; // 65
branch_align() -> (); // 66
struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>([11]) -> ([13], [14]); // 67
enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>([14]) { fallthrough([15]) 118([16]) }; // 68
branch_align() -> (); // 69
drop<Array<core::starknet::account::Call>>([15]) -> (); // 70
struct_deconstruct<core::array::Span::<core::felt252>>([13]) -> ([17]); // 71
array_snapshot_pop_front<felt252>([17]) { fallthrough([18], [19]) 88([20]) }; // 72
branch_align() -> (); // 73
drop<Snapshot<Array<felt252>>>([18]) -> (); // 74
drop<Box<felt252>>([19]) -> (); // 75
array_new<felt252>() -> ([21]); // 76
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([22]); // 77
store_temp<felt252>([22]) -> ([22]); // 78
array_append<felt252>([21], [22]) -> ([23]); // 79
struct_construct<core::panics::Panic>() -> ([24]); // 80
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([24], [23]) -> ([25]); // 81
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([25]) -> ([26]); // 82
store_temp<RangeCheck>([8]) -> ([8]); // 83
store_temp<GasBuiltin>([9]) -> ([9]); // 84
store_temp<System>([2]) -> ([2]); // 85
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([26]) -> ([26]); // 86
return([8], [9], [2], [26]); // 87
branch_align() -> (); // 88
drop<Snapshot<Array<felt252>>>([20]) -> (); // 89
get_builtin_costs() -> ([27]); // 90
store_temp<BuiltinCosts>([27]) -> ([27]); // 91
withdraw_gas_all([8], [9], [27]) { fallthrough([28], [29]) 105([30], [31]) }; // 92
branch_align() -> (); // 93
array_new<felt252>() -> ([32]); // 94
snapshot_take<Array<felt252>>([32]) -> ([33], [34]); // 95
drop<Array<felt252>>([33]) -> (); // 96
struct_construct<core::array::Span::<core::felt252>>([34]) -> ([35]); // 97
struct_construct<Tuple<core::array::Span::<core::felt252>>>([35]) -> ([36]); // 98
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([36]) -> ([37]); // 99
store_temp<RangeCheck>([28]) -> ([28]); // 100
store_temp<GasBuiltin>([29]) -> ([29]); // 101
store_temp<System>([2]) -> ([2]); // 102
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([37]) -> ([37]); // 103
return([28], [29], [2], [37]); // 104
branch_align() -> (); // 105
array_new<felt252>() -> ([38]); // 106
felt252_const<375233589013918064796019>() -> ([39]); // 107
store_temp<felt252>([39]) -> ([39]); // 108
array_append<felt252>([38], [39]) -> ([40]); // 109
struct_construct<core::panics::Panic>() -> ([41]); // 110
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([41], [40]) -> ([42]); // 111
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([42]) -> ([43]); // 112
store_temp<RangeCheck>([30]) -> ([30]); // 113
store_temp<GasBuiltin>([31]) -> ([31]); // 114
store_temp<System>([2]) -> ([2]); // 115
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([43]) -> ([43]); // 116
return([30], [31], [2], [43]); // 117
branch_align() -> (); // 118
drop<Unit>([16]) -> (); // 119
drop<core::array::Span::<core::felt252>>([13]) -> (); // 120
array_new<felt252>() -> ([44]); // 121
felt252_const<485748461484230571791265682659113160264223489397539653310998840191492913>() -> ([45]); // 122
store_temp<felt252>([45]) -> ([45]); // 123
array_append<felt252>([44], [45]) -> ([46]); // 124
struct_construct<core::panics::Panic>() -> ([47]); // 125
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([47], [46]) -> ([48]); // 126
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([48]) -> ([49]); // 127
store_temp<RangeCheck>([8]) -> ([8]); // 128
store_temp<GasBuiltin>([9]) -> ([9]); // 129
store_temp<System>([2]) -> ([2]); // 130
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([49]) -> ([49]); // 131
return([8], [9], [2], [49]); // 132
branch_align() -> (); // 133
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([12]) -> ([50]); // 134
store_temp<RangeCheck>([8]) -> ([8]); // 135
store_temp<GasBuiltin>([9]) -> ([9]); // 136
store_temp<System>([2]) -> ([2]); // 137
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([50]) -> ([50]); // 138
return([8], [9], [2], [50]); // 139
branch_align() -> (); // 140
drop<core::array::Span::<core::felt252>>([3]) -> (); // 141
array_new<felt252>() -> ([51]); // 142
felt252_const<375233589013918064796019>() -> ([52]); // 143
store_temp<felt252>([52]) -> ([52]); // 144
array_append<felt252>([51], [52]) -> ([53]); // 145
struct_construct<core::panics::Panic>() -> ([54]); // 146
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([54], [53]) -> ([55]); // 147
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([55]) -> ([56]); // 148
store_temp<RangeCheck>([6]) -> ([6]); // 149
store_temp<GasBuiltin>([7]) -> ([7]); // 150
store_temp<System>([2]) -> ([2]); // 151
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([56]) -> ([56]); // 152
return([6], [7], [2], [56]); // 153
revoke_ap_tracking() -> (); // 154
withdraw_gas([0], [1]) { fallthrough([4], [5]) 255([6], [7]) }; // 155
branch_align() -> (); // 156
store_temp<RangeCheck>([4]) -> ([4]); // 157
store_temp<GasBuiltin>([5]) -> ([5]); // 158
store_temp<core::array::Span::<core::felt252>>([3]) -> ([3]); // 159
function_call<user@core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize>([4], [5], [3]) -> ([8], [9], [10]); // 160
enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([10]) { fallthrough([11]) 248([12]) }; // 161
branch_align() -> (); // 162
struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>([11]) -> ([13], [14]); // 163
enum_match<core::option::Option::<core::array::Array::<core::starknet::account::Call>>>([14]) { fallthrough([15]) 233([16]) }; // 164
branch_align() -> (); // 165
drop<Array<core::starknet::account::Call>>([15]) -> (); // 166
struct_deconstruct<core::array::Span::<core::felt252>>([13]) -> ([17]); // 167
array_snapshot_pop_front<felt252>([17]) { fallthrough([18], [19]) 184([20]) }; // 168
branch_align() -> (); // 169
drop<Snapshot<Array<felt252>>>([18]) -> (); // 170
drop<Box<felt252>>([19]) -> (); // 171
array_new<felt252>() -> ([21]); // 172
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([22]); // 173
store_temp<felt252>([22]) -> ([22]); // 174
array_append<felt252>([21], [22]) -> ([23]); // 175
struct_construct<core::panics::Panic>() -> ([24]); // 176
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([24], [23]) -> ([25]); // 177
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([25]) -> ([26]); // 178
store_temp<RangeCheck>([8]) -> ([8]); // 179
store_temp<GasBuiltin>([9]) -> ([9]); // 180
store_temp<System>([2]) -> ([2]); // 181
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([26]) -> ([26]); // 182
return([8], [9], [2], [26]); // 183
branch_align() -> (); // 184
drop<Snapshot<Array<felt252>>>([20]) -> (); // 185
get_builtin_costs() -> ([27]); // 186
store_temp<BuiltinCosts>([27]) -> ([27]); // 187
withdraw_gas_all([8], [9], [27]) { fallthrough([28], [29]) 220([30], [31]) }; // 188
branch_align() -> (); // 189
array_new<core::array::Span::<core::felt252>>() -> ([32]); // 190
array_new<felt252>() -> ([33]); // 191
snapshot_take<Array<core::array::Span::<core::felt252>>>([32]) -> ([34], [35]); // 192
drop<Array<core::array::Span::<core::felt252>>>([34]) -> (); // 193
store_temp<RangeCheck>([28]) -> ([28]); // 194
store_temp<GasBuiltin>([29]) -> ([29]); // 195
store_temp<Snapshot<Array<core::array::Span::<core::felt252>>>>([35]) -> ([35]); // 196
store_temp<Array<felt252>>([33]) -> ([33]); // 197
function_call<user@core::array::ArraySerde::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>::serialize>([28], [29], [35], [33]) -> ([36], [37], [38]); // 198
enum_match<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([38]) { fallthrough([39]) 213([40]) }; // 199
branch_align() -> (); // 200
struct_deconstruct<Tuple<Array<felt252>, Unit>>([39]) -> ([41], [42]); // 201
drop<Unit>([42]) -> (); // 202
snapshot_take<Array<felt252>>([41]) -> ([43], [44]); // 203
drop<Array<felt252>>([43]) -> (); // 204
struct_construct<core::array::Span::<core::felt252>>([44]) -> ([45]); // 205
struct_construct<Tuple<core::array::Span::<core::felt252>>>([45]) -> ([46]); // 206
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([46]) -> ([47]); // 207
store_temp<RangeCheck>([36]) -> ([36]); // 208
store_temp<GasBuiltin>([37]) -> ([37]); // 209
store_temp<System>([2]) -> ([2]); // 210
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([47]) -> ([47]); // 211
return([36], [37], [2], [47]); // 212
branch_align() -> (); // 213
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([40]) -> ([48]); // 214
store_temp<RangeCheck>([36]) -> ([36]); // 215
store_temp<GasBuiltin>([37]) -> ([37]); // 216
store_temp<System>([2]) -> ([2]); // 217
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([48]) -> ([48]); // 218
return([36], [37], [2], [48]); // 219
branch_align() -> (); // 220
array_new<felt252>() -> ([49]); // 221
felt252_const<375233589013918064796019>() -> ([50]); // 222
store_temp<felt252>([50]) -> ([50]); // 223
array_append<felt252>([49], [50]) -> ([51]); // 224
struct_construct<core::panics::Panic>() -> ([52]); // 225
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([52], [51]) -> ([53]); // 226
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([53]) -> ([54]); // 227
store_temp<RangeCheck>([30]) -> ([30]); // 228
store_temp<GasBuiltin>([31]) -> ([31]); // 229
store_temp<System>([2]) -> ([2]); // 230
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([54]) -> ([54]); // 231
return([30], [31], [2], [54]); // 232
branch_align() -> (); // 233
drop<Unit>([16]) -> (); // 234
drop<core::array::Span::<core::felt252>>([13]) -> (); // 235
array_new<felt252>() -> ([55]); // 236
felt252_const<485748461484230571791265682659113160264223489397539653310998840191492913>() -> ([56]); // 237
store_temp<felt252>([56]) -> ([56]); // 238
array_append<felt252>([55], [56]) -> ([57]); // 239
struct_construct<core::panics::Panic>() -> ([58]); // 240
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([58], [57]) -> ([59]); // 241
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([59]) -> ([60]); // 242
store_temp<RangeCheck>([8]) -> ([8]); // 243
store_temp<GasBuiltin>([9]) -> ([9]); // 244
store_temp<System>([2]) -> ([2]); // 245
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([60]) -> ([60]); // 246
return([8], [9], [2], [60]); // 247
branch_align() -> (); // 248
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([12]) -> ([61]); // 249
store_temp<RangeCheck>([8]) -> ([8]); // 250
store_temp<GasBuiltin>([9]) -> ([9]); // 251
store_temp<System>([2]) -> ([2]); // 252
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([61]) -> ([61]); // 253
return([8], [9], [2], [61]); // 254
branch_align() -> (); // 255
drop<core::array::Span::<core::felt252>>([3]) -> (); // 256
array_new<felt252>() -> ([62]); // 257
felt252_const<375233589013918064796019>() -> ([63]); // 258
store_temp<felt252>([63]) -> ([63]); // 259
array_append<felt252>([62], [63]) -> ([64]); // 260
struct_construct<core::panics::Panic>() -> ([65]); // 261
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([65], [64]) -> ([66]); // 262
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([66]) -> ([67]); // 263
store_temp<RangeCheck>([6]) -> ([6]); // 264
store_temp<GasBuiltin>([7]) -> ([7]); // 265
store_temp<System>([2]) -> ([2]); // 266
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([67]) -> ([67]); // 267
return([6], [7], [2], [67]); // 268
disable_ap_tracking() -> (); // 269
struct_deconstruct<core::array::Span::<core::felt252>>([2]) -> ([3]); // 270
array_snapshot_pop_front<felt252>([3]) { fallthrough([4], [5]) 277([6]) }; // 271
branch_align() -> (); // 272
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([5]) -> ([7]); // 273
store_temp<Snapshot<Array<felt252>>>([4]) -> ([8]); // 274
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([7]) -> ([9]); // 275
jump() { 282() }; // 276
branch_align() -> (); // 277
struct_construct<Unit>() -> ([10]); // 278
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([10]) -> ([11]); // 279
store_temp<Snapshot<Array<felt252>>>([6]) -> ([8]); // 280
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([11]) -> ([9]); // 281
struct_construct<core::array::Span::<core::felt252>>([8]) -> ([12]); // 282
store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]); // 283
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([9]) { fallthrough([13]) 296([14]) }; // 284
branch_align() -> (); // 285
unbox<felt252>([13]) -> ([15]); // 286
array_new<core::starknet::account::Call>() -> ([16]); // 287
rename<felt252>([15]) -> ([17]); // 288
store_temp<RangeCheck>([0]) -> ([0]); // 289
store_temp<GasBuiltin>([1]) -> ([1]); // 290
store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]); // 291
store_temp<Array<core::starknet::account::Call>>([16]) -> ([16]); // 292
store_temp<felt252>([17]) -> ([17]); // 293
function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>([0], [1], [12], [16], [17]) -> ([18], [19], [20]); // 294
return([18], [19], [20]); // 295
branch_align() -> (); // 296
drop<Unit>([14]) -> (); // 297
struct_construct<Unit>() -> ([21]); // 298
enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 1>([21]) -> ([22]); // 299
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>([12], [22]) -> ([23]); // 300
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 0>([23]) -> ([24]); // 301
store_temp<RangeCheck>([0]) -> ([0]); // 302
store_temp<GasBuiltin>([1]) -> ([1]); // 303
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([24]) -> ([24]); // 304
return([0], [1], [24]); // 305
disable_ap_tracking() -> (); // 306
dup<Snapshot<Array<core::array::Span::<core::felt252>>>>([2]) -> ([2], [4]); // 307
array_len<core::array::Span::<core::felt252>>([4]) -> ([5]); // 308
u32_to_felt252([5]) -> ([6]); // 309
store_temp<felt252>([6]) -> ([6]); // 310
array_append<felt252>([3], [6]) -> ([7]); // 311
struct_construct<core::array::Span::<core::array::Span::<core::felt252>>>([2]) -> ([8]); // 312
store_temp<RangeCheck>([0]) -> ([0]); // 313
store_temp<GasBuiltin>([1]) -> ([1]); // 314
store_temp<core::array::Span::<core::array::Span::<core::felt252>>>([8]) -> ([8]); // 315
store_temp<Array<felt252>>([7]) -> ([7]); // 316
function_call<user@core::array::serialize_array_helper::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>>([0], [1], [8], [7]) -> ([9], [10], [11]); // 317
return([9], [10], [11]); // 318
disable_ap_tracking() -> (); // 319
get_builtin_costs() -> ([5]); // 320
store_temp<BuiltinCosts>([5]) -> ([5]); // 321
withdraw_gas_all([0], [1], [5]) { fallthrough([6], [7]) 374([8], [9]) }; // 322
branch_align() -> (); // 323
dup<felt252>([4]) -> ([4], [10]); // 324
store_temp<RangeCheck>([6]) -> ([6]); // 325
felt252_is_zero([10]) { fallthrough() 336([11]) }; // 326
branch_align() -> (); // 327
drop<felt252>([4]) -> (); // 328
enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 0>([3]) -> ([12]); // 329
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>([2], [12]) -> ([13]); // 330
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 0>([13]) -> ([14]); // 331
store_temp<RangeCheck>([6]) -> ([6]); // 332
store_temp<GasBuiltin>([7]) -> ([7]); // 333
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([14]) -> ([14]); // 334
return([6], [7], [14]); // 335
branch_align() -> (); // 336
drop<NonZero<felt252>>([11]) -> (); // 337
store_temp<RangeCheck>([6]) -> ([6]); // 338
store_temp<core::array::Span::<core::felt252>>([2]) -> ([2]); // 339
function_call<user@core::starknet::account::CallSerde::deserialize>([6], [2]) -> ([15], [16]); // 340
enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([16]) { fallthrough([17]) 366([18]) }; // 341
branch_align() -> (); // 342
struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>([17]) -> ([19], [20]); // 343
enum_match<core::option::Option::<core::starknet::account::Call>>([20]) { fallthrough([21]) 356([22]) }; // 344
branch_align() -> (); // 345
array_append<core::starknet::account::Call>([3], [21]) -> ([23]); // 346
felt252_const<1>() -> ([24]); // 347
felt252_sub([4], [24]) -> ([25]); // 348
store_temp<RangeCheck>([15]) -> ([15]); // 349
store_temp<GasBuiltin>([7]) -> ([7]); // 350
store_temp<core::array::Span::<core::felt252>>([19]) -> ([19]); // 351
store_temp<Array<core::starknet::account::Call>>([23]) -> ([23]); // 352
store_temp<felt252>([25]) -> ([25]); // 353
function_call<user@core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>>([15], [7], [19], [23], [25]) -> ([26], [27], [28]); // 354
return([26], [27], [28]); // 355
branch_align() -> (); // 356
drop<felt252>([4]) -> (); // 357
drop<Array<core::starknet::account::Call>>([3]) -> (); // 358
enum_init<core::option::Option::<core::array::Array::<core::starknet::account::Call>>, 1>([22]) -> ([29]); // 359
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>>>([19], [29]) -> ([30]); // 360
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 0>([30]) -> ([31]); // 361
store_temp<RangeCheck>([15]) -> ([15]); // 362
store_temp<GasBuiltin>([7]) -> ([7]); // 363
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([31]) -> ([31]); // 364
return([15], [7], [31]); // 365
branch_align() -> (); // 366
drop<felt252>([4]) -> (); // 367
drop<Array<core::starknet::account::Call>>([3]) -> (); // 368
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 1>([18]) -> ([32]); // 369
store_temp<RangeCheck>([15]) -> ([15]); // 370
store_temp<GasBuiltin>([7]) -> ([7]); // 371
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([32]) -> ([32]); // 372
return([15], [7], [32]); // 373
branch_align() -> (); // 374
drop<felt252>([4]) -> (); // 375
drop<Array<core::starknet::account::Call>>([3]) -> (); // 376
drop<core::array::Span::<core::felt252>>([2]) -> (); // 377
array_new<felt252>() -> ([33]); // 378
felt252_const<375233589013918064796019>() -> ([34]); // 379
store_temp<felt252>([34]) -> ([34]); // 380
array_append<felt252>([33], [34]) -> ([35]); // 381
struct_construct<core::panics::Panic>() -> ([36]); // 382
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([36], [35]) -> ([37]); // 383
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>, 1>([37]) -> ([38]); // 384
store_temp<RangeCheck>([8]) -> ([8]); // 385
store_temp<GasBuiltin>([9]) -> ([9]); // 386
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>>([38]) -> ([38]); // 387
return([8], [9], [38]); // 388
alloc_local<Snapshot<Array<core::array::Span::<core::felt252>>>>() -> ([5]); // 389
finalize_locals() -> (); // 390
disable_ap_tracking() -> (); // 391
get_builtin_costs() -> ([6]); // 392
store_temp<BuiltinCosts>([6]) -> ([6]); // 393
withdraw_gas_all([0], [1], [6]) { fallthrough([7], [8]) 449([9], [10]) }; // 394
branch_align() -> (); // 395
struct_deconstruct<core::array::Span::<core::array::Span::<core::felt252>>>([2]) -> ([11]); // 396
enable_ap_tracking() -> (); // 397
store_temp<RangeCheck>([7]) -> ([7]); // 398
array_snapshot_pop_front<core::array::Span::<core::felt252>>([11]) { fallthrough([12], [13]) 405([14]) }; // 399
branch_align() -> (); // 400
enum_init<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, 0>([13]) -> ([15]); // 401
store_temp<Snapshot<Array<core::array::Span::<core::felt252>>>>([12]) -> ([4]); // 402
store_temp<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>>([15]) -> ([16]); // 403
jump() { 410() }; // 404
branch_align() -> (); // 405
struct_construct<Unit>() -> ([17]); // 406
enum_init<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>, 1>([17]) -> ([18]); // 407
store_temp<Snapshot<Array<core::array::Span::<core::felt252>>>>([14]) -> ([4]); // 408
store_temp<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>>([18]) -> ([16]); // 409
store_local<Snapshot<Array<core::array::Span::<core::felt252>>>>([5], [4]) -> ([4]); // 410
enum_match<core::option::Option::<core::box::Box::<@core::array::Span::<core::felt252>>>>([16]) { fallthrough([19]) 438([20]) }; // 411
branch_align() -> (); // 412
disable_ap_tracking() -> (); // 413
unbox<core::array::Span::<core::felt252>>([19]) -> ([21]); // 414
store_temp<RangeCheck>([7]) -> ([7]); // 415
store_temp<GasBuiltin>([8]) -> ([8]); // 416
store_temp<core::array::Span::<core::felt252>>([21]) -> ([21]); // 417
store_temp<Array<felt252>>([3]) -> ([3]); // 418
function_call<user@core::array::SpanFelt252Serde::serialize>([7], [8], [21], [3]) -> ([22], [23], [24]); // 419
enum_match<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([24]) { fallthrough([25]) 431([26]) }; // 420
branch_align() -> (); // 421
struct_deconstruct<Tuple<Array<felt252>, Unit>>([25]) -> ([27], [28]); // 422
drop<Unit>([28]) -> (); // 423
struct_construct<core::array::Span::<core::array::Span::<core::felt252>>>([4]) -> ([29]); // 424
store_temp<RangeCheck>([22]) -> ([22]); // 425
store_temp<GasBuiltin>([23]) -> ([23]); // 426
store_temp<core::array::Span::<core::array::Span::<core::felt252>>>([29]) -> ([29]); // 427
store_temp<Array<felt252>>([27]) -> ([27]); // 428
function_call<user@core::array::serialize_array_helper::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>>([22], [23], [29], [27]) -> ([30], [31], [32]); // 429
return([30], [31], [32]); // 430
branch_align() -> (); // 431
drop<Snapshot<Array<core::array::Span::<core::felt252>>>>([4]) -> (); // 432
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1>([26]) -> ([33]); // 433
store_temp<RangeCheck>([22]) -> ([22]); // 434
store_temp<GasBuiltin>([23]) -> ([23]); // 435
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([33]) -> ([33]); // 436
return([22], [23], [33]); // 437
branch_align() -> (); // 438
disable_ap_tracking() -> (); // 439
drop<Unit>([20]) -> (); // 440
drop<Snapshot<Array<core::array::Span::<core::felt252>>>>([4]) -> (); // 441
struct_construct<Unit>() -> ([34]); // 442
struct_construct<Tuple<Array<felt252>, Unit>>([3], [34]) -> ([35]); // 443
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 0>([35]) -> ([36]); // 444
store_temp<RangeCheck>([7]) -> ([7]); // 445
store_temp<GasBuiltin>([8]) -> ([8]); // 446
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([36]) -> ([36]); // 447
return([7], [8], [36]); // 448
branch_align() -> (); // 449
drop<Uninitialized<Snapshot<Array<core::array::Span::<core::felt252>>>>>([5]) -> (); // 450
drop<Array<felt252>>([3]) -> (); // 451
drop<core::array::Span::<core::array::Span::<core::felt252>>>([2]) -> (); // 452
array_new<felt252>() -> ([37]); // 453
felt252_const<375233589013918064796019>() -> ([38]); // 454
store_temp<felt252>([38]) -> ([38]); // 455
array_append<felt252>([37], [38]) -> ([39]); // 456
struct_construct<core::panics::Panic>() -> ([40]); // 457
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([40], [39]) -> ([41]); // 458
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1>([41]) -> ([42]); // 459
store_temp<RangeCheck>([9]) -> ([9]); // 460
store_temp<GasBuiltin>([10]) -> ([10]); // 461
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([42]) -> ([42]); // 462
return([9], [10], [42]); // 463
store_temp<RangeCheck>([0]) -> ([0]); // 464
store_temp<core::array::Span::<core::felt252>>([1]) -> ([1]); // 465
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([0], [1]) -> ([2], [3], [4]); // 466
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([4]) { fallthrough([5]) 529([6]) }; // 467
branch_align() -> (); // 468
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([7]); // 469
array_snapshot_pop_front<felt252>([7]) { fallthrough([8], [9]) 476([10]) }; // 470
branch_align() -> (); // 471
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([9]) -> ([11]); // 472
store_temp<Snapshot<Array<felt252>>>([8]) -> ([12]); // 473
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([11]) -> ([13]); // 474
jump() { 481() }; // 475
branch_align() -> (); // 476
struct_construct<Unit>() -> ([14]); // 477
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([14]) -> ([15]); // 478
store_temp<Snapshot<Array<felt252>>>([10]) -> ([12]); // 479
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([15]) -> ([13]); // 480
struct_construct<core::array::Span::<core::felt252>>([12]) -> ([16]); // 481
store_temp<core::array::Span::<core::felt252>>([16]) -> ([16]); // 482
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([13]) { fallthrough([17]) 519([18]) }; // 483
branch_align() -> (); // 484
unbox<felt252>([17]) -> ([19]); // 485
store_temp<RangeCheck>([2]) -> ([2]); // 486
store_temp<core::array::Span::<core::felt252>>([16]) -> ([16]); // 487
function_call<user@core::array::SpanFelt252Serde::deserialize>([2], [16]) -> ([20], [21]); // 488
store_temp<felt252>([19]) -> ([19]); // 489
enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([21]) { fallthrough([22]) 512([23]) }; // 490
branch_align() -> (); // 491
struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>>([22]) -> ([24], [25]); // 492
enum_match<core::option::Option::<core::array::Span::<core::felt252>>>([25]) { fallthrough([26]) 503([27]) }; // 493
branch_align() -> (); // 494
rename<felt252>([19]) -> ([28]); // 495
struct_construct<core::starknet::account::Call>([5], [28], [26]) -> ([29]); // 496
enum_init<core::option::Option::<core::starknet::account::Call>, 0>([29]) -> ([30]); // 497
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>([24], [30]) -> ([31]); // 498
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 0>([31]) -> ([32]); // 499
store_temp<RangeCheck>([20]) -> ([20]); // 500
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([32]) -> ([32]); // 501
return([20], [32]); // 502
branch_align() -> (); // 503
drop<felt252>([19]) -> (); // 504
drop<ContractAddress>([5]) -> (); // 505
enum_init<core::option::Option::<core::starknet::account::Call>, 1>([27]) -> ([33]); // 506
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>([24], [33]) -> ([34]); // 507
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 0>([34]) -> ([35]); // 508
store_temp<RangeCheck>([20]) -> ([20]); // 509
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([35]) -> ([35]); // 510
return([20], [35]); // 511
branch_align() -> (); // 512
drop<ContractAddress>([5]) -> (); // 513
drop<felt252>([19]) -> (); // 514
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 1>([23]) -> ([36]); // 515
store_temp<RangeCheck>([20]) -> ([20]); // 516
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([36]) -> ([36]); // 517
return([20], [36]); // 518
branch_align() -> (); // 519
drop<Unit>([18]) -> (); // 520
drop<ContractAddress>([5]) -> (); // 521
struct_construct<Unit>() -> ([37]); // 522
enum_init<core::option::Option::<core::starknet::account::Call>, 1>([37]) -> ([38]); // 523
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>([16], [38]) -> ([39]); // 524
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 0>([39]) -> ([40]); // 525
store_temp<RangeCheck>([2]) -> ([2]); // 526
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([40]) -> ([40]); // 527
return([2], [40]); // 528
branch_align() -> (); // 529
enum_init<core::option::Option::<core::starknet::account::Call>, 1>([6]) -> ([41]); // 530
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>>>([3], [41]) -> ([42]); // 531
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>, 0>([42]) -> ([43]); // 532
store_temp<RangeCheck>([2]) -> ([2]); // 533
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>>([43]) -> ([43]); // 534
return([2], [43]); // 535
disable_ap_tracking() -> (); // 536
dup<core::array::Span::<core::felt252>>([2]) -> ([2], [4]); // 537
rename<core::array::Span::<core::felt252>>([4]) -> ([5]); // 538
struct_deconstruct<core::array::Span::<core::felt252>>([5]) -> ([6]); // 539
array_len<felt252>([6]) -> ([7]); // 540
u32_to_felt252([7]) -> ([8]); // 541
store_temp<felt252>([8]) -> ([8]); // 542
array_append<felt252>([3], [8]) -> ([9]); // 543
rename<core::array::Span::<core::felt252>>([2]) -> ([10]); // 544
store_temp<RangeCheck>([0]) -> ([0]); // 545
store_temp<GasBuiltin>([1]) -> ([1]); // 546
store_temp<core::array::Span::<core::felt252>>([10]) -> ([10]); // 547
store_temp<Array<felt252>>([9]) -> ([9]); // 548
function_call<user@core::array::serialize_array_helper::<core::felt252, core::Felt252Serde, core::felt252Drop>>([0], [1], [10], [9]) -> ([11], [12], [13]); // 549
return([11], [12], [13]); // 550
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]); // 551
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 558([5]) }; // 552
branch_align() -> (); // 553
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]); // 554
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]); // 555
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]); // 556
jump() { 563() }; // 557
branch_align() -> (); // 558
struct_construct<Unit>() -> ([9]); // 559
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]); // 560
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]); // 561
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]); // 562
struct_construct<core::array::Span::<core::felt252>>([7]) -> ([11]); // 563
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]); // 564
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 584([13]) }; // 565
branch_align() -> (); // 566
unbox<felt252>([12]) -> ([14]); // 567
rename<felt252>([14]) -> ([15]); // 568
store_temp<felt252>([15]) -> ([15]); // 569
contract_address_try_from_felt252([0], [15]) { fallthrough([16], [17]) 577([18]) }; // 570
branch_align() -> (); // 571
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>([17]) -> ([19]); // 572
store_temp<RangeCheck>([16]) -> ([16]); // 573
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]); // 574
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([19]) -> ([19]); // 575
return([16], [11], [19]); // 576
branch_align() -> (); // 577
struct_construct<Unit>() -> ([20]); // 578
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([20]) -> ([21]); // 579
store_temp<RangeCheck>([18]) -> ([18]); // 580
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]); // 581
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([21]) -> ([21]); // 582
return([18], [11], [21]); // 583
branch_align() -> (); // 584
drop<Unit>([13]) -> (); // 585
struct_construct<Unit>() -> ([22]); // 586
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([22]) -> ([23]); // 587
store_temp<RangeCheck>([0]) -> ([0]); // 588
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]); // 589
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([23]) -> ([23]); // 590
return([0], [11], [23]); // 591
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]); // 592
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 599([5]) }; // 593
branch_align() -> (); // 594
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]); // 595
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]); // 596
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]); // 597
jump() { 604() }; // 598
branch_align() -> (); // 599
struct_construct<Unit>() -> ([9]); // 600
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]); // 601
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]); // 602
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]); // 603
dup<Snapshot<Array<felt252>>>([7]) -> ([7], [11]); // 604
struct_construct<core::array::Span::<core::felt252>>([11]) -> ([12]); // 605
store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]); // 606
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([13]) 684([14]) }; // 607
branch_align() -> (); // 608
unbox<felt252>([13]) -> ([15]); // 609
rename<felt252>([15]) -> ([16]); // 610
store_temp<felt252>([16]) -> ([16]); // 611
u32_try_from_felt252([0], [16]) { fallthrough([17], [18]) 675([19]) }; // 612
branch_align() -> (); // 613
drop<core::array::Span::<core::felt252>>([12]) -> (); // 614
u32_const<0>() -> ([20]); // 615
dup<Snapshot<Array<felt252>>>([7]) -> ([7], [21]); // 616
dup<u32>([18]) -> ([18], [22]); // 617
store_temp<u32>([20]) -> ([20]); // 618
array_slice<felt252>([17], [21], [20], [22]) { fallthrough([23], [24]) 662([25]) }; // 619
branch_align() -> (); // 620
dup<Snapshot<Array<felt252>>>([7]) -> ([7], [26]); // 621
array_len<felt252>([26]) -> ([27]); // 622
store_temp<RangeCheck>([23]) -> ([23]); // 623
store_temp<u32>([27]) -> ([27]); // 624
dup<u32>([18]) -> ([18], [28]); // 625
store_temp<u32>([28]) -> ([28]); // 626
function_call<user@core::integer::U32Sub::sub>([23], [27], [28]) -> ([29], [30]); // 627
store_temp<Snapshot<Array<felt252>>>([24]) -> ([24]); // 628
enum_match<core::panics::PanicResult::<(core::integer::u32,)>>([30]) { fallthrough([31]) 654([32]) }; // 629
branch_align() -> (); // 630
struct_deconstruct<Tuple<u32>>([31]) -> ([33]); // 631
array_slice<felt252>([29], [7], [18], [33]) { fallthrough([34], [35]) 642([36]) }; // 632
branch_align() -> (); // 633
struct_construct<core::array::Span::<core::felt252>>([24]) -> ([37]); // 634
enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 0>([37]) -> ([38]); // 635
struct_construct<core::array::Span::<core::felt252>>([35]) -> ([39]); // 636
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>>([39], [38]) -> ([40]); // 637
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 0>([40]) -> ([41]); // 638
store_temp<RangeCheck>([34]) -> ([34]); // 639
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([41]) -> ([41]); // 640
return([34], [41]); // 641
branch_align() -> (); // 642
drop<Snapshot<Array<felt252>>>([24]) -> (); // 643
array_new<felt252>() -> ([42]); // 644
felt252_const<1637570914057682275393755530660268060279989363>() -> ([43]); // 645
store_temp<felt252>([43]) -> ([43]); // 646
array_append<felt252>([42], [43]) -> ([44]); // 647
struct_construct<core::panics::Panic>() -> ([45]); // 648
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([45], [44]) -> ([46]); // 649
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 1>([46]) -> ([47]); // 650
store_temp<RangeCheck>([36]) -> ([36]); // 651
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([47]) -> ([47]); // 652
return([36], [47]); // 653
branch_align() -> (); // 654
drop<Snapshot<Array<felt252>>>([24]) -> (); // 655
drop<u32>([18]) -> (); // 656
drop<Snapshot<Array<felt252>>>([7]) -> (); // 657
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 1>([32]) -> ([48]); // 658
store_temp<RangeCheck>([29]) -> ([29]); // 659
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([48]) -> ([48]); // 660
return([29], [48]); // 661
branch_align() -> (); // 662
drop<u32>([18]) -> (); // 663
drop<Snapshot<Array<felt252>>>([7]) -> (); // 664
array_new<felt252>() -> ([49]); // 665
felt252_const<1637570914057682275393755530660268060279989363>() -> ([50]); // 666
store_temp<felt252>([50]) -> ([50]); // 667
array_append<felt252>([49], [50]) -> ([51]); // 668
struct_construct<core::panics::Panic>() -> ([52]); // 669
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([52], [51]) -> ([53]); // 670
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 1>([53]) -> ([54]); // 671
store_temp<RangeCheck>([25]) -> ([25]); // 672
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([54]) -> ([54]); // 673
return([25], [54]); // 674
branch_align() -> (); // 675
drop<Snapshot<Array<felt252>>>([7]) -> (); // 676
struct_construct<Unit>() -> ([55]); // 677
enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 1>([55]) -> ([56]); // 678
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>>([12], [56]) -> ([57]); // 679
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 0>([57]) -> ([58]); // 680
store_temp<RangeCheck>([19]) -> ([19]); // 681
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([58]) -> ([58]); // 682
return([19], [58]); // 683
branch_align() -> (); // 684
drop<Unit>([14]) -> (); // 685
drop<Snapshot<Array<felt252>>>([7]) -> (); // 686
struct_construct<Unit>() -> ([59]); // 687
enum_init<core::option::Option::<core::array::Span::<core::felt252>>, 1>([59]) -> ([60]); // 688
struct_construct<Tuple<core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>>>([12], [60]) -> ([61]); // 689
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>, 0>([61]) -> ([62]); // 690
store_temp<RangeCheck>([0]) -> ([0]); // 691
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>>([62]) -> ([62]); // 692
return([0], [62]); // 693
disable_ap_tracking() -> (); // 694
get_builtin_costs() -> ([4]); // 695
store_temp<BuiltinCosts>([4]) -> ([4]); // 696
withdraw_gas_all([0], [1], [4]) { fallthrough([5], [6]) 738([7], [8]) }; // 697
branch_align() -> (); // 698
struct_deconstruct<core::array::Span::<core::felt252>>([2]) -> ([9]); // 699
enable_ap_tracking() -> (); // 700
store_temp<RangeCheck>([5]) -> ([5]); // 701
array_snapshot_pop_front<felt252>([9]) { fallthrough([10], [11]) 708([12]) }; // 702
branch_align() -> (); // 703
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([11]) -> ([13]); // 704
store_temp<Snapshot<Array<felt252>>>([10]) -> ([14]); // 705
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([13]) -> ([15]); // 706
jump() { 713() }; // 707
branch_align() -> (); // 708
struct_construct<Unit>() -> ([16]); // 709
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([16]) -> ([17]); // 710
store_temp<Snapshot<Array<felt252>>>([12]) -> ([14]); // 711
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([17]) -> ([15]); // 712
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([15]) { fallthrough([18]) 727([19]) }; // 713
branch_align() -> (); // 714
disable_ap_tracking() -> (); // 715
unbox<felt252>([18]) -> ([20]); // 716
rename<felt252>([20]) -> ([21]); // 717
store_temp<felt252>([21]) -> ([21]); // 718
array_append<felt252>([3], [21]) -> ([22]); // 719
struct_construct<core::array::Span::<core::felt252>>([14]) -> ([23]); // 720
store_temp<RangeCheck>([5]) -> ([5]); // 721
store_temp<GasBuiltin>([6]) -> ([6]); // 722
store_temp<core::array::Span::<core::felt252>>([23]) -> ([23]); // 723
store_temp<Array<felt252>>([22]) -> ([22]); // 724
function_call<user@core::array::serialize_array_helper::<core::felt252, core::Felt252Serde, core::felt252Drop>>([5], [6], [23], [22]) -> ([24], [25], [26]); // 725
return([24], [25], [26]); // 726
branch_align() -> (); // 727
disable_ap_tracking() -> (); // 728
drop<Unit>([19]) -> (); // 729
drop<Snapshot<Array<felt252>>>([14]) -> (); // 730
struct_construct<Unit>() -> ([27]); // 731
struct_construct<Tuple<Array<felt252>, Unit>>([3], [27]) -> ([28]); // 732
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 0>([28]) -> ([29]); // 733
store_temp<RangeCheck>([5]) -> ([5]); // 734
store_temp<GasBuiltin>([6]) -> ([6]); // 735
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([29]) -> ([29]); // 736
return([5], [6], [29]); // 737
branch_align() -> (); // 738
drop<Array<felt252>>([3]) -> (); // 739
drop<core::array::Span::<core::felt252>>([2]) -> (); // 740
array_new<felt252>() -> ([30]); // 741
felt252_const<375233589013918064796019>() -> ([31]); // 742
store_temp<felt252>([31]) -> ([31]); // 743
array_append<felt252>([30], [31]) -> ([32]); // 744
struct_construct<core::panics::Panic>() -> ([33]); // 745
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([33], [32]) -> ([34]); // 746
enum_init<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>, 1>([34]) -> ([35]); // 747
store_temp<RangeCheck>([7]) -> ([7]); // 748
store_temp<GasBuiltin>([8]) -> ([8]); // 749
store_temp<core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>>([35]) -> ([35]); // 750
return([7], [8], [35]); // 751
u32_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 758([5], [6]) }; // 752
branch_align() -> (); // 753
enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 0>([4]) -> ([7]); // 754
store_temp<RangeCheck>([3]) -> ([8]); // 755
store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>([7]) -> ([9]); // 756
jump() { 762() }; // 757
branch_align() -> (); // 758
enum_init<core::result::Result::<core::integer::u32, core::integer::u32>, 1>([6]) -> ([10]); // 759
store_temp<RangeCheck>([5]) -> ([8]); // 760
store_temp<core::result::Result::<core::integer::u32, core::integer::u32>>([10]) -> ([9]); // 761
felt252_const<155785504329508738615720351733824384887>() -> ([11]); // 762
store_temp<felt252>([11]) -> ([11]); // 763
function_call<user@core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>>([9], [11]) -> ([12]); // 764
store_temp<RangeCheck>([8]) -> ([8]); // 765
store_temp<core::panics::PanicResult::<(core::integer::u32,)>>([12]) -> ([12]); // 766
return([8], [12]); // 767
enum_match<core::result::Result::<core::integer::u32, core::integer::u32>>([0]) { fallthrough([2]) 775([3]) }; // 768
branch_align() -> (); // 769
drop<felt252>([1]) -> (); // 770
struct_construct<Tuple<u32>>([2]) -> ([4]); // 771
enum_init<core::panics::PanicResult::<(core::integer::u32,)>, 0>([4]) -> ([5]); // 772
store_temp<core::panics::PanicResult::<(core::integer::u32,)>>([5]) -> ([5]); // 773
return([5]); // 774
branch_align() -> (); // 775
drop<u32>([3]) -> (); // 776
array_new<felt252>() -> ([6]); // 777
array_append<felt252>([6], [1]) -> ([7]); // 778
struct_construct<core::panics::Panic>() -> ([8]); // 779
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([8], [7]) -> ([9]); // 780
enum_init<core::panics::PanicResult::<(core::integer::u32,)>, 1>([9]) -> ([10]); // 781
store_temp<core::panics::PanicResult::<(core::integer::u32,)>>([10]) -> ([10]); // 782
return([10]); // 783

test::validate_call@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<((),)>);
test::test_contract::__validate__@49([0]: test::test_contract::ContractState, [1]: Array<core::starknet::account::Call>) -> (test::test_contract::ContractState, Unit);
test::test_contract::__execute__@52([0]: test::test_contract::ContractState, [1]: Array<core::starknet::account::Call>) -> (test::test_contract::ContractState, Array<core::array::Span::<core::felt252>>);
test::test_contract::unsafe_new_contract_state@56() -> (test::test_contract::ContractState);
test::test_contract::__wrapper____validate__@58([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
test::test_contract::__wrapper____execute__@154([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
core::array::ArraySerde::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>::deserialize@269([0]: RangeCheck, [1]: GasBuiltin, [2]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>);
core::array::ArraySerde::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>::serialize@306([0]: RangeCheck, [1]: GasBuiltin, [2]: Snapshot<Array<core::array::Span::<core::felt252>>>, [3]: Array<felt252>) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>);
core::array::deserialize_array_helper::<core::starknet::account::Call, core::starknet::account::CallSerde, core::starknet::account::CallDrop>@319([0]: RangeCheck, [1]: GasBuiltin, [2]: core::array::Span::<core::felt252>, [3]: Array<core::starknet::account::Call>, [4]: felt252) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Array::<core::starknet::account::Call>>)>);
core::array::serialize_array_helper::<core::array::Span::<core::felt252>, core::array::SpanFelt252Serde, core::array::SpanDrop::<core::felt252>>@389([0]: RangeCheck, [1]: GasBuiltin, [2]: core::array::Span::<core::array::Span::<core::felt252>>, [3]: Array<felt252>) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>);
core::starknet::account::CallSerde::deserialize@464([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::starknet::account::Call>)>);
core::array::SpanFelt252Serde::serialize@536([0]: RangeCheck, [1]: GasBuiltin, [2]: core::array::Span::<core::felt252>, [3]: Array<felt252>) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>);
core::starknet::contract_address::ContractAddressSerde::deserialize@551([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::starknet::contract_address::ContractAddress>);
core::array::SpanFelt252Serde::deserialize@592([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::option::Option::<core::array::Span::<core::felt252>>)>);
core::array::serialize_array_helper::<core::felt252, core::Felt252Serde, core::felt252Drop>@694([0]: RangeCheck, [1]: GasBuiltin, [2]: core::array::Span::<core::felt252>, [3]: Array<felt252>) -> (RangeCheck, GasBuiltin, core::panics::PanicResult::<(core::array::Array::<core::felt252>, ())>);
core::integer::U32Sub::sub@752([0]: RangeCheck, [1]: u32, [2]: u32) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u32,)>);
core::result::ResultTraitImpl::<core::integer::u32, core::integer::u32>::expect::<core::integer::u32Drop>@768([0]: core::result::Result::<core::integer::u32, core::integer::u32>, [1]: felt252) -> (core::panics::PanicResult::<(core::integer::u32,)>);

//! > Casms Program
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 1, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = 11, ap++;
[ap + -1] = [[ap + -3] + 1];
[ap + 0] = 949021990203918389843157787496164629863144228991510976554585288817234167820, ap++;
[ap + -1] = [[ap + -4] + 2];
[ap + 0] = 3, ap++;
[ap + -1] = [[ap + -5] + 3];
[ap + 0] = 3461208862407773342635871960084685728498932599526891269545319004528055383761, ap++;
[ap + -1] = [[ap + -6] + 4];
[ap + 0] = 81485106, ap++;
[ap + -1] = [[ap + -7] + 5];
[ap + 0] = 0, ap++;
[ap + -1] = [[ap + -8] + 6];
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [ap + -12] + 7, ap++;
call rel 29;
jmp rel 12 if [ap + -3] != 0;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [ap + -2], ap++;
ret;
ret;
%{ memory[ap + 0] = 6040 <= memory[fp + -6] %}
jmp rel 7 if [ap + 0] != 0, ap++;
[ap + 0] = [fp + -6] + 340282366920938463463374607431768205416, ap++;
[ap + -1] = [[fp + -7] + 0];
jmp rel 100;
[fp + -6] = [ap + 0] + 6040, ap++;
[ap + -1] = [[fp + -7] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 245;
jmp rel 80 if [ap + -6] != 0;
jmp rel 64 if [ap + -3] != 0;
[ap + -4] = [ap + 0] + [ap + -5], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 16;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 7733229381460288120802334208475838166080759535023995805565484692595, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
call rel 986;
[ap + 0] = [ap + -1] + 985, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
%{ memory[ap + 0] = 0 <= memory[ap + -12] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[ap + -13] = [ap + 0] + 0, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[ap + -16] + 0];
jmp rel 16;
[ap + -13] = [ap + 0] + 0, ap++;
[ap + -1] = [[ap + -15] + 0];
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = [ap + -16] + 1, ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -18] + 1, ap++;
[ap + 0] = [ap + -18], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 485748461484230571791265682659113160264223489397539653310998840191492913, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
%{ memory[ap + 0] = 6040 <= memory[fp + -6] %}
jmp rel 7 if [ap + 0] != 0, ap++;
[ap + 0] = [fp + -6] + 340282366920938463463374607431768205416, ap++;
[ap + -1] = [[fp + -7] + 0];
jmp rel 120;
[fp + -6] = [ap + 0] + 6040, ap++;
[ap + -1] = [[fp + -7] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 125;
jmp rel 100 if [ap + -6] != 0;
jmp rel 84 if [ap + -3] != 0;
[ap + -4] = [ap + 0] + [ap + -5], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 16;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 7733229381460288120802334208475838166080759535023995805565484692595, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
call rel 866;
[ap + 0] = [ap + -1] + 865, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
%{ memory[ap + 0] = 3590 <= memory[ap + -12] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[ap + -13] = [ap + 0] + 3590, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[ap + -16] + 0];
jmp rel 36;
[ap + -13] = [ap + 0] + 3590, ap++;
[ap + -1] = [[ap + -15] + 0];
%{ memory[ap + 0] = segments.add() %}
ap += 1;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = [ap + -17] + 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6], ap++;
call rel 120;
jmp rel 10 if [ap + -3] != 0;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -18] + 1, ap++;
[ap + 0] = [ap + -18], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 485748461484230571791265682659113160264223489397539653310998840191492913, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7] + 1, ap++;
ret;
[fp + -3] = [ap + 0] + [fp + -4], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -4] + 1, ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
jmp rel 8;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 14 if [ap + -4] != 0;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [[ap + -10] + 0], ap++;
call rel 30;
ret;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[fp + -5] = [ap + 0] + [fp + -6], ap++;
[ap + -1] = [ap + 0] * 2, ap++;
[ap + -1] = [[fp + -3] + 0];
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3] + 1, ap++;
call rel 106;
ret;
call rel 704;
[ap + 0] = [ap + -1] + 703, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
%{ memory[ap + 0] = 16040 <= memory[fp + -8] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[fp + -8] = [ap + 0] + 16040, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -9] + 0];
jmp rel 71;
[fp + -8] = [ap + 0] + 16040, ap++;
[ap + -1] = [[fp + -9] + 0];
[ap + 0] = [fp + -9] + 1, ap++;
jmp rel 13 if [fp + -3] != 0;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
ret;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [fp + -6], ap++;
call rel 159;
jmp rel 33 if [ap + -8] != 0;
jmp rel 18 if [ap + -5] != 0;
[ap + -4] = [[fp + -4] + 0];
[ap + -3] = [[fp + -4] + 1];
[ap + -2] = [[fp + -4] + 2];
[ap + -1] = [[fp + -4] + 3];
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -107], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4] + 4, ap++;
[fp + -3] = [ap + 0] + 1, ap++;
call rel -54;
ret;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -107], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -107], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -9] + 1, ap++;
[ap + 0] = [fp + -8], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -9] + 1, ap++;
ret;
ap += 2;
call rel 599;
[ap + 0] = [ap + -1] + 598, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
%{ memory[ap + 0] = 6440 <= memory[fp + -7] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[fp + -7] = [ap + 0] + 6440, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -8] + 0];
jmp rel 63;
[fp + -7] = [ap + 0] + 6440, ap++;
[ap + -1] = [[fp + -8] + 0];
[ap + 0] = [fp + -8] + 1, ap++;
[fp + -5] = [ap + 0] + [fp + -6], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -6] + 2, ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -6], ap++;
jmp rel 8;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[fp + 0] = [ap + -4];
[fp + 1] = [ap + -3];
jmp rel 28 if [ap + -2] != 0;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [[ap + -3] + 0], ap++;
[ap + 0] = [[ap + -4] + 1], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 161;
jmp rel 11 if [ap + -3] != 0;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [fp + 0], ap++;
[ap + 0] = [fp + 1], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
call rel -60;
ret;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
ret;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -8] + 1, ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6] + 1, ap++;
ret;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 129;
jmp rel 97 if [ap + -2] != 0;
[ap + -3] = [ap + 0] + [ap + -4], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [ap + -5] + 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -8], ap++;
jmp rel 8;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 56 if [ap + -4] != 0;
[ap + 0] = [ap + -12], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -3], ap++;
call rel 174;
[ap + 0] = [[ap + -61] + 0], ap++;
jmp rel 32 if [ap + -7] != 0;
jmp rel 14 if [ap + -4] != 0;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -72], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
ret;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
ret;
ap += 59;
[ap + 0] = [ap + -71], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -63], ap++;
[ap + 0] = [ap + -63], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 66;
[ap + 0] = [ap + -71], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -72], ap++;
[ap + 0] = [ap + -72], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[fp + -5] = [ap + 0] + [fp + -6], ap++;
[ap + -1] = [[fp + -3] + 0];
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3] + 1, ap++;
call rel 256;
ret;
[fp + -3] = [ap + 0] + [fp + -4], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -4] + 1, ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
jmp rel 8;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 44 if [ap + -4] != 0;
[ap + 0] = [[ap + -3] + 0], ap++;
%{ memory[ap + 4] = memory[ap + -1] < 3618502788666131106986593281521497120414687020801267626233049500247285301248 %}
jmp rel 14 if [ap + 4] != 0, ap++;
[ap + -2] = [ap + 4] + 3618502788666131106986593281521497120414687020801267626233049500247285301248, ap++;
%{
(value, scalar) = (memory[ap + 3], 313594649253062377472)
x = min(value // scalar, 340282366920938463463374607431768211455)
y = value - x * scalar
memory[ap + -2] = x
memory[ap + -1] = y
%}
[ap + 0] = [ap + -2] * 313594649253062377472, ap++;
[ap + 2] = [ap + -1] + [ap + -2], ap++;
[ap + -4] = [[fp + -5] + 0], ap++;
[ap + -4] = [[fp + -5] + 1], ap++;
[ap + -3] = [ap + -5] + 340282366920938463149779958178705833983;
[ap + -3] = [[fp + -5] + 2];
jmp rel 20;
%{
(value, scalar) = (memory[ap + -2], 10633823966279326983230456482242756608)
x = min(value // scalar, 340282366920938463463374607431768211455)
y = value - x * scalar
memory[ap + -1] = x
memory[ap + 0] = y
%}
[ap + 1] = [ap + -1] * 10633823966279326983230456482242756608, ap++;
[ap + -3] = [ap + 0] + [ap + -1], ap++;
[ap + -3] = [[fp + -5] + 0], ap++;
[ap + -3] = [[fp + -5] + 1], ap++;
[ap + -2] = [ap + -4] + 329648542954659136480144150949525454848;
[ap + -2] = [[fp + -5] + 2];
ap += 1;
[ap + 0] = [fp + -5] + 3, ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -11], ap++;
ret;
[ap + 0] = [fp + -5] + 3, ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 7;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
ret;
[fp + -3] = [ap + 0] + [fp + -4], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -4] + 1, ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
jmp rel 8;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 143 if [ap + -4] != 0;
[ap + 0] = [[ap + -3] + 0], ap++;
%{ memory[ap + 0] = (memory[ap + -1] + 0) % PRIME < 4294967296 %}
jmp rel 18 if [ap + 0] != 0, ap++;
[ap + -2] = [ap + 0] + 4294967296, ap++;
%{
(value, scalar) = (memory[ap + -1], 10633823966279327296825105735305134080)
x = min(value // scalar, 340282366920938463463374607431768211454)
y = value - x * scalar
memory[ap + 0] = x
memory[ap + 1] = y
%}
[ap + 2] = [ap + 0] * 10633823966279327296825105735305134080, ap++;
[ap + -2] = [ap + 1] + [ap + 0], ap++;
[ap + -1] = [[fp + -5] + 0], ap++;
[ap + 0] = [ap + -2] + 319014718988379808869724395965452910591, ap++;
[ap + -1] = [[fp + -5] + 1], ap++;
[ap + -5] = [[fp + -5] + 2];
[ap + -5] = [ap + -1] + 340282366920938463463374607431768211455;
jmp rel 111 if [ap + -1] != 0;
[fp + -1] = [fp + -1] + 1;
[ap + -2] = [[fp + -5] + 0];
[ap + 0] = [ap + -2] + 340282366920938463463374607427473244160, ap++;
[ap + -1] = [[fp + -5] + 1];
[ap + 0] = 0, ap++;
[ap + -9] = [ap + 0] + [ap + -10], ap++;
[ap + 0] = [ap + -2] + [ap + -5], ap++;
%{ memory[ap + 0] = memory[ap + -1] <= memory[ap + -2] %}
jmp rel 8 if [ap + 0] != 0, ap++;
[ap + 0] = [ap + -3] + 1, ap++;
[ap + -3] = [ap + 0] + [ap + -1], ap++;
[ap + -1] = [[fp + -5] + 2];
jmp rel 72;
[ap + -3] = [ap + 0] + [ap + -2], ap++;
[ap + -1] = [[fp + -5] + 2];
[ap + 0] = [fp + -5] + 3, ap++;
[ap + -14] = [ap + 0] + [ap + -15], ap++;
[ap + 0] = [ap + -10], ap++;
call rel 187;
[ap + 0] = [ap + -36] + [ap + -27], ap++;
[ap + 0] = [ap + -37] + [ap + -26], ap++;
jmp rel 46 if [ap + -5] != 0;
[ap + -37] = [ap + 0] + [ap + -38], ap++;
[ap + 0] = [ap + -33] + [ap + -4], ap++;
%{ memory[ap + 0] = memory[ap + -1] <= memory[ap + -2] %}
jmp rel 8 if [ap + 0] != 0, ap++;
[ap + 0] = [ap + -3] + 1, ap++;
[ap + -3] = [ap + 0] + [ap + -1], ap++;
[ap + -1] = [[ap + -11] + 0];
jmp rel 17;
[ap + -3] = [ap + 0] + [ap + -2], ap++;
[ap + -1] = [[ap + -10] + 0];
ap += 3;
[ap + 0] = [ap + -13] + 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -47] + [ap + -41], ap++;
[ap + 0] = [ap + -48] + [ap + -9], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -14], ap++;
[ap + 0] = [ap + -14], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 1637570914057682275393755530660268060279989363, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -13] + 1, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
ap += 7;
[ap + 0] = [ap + -13], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -16], ap++;
[ap + 0] = [ap + -16], ap++;
ret;
ap += 28;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 1637570914057682275393755530660268060279989363, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -5] + 3, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
ap += 31;
[ap + 0] = [fp + -5] + 3, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -43], ap++;
[ap + 0] = [ap + -43], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 39;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -43], ap++;
[ap + 0] = [ap + -43], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
call rel 125;
[ap + 0] = [ap + -1] + 124, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
%{ memory[ap + 0] = 2670 <= memory[fp + -7] %}
jmp rel 9 if [ap + 0] != 0, ap++;
[fp + -7] = [ap + 0] + 2670, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -8] + 0];
jmp rel 47;
[fp + -7] = [ap + 0] + 2670, ap++;
[ap + -1] = [[fp + -8] + 0];
[ap + 0] = [fp + -8] + 1, ap++;
[fp + -5] = [ap + 0] + [fp + -6], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -6] + 1, ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -6], ap++;
jmp rel 8;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
jmp rel 14 if [ap + -2] != 0;
[ap + 0] = [[ap + -1] + 0], ap++;
[ap + -1] = [[fp + -3] + 0];
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3] + 1, ap++;
call rel -49;
ret;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -8] + 1, ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6] + 1, ap++;
ret;
[fp + -4] = [ap + 1] + [fp + -3], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 4294967296 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -5] + 0];
jmp rel 12;
[ap + -1] = [[fp + -5] + 0];
ap += 1;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 8;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4] + 4294967296, ap++;
[ap + 0] = 155785504329508738615720351733824384887, ap++;
call rel 7;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
ret;
jmp rel 10 if [fp + -5] != 0;
ap += 1;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[fp + -3] = [[ap + -1] + 0];
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [ap + -3] + 1, ap++;
ret;

//! > ==========================================================================

//! > Test ecdsa validation.

//! > test_runner_name
test_profiling

//! > cairo_code
fn ecdsa_call() {
  let message_hash = 0x503f4bea29baee10b22a7f10bdc82dda071c977c1f25b8f3973d34e6b03b2c;
  let public_key = 0x7b7454acbe7845da996377f85eb0892044d75ae95d04d3325a391951f35d2ec;
  let signature_r = 0xbe96d72eb4f94078192c2e84d5230cde2a70f4b45c8797e2c907acff5060bb;
  let signature_s = 0x677ae6bba6daf00d2631fab14c8acf24be6579f9d9e98f67aa7f2770e57a1f5;
  core::ecdsa::check_ecdsa_signature(:message_hash, :public_key, :signature_r, :signature_s);
}

//! > function_name
ecdsa_call

//! > expected_profiling_info
Weight by sierra statement:
  statement 84: 14 (ec_point_from_x_nz([0], [3]) { fallthrough([28], [29]) 246([30]) })
  statement 88: 14 (ec_point_from_x_nz([28], [31]) { fallthrough([32], [33]) 233([34]) })
  statement 104: 12 (ec_state_try_finalize_nz([41]) { fallthrough([42]) 205() })
  statement 114: 12 (ec_state_try_finalize_nz([49]) { fallthrough([50]) 194() })
  statement 120: 12 (ec_state_try_finalize_nz([53]) { fallthrough([54]) 143() })
  statement 165: 12 (ec_state_try_finalize_nz([73]) { fallthrough([74]) 184() })
  statement 118: 10 (ec_state_add([51], [52]) -> ([53]))
  statement 163: 10 (ec_state_add([47], [66]) -> ([73]))
  statement 96: 7 (ec_point_try_new_nz([35], [36]) { fallthrough([37]) 219() })
  statement 98: 7 (ec_state_init() -> ([38]))
  statement 100: 5 (ec_state_add_mul([1], [39], [5], [33]) -> ([40], [41]))
  statement 109: 5 (ec_state_add_mul([40], [45], [2], [37]) -> ([46], [47]))
  statement 110: 5 (ec_state_add_mul([46], [38], [4], [29]) -> ([48], [49]))
  statement 19: 3 (store_temp<core::panics::PanicResult::<((),)>>([13]) -> ([13]))
  statement 101: 3 (store_temp<EcState>([41]) -> ([41]))
  statement 111: 3 (store_temp<EcState>([49]) -> ([49]))
  statement 112: 3 (store_temp<EcState>([47]) -> ([47]))
  statement 119: 3 (store_temp<EcState>([53]) -> ([53]))
  statement 164: 3 (store_temp<EcState>([73]) -> ([73]))
  statement 179: 3 (store_temp<core::panics::PanicResult::<(core::bool,)>>([82]) -> ([82]))
  statement 87: 2 (store_temp<NonZero<EcPoint>>([29]) -> ([29]))
  statement 95: 2 (store_temp<NonZero<EcPoint>>([33]) -> ([33]))
  statement 102: 2 (store_temp<NonZero<EcPoint>>([37]) -> ([37]))
  statement 146: 2 (store_temp<EcPoint>([65]) -> ([65]))
  statement 4: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 5: 1 (store_temp<EcOp>([1]) -> ([1]))
  statement 6: 1 (store_temp<felt252>([2]) -> ([2]))
  statement 7: 1 (store_temp<felt252>([3]) -> ([3]))
  statement 8: 1 (store_temp<felt252>([4]) -> ([4]))
  statement 9: 1 (store_temp<felt252>([5]) -> ([5]))
  statement 10: 1 (function_call<user@core::ecdsa::check_ecdsa_signature>([0], [1], [2], [3], [4], [5]) -> ([6], [7], [8]))
  statement 11: 1 (enum_match<core::panics::PanicResult::<(core::bool,)>>([8]) { fallthrough([9]) 21([10]) })
  statement 17: 1 (store_temp<RangeCheck>([6]) -> ([6]))
  statement 18: 1 (store_temp<EcOp>([7]) -> ([7]))
  statement 20: 1 (return([6], [7], [13]))
  statement 28: 1 (felt252_is_zero([6]) { fallthrough() 42([7]) })
  statement 47: 1 (store_temp<felt252>([14]) -> ([14]))
  statement 48: 1 (felt252_is_zero([14]) { fallthrough() 62([15]) })
  statement 67: 1 (store_temp<felt252>([22]) -> ([22]))
  statement 68: 1 (felt252_is_zero([22]) { fallthrough() 82([23]) })
  statement 92: 1 (store_temp<felt252>([35]) -> ([35]))
  statement 93: 1 (store_temp<felt252>([36]) -> ([36]))
  statement 94: 1 (store_temp<RangeCheck>([32]) -> ([32]))
  statement 103: 1 (store_temp<EcOp>([40]) -> ([40]))
  statement 113: 1 (store_temp<EcOp>([48]) -> ([48]))
  statement 126: 1 (store_temp<felt252>([58]) -> ([58]))
  statement 127: 1 (felt252_is_zero([58]) { fallthrough() 140([59]) })
  statement 142: 1 (jump() { 144() })
  statement 147: 1 (ec_point_is_zero([65]) { fallthrough() 162([66]) })
  statement 170: 1 (store_temp<felt252>([77]) -> ([77]))
  statement 171: 1 (felt252_is_zero([77]) { fallthrough() 181([78]) })
  statement 177: 1 (store_temp<RangeCheck>([32]) -> ([32]))
  statement 178: 1 (store_temp<EcOp>([48]) -> ([48]))
  statement 180: 1 (return([32], [48], [82]))
Weight by concrete libfunc:
  libfunc ec_state_try_finalize_nz: 48
  libfunc ec_point_from_x_nz: 28
  libfunc ec_state_add: 20
  libfunc ec_state_add_mul: 15
  libfunc store_temp<EcState>: 15
  libfunc store_temp<felt252>: 10
  libfunc ec_point_try_new_nz: 7
  libfunc ec_state_init: 7
  libfunc store_temp<NonZero<EcPoint>>: 6
  libfunc felt252_is_zero: 5
  libfunc store_temp<EcOp>: 5
  libfunc store_temp<RangeCheck>: 4
  libfunc store_temp<core::panics::PanicResult::<((),)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(core::bool,)>>: 3
  libfunc store_temp<EcPoint>: 2
  libfunc ec_point_is_zero: 1
  libfunc enum_match<core::panics::PanicResult::<(core::bool,)>>: 1
  libfunc function_call<user@core::ecdsa::check_ecdsa_signature>: 1
  libfunc jump: 1
  return: 2
Weight by generic libfunc:
  libfunc ec_state_try_finalize_nz: 48
  libfunc store_temp: 48
  libfunc ec_point_from_x_nz: 28
  libfunc ec_state_add: 20
  libfunc ec_state_add_mul: 15
  libfunc ec_point_try_new_nz: 7
  libfunc ec_state_init: 7
  libfunc felt252_is_zero: 5
  libfunc ec_point_is_zero: 1
  libfunc enum_match: 1
  libfunc function_call: 1
  libfunc jump: 1
  return: 2
Weight by user function (inc. generated):
  function core::ecdsa::check_ecdsa_signature: 170
  function test::ecdsa_call: 14
Weight by original user function (exc. generated):
  function core::ecdsa::check_ecdsa_signature: 170
  function test::ecdsa_call: 14
Weight by Cairo function:
  function ec.cairo::EcStateImpl::finalize_nz: 67
  function ec.cairo::EcPointImpl::new_nz_from_x: 30
  function ec.cairo::EcStateImpl::add_mul: 15
  function ecdsa.cairo::check_ecdsa_signature: 15
  function lib.cairo::ecdsa_call: 14
  function ec.cairo::EcPointImpl::new_nz: 12
  function ec.cairo::EcStateImpl::add: 10
  function ec.cairo::EcStateImpl::sub: 10
  function ec.cairo::EcStateImpl::init: 7
  function ec.cairo::EcPointTryIntoNonZero::try_into: 3
  function unknown: 1
Weight by Sierra stack trace:
  test::ecdsa_call: 184
  test::ecdsa_call -> core::ecdsa::check_ecdsa_signature: 170
Weight by Cairo stack trace:
  test::ecdsa_call: 184
  test::ecdsa_call -> core::ecdsa::check_ecdsa_signature: 170

//! > Sierra Program
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type EcPoint = EcPoint [storable: true, drop: true, dup: true, zero_sized: false];
type EcState = EcState [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<EcPoint> = NonZero<EcPoint> [storable: true, drop: true, dup: true, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type core::bool = Enum<ut@core::bool, Unit, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<Unit> = Struct<ut@Tuple, Unit> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<((),)> = Enum<ut@core::panics::PanicResult::<((),)>, Tuple<Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<core::bool> = Struct<ut@Tuple, core::bool> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::bool,)> = Enum<ut@core::panics::PanicResult::<(core::bool,)>, Tuple<core::bool>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type EcOp = EcOp [storable: true, drop: false, dup: false, zero_sized: false];
type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];

libfunc felt252_const<141784621858361645174009804296757185726381639603648306606182704733930666796> = felt252_const<141784621858361645174009804296757185726381639603648306606182704733930666796>;
libfunc felt252_const<3490001189944926769628658346285649224182856084131963744896357527096042836716> = felt252_const<3490001189944926769628658346285649224182856084131963744896357527096042836716>;
libfunc felt252_const<336742005567258698661916498343089167447076063081786685068305785816009957563> = felt252_const<336742005567258698661916498343089167447076063081786685068305785816009957563>;
libfunc felt252_const<2925335700420068477532893136360799683220922576143466479208174349948949078517> = felt252_const<2925335700420068477532893136360799683220922576143466479208174349948949078517>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<EcOp> = store_temp<EcOp>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@core::ecdsa::check_ecdsa_signature> = function_call<user@core::ecdsa::check_ecdsa_signature>;
libfunc enum_match<core::panics::PanicResult::<(core::bool,)>> = enum_match<core::panics::PanicResult::<(core::bool,)>>;
libfunc branch_align = branch_align;
libfunc drop<Tuple<core::bool>> = drop<Tuple<core::bool>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 0> = enum_init<core::panics::PanicResult::<((),)>, 0>;
libfunc store_temp<core::panics::PanicResult::<((),)>> = store_temp<core::panics::PanicResult::<((),)>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 1> = enum_init<core::panics::PanicResult::<((),)>, 1>;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc drop<felt252> = drop<felt252>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc struct_construct<Tuple<core::bool>> = struct_construct<Tuple<core::bool>>;
libfunc enum_init<core::panics::PanicResult::<(core::bool,)>, 0> = enum_init<core::panics::PanicResult::<(core::bool,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::bool,)>> = store_temp<core::panics::PanicResult::<(core::bool,)>>;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_const<3618502788666131213697322783095070105526743751716087489154079457884512865583> = felt252_const<3618502788666131213697322783095070105526743751716087489154079457884512865583>;
libfunc felt252_sub = felt252_sub;
libfunc ec_point_from_x_nz = ec_point_from_x_nz;
libfunc store_temp<NonZero<EcPoint>> = store_temp<NonZero<EcPoint>>;
libfunc felt252_const<874739451078007766457464989774322083649278607533249481151382481072868806602> = felt252_const<874739451078007766457464989774322083649278607533249481151382481072868806602>;
libfunc felt252_const<152666792071518830868575557812948353041420400780739481342941381225525861407> = felt252_const<152666792071518830868575557812948353041420400780739481342941381225525861407>;
libfunc ec_point_try_new_nz = ec_point_try_new_nz;
libfunc ec_state_init = ec_state_init;
libfunc dup<EcState> = dup<EcState>;
libfunc ec_state_add_mul = ec_state_add_mul;
libfunc store_temp<EcState> = store_temp<EcState>;
libfunc ec_state_try_finalize_nz = ec_state_try_finalize_nz;
libfunc ec_point_unwrap = ec_point_unwrap;
libfunc dup<NonZero<EcPoint>> = dup<NonZero<EcPoint>>;
libfunc ec_state_add = ec_state_add;
libfunc drop<EcState> = drop<EcState>;
libfunc drop<NonZero<EcPoint>> = drop<NonZero<EcPoint>>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc jump = jump;
libfunc unwrap_non_zero<EcPoint> = unwrap_non_zero<EcPoint>;
libfunc ec_neg = ec_neg;
libfunc store_temp<EcPoint> = store_temp<EcPoint>;
libfunc ec_point_is_zero = ec_point_is_zero;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<29721761890975875353235833581453094220424382983267374> = felt252_const<29721761890975875353235833581453094220424382983267374>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::bool,)>, 1> = enum_init<core::panics::PanicResult::<(core::bool,)>, 1>;

felt252_const<141784621858361645174009804296757185726381639603648306606182704733930666796>() -> ([2]); // 0
felt252_const<3490001189944926769628658346285649224182856084131963744896357527096042836716>() -> ([3]); // 1
felt252_const<336742005567258698661916498343089167447076063081786685068305785816009957563>() -> ([4]); // 2
felt252_const<2925335700420068477532893136360799683220922576143466479208174349948949078517>() -> ([5]); // 3
store_temp<RangeCheck>([0]) -> ([0]); // 4
store_temp<EcOp>([1]) -> ([1]); // 5
store_temp<felt252>([2]) -> ([2]); // 6
store_temp<felt252>([3]) -> ([3]); // 7
store_temp<felt252>([4]) -> ([4]); // 8
store_temp<felt252>([5]) -> ([5]); // 9
function_call<user@core::ecdsa::check_ecdsa_signature>([0], [1], [2], [3], [4], [5]) -> ([6], [7], [8]); // 10
enum_match<core::panics::PanicResult::<(core::bool,)>>([8]) { fallthrough([9]) 21([10]) }; // 11
branch_align() -> (); // 12
drop<Tuple<core::bool>>([9]) -> (); // 13
struct_construct<Unit>() -> ([11]); // 14
struct_construct<Tuple<Unit>>([11]) -> ([12]); // 15
enum_init<core::panics::PanicResult::<((),)>, 0>([12]) -> ([13]); // 16
store_temp<RangeCheck>([6]) -> ([6]); // 17
store_temp<EcOp>([7]) -> ([7]); // 18
store_temp<core::panics::PanicResult::<((),)>>([13]) -> ([13]); // 19
return([6], [7], [13]); // 20
branch_align() -> (); // 21
enum_init<core::panics::PanicResult::<((),)>, 1>([10]) -> ([14]); // 22
store_temp<RangeCheck>([6]) -> ([6]); // 23
store_temp<EcOp>([7]) -> ([7]); // 24
store_temp<core::panics::PanicResult::<((),)>>([14]) -> ([14]); // 25
return([6], [7], [14]); // 26
dup<felt252>([5]) -> ([5], [6]); // 27
felt252_is_zero([6]) { fallthrough() 42([7]) }; // 28
branch_align() -> (); // 29
drop<felt252>([5]) -> (); // 30
drop<felt252>([2]) -> (); // 31
drop<felt252>([4]) -> (); // 32
drop<felt252>([3]) -> (); // 33
struct_construct<Unit>() -> ([8]); // 34
enum_init<core::bool, 0>([8]) -> ([9]); // 35
struct_construct<Tuple<core::bool>>([9]) -> ([10]); // 36
enum_init<core::panics::PanicResult::<(core::bool,)>, 0>([10]) -> ([11]); // 37
store_temp<RangeCheck>([0]) -> ([0]); // 38
store_temp<EcOp>([1]) -> ([1]); // 39
store_temp<core::panics::PanicResult::<(core::bool,)>>([11]) -> ([11]); // 40
return([0], [1], [11]); // 41
branch_align() -> (); // 42
drop<NonZero<felt252>>([7]) -> (); // 43
felt252_const<3618502788666131213697322783095070105526743751716087489154079457884512865583>() -> ([12]); // 44
dup<felt252>([5]) -> ([5], [13]); // 45
felt252_sub([13], [12]) -> ([14]); // 46
store_temp<felt252>([14]) -> ([14]); // 47
felt252_is_zero([14]) { fallthrough() 62([15]) }; // 48
branch_align() -> (); // 49
drop<felt252>([5]) -> (); // 50
drop<felt252>([2]) -> (); // 51
drop<felt252>([4]) -> (); // 52
drop<felt252>([3]) -> (); // 53
struct_construct<Unit>() -> ([16]); // 54
enum_init<core::bool, 0>([16]) -> ([17]); // 55
struct_construct<Tuple<core::bool>>([17]) -> ([18]); // 56
enum_init<core::panics::PanicResult::<(core::bool,)>, 0>([18]) -> ([19]); // 57
store_temp<RangeCheck>([0]) -> ([0]); // 58
store_temp<EcOp>([1]) -> ([1]); // 59
store_temp<core::panics::PanicResult::<(core::bool,)>>([19]) -> ([19]); // 60
return([0], [1], [19]); // 61
branch_align() -> (); // 62
drop<NonZero<felt252>>([15]) -> (); // 63
felt252_const<3618502788666131213697322783095070105526743751716087489154079457884512865583>() -> ([20]); // 64
dup<felt252>([4]) -> ([4], [21]); // 65
felt252_sub([21], [20]) -> ([22]); // 66
store_temp<felt252>([22]) -> ([22]); // 67
felt252_is_zero([22]) { fallthrough() 82([23]) }; // 68
branch_align() -> (); // 69
drop<felt252>([5]) -> (); // 70
drop<felt252>([2]) -> (); // 71
drop<felt252>([4]) -> (); // 72
drop<felt252>([3]) -> (); // 73
struct_construct<Unit>() -> ([24]); // 74
enum_init<core::bool, 0>([24]) -> ([25]); // 75
struct_construct<Tuple<core::bool>>([25]) -> ([26]); // 76
enum_init<core::panics::PanicResult::<(core::bool,)>, 0>([26]) -> ([27]); // 77
store_temp<RangeCheck>([0]) -> ([0]); // 78
store_temp<EcOp>([1]) -> ([1]); // 79
store_temp<core::panics::PanicResult::<(core::bool,)>>([27]) -> ([27]); // 80
return([0], [1], [27]); // 81
branch_align() -> (); // 82
drop<NonZero<felt252>>([23]) -> (); // 83
ec_point_from_x_nz([0], [3]) { fallthrough([28], [29]) 246([30]) }; // 84
branch_align() -> (); // 85
dup<felt252>([4]) -> ([4], [31]); // 86
store_temp<NonZero<EcPoint>>([29]) -> ([29]); // 87
ec_point_from_x_nz([28], [31]) { fallthrough([32], [33]) 233([34]) }; // 88
branch_align() -> (); // 89
felt252_const<874739451078007766457464989774322083649278607533249481151382481072868806602>() -> ([35]); // 90
felt252_const<152666792071518830868575557812948353041420400780739481342941381225525861407>() -> ([36]); // 91
store_temp<felt252>([35]) -> ([35]); // 92
store_temp<felt252>([36]) -> ([36]); // 93
store_temp<RangeCheck>([32]) -> ([32]); // 94
store_temp<NonZero<EcPoint>>([33]) -> ([33]); // 95
ec_point_try_new_nz([35], [36]) { fallthrough([37]) 219() }; // 96
branch_align() -> (); // 97
ec_state_init() -> ([38]); // 98
dup<EcState>([38]) -> ([38], [39]); // 99
ec_state_add_mul([1], [39], [5], [33]) -> ([40], [41]); // 100
store_temp<EcState>([41]) -> ([41]); // 101
store_temp<NonZero<EcPoint>>([37]) -> ([37]); // 102
store_temp<EcOp>([40]) -> ([40]); // 103
ec_state_try_finalize_nz([41]) { fallthrough([42]) 205() }; // 104
branch_align() -> (); // 105
ec_point_unwrap([42]) -> ([43], [44]); // 106
drop<felt252>([44]) -> (); // 107
dup<EcState>([38]) -> ([38], [45]); // 108
ec_state_add_mul([40], [45], [2], [37]) -> ([46], [47]); // 109
ec_state_add_mul([46], [38], [4], [29]) -> ([48], [49]); // 110
store_temp<EcState>([49]) -> ([49]); // 111
store_temp<EcState>([47]) -> ([47]); // 112
store_temp<EcOp>([48]) -> ([48]); // 113
ec_state_try_finalize_nz([49]) { fallthrough([50]) 194() }; // 114
branch_align() -> (); // 115
dup<EcState>([47]) -> ([47], [51]); // 116
dup<NonZero<EcPoint>>([50]) -> ([50], [52]); // 117
ec_state_add([51], [52]) -> ([53]); // 118
store_temp<EcState>([53]) -> ([53]); // 119
ec_state_try_finalize_nz([53]) { fallthrough([54]) 143() }; // 120
branch_align() -> (); // 121
ec_point_unwrap([54]) -> ([55], [56]); // 122
drop<felt252>([56]) -> (); // 123
dup<felt252>([43]) -> ([43], [57]); // 124
felt252_sub([55], [57]) -> ([58]); // 125
store_temp<felt252>([58]) -> ([58]); // 126
felt252_is_zero([58]) { fallthrough() 140([59]) }; // 127
branch_align() -> (); // 128
drop<felt252>([43]) -> (); // 129
drop<EcState>([47]) -> (); // 130
drop<NonZero<EcPoint>>([50]) -> (); // 131
struct_construct<Unit>() -> ([60]); // 132
enum_init<core::bool, 1>([60]) -> ([61]); // 133
struct_construct<Tuple<core::bool>>([61]) -> ([62]); // 134
enum_init<core::panics::PanicResult::<(core::bool,)>, 0>([62]) -> ([63]); // 135
store_temp<RangeCheck>([32]) -> ([32]); // 136
store_temp<EcOp>([48]) -> ([48]); // 137
store_temp<core::panics::PanicResult::<(core::bool,)>>([63]) -> ([63]); // 138
return([32], [48], [63]); // 139
branch_align() -> (); // 140
drop<NonZero<felt252>>([59]) -> (); // 141
jump() { 144() }; // 142
branch_align() -> (); // 143
unwrap_non_zero<EcPoint>([50]) -> ([64]); // 144
ec_neg([64]) -> ([65]); // 145
store_temp<EcPoint>([65]) -> ([65]); // 146
ec_point_is_zero([65]) { fallthrough() 162([66]) }; // 147
branch_align() -> (); // 148
drop<felt252>([43]) -> (); // 149
drop<EcState>([47]) -> (); // 150
array_new<felt252>() -> ([67]); // 151
felt252_const<29721761890975875353235833581453094220424382983267374>() -> ([68]); // 152
store_temp<felt252>([68]) -> ([68]); // 153
array_append<felt252>([67], [68]) -> ([69]); // 154
struct_construct<core::panics::Panic>() -> ([70]); // 155
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([70], [69]) -> ([71]); // 156
enum_init<core::panics::PanicResult::<(core::bool,)>, 1>([71]) -> ([72]); // 157
store_temp<RangeCheck>([32]) -> ([32]); // 158
store_temp<EcOp>([48]) -> ([48]); // 159
store_temp<core::panics::PanicResult::<(core::bool,)>>([72]) -> ([72]); // 160
return([32], [48], [72]); // 161
branch_align() -> (); // 162
ec_state_add([47], [66]) -> ([73]); // 163
store_temp<EcState>([73]) -> ([73]); // 164
ec_state_try_finalize_nz([73]) { fallthrough([74]) 184() }; // 165
branch_align() -> (); // 166
ec_point_unwrap([74]) -> ([75], [76]); // 167
drop<felt252>([76]) -> (); // 168
felt252_sub([75], [43]) -> ([77]); // 169
store_temp<felt252>([77]) -> ([77]); // 170
felt252_is_zero([77]) { fallthrough() 181([78]) }; // 171
branch_align() -> (); // 172
struct_construct<Unit>() -> ([79]); // 173
enum_init<core::bool, 1>([79]) -> ([80]); // 174
struct_construct<Tuple<core::bool>>([80]) -> ([81]); // 175
enum_init<core::panics::PanicResult::<(core::bool,)>, 0>([81]) -> ([82]); // 176
store_temp<RangeCheck>([32]) -> ([32]); // 177
store_temp<EcOp>([48]) -> ([48]); // 178
store_temp<core::panics::PanicResult::<(core::bool,)>>([82]) -> ([82]); // 179
return([32], [48], [82]); // 180
branch_align() -> (); // 181
drop<NonZero<felt252>>([78]) -> (); // 182
jump() { 186() }; // 183
branch_align() -> (); // 184
drop<felt252>([43]) -> (); // 185
struct_construct<Unit>() -> ([83]); // 186
enum_init<core::bool, 0>([83]) -> ([84]); // 187
struct_construct<Tuple<core::bool>>([84]) -> ([85]); // 188
enum_init<core::panics::PanicResult::<(core::bool,)>, 0>([85]) -> ([86]); // 189
store_temp<RangeCheck>([32]) -> ([32]); // 190
store_temp<EcOp>([48]) -> ([48]); // 191
store_temp<core::panics::PanicResult::<(core::bool,)>>([86]) -> ([86]); // 192
return([32], [48], [86]); // 193
branch_align() -> (); // 194
drop<felt252>([43]) -> (); // 195
drop<EcState>([47]) -> (); // 196
struct_construct<Unit>() -> ([87]); // 197
enum_init<core::bool, 0>([87]) -> ([88]); // 198
struct_construct<Tuple<core::bool>>([88]) -> ([89]); // 199
enum_init<core::panics::PanicResult::<(core::bool,)>, 0>([89]) -> ([90]); // 200
store_temp<RangeCheck>([32]) -> ([32]); // 201
store_temp<EcOp>([48]) -> ([48]); // 202
store_temp<core::panics::PanicResult::<(core::bool,)>>([90]) -> ([90]); // 203
return([32], [48], [90]); // 204
branch_align() -> (); // 205
drop<EcState>([38]) -> (); // 206
drop<NonZero<EcPoint>>([29]) -> (); // 207
drop<felt252>([4]) -> (); // 208
drop<NonZero<EcPoint>>([37]) -> (); // 209
drop<felt252>([2]) -> (); // 210
struct_construct<Unit>() -> ([91]); // 211
enum_init<core::bool, 0>([91]) -> ([92]); // 212
struct_construct<Tuple<core::bool>>([92]) -> ([93]); // 213
enum_init<core::panics::PanicResult::<(core::bool,)>, 0>([93]) -> ([94]); // 214
store_temp<RangeCheck>([32]) -> ([32]); // 215
store_temp<EcOp>([40]) -> ([40]); // 216
store_temp<core::panics::PanicResult::<(core::bool,)>>([94]) -> ([94]); // 217
return([32], [40], [94]); // 218
branch_align() -> (); // 219
drop<felt252>([2]) -> (); // 220
drop<NonZero<EcPoint>>([29]) -> (); // 221
drop<felt252>([4]) -> (); // 222
drop<felt252>([5]) -> (); // 223
drop<NonZero<EcPoint>>([33]) -> (); // 224
struct_construct<Unit>() -> ([95]); // 225
enum_init<core::bool, 0>([95]) -> ([96]); // 226
struct_construct<Tuple<core::bool>>([96]) -> ([97]); // 227
enum_init<core::panics::PanicResult::<(core::bool,)>, 0>([97]) -> ([98]); // 228
store_temp<RangeCheck>([32]) -> ([32]); // 229
store_temp<EcOp>([1]) -> ([1]); // 230
store_temp<core::panics::PanicResult::<(core::bool,)>>([98]) -> ([98]); // 231
return([32], [1], [98]); // 232
branch_align() -> (); // 233
drop<felt252>([5]) -> (); // 234
drop<felt252>([2]) -> (); // 235
drop<NonZero<EcPoint>>([29]) -> (); // 236
drop<felt252>([4]) -> (); // 237
struct_construct<Unit>() -> ([99]); // 238
enum_init<core::bool, 0>([99]) -> ([100]); // 239
struct_construct<Tuple<core::bool>>([100]) -> ([101]); // 240
enum_init<core::panics::PanicResult::<(core::bool,)>, 0>([101]) -> ([102]); // 241
store_temp<RangeCheck>([34]) -> ([34]); // 242
store_temp<EcOp>([1]) -> ([1]); // 243
store_temp<core::panics::PanicResult::<(core::bool,)>>([102]) -> ([102]); // 244
return([34], [1], [102]); // 245
branch_align() -> (); // 246
drop<felt252>([5]) -> (); // 247
drop<felt252>([2]) -> (); // 248
drop<felt252>([4]) -> (); // 249
struct_construct<Unit>() -> ([103]); // 250
enum_init<core::bool, 0>([103]) -> ([104]); // 251
struct_construct<Tuple<core::bool>>([104]) -> ([105]); // 252
enum_init<core::panics::PanicResult::<(core::bool,)>, 0>([105]) -> ([106]); // 253
store_temp<RangeCheck>([30]) -> ([30]); // 254
store_temp<EcOp>([1]) -> ([1]); // 255
store_temp<core::panics::PanicResult::<(core::bool,)>>([106]) -> ([106]); // 256
return([30], [1], [106]); // 257

test::ecdsa_call@0([0]: RangeCheck, [1]: EcOp) -> (RangeCheck, EcOp, core::panics::PanicResult::<((),)>);
core::ecdsa::check_ecdsa_signature@27([0]: RangeCheck, [1]: EcOp, [2]: felt252, [3]: felt252, [4]: felt252, [5]: felt252) -> (RangeCheck, EcOp, core::panics::PanicResult::<(core::bool,)>);

//! > Casms Program
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 141784621858361645174009804296757185726381639603648306606182704733930666796, ap++;
[ap + 0] = 3490001189944926769628658346285649224182856084131963744896357527096042836716, ap++;
[ap + 0] = 336742005567258698661916498343089167447076063081786685068305785816009957563, ap++;
[ap + 0] = 2925335700420068477532893136360799683220922576143466479208174349948949078517, ap++;
call rel 20;
jmp rel 11 if [ap + -3] != 0;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
ret;
jmp rel 13 if [fp + -3] != 0;
ap += 129;
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[fp + -3] = [ap + 0] + 3618502788666131213697322783095070105526743751716087489154079457884512865583, ap++;
jmp rel 13 if [ap + -1] != 0;
ap += 128;
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[fp + -4] = [ap + 0] + 3618502788666131213697322783095070105526743751716087489154079457884512865583, ap++;
jmp rel 13 if [ap + -1] != 0;
ap += 127;
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 1] = [fp + -5] * [fp + -5], ap++;
[ap + 1] = [ap + 0] * [fp + -5], ap++;
[ap + 1] = [fp + -5] + 3141592653589793238462643383279502884197169399375105820974944592307816406665, ap++;
[ap + -3] = [ap + -1] + [ap + 0], ap++;
%{
from starkware.crypto.signature.signature import FIELD_PRIME
from starkware.python.math_utils import is_quad_residue, sqrt

val = memory[ap + -4]
if is_quad_residue(val, FIELD_PRIME):
    memory[ap + 0] = sqrt(val, FIELD_PRIME)
else:
    memory[ap + 0] = sqrt(val * 3, FIELD_PRIME)
%}
[ap + 1] = [ap + 0] * [ap + 0], ap++;
[ap + 0] = [ap + 1] + [ap + -5], ap++;
jmp rel 4 if [ap + 0] != 0, ap++;
jmp rel 6;
[ap + -2] = [ap + -7] * 3;
jmp rel 294;
%{
(value, scalar) = (memory[ap + -3], 5316911983139663648412552867652567040)
x = min(value // scalar, 340282366920938463463374607431768211455)
y = value - x * scalar
memory[ap + 0] = x
memory[ap + 1] = y
%}
[ap + 2] = [ap + 0] * 5316911983139663648412552867652567040, ap++;
[ap + -4] = [ap + 1] + [ap + 0], ap++;
[ap + -2] = [[fp + -8] + 0], ap++;
[ap + -2] = [[fp + -8] + 1], ap++;
[ap + -1] = [ap + -3] + 334965454937798799814962054564115644415;
[ap + -1] = [[fp + -8] + 2];
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 1] = [fp + -4] * [fp + -4], ap++;
[ap + 1] = [ap + 0] * [fp + -4], ap++;
[ap + 1] = [fp + -4] + 3141592653589793238462643383279502884197169399375105820974944592307816406665, ap++;
[ap + -3] = [ap + -1] + [ap + 0], ap++;
%{
from starkware.crypto.signature.signature import FIELD_PRIME
from starkware.python.math_utils import is_quad_residue, sqrt

val = memory[ap + -4]
if is_quad_residue(val, FIELD_PRIME):
    memory[ap + 0] = sqrt(val, FIELD_PRIME)
else:
    memory[ap + 0] = sqrt(val * 3, FIELD_PRIME)
%}
[ap + 1] = [ap + 0] * [ap + 0], ap++;
[ap + 0] = [ap + 1] + [ap + -5], ap++;
jmp rel 4 if [ap + 0] != 0, ap++;
jmp rel 6;
[ap + -2] = [ap + -7] * 3;
jmp rel 257;
%{
(value, scalar) = (memory[ap + -3], 5316911983139663648412552867652567040)
x = min(value // scalar, 340282366920938463463374607431768211455)
y = value - x * scalar
memory[ap + 0] = x
memory[ap + 1] = y
%}
[ap + 2] = [ap + 0] * 5316911983139663648412552867652567040, ap++;
[ap + -4] = [ap + 1] + [ap + 0], ap++;
[ap + -2] = [[fp + -8] + 3], ap++;
[ap + -2] = [[fp + -8] + 4], ap++;
[ap + -1] = [ap + -3] + 334965454937798799814962054564115644415;
[ap + -1] = [[fp + -8] + 5];
[ap + 0] = 874739451078007766457464989774322083649278607533249481151382481072868806602, ap++;
[ap + 0] = 152666792071518830868575557812948353041420400780739481342941381225525861407, ap++;
[ap + 0] = [fp + -8] + 6, ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [ap + -4] * [ap + -4], ap++;
[ap + 1] = [ap + -6] * [ap + -6], ap++;
[ap + 1] = [ap + 0] * [ap + -7], ap++;
[ap + 1] = [ap + -8] + 3141592653589793238462643383279502884197169399375105820974944592307816406665, ap++;
[ap + -3] = [ap + -1] + [ap + 0], ap++;
[ap + -5] = [ap + 0] + [ap + -4], ap++;
jmp rel 221 if [ap + -1] != 0;
%{
from starkware.crypto.signature.signature import ALPHA, BETA, FIELD_PRIME
from starkware.python.math_utils import random_ec_point
(memory[ap + 4], memory[ap + 5]) = random_ec_point(FIELD_PRIME, ALPHA, BETA)
%}
%{
if '__boxed_segment' not in globals():
    __boxed_segment = segments.add()
memory[ap + 6] = __boxed_segment
__boxed_segment += 2
%}
[ap + 4] = [[ap + 6] + 0], ap++;
[ap + 4] = [[ap + 5] + 1], ap++;
[ap + -2] = [ap + 3] * [ap + 3], ap++;
[ap + -2] = [ap + 1] * [ap + 1], ap++;
[ap + -2] = [ap + -3] * [ap + 0], ap++;
[ap + -2] = [ap + -1] + 3141592653589793238462643383279502884197169399375105820974944592307816406665, ap++;
[ap + -6] = [ap + -4] + [ap + -3], ap++;
[ap + -3] = [[fp + -7] + 0];
[ap + -2] = [[fp + -7] + 1];
[ap + -15] = [[fp + -7] + 2];
[ap + -14] = [[fp + -7] + 3];
[fp + -3] = [[fp + -7] + 4];
[ap + 0] = [[fp + -7] + 5], ap++;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -21], ap++;
[ap + 0] = [ap + -21], ap++;
[ap + 0] = [fp + -7] + 7, ap++;
[ap + 0] = [[ap + -4] + 0], ap++;
[ap + 0] = [[ap + -5] + 1], ap++;
[ap + -8] = [ap + 0] + [ap + -2], ap++;
jmp rel 5 if [ap + -1] != 0;
[ap + -8] = [ap + -2];
jmp rel 182;
[ap + 0] = [ap + -8] + [ap + -2], ap++;
[ap + -1] = [ap + 0] * [ap + -2], ap++;
[ap + 0] = [ap + -1] * [ap + -1], ap++;
[ap + 0] = [ap + -12] + [ap + -6], ap++;
[ap + -2] = [ap + 2] + [ap + -1], ap++;
[ap + -14] = [ap + -1] + [ap + 1], ap++;
[ap + -1] = [ap + -5] * [ap + -2], ap++;
[ap + -2] = [ap + 0] + [ap + -15], ap++;
[ap + -20] = [[ap + -12] + 0];
[ap + -19] = [[ap + -12] + 1];
[ap + -14] = [[ap + -12] + 2];
[ap + -13] = [[ap + -12] + 3];
[fp + -6] = [[ap + -12] + 4];
[ap + -20] = [[ap + -12] + 7];
[ap + -19] = [[ap + -12] + 8];
[ap + -48] = [[ap + -12] + 9];
[ap + -47] = [[ap + -12] + 10];
[fp + -4] = [[ap + -12] + 11];
[ap + 0] = [[ap + -12] + 12], ap++;
[ap + 0] = [[ap + -13] + 13], ap++;
[ap + 0] = [ap + -20], ap++;
[ap + 0] = [[ap + -15] + 5], ap++;
[ap + 0] = [[ap + -16] + 6], ap++;
[ap + 0] = [ap + -23], ap++;
[ap + 0] = [ap + -18] + 14, ap++;
[ap + 0] = [[ap + -5] + 0], ap++;
[ap + 0] = [[ap + -6] + 1], ap++;
[ap + -9] = [ap + 0] + [ap + -2], ap++;
jmp rel 5 if [ap + -1] != 0;
[ap + -9] = [ap + -2];
jmp rel 137;
[ap + 0] = [ap + -9] + [ap + -2], ap++;
[ap + -1] = [ap + 0] * [ap + -2], ap++;
[ap + 0] = [ap + -1] * [ap + -1], ap++;
[ap + 0] = [ap + -13] + [ap + -6], ap++;
[ap + -2] = [ap + 2] + [ap + -1], ap++;
[ap + -15] = [ap + -1] + [ap + 1], ap++;
[ap + -1] = [ap + -5] * [ap + -2], ap++;
[ap + -2] = [ap + 0] + [ap + -16], ap++;
[ap + -2] = [ap + 0] + [ap + -15], ap++;
jmp rel 4 if [ap + -1] != 0;
[fp + -1] = [fp + -1] + 1;
[ap + -2] = [ap + 0] + [ap + -15], ap++;
[ap + -1] = [ap + 0] * [ap + -2], ap++;
[ap + 0] = [ap + -1] * [ap + -1], ap++;
[ap + 0] = [ap + -6] + [ap + -19], ap++;
[ap + -2] = [ap + 2] + [ap + -1], ap++;
[ap + -8] = [ap + -1] + [ap + 1], ap++;
[ap + -1] = [ap + -5] * [ap + -2], ap++;
[ap + -2] = [ap + 0] + [ap + -9], ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [ap + -24], ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
[ap + 0] = [[ap + -2] + 1], ap++;
[ap + -5] = [ap + 0] + [ap + -2], ap++;
jmp rel 5 if [ap + -1] != 0;
[ap + -5] = [ap + -2];
jmp rel 26;
[ap + 0] = [ap + -5] + [ap + -2], ap++;
[ap + -1] = [ap + 0] * [ap + -2], ap++;
[ap + 0] = [ap + -1] * [ap + -1], ap++;
[ap + 0] = [ap + -9] + [ap + -6], ap++;
[ap + -2] = [ap + 2] + [ap + -1], ap++;
[ap + -11] = [ap + -1] + [ap + 1], ap++;
[ap + -1] = [ap + -5] * [ap + -2], ap++;
[ap + -2] = [ap + 0] + [ap + -12], ap++;
[ap + -2] = [ap + 0] + [ap + -43], ap++;
jmp rel 13 if [ap + -1] != 0;
ap += 26;
[ap + 0] = [ap + -101], ap++;
[ap + 0] = [ap + -63], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 1, ap++;
ret;
jmp rel 4;
ap += 9;
[ap + 0] = [ap + -26], ap++;
[ap + 0] = [ap + -26] * -1, ap++;
jmp rel 17 if [ap + -1] != 0;
ap += 22;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 29721761890975875353235833581453094220424382983267374, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -101], ap++;
[ap + 0] = [ap + -63], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -6] + 1, ap++;
ret;
[ap + -2] = [ap + 0] + [ap + -41], ap++;
jmp rel 4 if [ap + -1] != 0;
[fp + -1] = [fp + -1] + 1;
[ap + -2] = [ap + 0] + [ap + -41], ap++;
[ap + -1] = [ap + 0] * [ap + -2], ap++;
[ap + 0] = [ap + -1] * [ap + -1], ap++;
[ap + 0] = [ap + -6] + [ap + -45], ap++;
[ap + -2] = [ap + 2] + [ap + -1], ap++;
[ap + -8] = [ap + -1] + [ap + 1], ap++;
[ap + -1] = [ap + -5] * [ap + -2], ap++;
[ap + -2] = [ap + 0] + [ap + -9], ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [ap + -50], ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
[ap + 0] = [[ap + -2] + 1], ap++;
[ap + -5] = [ap + 0] + [ap + -2], ap++;
jmp rel 5 if [ap + -1] != 0;
[ap + -5] = [ap + -2];
jmp rel 24;
[ap + 0] = [ap + -5] + [ap + -2], ap++;
[ap + -1] = [ap + 0] * [ap + -2], ap++;
[ap + 0] = [ap + -1] * [ap + -1], ap++;
[ap + 0] = [ap + -9] + [ap + -6], ap++;
[ap + -2] = [ap + 2] + [ap + -1], ap++;
[ap + -11] = [ap + -1] + [ap + 1], ap++;
[ap + -1] = [ap + -5] * [ap + -2], ap++;
[ap + -2] = [ap + 0] + [ap + -12], ap++;
[ap + -2] = [ap + 0] + [ap + -69], ap++;
jmp rel 11 if [ap + -1] != 0;
[ap + 0] = [ap + -101], ap++;
[ap + 0] = [ap + -63], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 1, ap++;
ret;
jmp rel 4;
ap += 9;
[ap + 0] = [ap + -101], ap++;
[ap + 0] = [ap + -63], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 58;
[ap + 0] = [ap + -101], ap++;
[ap + 0] = [ap + -63], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 76;
[ap + 0] = [ap + -101], ap++;
[ap + 0] = [ap + -81], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 92;
[ap + 0] = [ap + -101], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 107;
[ap + 0] = [fp + -8] + 3, ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 120;
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;

//! > ==========================================================================

//! > Test erc20_transfer

//! > test_runner_name
test_profiling

//! > cairo_code
use starknet::ContractAddress;

#[starknet::interface]
trait IERC20<TContractState> {
  fn transfer(ref self: TContractState, recipient: ContractAddress, amount: u256);
}

#[starknet::contract]
mod erc_20 {
  use core::num::traits::Zero;
  use starknet::get_caller_address;
  use starknet::contract_address_const;
  use starknet::ContractAddress;

  #[storage]
  struct Storage {
    name: felt252,
    symbol: felt252,
    decimals: u8,
    total_supply: u256,
    balances: LegacyMap::<ContractAddress, u256>,
    allowances: LegacyMap::<(ContractAddress, ContractAddress), u256>,
  }

  #[event]
  #[derive(Drop, starknet::Event)]
  enum Event {
    Transfer: Transfer,
    Approval: Approval,
  }
  #[derive(Drop, starknet::Event)]
  struct Transfer {
    from: ContractAddress,
    to: ContractAddress,
    value: u256,
  }
  #[derive(Drop, starknet::Event)]
  struct Approval {
    owner: ContractAddress,
    spender: ContractAddress,
    value: u256,
  }

  #[abi(embed_v0)]
  impl IERC20Impl of super::IERC20<ContractState> {
    fn transfer(ref self: ContractState, recipient: ContractAddress, amount: u256) {
      let sender = get_caller_address();
      self.transfer_helper(sender, recipient, amount);
    }
  }

  #[generate_trait]
  impl StorageImpl of StorageTrait {
    fn transfer_helper(
        ref self: ContractState,
        sender: ContractAddress,
        recipient: ContractAddress,
        amount: u256
    ) {
        assert(!Zero::is_zero(@sender), 'ERC20: transfer from 0');
        assert(!Zero::is_zero(@recipient), 'ERC20: transfer to 0');
        self.balances.write(sender, self.balances.read(sender) - amount);
        self.balances.write(recipient, self.balances.read(recipient) + amount);
        self.emit(Transfer { from: sender, to: recipient, value: amount });
    }
  }
}

fn erc20_transfer() {
  starknet::testing::set_caller_address(starknet::contract_address::contract_address_const::<2>());
  erc_20::__external::transfer(array![1, 0, 0].span());
}

//! > function_name
erc20_transfer

//! > expected_profiling_info
Weight by sierra statement:
  statement 641: 20 (storage_base_address_from_felt252([0], [9]) -> ([10], [11]))
  statement 712: 20 (storage_base_address_from_felt252([0], [10]) -> ([11], [12]))
  statement 936: 16 (storage_write_syscall([0], [1], [10], [9], [7]) { fallthrough([11], [12]) 957([13], [14], [15]) })
  statement 943: 16 (storage_write_syscall([11], [12], [2], [18], [16]) { fallthrough([19], [20]) 951([21], [22], [23]) })
  statement 808: 14 (storage_read_syscall([1], [2], [7], [6]) { fallthrough([8], [9], [10]) 878([11], [12], [13]) })
  statement 819: 14 (storage_read_syscall([8], [9], [3], [20]) { fallthrough([21], [22], [23]) 851([24], [25], [26]) })
  statement 787: 9 (emit_event_syscall([0], [1], [16], [17]) { fallthrough([18], [19]) 796([20], [21], [22]) })
  statement 833: 8 (store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([35]) -> ([35]))
  statement 218: 7 (contract_address_try_from_felt252([0], [15]) { fallthrough([16], [17]) 225([18]) })
  statement 96: 6 (withdraw_gas_all([14], [6], [29]) { fallthrough([30], [31]) 135([32], [33]) })
  statement 661: 6 (store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([23]) -> ([23]))
  statement 730: 6 (store_temp<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>>([20]) -> ([20]))
  statement 949: 6 (store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([25]) -> ([25]))
  statement 619: 5 (get_execution_info_v2_syscall([0], [1]) { fallthrough([2], [3], [4]) 627([5], [6], [7]) })
  statement 774: 5 (store_temp<test::erc_20::Event>([8]) -> ([8]))
  statement 511: 4 (store_temp<test::erc_20::Transfer>([103]) -> ([103]))
  statement 639: 4 (pedersen([2], [7], [6]) -> ([8], [9]))
  statement 710: 4 (pedersen([2], [8], [7]) -> ([9], [10]))
  statement 718: 4 (store_temp<core::integer::u256>([6]) -> ([6]))
  statement 813: 4 (u128s_from_felt252([0], [10]) { fallthrough([14], [15]) 861([16], [17], [18]) })
  statement 824: 4 (u128s_from_felt252([14], [23]) { fallthrough([27], [28]) 835([29], [30], [31]) })
  statement 41: 3 (store_temp<core::panics::PanicResult::<((),)>>([31]) -> ([31]))
  statement 60: 3 (withdraw_gas([1], [2]) { fallthrough([5], [6]) 184([7], [8]) })
  statement 73: 3 (array_snapshot_pop_front<felt252>([19]) { fallthrough([20], [21]) 92([22]) })
  statement 125: 3 (store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([53]) -> ([53]))
  statement 288: 3 (store_temp<core::option::Option::<core::integer::u256>>([41]) -> ([41]))
  statement 362: 3 (store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([15]) -> ([15]))
  statement 517: 3 (store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([106]) -> ([106]))
  statement 625: 3 (store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>>([9]) -> ([9]))
  statement 692: 3 (store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([10]) -> ([10]))
  statement 754: 3 (store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([10]) -> ([10]))
  statement 794: 3 (store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([25]) -> ([25]))
  statement 891: 3 (u128_overflowing_sub([0], [4], [6]) { fallthrough([7], [8]) 899([9], [10]) })
  statement 905: 3 (u128_overflowing_sub([13], [3], [5]) { fallthrough([18], [19]) 912([20], [21]) })
  statement 910: 3 (store_temp<Tuple<core::integer::u256, core::bool>>([23]) -> ([23]))
  statement 968: 3 (u128_overflowing_add([0], [4], [6]) { fallthrough([7], [8]) 976([9], [10]) })
  statement 982: 3 (u128_overflowing_add([13], [3], [5]) { fallthrough([18], [19]) 989([20], [21]) })
  statement 987: 3 (store_temp<Tuple<core::integer::u256, core::bool>>([23]) -> ([23]))
  statement 9: 2 (store_temp<core::array::Span::<core::felt252>>([10]) -> ([10]))
  statement 29: 2 (store_temp<core::array::Span::<core::felt252>>([21]) -> ([21]))
  statement 63: 2 (store_temp<core::array::Span::<core::felt252>>([4]) -> ([4]))
  statement 68: 2 (store_temp<core::array::Span::<core::felt252>>([10]) -> ([10]))
  statement 94: 2 (get_builtin_costs() -> ([29]))
  statement 110: 2 (store_temp<core::integer::u256>([17]) -> ([17]))
  statement 200: 2 (array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 206([5]) })
  statement 203: 2 (store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]))
  statement 204: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]))
  statement 212: 2 (store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]))
  statement 222: 2 (store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]))
  statement 223: 2 (store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([19]) -> ([19]))
  statement 241: 2 (array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 247([5]) })
  statement 244: 2 (store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]))
  statement 245: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]))
  statement 254: 2 (store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]))
  statement 260: 2 (u128s_from_felt252([0], [16]) { fallthrough([17], [18]) 305([19], [20], [21]) })
  statement 264: 2 (array_snapshot_pop_front<felt252>([7]) { fallthrough([22], [23]) 270([24]) })
  statement 267: 2 (store_temp<Snapshot<Array<felt252>>>([22]) -> ([26]))
  statement 268: 2 (store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([25]) -> ([27]))
  statement 276: 2 (store_temp<core::array::Span::<core::felt252>>([30]) -> ([30]))
  statement 282: 2 (u128s_from_felt252([17], [34]) { fallthrough([35], [36]) 290([37], [38], [39]) })
  statement 287: 2 (store_temp<core::array::Span::<core::felt252>>([30]) -> ([30]))
  statement 332: 2 (store_temp<core::integer::u256>([6]) -> ([6]))
  statement 457: 2 (store_temp<core::integer::u256>([58]) -> ([58]))
  statement 459: 2 (store_temp<core::integer::u256>([59]) -> ([59]))
  statement 470: 2 (store_temp<core::integer::u256>([64]) -> ([64]))
  statement 488: 2 (store_temp<core::integer::u256>([85]) -> ([85]))
  statement 490: 2 (store_temp<core::integer::u256>([86]) -> ([86]))
  statement 501: 2 (store_temp<core::integer::u256>([91]) -> ([91]))
  statement 638: 2 (store_temp<felt252>([7]) -> ([7]))
  statement 640: 2 (store_temp<felt252>([9]) -> ([9]))
  statement 643: 2 (store_temp<RangeCheck>([10]) -> ([10]))
  statement 644: 2 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 645: 2 (store_temp<System>([3]) -> ([3]))
  statement 646: 2 (store_temp<u32>([12]) -> ([12]))
  statement 647: 2 (store_temp<StorageBaseAddress>([11]) -> ([11]))
  statement 648: 2 (function_call<user@core::integer::Storeu256::read>([10], [1], [3], [12], [11]) -> ([13], [14], [15], [16]))
  statement 649: 2 (store_temp<Pedersen>([8]) -> ([8]))
  statement 650: 2 (enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([16]) { fallthrough([17]) 673([18]) })
  statement 653: 2 (enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([19]) { fallthrough([20]) 663([21]) })
  statement 657: 2 (store_temp<RangeCheck>([13]) -> ([13]))
  statement 658: 2 (store_temp<GasBuiltin>([14]) -> ([14]))
  statement 659: 2 (store_temp<Pedersen>([8]) -> ([8]))
  statement 660: 2 (store_temp<System>([15]) -> ([15]))
  statement 662: 2 (return([13], [14], [8], [15], [23]))
  statement 682: 2 (store_temp<core::integer::u256>([1]) -> ([1]))
  statement 683: 2 (store_temp<core::integer::u256>([2]) -> ([2]))
  statement 709: 2 (store_temp<felt252>([8]) -> ([8]))
  statement 711: 2 (store_temp<felt252>([10]) -> ([10]))
  statement 714: 2 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 715: 2 (store_temp<System>([3]) -> ([3]))
  statement 716: 2 (store_temp<u32>([13]) -> ([13]))
  statement 717: 2 (store_temp<StorageBaseAddress>([12]) -> ([12]))
  statement 719: 2 (function_call<user@core::integer::Storeu256::write>([1], [3], [13], [12], [6]) -> ([14], [15], [16]))
  statement 720: 2 (store_temp<Pedersen>([9]) -> ([9]))
  statement 721: 2 (store_temp<RangeCheck>([11]) -> ([11]))
  statement 722: 2 (enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>>([16]) { fallthrough([17]) 732([18]) })
  statement 726: 2 (store_temp<RangeCheck>([11]) -> ([11]))
  statement 727: 2 (store_temp<GasBuiltin>([14]) -> ([14]))
  statement 728: 2 (store_temp<Pedersen>([9]) -> ([9]))
  statement 729: 2 (store_temp<System>([15]) -> ([15]))
  statement 731: 2 (return([11], [14], [9], [15], [20]))
  statement 744: 2 (store_temp<core::integer::u256>([1]) -> ([1]))
  statement 745: 2 (store_temp<core::integer::u256>([2]) -> ([2]))
  statement 775: 2 (store_temp<Array<felt252>>([4]) -> ([4]))
  statement 776: 2 (store_temp<Array<felt252>>([5]) -> ([5]))
  statement 785: 2 (store_temp<core::array::Span::<core::felt252>>([16]) -> ([16]))
  statement 786: 2 (store_temp<core::array::Span::<core::felt252>>([17]) -> ([17]))
  statement 810: 2 (store_temp<felt252>([10]) -> ([10]))
  statement 811: 2 (store_temp<GasBuiltin>([8]) -> ([8]))
  statement 812: 2 (store_temp<System>([9]) -> ([9]))
  statement 817: 2 (store_temp<StorageAddress>([20]) -> ([20]))
  statement 818: 2 (store_temp<RangeCheck>([14]) -> ([14]))
  statement 821: 2 (store_temp<felt252>([23]) -> ([23]))
  statement 822: 2 (store_temp<GasBuiltin>([21]) -> ([21]))
  statement 823: 2 (store_temp<System>([22]) -> ([22]))
  statement 825: 2 (branch_align() -> ())
  statement 830: 2 (store_temp<RangeCheck>([27]) -> ([27]))
  statement 831: 2 (store_temp<GasBuiltin>([21]) -> ([21]))
  statement 832: 2 (store_temp<System>([22]) -> ([22]))
  statement 834: 2 (return([27], [21], [22], [35]))
  statement 941: 2 (store_temp<GasBuiltin>([11]) -> ([11]))
  statement 942: 2 (store_temp<StorageAddress>([18]) -> ([18]))
  statement 947: 2 (store_temp<GasBuiltin>([19]) -> ([19]))
  statement 948: 2 (store_temp<System>([20]) -> ([20]))
  statement 950: 2 (return([19], [20], [25]))
  statement 1041: 2 (store_temp<Array<felt252>>([6]) -> ([35]))
  statement 1042: 2 (store_temp<Array<felt252>>([34]) -> ([36]))
  statement 2: 1 (array_new<felt252>() -> ([5]))
  statement 4: 1 (store_temp<felt252>([6]) -> ([6]))
  statement 5: 1 (array_append<felt252>([5], [6]) -> ([7]))
  statement 10: 1 (cheatcode<10052436086942832998170947883001859293934451>([10]) -> ([11]))
  statement 12: 1 (array_new<felt252>() -> ([12]))
  statement 14: 1 (store_temp<felt252>([13]) -> ([13]))
  statement 15: 1 (array_append<felt252>([12], [13]) -> ([14]))
  statement 17: 1 (store_temp<felt252>([15]) -> ([15]))
  statement 18: 1 (array_append<felt252>([14], [15]) -> ([16]))
  statement 20: 1 (store_temp<felt252>([17]) -> ([17]))
  statement 21: 1 (array_append<felt252>([16], [17]) -> ([18]))
  statement 25: 1 (store_temp<Pedersen>([2]) -> ([2]))
  statement 26: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 27: 1 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 28: 1 (store_temp<System>([3]) -> ([3]))
  statement 30: 1 (function_call<user@test::erc_20::__wrapper__IERC20Impl__transfer>([2], [0], [1], [3], [21]) -> ([22], [23], [24], [25], [26]))
  statement 31: 1 (enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([26]) { fallthrough([27]) 43([28]) })
  statement 37: 1 (store_temp<RangeCheck>([23]) -> ([23]))
  statement 38: 1 (store_temp<GasBuiltin>([24]) -> ([24]))
  statement 39: 1 (store_temp<Pedersen>([22]) -> ([22]))
  statement 40: 1 (store_temp<System>([25]) -> ([25]))
  statement 42: 1 (return([23], [24], [22], [25], [31]))
  statement 62: 1 (store_temp<RangeCheck>([5]) -> ([5]))
  statement 64: 1 (function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([5], [4]) -> ([9], [10], [11]))
  statement 65: 1 (enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([12]) 168([13]) })
  statement 67: 1 (store_temp<RangeCheck>([9]) -> ([9]))
  statement 69: 1 (function_call<user@core::integer::u256Serde::deserialize>([9], [10]) -> ([14], [15], [16]))
  statement 70: 1 (enum_match<core::option::Option::<core::integer::u256>>([16]) { fallthrough([17]) 151([18]) })
  statement 95: 1 (store_temp<BuiltinCosts>([29]) -> ([29]))
  statement 105: 1 (store_temp<RangeCheck>([30]) -> ([30]))
  statement 106: 1 (store_temp<GasBuiltin>([31]) -> ([31]))
  statement 107: 1 (store_temp<Pedersen>([0]) -> ([0]))
  statement 108: 1 (store_temp<System>([3]) -> ([3]))
  statement 109: 1 (store_temp<ContractAddress>([12]) -> ([12]))
  statement 111: 1 (function_call<user@test::erc_20::IERC20Impl::transfer>([30], [31], [0], [3], [40], [12], [17]) -> ([41], [42], [43], [44], [45]))
  statement 112: 1 (enum_match<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([45]) { fallthrough([46]) 127([47]) })
  statement 115: 1 (array_new<felt252>() -> ([48]))
  statement 121: 1 (store_temp<Pedersen>([43]) -> ([43]))
  statement 122: 1 (store_temp<RangeCheck>([41]) -> ([41]))
  statement 123: 1 (store_temp<GasBuiltin>([42]) -> ([42]))
  statement 124: 1 (store_temp<System>([44]) -> ([44]))
  statement 126: 1 (return([43], [41], [42], [44], [53]))
  statement 205: 1 (jump() { 211() })
  statement 213: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 232([13]) })
  statement 217: 1 (store_temp<felt252>([15]) -> ([15]))
  statement 219: 1 (branch_align() -> ())
  statement 221: 1 (store_temp<RangeCheck>([16]) -> ([16]))
  statement 224: 1 (return([16], [11], [19]))
  statement 246: 1 (jump() { 252() })
  statement 255: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([13]) 311([14]) })
  statement 259: 1 (store_temp<felt252>([16]) -> ([16]))
  statement 263: 1 (store_temp<RangeCheck>([17]) -> ([17]))
  statement 269: 1 (jump() { 275() })
  statement 277: 1 (enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([27]) { fallthrough([31]) 296([32]) })
  statement 281: 1 (store_temp<felt252>([34]) -> ([34]))
  statement 283: 1 (branch_align() -> ())
  statement 286: 1 (store_temp<RangeCheck>([35]) -> ([35]))
  statement 289: 1 (return([35], [30], [41]))
  statement 320: 1 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 321: 1 (store_temp<System>([3]) -> ([3]))
  statement 322: 1 (function_call<user@core::starknet::info::get_caller_address>([1], [3]) -> ([7], [8], [9]))
  statement 323: 1 (enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([9]) { fallthrough([10]) 335([11]) })
  statement 326: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 327: 1 (store_temp<GasBuiltin>([7]) -> ([7]))
  statement 328: 1 (store_temp<Pedersen>([2]) -> ([2]))
  statement 329: 1 (store_temp<System>([8]) -> ([8]))
  statement 330: 1 (store_temp<ContractAddress>([12]) -> ([12]))
  statement 331: 1 (store_temp<ContractAddress>([5]) -> ([5]))
  statement 333: 1 (function_call<user@test::erc_20::StorageImpl::transfer_helper>([0], [7], [2], [8], [4], [12], [5], [6]) -> ([13], [14], [15], [16], [17]))
  statement 334: 1 (return([13], [14], [15], [16], [17]))
  statement 346: 1 (store_temp<GasBuiltin>([0]) -> ([0]))
  statement 347: 1 (store_temp<System>([1]) -> ([1]))
  statement 348: 1 (function_call<user@core::starknet::info::get_execution_info>([0], [1]) -> ([2], [3], [4]))
  statement 349: 1 (enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>>([4]) { fallthrough([5]) 364([6]) })
  statement 360: 1 (store_temp<GasBuiltin>([2]) -> ([2]))
  statement 361: 1 (store_temp<System>([3]) -> ([3]))
  statement 363: 1 (return([2], [3], [15]))
  statement 372: 1 (felt252_is_zero([9]) { fallthrough() 378([10]) })
  statement 382: 1 (store_temp<core::bool>([15]) -> ([13]))
  statement 383: 1 (bool_not_impl([13]) -> ([16]))
  statement 384: 1 (store_temp<core::bool>([16]) -> ([16]))
  statement 385: 1 (enum_match<core::bool>([16]) { fallthrough([17]) 405([18]) })
  statement 409: 1 (felt252_is_zero([26]) { fallthrough() 415([27]) })
  statement 419: 1 (store_temp<core::bool>([32]) -> ([30]))
  statement 420: 1 (bool_not_impl([30]) -> ([33]))
  statement 421: 1 (store_temp<core::bool>([33]) -> ([33]))
  statement 422: 1 (enum_match<core::bool>([33]) { fallthrough([34]) 442([35]) })
  statement 446: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 447: 1 (store_temp<GasBuiltin>([1]) -> ([1]))
  statement 448: 1 (store_temp<Pedersen>([2]) -> ([2]))
  statement 449: 1 (store_temp<System>([3]) -> ([3]))
  statement 451: 1 (store_temp<ContractAddress>([50]) -> ([50]))
  statement 452: 1 (function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read>([0], [1], [2], [3], [49], [50]) -> ([51], [52], [53], [54], [55]))
  statement 453: 1 (enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([55]) { fallthrough([56]) 602([57]) })
  statement 456: 1 (store_temp<RangeCheck>([51]) -> ([51]))
  statement 460: 1 (function_call<user@core::integer::U256Sub::sub>([51], [58], [59]) -> ([60], [61]))
  statement 461: 1 (enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([61]) { fallthrough([62]) 585([63]) })
  statement 464: 1 (store_temp<RangeCheck>([60]) -> ([60]))
  statement 465: 1 (store_temp<GasBuiltin>([52]) -> ([52]))
  statement 466: 1 (store_temp<Pedersen>([53]) -> ([53]))
  statement 467: 1 (store_temp<System>([54]) -> ([54]))
  statement 469: 1 (store_temp<ContractAddress>([65]) -> ([65]))
  statement 471: 1 (function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write>([60], [52], [53], [54], [48], [65], [64]) -> ([66], [67], [68], [69], [70]))
  statement 472: 1 (enum_match<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>>([70]) { fallthrough([71]) 569([72]) })
  statement 477: 1 (store_temp<RangeCheck>([66]) -> ([66]))
  statement 478: 1 (store_temp<GasBuiltin>([67]) -> ([67]))
  statement 479: 1 (store_temp<Pedersen>([68]) -> ([68]))
  statement 480: 1 (store_temp<System>([69]) -> ([69]))
  statement 482: 1 (store_temp<ContractAddress>([77]) -> ([77]))
  statement 483: 1 (function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read>([66], [67], [68], [69], [76], [77]) -> ([78], [79], [80], [81], [82]))
  statement 484: 1 (enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([82]) { fallthrough([83]) 552([84]) })
  statement 487: 1 (store_temp<RangeCheck>([78]) -> ([78]))
  statement 491: 1 (function_call<user@core::integer::U256Add::add>([78], [85], [86]) -> ([87], [88]))
  statement 492: 1 (enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([88]) { fallthrough([89]) 535([90]) })
  statement 495: 1 (store_temp<RangeCheck>([87]) -> ([87]))
  statement 496: 1 (store_temp<GasBuiltin>([79]) -> ([79]))
  statement 497: 1 (store_temp<Pedersen>([80]) -> ([80]))
  statement 498: 1 (store_temp<System>([81]) -> ([81]))
  statement 500: 1 (store_temp<ContractAddress>([92]) -> ([92]))
  statement 502: 1 (function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write>([87], [79], [80], [81], [75], [92], [91]) -> ([93], [94], [95], [96], [97]))
  statement 503: 1 (enum_match<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>>([97]) { fallthrough([98]) 519([99]) })
  statement 509: 1 (store_temp<GasBuiltin>([94]) -> ([94]))
  statement 510: 1 (store_temp<System>([96]) -> ([96]))
  statement 512: 1 (function_call<user@test::erc_20::ContractStateEventEmitter::emit::<test::erc_20::Transfer, test::erc_20::EventTransferIntoEvent>>([94], [96], [102], [103]) -> ([104], [105], [106]))
  statement 513: 1 (store_temp<RangeCheck>([93]) -> ([93]))
  statement 514: 1 (store_temp<GasBuiltin>([104]) -> ([104]))
  statement 515: 1 (store_temp<Pedersen>([95]) -> ([95]))
  statement 516: 1 (store_temp<System>([105]) -> ([105]))
  statement 518: 1 (return([93], [104], [95], [105], [106]))
  statement 623: 1 (store_temp<GasBuiltin>([2]) -> ([2]))
  statement 624: 1 (store_temp<System>([3]) -> ([3]))
  statement 626: 1 (return([2], [3], [9]))
  statement 681: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 684: 1 (function_call<user@core::integer::u256_overflow_sub>([0], [1], [2]) -> ([3], [4]))
  statement 686: 1 (enum_match<core::bool>([6]) { fallthrough([7]) 694([8]) })
  statement 687: 1 (branch_align() -> ())
  statement 691: 1 (store_temp<RangeCheck>([3]) -> ([3]))
  statement 693: 1 (return([3], [10]))
  statement 743: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 746: 1 (function_call<user@core::integer::u256_overflowing_add>([0], [1], [2]) -> ([3], [4]))
  statement 748: 1 (enum_match<core::bool>([6]) { fallthrough([7]) 756([8]) })
  statement 749: 1 (branch_align() -> ())
  statement 753: 1 (store_temp<RangeCheck>([3]) -> ([3]))
  statement 755: 1 (return([3], [10]))
  statement 769: 1 (array_new<felt252>() -> ([4]))
  statement 770: 1 (array_new<felt252>() -> ([5]))
  statement 777: 1 (function_call<user@test::erc_20::EventIsEvent::append_keys_and_data>([8], [4], [5]) -> ([9], [10], [11]))
  statement 792: 1 (store_temp<GasBuiltin>([18]) -> ([18]))
  statement 793: 1 (store_temp<System>([19]) -> ([19]))
  statement 795: 1 (return([18], [19], [25]))
  statement 892: 1 (branch_align() -> ())
  statement 895: 1 (store_temp<RangeCheck>([7]) -> ([13]))
  statement 896: 1 (store_temp<u128>([8]) -> ([14]))
  statement 897: 1 (store_temp<core::bool>([12]) -> ([15]))
  statement 898: 1 (jump() { 905() })
  statement 906: 1 (branch_align() -> ())
  statement 909: 1 (store_temp<RangeCheck>([18]) -> ([18]))
  statement 911: 1 (return([18], [23]))
  statement 969: 1 (branch_align() -> ())
  statement 972: 1 (store_temp<RangeCheck>([7]) -> ([13]))
  statement 973: 1 (store_temp<u128>([8]) -> ([14]))
  statement 974: 1 (store_temp<core::bool>([12]) -> ([15]))
  statement 975: 1 (jump() { 982() })
  statement 983: 1 (branch_align() -> ())
  statement 986: 1 (store_temp<RangeCheck>([18]) -> ([18]))
  statement 988: 1 (return([18], [23]))
  statement 1008: 1 (enum_match<test::erc_20::Event>([0]) { fallthrough([3]) 1044([4]) })
  statement 1011: 1 (store_temp<felt252>([5]) -> ([5]))
  statement 1012: 1 (array_append<felt252>([1], [5]) -> ([6]))
  statement 1019: 1 (array_append<felt252>([2], [12]) -> ([13]))
  statement 1026: 1 (array_append<felt252>([13], [19]) -> ([20]))
  statement 1035: 1 (array_append<felt252>([20], [28]) -> ([29]))
  statement 1040: 1 (array_append<felt252>([29], [33]) -> ([34]))
  statement 1043: 1 (jump() { 1078() })
  statement 1079: 1 (return([35], [36], [67]))
Weight by concrete libfunc:
  libfunc storage_base_address_from_felt252: 40
  libfunc store_temp<RangeCheck>: 37
  libfunc store_temp<GasBuiltin>: 34
  libfunc storage_write_syscall: 32
  libfunc store_temp<System>: 32
  libfunc storage_read_syscall: 28
  libfunc store_temp<core::integer::u256>: 28
  libfunc store_temp<core::array::Span::<core::felt252>>: 22
  libfunc store_temp<felt252>: 20
  libfunc store_temp<Pedersen>: 18
  libfunc store_temp<core::panics::PanicResult::<(core::integer::u256,)>>: 12
  libfunc u128s_from_felt252: 12
  libfunc branch_align: 10
  libfunc array_append<felt252>: 9
  libfunc array_snapshot_pop_front<felt252>: 9
  libfunc emit_event_syscall: 9
  libfunc pedersen: 8
  libfunc store_temp<Array<felt252>>: 8
  libfunc store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>: 8
  libfunc contract_address_try_from_felt252: 7
  libfunc store_temp<ContractAddress>: 7
  libfunc jump: 6
  libfunc store_temp<Snapshot<Array<felt252>>>: 6
  libfunc store_temp<Tuple<core::integer::u256, core::bool>>: 6
  libfunc store_temp<core::bool>: 6
  libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>: 6
  libfunc store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>: 6
  libfunc store_temp<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>>: 6
  libfunc store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>: 6
  libfunc u128_overflowing_add: 6
  libfunc u128_overflowing_sub: 6
  libfunc withdraw_gas_all: 6
  libfunc array_new<felt252>: 5
  libfunc get_execution_info_v2_syscall: 5
  libfunc store_temp<test::erc_20::Event>: 5
  libfunc enum_match<core::bool>: 4
  libfunc enum_match<core::panics::PanicResult::<(core::integer::u256,)>>: 4
  libfunc store_temp<StorageAddress>: 4
  libfunc store_temp<StorageBaseAddress>: 4
  libfunc store_temp<test::erc_20::Transfer>: 4
  libfunc store_temp<u32>: 4
  libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>: 3
  libfunc store_temp<core::option::Option::<core::integer::u256>>: 3
  libfunc store_temp<core::panics::PanicResult::<((),)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>>: 3
  libfunc store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>: 3
  libfunc withdraw_gas: 3
  libfunc bool_not_impl: 2
  libfunc enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>: 2
  libfunc enum_match<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>>: 2
  libfunc enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>>: 2
  libfunc enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>: 2
  libfunc felt252_is_zero: 2
  libfunc function_call<user@core::integer::Storeu256::read>: 2
  libfunc function_call<user@core::integer::Storeu256::write>: 2
  libfunc function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read>: 2
  libfunc function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write>: 2
  libfunc get_builtin_costs: 2
  libfunc store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>: 2
  libfunc store_temp<u128>: 2
  libfunc cheatcode<10052436086942832998170947883001859293934451>: 1
  libfunc enum_match<core::option::Option::<core::integer::u256>>: 1
  libfunc enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>: 1
  libfunc enum_match<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>: 1
  libfunc enum_match<test::erc_20::Event>: 1
  libfunc function_call<user@core::integer::U256Add::add>: 1
  libfunc function_call<user@core::integer::U256Sub::sub>: 1
  libfunc function_call<user@core::integer::u256Serde::deserialize>: 1
  libfunc function_call<user@core::integer::u256_overflow_sub>: 1
  libfunc function_call<user@core::integer::u256_overflowing_add>: 1
  libfunc function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>: 1
  libfunc function_call<user@core::starknet::info::get_caller_address>: 1
  libfunc function_call<user@core::starknet::info::get_execution_info>: 1
  libfunc function_call<user@test::erc_20::ContractStateEventEmitter::emit::<test::erc_20::Transfer, test::erc_20::EventTransferIntoEvent>>: 1
  libfunc function_call<user@test::erc_20::EventIsEvent::append_keys_and_data>: 1
  libfunc function_call<user@test::erc_20::IERC20Impl::transfer>: 1
  libfunc function_call<user@test::erc_20::StorageImpl::transfer_helper>: 1
  libfunc function_call<user@test::erc_20::__wrapper__IERC20Impl__transfer>: 1
  libfunc store_temp<BuiltinCosts>: 1
  return: 22
Weight by generic libfunc:
  libfunc store_temp: 309
  libfunc storage_base_address_from_felt252: 40
  libfunc storage_write_syscall: 32
  libfunc storage_read_syscall: 28
  libfunc enum_match: 26
  libfunc function_call: 21
  libfunc u128s_from_felt252: 12
  libfunc branch_align: 10
  libfunc array_append: 9
  libfunc array_snapshot_pop_front: 9
  libfunc emit_event_syscall: 9
  libfunc pedersen: 8
  libfunc contract_address_try_from_felt252: 7
  libfunc jump: 6
  libfunc u128_overflowing_add: 6
  libfunc u128_overflowing_sub: 6
  libfunc withdraw_gas_all: 6
  libfunc array_new: 5
  libfunc get_execution_info_v2_syscall: 5
  libfunc withdraw_gas: 3
  libfunc bool_not_impl: 2
  libfunc felt252_is_zero: 2
  libfunc get_builtin_costs: 2
  libfunc cheatcode: 1
  return: 22
Weight by user function (inc. generated):
  function test::erc_20::StorageImpl::transfer_helper: 71
  function core::integer::Storeu256::read: 70
  function test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write: 64
  function test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read: 62
  function core::integer::Storeu256::write: 48
  function test::erc_20::__wrapper__IERC20Impl__transfer: 43
  function core::integer::u256Serde::deserialize: 35
  function test::erc_20::ContractStateEventEmitter::emit::<test::erc_20::Transfer, test::erc_20::EventTransferIntoEvent>: 31
  function test::erc20_transfer: 29
  function core::starknet::contract_address::ContractAddressSerde::deserialize: 25
  function core::integer::u256_overflow_sub: 17
  function core::integer::u256_overflowing_add: 17
  function test::erc_20::IERC20Impl::transfer: 14
  function core::integer::U256Add::add: 13
  function core::integer::U256Sub::sub: 13
  function test::erc_20::EventIsEvent::append_keys_and_data: 13
  function core::starknet::info::get_execution_info: 11
  function core::starknet::info::get_caller_address: 10
Weight by original user function (exc. generated):
  function test::erc_20::StorageImpl::transfer_helper: 71
  function core::integer::Storeu256::read: 70
  function test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write: 64
  function test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read: 62
  function core::integer::Storeu256::write: 48
  function test::erc_20::__wrapper__IERC20Impl__transfer: 43
  function core::integer::u256Serde::deserialize: 35
  function test::erc_20::ContractStateEventEmitter::emit::<test::erc_20::Transfer, test::erc_20::EventTransferIntoEvent>: 31
  function test::erc20_transfer: 29
  function core::starknet::contract_address::ContractAddressSerde::deserialize: 25
  function core::integer::u256_overflow_sub: 17
  function core::integer::u256_overflowing_add: 17
  function test::erc_20::IERC20Impl::transfer: 14
  function core::integer::U256Add::add: 13
  function core::integer::U256Sub::sub: 13
  function test::erc_20::EventIsEvent::append_keys_and_data: 13
  function core::starknet::info::get_execution_info: 11
  function core::starknet::info::get_caller_address: 10
Weight by Cairo function:
  function lib.cairo::erc_20::StorageImpl::transfer_helper: 61
  function contract::__member_module_balances::InternalContractMemberStateImpl::address: 44
  function contract::__wrapper__IERC20Impl__transfer: 37
  function storage_access.cairo::StoreFelt252::write_at_offset: 32
  function array.cairo::SpanImpl::pop_front: 31
  function contract::__member_module_balances::InternalContractMemberStateImpl::write: 30
  function starknet.cairo::SyscallResultTraitImpl::unwrap_syscall: 30
  function contract::ContractStateEventEmitter::emit: 29
  function integer.cairo::u128_try_from_felt252: 29
  function storage_access.cairo::StoreFelt252::read_at_offset: 18
  function integer.cairo::u256_overflow_sub: 17
  function integer.cairo::u256_overflowing_add: 17
  function contract::__member_module_balances::InternalContractMemberStateImpl::read: 16
  function lib.cairo::erc20_transfer: 16
  function starknet_derive::Storeu256::read: 16
  function storage_access.cairo::StoreFelt252::write: 16
  function contract_address.cairo::ContractAddressSerde::deserialize: 15
  function array.cairo::ArrayImpl::append: 14
  function lib.cairo::erc_20::IERC20Impl::transfer: 14
  function storage_access.cairo::StoreFelt252::read: 14
  function option.cairo::OptionTraitImpl::expect: 12
  function pedersen.cairo::HashStateImpl::update: 12
  function info.cairo::get_caller_address: 10
  function integer.cairo::u256_checked_add: 8
  function integer.cairo::u256_checked_sub: 8
  function impls::u256Serde::deserialize: 7
  function starknet_derive::EventIsEvent::append_keys_and_data: 7
  function array.cairo::ArrayImpl::new: 5
  function info.cairo::get_execution_info: 5
  function lib.cairo::Felt252PartialEq::eq: 4
  function lib.cairo::assert: 4
  function array.cairo::SpanImpl::is_empty: 3
  function testing.cairo::set_caller_address: 3
  function lib.cairo::BoolNot::not: 2
Weight by Sierra stack trace:
  test::erc20_transfer: 586
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer: 557
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer: 454
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper: 419
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read: 132
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write: 112
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read -> core::integer::Storeu256::read: 70
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write -> core::integer::Storeu256::write: 48
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::ContractStateEventEmitter::emit::<test::erc_20::Transfer, test::erc_20::EventTransferIntoEvent>: 44
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> core::integer::u256Serde::deserialize: 35
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> core::integer::U256Sub::sub: 30
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> core::integer::U256Add::add: 30
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> core::starknet::contract_address::ContractAddressSerde::deserialize: 25
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> core::starknet::info::get_caller_address: 21
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> core::integer::U256Sub::sub -> core::integer::u256_overflow_sub: 17
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> core::integer::U256Add::add -> core::integer::u256_overflowing_add: 17
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::ContractStateEventEmitter::emit::<test::erc_20::Transfer, test::erc_20::EventTransferIntoEvent> -> test::erc_20::EventIsEvent::append_keys_and_data: 13
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> core::starknet::info::get_caller_address -> core::starknet::info::get_execution_info: 11
Weight by Cairo stack trace:
  test::erc20_transfer: 586
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer: 557
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer: 454
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper: 419
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read: 132
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write: 112
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read -> core::integer::Storeu256::read: 70
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write -> core::integer::Storeu256::write: 48
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::ContractStateEventEmitter::emit::<test::erc_20::Transfer, test::erc_20::EventTransferIntoEvent>: 44
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> core::integer::u256Serde::deserialize: 35
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> core::integer::U256Sub::sub: 30
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> core::integer::U256Add::add: 30
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> core::starknet::contract_address::ContractAddressSerde::deserialize: 25
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> core::starknet::info::get_caller_address: 21
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> core::integer::U256Sub::sub -> core::integer::u256_overflow_sub: 17
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> core::integer::U256Add::add -> core::integer::u256_overflowing_add: 17
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> test::erc_20::StorageImpl::transfer_helper -> test::erc_20::ContractStateEventEmitter::emit::<test::erc_20::Transfer, test::erc_20::EventTransferIntoEvent> -> test::erc_20::EventIsEvent::append_keys_and_data: 13
  test::erc20_transfer -> test::erc_20::__wrapper__IERC20Impl__transfer -> test::erc_20::IERC20Impl::transfer -> core::starknet::info::get_caller_address -> core::starknet::info::get_execution_info: 11

//! > Sierra Program
type ContractAddress = ContractAddress [storable: true, drop: true, dup: true, zero_sized: false];
type u128 = u128 [storable: true, drop: true, dup: true, zero_sized: false];
type core::integer::u256 = Struct<ut@core::integer::u256, u128, u128> [storable: true, drop: true, dup: true, zero_sized: false];
type test::erc_20::Approval = Struct<ut@test::erc_20::Approval, ContractAddress, ContractAddress, core::integer::u256> [storable: true, drop: true, dup: true, zero_sized: false];
type u8 = u8 [storable: true, drop: true, dup: true, zero_sized: false];
type StorageAddress = StorageAddress [storable: true, drop: true, dup: true, zero_sized: false];
type test::erc_20::Transfer = Struct<ut@test::erc_20::Transfer, ContractAddress, ContractAddress, core::integer::u256> [storable: true, drop: true, dup: true, zero_sized: false];
type test::erc_20::Event = Enum<ut@test::erc_20::Event, test::erc_20::Transfer, test::erc_20::Approval> [storable: true, drop: true, dup: true, zero_sized: false];
type Unit = Struct<ut@Tuple> [storable: true, drop: true, dup: true, zero_sized: true];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type core::result::Result::<(), core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<(), core::array::Array::<core::felt252>>, Unit, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::bool = Enum<ut@core::bool, Unit, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<core::integer::u256, core::bool> = Struct<ut@Tuple, core::integer::u256, core::bool> [storable: true, drop: true, dup: true, zero_sized: false];
type core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, core::integer::u256, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>> = Struct<ut@Tuple, core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::Panic = Struct<ut@core::panics::Panic> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)> = Enum<ut@core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type u32 = u32 [storable: true, drop: true, dup: true, zero_sized: false];
type StorageBaseAddress = StorageBaseAddress [storable: true, drop: true, dup: true, zero_sized: false];
type test::erc_20::__member_module_balances::ContractMemberState = Struct<ut@test::erc_20::__member_module_balances::ContractMemberState> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<test::erc_20::__member_module_balances::ContractMemberState, Unit> = Struct<ut@Tuple, test::erc_20::__member_module_balances::ContractMemberState, Unit> [storable: true, drop: true, dup: true, zero_sized: true];
type core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())> = Enum<ut@core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>, Tuple<test::erc_20::__member_module_balances::ContractMemberState, Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<core::integer::u256> = Struct<ut@Tuple, core::integer::u256> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::integer::u256,)> = Enum<ut@core::panics::PanicResult::<(core::integer::u256,)>, Tuple<core::integer::u256>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type Box<core::starknet::info::v2::TxInfo> = Box<core::starknet::info::v2::TxInfo> [storable: true, drop: true, dup: true, zero_sized: false];
type Box<core::starknet::info::BlockInfo> = Box<core::starknet::info::BlockInfo> [storable: true, drop: true, dup: true, zero_sized: false];
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::array::Span::<core::felt252> = Struct<ut@core::array::Span::<core::felt252>, Snapshot<Array<felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];
type Array<core::starknet::info::v2::ResourceBounds> = Array<core::starknet::info::v2::ResourceBounds> [storable: true, drop: true, dup: false, zero_sized: false];
type Snapshot<Array<core::starknet::info::v2::ResourceBounds>> = Snapshot<Array<core::starknet::info::v2::ResourceBounds>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::array::Span::<core::starknet::info::v2::ResourceBounds> = Struct<ut@core::array::Span::<core::starknet::info::v2::ResourceBounds>, Snapshot<Array<core::starknet::info::v2::ResourceBounds>>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::info::v2::TxInfo = Struct<ut@core::starknet::info::v2::TxInfo, felt252, ContractAddress, u128, core::array::Span::<core::felt252>, felt252, felt252, felt252, core::array::Span::<core::starknet::info::v2::ResourceBounds>, u128, core::array::Span::<core::felt252>, u32, u32, core::array::Span::<core::felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type u64 = u64 [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::info::BlockInfo = Struct<ut@core::starknet::info::BlockInfo, u64, u64, ContractAddress> [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::info::v2::ResourceBounds = Struct<ut@core::starknet::info::v2::ResourceBounds, felt252, u64, u128> [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::info::v2::ExecutionInfo = Struct<ut@core::starknet::info::v2::ExecutionInfo, Box<core::starknet::info::BlockInfo>, Box<core::starknet::info::v2::TxInfo>, ContractAddress, ContractAddress, felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type Box<core::starknet::info::v2::ExecutionInfo> = Box<core::starknet::info::v2::ExecutionInfo> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<Box<core::starknet::info::v2::ExecutionInfo>> = Struct<ut@Tuple, Box<core::starknet::info::v2::ExecutionInfo>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)> = Enum<ut@core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>, Tuple<Box<core::starknet::info::v2::ExecutionInfo>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<ContractAddress> = Struct<ut@Tuple, ContractAddress> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)> = Enum<ut@core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, Tuple<ContractAddress>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Box<felt252> = Box<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::box::Box::<@core::felt252>> = Enum<ut@core::option::Option::<core::box::Box::<@core::felt252>>, Box<felt252>, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type test::erc_20::__member_module_name::ContractMemberState = Struct<ut@test::erc_20::__member_module_name::ContractMemberState> [storable: true, drop: true, dup: true, zero_sized: true];
type test::erc_20::__member_module_symbol::ContractMemberState = Struct<ut@test::erc_20::__member_module_symbol::ContractMemberState> [storable: true, drop: true, dup: true, zero_sized: true];
type test::erc_20::__member_module_decimals::ContractMemberState = Struct<ut@test::erc_20::__member_module_decimals::ContractMemberState> [storable: true, drop: true, dup: true, zero_sized: true];
type test::erc_20::__member_module_total_supply::ContractMemberState = Struct<ut@test::erc_20::__member_module_total_supply::ContractMemberState> [storable: true, drop: true, dup: true, zero_sized: true];
type test::erc_20::__member_module_allowances::ContractMemberState = Struct<ut@test::erc_20::__member_module_allowances::ContractMemberState> [storable: true, drop: true, dup: true, zero_sized: true];
type test::erc_20::ContractState = Struct<ut@test::erc_20::ContractState, test::erc_20::__member_module_name::ContractMemberState, test::erc_20::__member_module_symbol::ContractMemberState, test::erc_20::__member_module_decimals::ContractMemberState, test::erc_20::__member_module_total_supply::ContractMemberState, test::erc_20::__member_module_balances::ContractMemberState, test::erc_20::__member_module_allowances::ContractMemberState> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<test::erc_20::ContractState, Unit> = Struct<ut@Tuple, test::erc_20::ContractState, Unit> [storable: true, drop: true, dup: true, zero_sized: true];
type core::panics::PanicResult::<(test::erc_20::ContractState, ())> = Enum<ut@core::panics::PanicResult::<(test::erc_20::ContractState, ())>, Tuple<test::erc_20::ContractState, Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type BuiltinCosts = BuiltinCosts [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::integer::u256> = Enum<ut@core::option::Option::<core::integer::u256>, core::integer::u256, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::starknet::contract_address::ContractAddress> = Enum<ut@core::option::Option::<core::starknet::contract_address::ContractAddress>, ContractAddress, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<Unit> = Struct<ut@Tuple, Unit> [storable: true, drop: true, dup: true, zero_sized: true];
type core::panics::PanicResult::<((),)> = Enum<ut@core::panics::PanicResult::<((),)>, Tuple<Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Tuple<core::array::Span::<core::felt252>> = Struct<ut@Tuple, core::array::Span::<core::felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::panics::PanicResult::<(core::array::Span::<core::felt252>,)> = Enum<ut@core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, Tuple<core::array::Span::<core::felt252>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type System = System [storable: true, drop: false, dup: false, zero_sized: false];
type GasBuiltin = GasBuiltin [storable: true, drop: false, dup: false, zero_sized: false];
type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type Pedersen = Pedersen [storable: true, drop: false, dup: false, zero_sized: false];

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc contract_address_const<2> = contract_address_const<2>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc contract_address_to_felt252 = contract_address_to_felt252;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc struct_construct<core::array::Span::<core::felt252>> = struct_construct<core::array::Span::<core::felt252>>;
libfunc store_temp<core::array::Span::<core::felt252>> = store_temp<core::array::Span::<core::felt252>>;
libfunc cheatcode<10052436086942832998170947883001859293934451> = cheatcode<10052436086942832998170947883001859293934451>;
libfunc drop<core::array::Span::<core::felt252>> = drop<core::array::Span::<core::felt252>>;
libfunc felt252_const<1> = felt252_const<1>;
libfunc felt252_const<0> = felt252_const<0>;
libfunc store_temp<Pedersen> = store_temp<Pedersen>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc function_call<user@test::erc_20::__wrapper__IERC20Impl__transfer> = function_call<user@test::erc_20::__wrapper__IERC20Impl__transfer>;
libfunc enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>> = enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc branch_align = branch_align;
libfunc drop<Tuple<core::array::Span::<core::felt252>>> = drop<Tuple<core::array::Span::<core::felt252>>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 0> = enum_init<core::panics::PanicResult::<((),)>, 0>;
libfunc store_temp<core::panics::PanicResult::<((),)>> = store_temp<core::panics::PanicResult::<((),)>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 1> = enum_init<core::panics::PanicResult::<((),)>, 1>;
libfunc struct_construct<test::erc_20::__member_module_name::ContractMemberState> = struct_construct<test::erc_20::__member_module_name::ContractMemberState>;
libfunc struct_construct<test::erc_20::__member_module_symbol::ContractMemberState> = struct_construct<test::erc_20::__member_module_symbol::ContractMemberState>;
libfunc struct_construct<test::erc_20::__member_module_decimals::ContractMemberState> = struct_construct<test::erc_20::__member_module_decimals::ContractMemberState>;
libfunc struct_construct<test::erc_20::__member_module_total_supply::ContractMemberState> = struct_construct<test::erc_20::__member_module_total_supply::ContractMemberState>;
libfunc struct_construct<test::erc_20::__member_module_balances::ContractMemberState> = struct_construct<test::erc_20::__member_module_balances::ContractMemberState>;
libfunc struct_construct<test::erc_20::__member_module_allowances::ContractMemberState> = struct_construct<test::erc_20::__member_module_allowances::ContractMemberState>;
libfunc struct_construct<test::erc_20::ContractState> = struct_construct<test::erc_20::ContractState>;
libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize> = function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>;
libfunc enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>> = enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc function_call<user@core::integer::u256Serde::deserialize> = function_call<user@core::integer::u256Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::integer::u256>> = enum_match<core::option::Option::<core::integer::u256>>;
libfunc struct_deconstruct<core::array::Span::<core::felt252>> = struct_deconstruct<core::array::Span::<core::felt252>>;
libfunc array_snapshot_pop_front<felt252> = array_snapshot_pop_front<felt252>;
libfunc drop<Snapshot<Array<felt252>>> = drop<Snapshot<Array<felt252>>>;
libfunc drop<Box<felt252>> = drop<Box<felt252>>;
libfunc drop<core::integer::u256> = drop<core::integer::u256>;
libfunc drop<ContractAddress> = drop<ContractAddress>;
libfunc felt252_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>> = store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc store_temp<ContractAddress> = store_temp<ContractAddress>;
libfunc store_temp<core::integer::u256> = store_temp<core::integer::u256>;
libfunc function_call<user@test::erc_20::IERC20Impl::transfer> = function_call<user@test::erc_20::IERC20Impl::transfer>;
libfunc enum_match<core::panics::PanicResult::<(test::erc_20::ContractState, ())>> = enum_match<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>;
libfunc drop<Tuple<test::erc_20::ContractState, Unit>> = drop<Tuple<test::erc_20::ContractState, Unit>>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>>> = struct_construct<Tuple<core::array::Span::<core::felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc drop<Unit> = drop<Unit>;
libfunc felt252_const<485748461484230571791265682659113160264223489397539653310998840191492914> = felt252_const<485748461484230571791265682659113160264223489397539653310998840191492914>;
libfunc felt252_const<485748461484230571791265682659113160264223489397539653310998840191492913> = felt252_const<485748461484230571791265682659113160264223489397539653310998840191492913>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>;
libfunc store_temp<Snapshot<Array<felt252>>> = store_temp<Snapshot<Array<felt252>>>;
libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>> = store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>;
libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>> = enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc unbox<felt252> = unbox<felt252>;
libfunc rename<felt252> = rename<felt252>;
libfunc contract_address_try_from_felt252 = contract_address_try_from_felt252;
libfunc enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0> = enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>;
libfunc store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>> = store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1> = enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>;
libfunc dup<Snapshot<Array<felt252>>> = dup<Snapshot<Array<felt252>>>;
libfunc u128s_from_felt252 = u128s_from_felt252;
libfunc struct_construct<core::integer::u256> = struct_construct<core::integer::u256>;
libfunc enum_init<core::option::Option::<core::integer::u256>, 0> = enum_init<core::option::Option::<core::integer::u256>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u256>> = store_temp<core::option::Option::<core::integer::u256>>;
libfunc drop<u128> = drop<u128>;
libfunc enum_init<core::option::Option::<core::integer::u256>, 1> = enum_init<core::option::Option::<core::integer::u256>, 1>;
libfunc function_call<user@core::starknet::info::get_caller_address> = function_call<user@core::starknet::info::get_caller_address>;
libfunc enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>> = enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>;
libfunc struct_deconstruct<Tuple<ContractAddress>> = struct_deconstruct<Tuple<ContractAddress>>;
libfunc function_call<user@test::erc_20::StorageImpl::transfer_helper> = function_call<user@test::erc_20::StorageImpl::transfer_helper>;
libfunc drop<test::erc_20::ContractState> = drop<test::erc_20::ContractState>;
libfunc enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 1> = enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 1>;
libfunc store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>> = store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>;
libfunc function_call<user@core::starknet::info::get_execution_info> = function_call<user@core::starknet::info::get_execution_info>;
libfunc enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>> = enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>>;
libfunc struct_deconstruct<Tuple<Box<core::starknet::info::v2::ExecutionInfo>>> = struct_deconstruct<Tuple<Box<core::starknet::info::v2::ExecutionInfo>>>;
libfunc unbox<core::starknet::info::v2::ExecutionInfo> = unbox<core::starknet::info::v2::ExecutionInfo>;
libfunc struct_deconstruct<core::starknet::info::v2::ExecutionInfo> = struct_deconstruct<core::starknet::info::v2::ExecutionInfo>;
libfunc drop<Box<core::starknet::info::BlockInfo>> = drop<Box<core::starknet::info::BlockInfo>>;
libfunc drop<Box<core::starknet::info::v2::TxInfo>> = drop<Box<core::starknet::info::v2::TxInfo>>;
libfunc drop<felt252> = drop<felt252>;
libfunc struct_construct<Tuple<ContractAddress>> = struct_construct<Tuple<ContractAddress>>;
libfunc enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0> = enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>> = store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1> = enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1>;
libfunc dup<ContractAddress> = dup<ContractAddress>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc felt252_const<25936191677694277552149992725516921697451103245639728> = felt252_const<25936191677694277552149992725516921697451103245639728>;
libfunc felt252_const<395754877894504967531585582359572169455970492464> = felt252_const<395754877894504967531585582359572169455970492464>;
libfunc struct_deconstruct<test::erc_20::ContractState> = struct_deconstruct<test::erc_20::ContractState>;
libfunc snapshot_take<test::erc_20::__member_module_balances::ContractMemberState> = snapshot_take<test::erc_20::__member_module_balances::ContractMemberState>;
libfunc function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read> = function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read>;
libfunc enum_match<core::panics::PanicResult::<(core::integer::u256,)>> = enum_match<core::panics::PanicResult::<(core::integer::u256,)>>;
libfunc struct_deconstruct<Tuple<core::integer::u256>> = struct_deconstruct<Tuple<core::integer::u256>>;
libfunc dup<core::integer::u256> = dup<core::integer::u256>;
libfunc function_call<user@core::integer::U256Sub::sub> = function_call<user@core::integer::U256Sub::sub>;
libfunc function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write> = function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write>;
libfunc enum_match<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>> = enum_match<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>>;
libfunc struct_deconstruct<Tuple<test::erc_20::__member_module_balances::ContractMemberState, Unit>> = struct_deconstruct<Tuple<test::erc_20::__member_module_balances::ContractMemberState, Unit>>;
libfunc function_call<user@core::integer::U256Add::add> = function_call<user@core::integer::U256Add::add>;
libfunc struct_construct<test::erc_20::Transfer> = struct_construct<test::erc_20::Transfer>;
libfunc store_temp<test::erc_20::Transfer> = store_temp<test::erc_20::Transfer>;
libfunc function_call<user@test::erc_20::ContractStateEventEmitter::emit::<test::erc_20::Transfer, test::erc_20::EventTransferIntoEvent>> = function_call<user@test::erc_20::ContractStateEventEmitter::emit::<test::erc_20::Transfer, test::erc_20::EventTransferIntoEvent>>;
libfunc drop<test::erc_20::__member_module_allowances::ContractMemberState> = drop<test::erc_20::__member_module_allowances::ContractMemberState>;
libfunc drop<test::erc_20::__member_module_name::ContractMemberState> = drop<test::erc_20::__member_module_name::ContractMemberState>;
libfunc drop<test::erc_20::__member_module_total_supply::ContractMemberState> = drop<test::erc_20::__member_module_total_supply::ContractMemberState>;
libfunc drop<test::erc_20::__member_module_decimals::ContractMemberState> = drop<test::erc_20::__member_module_decimals::ContractMemberState>;
libfunc drop<test::erc_20::__member_module_symbol::ContractMemberState> = drop<test::erc_20::__member_module_symbol::ContractMemberState>;
libfunc drop<test::erc_20::__member_module_balances::ContractMemberState> = drop<test::erc_20::__member_module_balances::ContractMemberState>;
libfunc get_execution_info_v2_syscall = get_execution_info_v2_syscall;
libfunc struct_construct<Tuple<Box<core::starknet::info::v2::ExecutionInfo>>> = struct_construct<Tuple<Box<core::starknet::info::v2::ExecutionInfo>>>;
libfunc enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>, 0> = enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>> = store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>, 1> = enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>, 1>;
libfunc felt252_const<1065622543624526936256554561967983185612257046533136611876836524258158810564> = felt252_const<1065622543624526936256554561967983185612257046533136611876836524258158810564>;
libfunc pedersen = pedersen;
libfunc storage_base_address_from_felt252 = storage_base_address_from_felt252;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<StorageBaseAddress> = store_temp<StorageBaseAddress>;
libfunc function_call<user@core::integer::Storeu256::read> = function_call<user@core::integer::Storeu256::read>;
libfunc enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>> = enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>;
libfunc enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>;
libfunc struct_construct<Tuple<core::integer::u256>> = struct_construct<Tuple<core::integer::u256>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0> = enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::integer::u256,)>> = store_temp<core::panics::PanicResult::<(core::integer::u256,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1> = enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>;
libfunc function_call<user@core::integer::u256_overflow_sub> = function_call<user@core::integer::u256_overflow_sub>;
libfunc struct_deconstruct<Tuple<core::integer::u256, core::bool>> = struct_deconstruct<Tuple<core::integer::u256, core::bool>>;
libfunc felt252_const<39879774624085075084607933104993585622903> = felt252_const<39879774624085075084607933104993585622903>;
libfunc function_call<user@core::integer::Storeu256::write> = function_call<user@core::integer::Storeu256::write>;
libfunc enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc struct_construct<Tuple<test::erc_20::__member_module_balances::ContractMemberState, Unit>> = struct_construct<Tuple<test::erc_20::__member_module_balances::ContractMemberState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>, 0> = enum_init<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>> = store_temp<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>>;
libfunc enum_init<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>, 1> = enum_init<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>, 1>;
libfunc function_call<user@core::integer::u256_overflowing_add> = function_call<user@core::integer::u256_overflowing_add>;
libfunc felt252_const<39879774624079483812136948410799859986295> = felt252_const<39879774624079483812136948410799859986295>;
libfunc enum_init<test::erc_20::Event, 0> = enum_init<test::erc_20::Event, 0>;
libfunc snapshot_take<test::erc_20::Event> = snapshot_take<test::erc_20::Event>;
libfunc drop<test::erc_20::Event> = drop<test::erc_20::Event>;
libfunc store_temp<test::erc_20::Event> = store_temp<test::erc_20::Event>;
libfunc store_temp<Array<felt252>> = store_temp<Array<felt252>>;
libfunc function_call<user@test::erc_20::EventIsEvent::append_keys_and_data> = function_call<user@test::erc_20::EventIsEvent::append_keys_and_data>;
libfunc emit_event_syscall = emit_event_syscall;
libfunc struct_construct<Tuple<test::erc_20::ContractState, Unit>> = struct_construct<Tuple<test::erc_20::ContractState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 0> = enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 0>;
libfunc dup<StorageBaseAddress> = dup<StorageBaseAddress>;
libfunc storage_address_from_base = storage_address_from_base;
libfunc dup<u32> = dup<u32>;
libfunc storage_read_syscall = storage_read_syscall;
libfunc u8_const<1> = u8_const<1>;
libfunc storage_address_from_base_and_offset = storage_address_from_base_and_offset;
libfunc store_temp<StorageAddress> = store_temp<StorageAddress>;
libfunc enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>> = store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>;
libfunc felt252_const<476442828812030857794232422692155113556837216824> = felt252_const<476442828812030857794232422692155113556837216824>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>;
libfunc enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>;
libfunc drop<StorageBaseAddress> = drop<StorageBaseAddress>;
libfunc drop<u32> = drop<u32>;
libfunc struct_deconstruct<core::integer::u256> = struct_deconstruct<core::integer::u256>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc store_temp<u128> = store_temp<u128>;
libfunc struct_construct<Tuple<core::integer::u256, core::bool>> = struct_construct<Tuple<core::integer::u256, core::bool>>;
libfunc store_temp<Tuple<core::integer::u256, core::bool>> = store_temp<Tuple<core::integer::u256, core::bool>>;
libfunc u128_const<1> = u128_const<1>;
libfunc drop<core::bool> = drop<core::bool>;
libfunc u128_to_felt252 = u128_to_felt252;
libfunc storage_write_syscall = storage_write_syscall;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc enum_match<test::erc_20::Event> = enum_match<test::erc_20::Event>;
libfunc felt252_const<271746229759260285552388728919865295615886751538523744128730118297934206697> = felt252_const<271746229759260285552388728919865295615886751538523744128730118297934206697>;
libfunc dup<test::erc_20::Transfer> = dup<test::erc_20::Transfer>;
libfunc struct_deconstruct<test::erc_20::Transfer> = struct_deconstruct<test::erc_20::Transfer>;
libfunc rename<ContractAddress> = rename<ContractAddress>;
libfunc rename<u128> = rename<u128>;
libfunc felt252_const<544914742286571513055574265148471203182105283038408585630116262969508767999> = felt252_const<544914742286571513055574265148471203182105283038408585630116262969508767999>;
libfunc dup<test::erc_20::Approval> = dup<test::erc_20::Approval>;
libfunc struct_deconstruct<test::erc_20::Approval> = struct_deconstruct<test::erc_20::Approval>;

disable_ap_tracking() -> (); // 0
contract_address_const<2>() -> ([4]); // 1
array_new<felt252>() -> ([5]); // 2
contract_address_to_felt252([4]) -> ([6]); // 3
store_temp<felt252>([6]) -> ([6]); // 4
array_append<felt252>([5], [6]) -> ([7]); // 5
snapshot_take<Array<felt252>>([7]) -> ([8], [9]); // 6
drop<Array<felt252>>([8]) -> (); // 7
struct_construct<core::array::Span::<core::felt252>>([9]) -> ([10]); // 8
store_temp<core::array::Span::<core::felt252>>([10]) -> ([10]); // 9
cheatcode<10052436086942832998170947883001859293934451>([10]) -> ([11]); // 10
drop<core::array::Span::<core::felt252>>([11]) -> (); // 11
array_new<felt252>() -> ([12]); // 12
felt252_const<1>() -> ([13]); // 13
store_temp<felt252>([13]) -> ([13]); // 14
array_append<felt252>([12], [13]) -> ([14]); // 15
felt252_const<0>() -> ([15]); // 16
store_temp<felt252>([15]) -> ([15]); // 17
array_append<felt252>([14], [15]) -> ([16]); // 18
felt252_const<0>() -> ([17]); // 19
store_temp<felt252>([17]) -> ([17]); // 20
array_append<felt252>([16], [17]) -> ([18]); // 21
snapshot_take<Array<felt252>>([18]) -> ([19], [20]); // 22
drop<Array<felt252>>([19]) -> (); // 23
struct_construct<core::array::Span::<core::felt252>>([20]) -> ([21]); // 24
store_temp<Pedersen>([2]) -> ([2]); // 25
store_temp<RangeCheck>([0]) -> ([0]); // 26
store_temp<GasBuiltin>([1]) -> ([1]); // 27
store_temp<System>([3]) -> ([3]); // 28
store_temp<core::array::Span::<core::felt252>>([21]) -> ([21]); // 29
function_call<user@test::erc_20::__wrapper__IERC20Impl__transfer>([2], [0], [1], [3], [21]) -> ([22], [23], [24], [25], [26]); // 30
enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([26]) { fallthrough([27]) 43([28]) }; // 31
branch_align() -> (); // 32
drop<Tuple<core::array::Span::<core::felt252>>>([27]) -> (); // 33
struct_construct<Unit>() -> ([29]); // 34
struct_construct<Tuple<Unit>>([29]) -> ([30]); // 35
enum_init<core::panics::PanicResult::<((),)>, 0>([30]) -> ([31]); // 36
store_temp<RangeCheck>([23]) -> ([23]); // 37
store_temp<GasBuiltin>([24]) -> ([24]); // 38
store_temp<Pedersen>([22]) -> ([22]); // 39
store_temp<System>([25]) -> ([25]); // 40
store_temp<core::panics::PanicResult::<((),)>>([31]) -> ([31]); // 41
return([23], [24], [22], [25], [31]); // 42
branch_align() -> (); // 43
enum_init<core::panics::PanicResult::<((),)>, 1>([28]) -> ([32]); // 44
store_temp<RangeCheck>([23]) -> ([23]); // 45
store_temp<GasBuiltin>([24]) -> ([24]); // 46
store_temp<Pedersen>([22]) -> ([22]); // 47
store_temp<System>([25]) -> ([25]); // 48
store_temp<core::panics::PanicResult::<((),)>>([32]) -> ([32]); // 49
return([23], [24], [22], [25], [32]); // 50
struct_construct<test::erc_20::__member_module_name::ContractMemberState>() -> ([0]); // 51
struct_construct<test::erc_20::__member_module_symbol::ContractMemberState>() -> ([1]); // 52
struct_construct<test::erc_20::__member_module_decimals::ContractMemberState>() -> ([2]); // 53
struct_construct<test::erc_20::__member_module_total_supply::ContractMemberState>() -> ([3]); // 54
struct_construct<test::erc_20::__member_module_balances::ContractMemberState>() -> ([4]); // 55
struct_construct<test::erc_20::__member_module_allowances::ContractMemberState>() -> ([5]); // 56
struct_construct<test::erc_20::ContractState>([0], [1], [2], [3], [4], [5]) -> ([6]); // 57
return([6]); // 58
revoke_ap_tracking() -> (); // 59
withdraw_gas([1], [2]) { fallthrough([5], [6]) 184([7], [8]) }; // 60
branch_align() -> (); // 61
store_temp<RangeCheck>([5]) -> ([5]); // 62
store_temp<core::array::Span::<core::felt252>>([4]) -> ([4]); // 63
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([5], [4]) -> ([9], [10], [11]); // 64
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([12]) 168([13]) }; // 65
branch_align() -> (); // 66
store_temp<RangeCheck>([9]) -> ([9]); // 67
store_temp<core::array::Span::<core::felt252>>([10]) -> ([10]); // 68
function_call<user@core::integer::u256Serde::deserialize>([9], [10]) -> ([14], [15], [16]); // 69
enum_match<core::option::Option::<core::integer::u256>>([16]) { fallthrough([17]) 151([18]) }; // 70
branch_align() -> (); // 71
struct_deconstruct<core::array::Span::<core::felt252>>([15]) -> ([19]); // 72
array_snapshot_pop_front<felt252>([19]) { fallthrough([20], [21]) 92([22]) }; // 73
branch_align() -> (); // 74
drop<Snapshot<Array<felt252>>>([20]) -> (); // 75
drop<Box<felt252>>([21]) -> (); // 76
drop<core::integer::u256>([17]) -> (); // 77
drop<ContractAddress>([12]) -> (); // 78
array_new<felt252>() -> ([23]); // 79
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([24]); // 80
store_temp<felt252>([24]) -> ([24]); // 81
array_append<felt252>([23], [24]) -> ([25]); // 82
struct_construct<core::panics::Panic>() -> ([26]); // 83
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([26], [25]) -> ([27]); // 84
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([27]) -> ([28]); // 85
store_temp<Pedersen>([0]) -> ([0]); // 86
store_temp<RangeCheck>([14]) -> ([14]); // 87
store_temp<GasBuiltin>([6]) -> ([6]); // 88
store_temp<System>([3]) -> ([3]); // 89
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([28]) -> ([28]); // 90
return([0], [14], [6], [3], [28]); // 91
branch_align() -> (); // 92
drop<Snapshot<Array<felt252>>>([22]) -> (); // 93
get_builtin_costs() -> ([29]); // 94
store_temp<BuiltinCosts>([29]) -> ([29]); // 95
withdraw_gas_all([14], [6], [29]) { fallthrough([30], [31]) 135([32], [33]) }; // 96
branch_align() -> (); // 97
struct_construct<test::erc_20::__member_module_name::ContractMemberState>() -> ([34]); // 98
struct_construct<test::erc_20::__member_module_symbol::ContractMemberState>() -> ([35]); // 99
struct_construct<test::erc_20::__member_module_decimals::ContractMemberState>() -> ([36]); // 100
struct_construct<test::erc_20::__member_module_total_supply::ContractMemberState>() -> ([37]); // 101
struct_construct<test::erc_20::__member_module_balances::ContractMemberState>() -> ([38]); // 102
struct_construct<test::erc_20::__member_module_allowances::ContractMemberState>() -> ([39]); // 103
struct_construct<test::erc_20::ContractState>([34], [35], [36], [37], [38], [39]) -> ([40]); // 104
store_temp<RangeCheck>([30]) -> ([30]); // 105
store_temp<GasBuiltin>([31]) -> ([31]); // 106
store_temp<Pedersen>([0]) -> ([0]); // 107
store_temp<System>([3]) -> ([3]); // 108
store_temp<ContractAddress>([12]) -> ([12]); // 109
store_temp<core::integer::u256>([17]) -> ([17]); // 110
function_call<user@test::erc_20::IERC20Impl::transfer>([30], [31], [0], [3], [40], [12], [17]) -> ([41], [42], [43], [44], [45]); // 111
enum_match<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([45]) { fallthrough([46]) 127([47]) }; // 112
branch_align() -> (); // 113
drop<Tuple<test::erc_20::ContractState, Unit>>([46]) -> (); // 114
array_new<felt252>() -> ([48]); // 115
snapshot_take<Array<felt252>>([48]) -> ([49], [50]); // 116
drop<Array<felt252>>([49]) -> (); // 117
struct_construct<core::array::Span::<core::felt252>>([50]) -> ([51]); // 118
struct_construct<Tuple<core::array::Span::<core::felt252>>>([51]) -> ([52]); // 119
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([52]) -> ([53]); // 120
store_temp<Pedersen>([43]) -> ([43]); // 121
store_temp<RangeCheck>([41]) -> ([41]); // 122
store_temp<GasBuiltin>([42]) -> ([42]); // 123
store_temp<System>([44]) -> ([44]); // 124
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([53]) -> ([53]); // 125
return([43], [41], [42], [44], [53]); // 126
branch_align() -> (); // 127
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([47]) -> ([54]); // 128
store_temp<Pedersen>([43]) -> ([43]); // 129
store_temp<RangeCheck>([41]) -> ([41]); // 130
store_temp<GasBuiltin>([42]) -> ([42]); // 131
store_temp<System>([44]) -> ([44]); // 132
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([54]) -> ([54]); // 133
return([43], [41], [42], [44], [54]); // 134
branch_align() -> (); // 135
drop<core::integer::u256>([17]) -> (); // 136
drop<ContractAddress>([12]) -> (); // 137
array_new<felt252>() -> ([55]); // 138
felt252_const<375233589013918064796019>() -> ([56]); // 139
store_temp<felt252>([56]) -> ([56]); // 140
array_append<felt252>([55], [56]) -> ([57]); // 141
struct_construct<core::panics::Panic>() -> ([58]); // 142
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([58], [57]) -> ([59]); // 143
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([59]) -> ([60]); // 144
store_temp<Pedersen>([0]) -> ([0]); // 145
store_temp<RangeCheck>([32]) -> ([32]); // 146
store_temp<GasBuiltin>([33]) -> ([33]); // 147
store_temp<System>([3]) -> ([3]); // 148
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([60]) -> ([60]); // 149
return([0], [32], [33], [3], [60]); // 150
branch_align() -> (); // 151
drop<Unit>([18]) -> (); // 152
drop<core::array::Span::<core::felt252>>([15]) -> (); // 153
drop<ContractAddress>([12]) -> (); // 154
array_new<felt252>() -> ([61]); // 155
felt252_const<485748461484230571791265682659113160264223489397539653310998840191492914>() -> ([62]); // 156
store_temp<felt252>([62]) -> ([62]); // 157
array_append<felt252>([61], [62]) -> ([63]); // 158
struct_construct<core::panics::Panic>() -> ([64]); // 159
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([64], [63]) -> ([65]); // 160
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([65]) -> ([66]); // 161
store_temp<Pedersen>([0]) -> ([0]); // 162
store_temp<RangeCheck>([14]) -> ([14]); // 163
store_temp<GasBuiltin>([6]) -> ([6]); // 164
store_temp<System>([3]) -> ([3]); // 165
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([66]) -> ([66]); // 166
return([0], [14], [6], [3], [66]); // 167
branch_align() -> (); // 168
drop<Unit>([13]) -> (); // 169
drop<core::array::Span::<core::felt252>>([10]) -> (); // 170
array_new<felt252>() -> ([67]); // 171
felt252_const<485748461484230571791265682659113160264223489397539653310998840191492913>() -> ([68]); // 172
store_temp<felt252>([68]) -> ([68]); // 173
array_append<felt252>([67], [68]) -> ([69]); // 174
struct_construct<core::panics::Panic>() -> ([70]); // 175
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([70], [69]) -> ([71]); // 176
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([71]) -> ([72]); // 177
store_temp<Pedersen>([0]) -> ([0]); // 178
store_temp<RangeCheck>([9]) -> ([9]); // 179
store_temp<GasBuiltin>([6]) -> ([6]); // 180
store_temp<System>([3]) -> ([3]); // 181
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([72]) -> ([72]); // 182
return([0], [9], [6], [3], [72]); // 183
branch_align() -> (); // 184
drop<core::array::Span::<core::felt252>>([4]) -> (); // 185
array_new<felt252>() -> ([73]); // 186
felt252_const<375233589013918064796019>() -> ([74]); // 187
store_temp<felt252>([74]) -> ([74]); // 188
array_append<felt252>([73], [74]) -> ([75]); // 189
struct_construct<core::panics::Panic>() -> ([76]); // 190
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([76], [75]) -> ([77]); // 191
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([77]) -> ([78]); // 192
store_temp<Pedersen>([0]) -> ([0]); // 193
store_temp<RangeCheck>([7]) -> ([7]); // 194
store_temp<GasBuiltin>([8]) -> ([8]); // 195
store_temp<System>([3]) -> ([3]); // 196
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([78]) -> ([78]); // 197
return([0], [7], [8], [3], [78]); // 198
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]); // 199
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 206([5]) }; // 200
branch_align() -> (); // 201
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]); // 202
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]); // 203
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]); // 204
jump() { 211() }; // 205
branch_align() -> (); // 206
struct_construct<Unit>() -> ([9]); // 207
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]); // 208
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]); // 209
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]); // 210
struct_construct<core::array::Span::<core::felt252>>([7]) -> ([11]); // 211
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]); // 212
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 232([13]) }; // 213
branch_align() -> (); // 214
unbox<felt252>([12]) -> ([14]); // 215
rename<felt252>([14]) -> ([15]); // 216
store_temp<felt252>([15]) -> ([15]); // 217
contract_address_try_from_felt252([0], [15]) { fallthrough([16], [17]) 225([18]) }; // 218
branch_align() -> (); // 219
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>([17]) -> ([19]); // 220
store_temp<RangeCheck>([16]) -> ([16]); // 221
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]); // 222
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([19]) -> ([19]); // 223
return([16], [11], [19]); // 224
branch_align() -> (); // 225
struct_construct<Unit>() -> ([20]); // 226
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([20]) -> ([21]); // 227
store_temp<RangeCheck>([18]) -> ([18]); // 228
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]); // 229
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([21]) -> ([21]); // 230
return([18], [11], [21]); // 231
branch_align() -> (); // 232
drop<Unit>([13]) -> (); // 233
struct_construct<Unit>() -> ([22]); // 234
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([22]) -> ([23]); // 235
store_temp<RangeCheck>([0]) -> ([0]); // 236
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]); // 237
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([23]) -> ([23]); // 238
return([0], [11], [23]); // 239
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]); // 240
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 247([5]) }; // 241
branch_align() -> (); // 242
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]); // 243
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]); // 244
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]); // 245
jump() { 252() }; // 246
branch_align() -> (); // 247
struct_construct<Unit>() -> ([9]); // 248
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]); // 249
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]); // 250
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]); // 251
dup<Snapshot<Array<felt252>>>([7]) -> ([7], [11]); // 252
struct_construct<core::array::Span::<core::felt252>>([11]) -> ([12]); // 253
store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]); // 254
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([13]) 311([14]) }; // 255
branch_align() -> (); // 256
unbox<felt252>([13]) -> ([15]); // 257
rename<felt252>([15]) -> ([16]); // 258
store_temp<felt252>([16]) -> ([16]); // 259
u128s_from_felt252([0], [16]) { fallthrough([17], [18]) 305([19], [20], [21]) }; // 260
branch_align() -> (); // 261
drop<core::array::Span::<core::felt252>>([12]) -> (); // 262
store_temp<RangeCheck>([17]) -> ([17]); // 263
array_snapshot_pop_front<felt252>([7]) { fallthrough([22], [23]) 270([24]) }; // 264
branch_align() -> (); // 265
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([23]) -> ([25]); // 266
store_temp<Snapshot<Array<felt252>>>([22]) -> ([26]); // 267
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([25]) -> ([27]); // 268
jump() { 275() }; // 269
branch_align() -> (); // 270
struct_construct<Unit>() -> ([28]); // 271
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([28]) -> ([29]); // 272
store_temp<Snapshot<Array<felt252>>>([24]) -> ([26]); // 273
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([29]) -> ([27]); // 274
struct_construct<core::array::Span::<core::felt252>>([26]) -> ([30]); // 275
store_temp<core::array::Span::<core::felt252>>([30]) -> ([30]); // 276
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([27]) { fallthrough([31]) 296([32]) }; // 277
branch_align() -> (); // 278
unbox<felt252>([31]) -> ([33]); // 279
rename<felt252>([33]) -> ([34]); // 280
store_temp<felt252>([34]) -> ([34]); // 281
u128s_from_felt252([17], [34]) { fallthrough([35], [36]) 290([37], [38], [39]) }; // 282
branch_align() -> (); // 283
struct_construct<core::integer::u256>([18], [36]) -> ([40]); // 284
enum_init<core::option::Option::<core::integer::u256>, 0>([40]) -> ([41]); // 285
store_temp<RangeCheck>([35]) -> ([35]); // 286
store_temp<core::array::Span::<core::felt252>>([30]) -> ([30]); // 287
store_temp<core::option::Option::<core::integer::u256>>([41]) -> ([41]); // 288
return([35], [30], [41]); // 289
branch_align() -> (); // 290
drop<u128>([38]) -> (); // 291
drop<u128>([39]) -> (); // 292
drop<u128>([18]) -> (); // 293
store_temp<RangeCheck>([37]) -> ([42]); // 294
jump() { 300() }; // 295
branch_align() -> (); // 296
drop<Unit>([32]) -> (); // 297
drop<u128>([18]) -> (); // 298
store_temp<RangeCheck>([17]) -> ([42]); // 299
struct_construct<Unit>() -> ([43]); // 300
enum_init<core::option::Option::<core::integer::u256>, 1>([43]) -> ([44]); // 301
store_temp<core::array::Span::<core::felt252>>([30]) -> ([30]); // 302
store_temp<core::option::Option::<core::integer::u256>>([44]) -> ([44]); // 303
return([42], [30], [44]); // 304
branch_align() -> (); // 305
drop<u128>([20]) -> (); // 306
drop<u128>([21]) -> (); // 307
drop<Snapshot<Array<felt252>>>([7]) -> (); // 308
store_temp<RangeCheck>([19]) -> ([45]); // 309
jump() { 315() }; // 310
branch_align() -> (); // 311
drop<Unit>([14]) -> (); // 312
drop<Snapshot<Array<felt252>>>([7]) -> (); // 313
store_temp<RangeCheck>([0]) -> ([45]); // 314
struct_construct<Unit>() -> ([46]); // 315
enum_init<core::option::Option::<core::integer::u256>, 1>([46]) -> ([47]); // 316
store_temp<core::array::Span::<core::felt252>>([12]) -> ([12]); // 317
store_temp<core::option::Option::<core::integer::u256>>([47]) -> ([47]); // 318
return([45], [12], [47]); // 319
store_temp<GasBuiltin>([1]) -> ([1]); // 320
store_temp<System>([3]) -> ([3]); // 321
function_call<user@core::starknet::info::get_caller_address>([1], [3]) -> ([7], [8], [9]); // 322
enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([9]) { fallthrough([10]) 335([11]) }; // 323
branch_align() -> (); // 324
struct_deconstruct<Tuple<ContractAddress>>([10]) -> ([12]); // 325
store_temp<RangeCheck>([0]) -> ([0]); // 326
store_temp<GasBuiltin>([7]) -> ([7]); // 327
store_temp<Pedersen>([2]) -> ([2]); // 328
store_temp<System>([8]) -> ([8]); // 329
store_temp<ContractAddress>([12]) -> ([12]); // 330
store_temp<ContractAddress>([5]) -> ([5]); // 331
store_temp<core::integer::u256>([6]) -> ([6]); // 332
function_call<user@test::erc_20::StorageImpl::transfer_helper>([0], [7], [2], [8], [4], [12], [5], [6]) -> ([13], [14], [15], [16], [17]); // 333
return([13], [14], [15], [16], [17]); // 334
branch_align() -> (); // 335
drop<core::integer::u256>([6]) -> (); // 336
drop<ContractAddress>([5]) -> (); // 337
drop<test::erc_20::ContractState>([4]) -> (); // 338
enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 1>([11]) -> ([18]); // 339
store_temp<RangeCheck>([0]) -> ([0]); // 340
store_temp<GasBuiltin>([7]) -> ([7]); // 341
store_temp<Pedersen>([2]) -> ([2]); // 342
store_temp<System>([8]) -> ([8]); // 343
store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([18]) -> ([18]); // 344
return([0], [7], [2], [8], [18]); // 345
store_temp<GasBuiltin>([0]) -> ([0]); // 346
store_temp<System>([1]) -> ([1]); // 347
function_call<user@core::starknet::info::get_execution_info>([0], [1]) -> ([2], [3], [4]); // 348
enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>>([4]) { fallthrough([5]) 364([6]) }; // 349
branch_align() -> (); // 350
struct_deconstruct<Tuple<Box<core::starknet::info::v2::ExecutionInfo>>>([5]) -> ([7]); // 351
unbox<core::starknet::info::v2::ExecutionInfo>([7]) -> ([8]); // 352
struct_deconstruct<core::starknet::info::v2::ExecutionInfo>([8]) -> ([9], [10], [11], [12], [13]); // 353
drop<Box<core::starknet::info::BlockInfo>>([9]) -> (); // 354
drop<Box<core::starknet::info::v2::TxInfo>>([10]) -> (); // 355
drop<ContractAddress>([12]) -> (); // 356
drop<felt252>([13]) -> (); // 357
struct_construct<Tuple<ContractAddress>>([11]) -> ([14]); // 358
enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0>([14]) -> ([15]); // 359
store_temp<GasBuiltin>([2]) -> ([2]); // 360
store_temp<System>([3]) -> ([3]); // 361
store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([15]) -> ([15]); // 362
return([2], [3], [15]); // 363
branch_align() -> (); // 364
enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1>([6]) -> ([16]); // 365
store_temp<GasBuiltin>([2]) -> ([2]); // 366
store_temp<System>([3]) -> ([3]); // 367
store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([16]) -> ([16]); // 368
return([2], [3], [16]); // 369
dup<ContractAddress>([5]) -> ([5], [8]); // 370
contract_address_to_felt252([8]) -> ([9]); // 371
felt252_is_zero([9]) { fallthrough() 378([10]) }; // 372
branch_align() -> (); // 373
struct_construct<Unit>() -> ([11]); // 374
enum_init<core::bool, 1>([11]) -> ([12]); // 375
store_temp<core::bool>([12]) -> ([13]); // 376
jump() { 383() }; // 377
branch_align() -> (); // 378
drop<NonZero<felt252>>([10]) -> (); // 379
struct_construct<Unit>() -> ([14]); // 380
enum_init<core::bool, 0>([14]) -> ([15]); // 381
store_temp<core::bool>([15]) -> ([13]); // 382
bool_not_impl([13]) -> ([16]); // 383
store_temp<core::bool>([16]) -> ([16]); // 384
enum_match<core::bool>([16]) { fallthrough([17]) 405([18]) }; // 385
branch_align() -> (); // 386
drop<Unit>([17]) -> (); // 387
drop<ContractAddress>([5]) -> (); // 388
drop<core::integer::u256>([7]) -> (); // 389
drop<ContractAddress>([6]) -> (); // 390
drop<test::erc_20::ContractState>([4]) -> (); // 391
array_new<felt252>() -> ([19]); // 392
felt252_const<25936191677694277552149992725516921697451103245639728>() -> ([20]); // 393
store_temp<felt252>([20]) -> ([20]); // 394
array_append<felt252>([19], [20]) -> ([21]); // 395
struct_construct<core::panics::Panic>() -> ([22]); // 396
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([22], [21]) -> ([23]); // 397
enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 1>([23]) -> ([24]); // 398
store_temp<RangeCheck>([0]) -> ([0]); // 399
store_temp<GasBuiltin>([1]) -> ([1]); // 400
store_temp<Pedersen>([2]) -> ([2]); // 401
store_temp<System>([3]) -> ([3]); // 402
store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([24]) -> ([24]); // 403
return([0], [1], [2], [3], [24]); // 404
branch_align() -> (); // 405
drop<Unit>([18]) -> (); // 406
dup<ContractAddress>([6]) -> ([6], [25]); // 407
contract_address_to_felt252([25]) -> ([26]); // 408
felt252_is_zero([26]) { fallthrough() 415([27]) }; // 409
branch_align() -> (); // 410
struct_construct<Unit>() -> ([28]); // 411
enum_init<core::bool, 1>([28]) -> ([29]); // 412
store_temp<core::bool>([29]) -> ([30]); // 413
jump() { 420() }; // 414
branch_align() -> (); // 415
drop<NonZero<felt252>>([27]) -> (); // 416
struct_construct<Unit>() -> ([31]); // 417
enum_init<core::bool, 0>([31]) -> ([32]); // 418
store_temp<core::bool>([32]) -> ([30]); // 419
bool_not_impl([30]) -> ([33]); // 420
store_temp<core::bool>([33]) -> ([33]); // 421
enum_match<core::bool>([33]) { fallthrough([34]) 442([35]) }; // 422
branch_align() -> (); // 423
drop<Unit>([34]) -> (); // 424
drop<ContractAddress>([5]) -> (); // 425
drop<core::integer::u256>([7]) -> (); // 426
drop<ContractAddress>([6]) -> (); // 427
drop<test::erc_20::ContractState>([4]) -> (); // 428
array_new<felt252>() -> ([36]); // 429
felt252_const<395754877894504967531585582359572169455970492464>() -> ([37]); // 430
store_temp<felt252>([37]) -> ([37]); // 431
array_append<felt252>([36], [37]) -> ([38]); // 432
struct_construct<core::panics::Panic>() -> ([39]); // 433
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([39], [38]) -> ([40]); // 434
enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 1>([40]) -> ([41]); // 435
store_temp<RangeCheck>([0]) -> ([0]); // 436
store_temp<GasBuiltin>([1]) -> ([1]); // 437
store_temp<Pedersen>([2]) -> ([2]); // 438
store_temp<System>([3]) -> ([3]); // 439
store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([41]) -> ([41]); // 440
return([0], [1], [2], [3], [41]); // 441
branch_align() -> (); // 442
drop<Unit>([35]) -> (); // 443
struct_deconstruct<test::erc_20::ContractState>([4]) -> ([42], [43], [44], [45], [46], [47]); // 444
snapshot_take<test::erc_20::__member_module_balances::ContractMemberState>([46]) -> ([48], [49]); // 445
store_temp<RangeCheck>([0]) -> ([0]); // 446
store_temp<GasBuiltin>([1]) -> ([1]); // 447
store_temp<Pedersen>([2]) -> ([2]); // 448
store_temp<System>([3]) -> ([3]); // 449
dup<ContractAddress>([5]) -> ([5], [50]); // 450
store_temp<ContractAddress>([50]) -> ([50]); // 451
function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read>([0], [1], [2], [3], [49], [50]) -> ([51], [52], [53], [54], [55]); // 452
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([55]) { fallthrough([56]) 602([57]) }; // 453
branch_align() -> (); // 454
struct_deconstruct<Tuple<core::integer::u256>>([56]) -> ([58]); // 455
store_temp<RangeCheck>([51]) -> ([51]); // 456
store_temp<core::integer::u256>([58]) -> ([58]); // 457
dup<core::integer::u256>([7]) -> ([7], [59]); // 458
store_temp<core::integer::u256>([59]) -> ([59]); // 459
function_call<user@core::integer::U256Sub::sub>([51], [58], [59]) -> ([60], [61]); // 460
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([61]) { fallthrough([62]) 585([63]) }; // 461
branch_align() -> (); // 462
struct_deconstruct<Tuple<core::integer::u256>>([62]) -> ([64]); // 463
store_temp<RangeCheck>([60]) -> ([60]); // 464
store_temp<GasBuiltin>([52]) -> ([52]); // 465
store_temp<Pedersen>([53]) -> ([53]); // 466
store_temp<System>([54]) -> ([54]); // 467
dup<ContractAddress>([5]) -> ([5], [65]); // 468
store_temp<ContractAddress>([65]) -> ([65]); // 469
store_temp<core::integer::u256>([64]) -> ([64]); // 470
function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write>([60], [52], [53], [54], [48], [65], [64]) -> ([66], [67], [68], [69], [70]); // 471
enum_match<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>>([70]) { fallthrough([71]) 569([72]) }; // 472
branch_align() -> (); // 473
struct_deconstruct<Tuple<test::erc_20::__member_module_balances::ContractMemberState, Unit>>([71]) -> ([73], [74]); // 474
drop<Unit>([74]) -> (); // 475
snapshot_take<test::erc_20::__member_module_balances::ContractMemberState>([73]) -> ([75], [76]); // 476
store_temp<RangeCheck>([66]) -> ([66]); // 477
store_temp<GasBuiltin>([67]) -> ([67]); // 478
store_temp<Pedersen>([68]) -> ([68]); // 479
store_temp<System>([69]) -> ([69]); // 480
dup<ContractAddress>([6]) -> ([6], [77]); // 481
store_temp<ContractAddress>([77]) -> ([77]); // 482
function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read>([66], [67], [68], [69], [76], [77]) -> ([78], [79], [80], [81], [82]); // 483
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([82]) { fallthrough([83]) 552([84]) }; // 484
branch_align() -> (); // 485
struct_deconstruct<Tuple<core::integer::u256>>([83]) -> ([85]); // 486
store_temp<RangeCheck>([78]) -> ([78]); // 487
store_temp<core::integer::u256>([85]) -> ([85]); // 488
dup<core::integer::u256>([7]) -> ([7], [86]); // 489
store_temp<core::integer::u256>([86]) -> ([86]); // 490
function_call<user@core::integer::U256Add::add>([78], [85], [86]) -> ([87], [88]); // 491
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([88]) { fallthrough([89]) 535([90]) }; // 492
branch_align() -> (); // 493
struct_deconstruct<Tuple<core::integer::u256>>([89]) -> ([91]); // 494
store_temp<RangeCheck>([87]) -> ([87]); // 495
store_temp<GasBuiltin>([79]) -> ([79]); // 496
store_temp<Pedersen>([80]) -> ([80]); // 497
store_temp<System>([81]) -> ([81]); // 498
dup<ContractAddress>([6]) -> ([6], [92]); // 499
store_temp<ContractAddress>([92]) -> ([92]); // 500
store_temp<core::integer::u256>([91]) -> ([91]); // 501
function_call<user@test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write>([87], [79], [80], [81], [75], [92], [91]) -> ([93], [94], [95], [96], [97]); // 502
enum_match<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>>([97]) { fallthrough([98]) 519([99]) }; // 503
branch_align() -> (); // 504
struct_deconstruct<Tuple<test::erc_20::__member_module_balances::ContractMemberState, Unit>>([98]) -> ([100], [101]); // 505
drop<Unit>([101]) -> (); // 506
struct_construct<test::erc_20::ContractState>([42], [43], [44], [45], [100], [47]) -> ([102]); // 507
struct_construct<test::erc_20::Transfer>([5], [6], [7]) -> ([103]); // 508
store_temp<GasBuiltin>([94]) -> ([94]); // 509
store_temp<System>([96]) -> ([96]); // 510
store_temp<test::erc_20::Transfer>([103]) -> ([103]); // 511
function_call<user@test::erc_20::ContractStateEventEmitter::emit::<test::erc_20::Transfer, test::erc_20::EventTransferIntoEvent>>([94], [96], [102], [103]) -> ([104], [105], [106]); // 512
store_temp<RangeCheck>([93]) -> ([93]); // 513
store_temp<GasBuiltin>([104]) -> ([104]); // 514
store_temp<Pedersen>([95]) -> ([95]); // 515
store_temp<System>([105]) -> ([105]); // 516
store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([106]) -> ([106]); // 517
return([93], [104], [95], [105], [106]); // 518
branch_align() -> (); // 519
drop<ContractAddress>([5]) -> (); // 520
drop<core::integer::u256>([7]) -> (); // 521
drop<ContractAddress>([6]) -> (); // 522
drop<test::erc_20::__member_module_allowances::ContractMemberState>([47]) -> (); // 523
drop<test::erc_20::__member_module_name::ContractMemberState>([42]) -> (); // 524
drop<test::erc_20::__member_module_total_supply::ContractMemberState>([45]) -> (); // 525
drop<test::erc_20::__member_module_decimals::ContractMemberState>([44]) -> (); // 526
drop<test::erc_20::__member_module_symbol::ContractMemberState>([43]) -> (); // 527
enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 1>([99]) -> ([107]); // 528
store_temp<RangeCheck>([93]) -> ([93]); // 529
store_temp<GasBuiltin>([94]) -> ([94]); // 530
store_temp<Pedersen>([95]) -> ([95]); // 531
store_temp<System>([96]) -> ([96]); // 532
store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([107]) -> ([107]); // 533
return([93], [94], [95], [96], [107]); // 534
branch_align() -> (); // 535
drop<test::erc_20::__member_module_decimals::ContractMemberState>([44]) -> (); // 536
drop<test::erc_20::__member_module_name::ContractMemberState>([42]) -> (); // 537
drop<test::erc_20::__member_module_symbol::ContractMemberState>([43]) -> (); // 538
drop<ContractAddress>([5]) -> (); // 539
drop<test::erc_20::__member_module_total_supply::ContractMemberState>([45]) -> (); // 540
drop<core::integer::u256>([7]) -> (); // 541
drop<ContractAddress>([6]) -> (); // 542
drop<test::erc_20::__member_module_allowances::ContractMemberState>([47]) -> (); // 543
drop<test::erc_20::__member_module_balances::ContractMemberState>([75]) -> (); // 544
enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 1>([90]) -> ([108]); // 545
store_temp<RangeCheck>([87]) -> ([87]); // 546
store_temp<GasBuiltin>([79]) -> ([79]); // 547
store_temp<Pedersen>([80]) -> ([80]); // 548
store_temp<System>([81]) -> ([81]); // 549
store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([108]) -> ([108]); // 550
return([87], [79], [80], [81], [108]); // 551
branch_align() -> (); // 552
drop<test::erc_20::__member_module_decimals::ContractMemberState>([44]) -> (); // 553
drop<test::erc_20::__member_module_name::ContractMemberState>([42]) -> (); // 554
drop<test::erc_20::__member_module_symbol::ContractMemberState>([43]) -> (); // 555
drop<ContractAddress>([5]) -> (); // 556
drop<test::erc_20::__member_module_total_supply::ContractMemberState>([45]) -> (); // 557
drop<core::integer::u256>([7]) -> (); // 558
drop<ContractAddress>([6]) -> (); // 559
drop<test::erc_20::__member_module_allowances::ContractMemberState>([47]) -> (); // 560
drop<test::erc_20::__member_module_balances::ContractMemberState>([75]) -> (); // 561
enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 1>([84]) -> ([109]); // 562
store_temp<RangeCheck>([78]) -> ([78]); // 563
store_temp<GasBuiltin>([79]) -> ([79]); // 564
store_temp<Pedersen>([80]) -> ([80]); // 565
store_temp<System>([81]) -> ([81]); // 566
store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([109]) -> ([109]); // 567
return([78], [79], [80], [81], [109]); // 568
branch_align() -> (); // 569
drop<test::erc_20::__member_module_decimals::ContractMemberState>([44]) -> (); // 570
drop<test::erc_20::__member_module_name::ContractMemberState>([42]) -> (); // 571
drop<test::erc_20::__member_module_symbol::ContractMemberState>([43]) -> (); // 572
drop<ContractAddress>([5]) -> (); // 573
drop<test::erc_20::__member_module_total_supply::ContractMemberState>([45]) -> (); // 574
drop<core::integer::u256>([7]) -> (); // 575
drop<ContractAddress>([6]) -> (); // 576
drop<test::erc_20::__member_module_allowances::ContractMemberState>([47]) -> (); // 577
enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 1>([72]) -> ([110]); // 578
store_temp<RangeCheck>([66]) -> ([66]); // 579
store_temp<GasBuiltin>([67]) -> ([67]); // 580
store_temp<Pedersen>([68]) -> ([68]); // 581
store_temp<System>([69]) -> ([69]); // 582
store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([110]) -> ([110]); // 583
return([66], [67], [68], [69], [110]); // 584
branch_align() -> (); // 585
drop<test::erc_20::__member_module_decimals::ContractMemberState>([44]) -> (); // 586
drop<test::erc_20::__member_module_name::ContractMemberState>([42]) -> (); // 587
drop<test::erc_20::__member_module_symbol::ContractMemberState>([43]) -> (); // 588
drop<ContractAddress>([5]) -> (); // 589
drop<test::erc_20::__member_module_total_supply::ContractMemberState>([45]) -> (); // 590
drop<core::integer::u256>([7]) -> (); // 591
drop<ContractAddress>([6]) -> (); // 592
drop<test::erc_20::__member_module_allowances::ContractMemberState>([47]) -> (); // 593
drop<test::erc_20::__member_module_balances::ContractMemberState>([48]) -> (); // 594
enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 1>([63]) -> ([111]); // 595
store_temp<RangeCheck>([60]) -> ([60]); // 596
store_temp<GasBuiltin>([52]) -> ([52]); // 597
store_temp<Pedersen>([53]) -> ([53]); // 598
store_temp<System>([54]) -> ([54]); // 599
store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([111]) -> ([111]); // 600
return([60], [52], [53], [54], [111]); // 601
branch_align() -> (); // 602
drop<test::erc_20::__member_module_decimals::ContractMemberState>([44]) -> (); // 603
drop<test::erc_20::__member_module_name::ContractMemberState>([42]) -> (); // 604
drop<test::erc_20::__member_module_symbol::ContractMemberState>([43]) -> (); // 605
drop<ContractAddress>([5]) -> (); // 606
drop<test::erc_20::__member_module_total_supply::ContractMemberState>([45]) -> (); // 607
drop<core::integer::u256>([7]) -> (); // 608
drop<ContractAddress>([6]) -> (); // 609
drop<test::erc_20::__member_module_allowances::ContractMemberState>([47]) -> (); // 610
drop<test::erc_20::__member_module_balances::ContractMemberState>([48]) -> (); // 611
enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 1>([57]) -> ([112]); // 612
store_temp<RangeCheck>([51]) -> ([51]); // 613
store_temp<GasBuiltin>([52]) -> ([52]); // 614
store_temp<Pedersen>([53]) -> ([53]); // 615
store_temp<System>([54]) -> ([54]); // 616
store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([112]) -> ([112]); // 617
return([51], [52], [53], [54], [112]); // 618
get_execution_info_v2_syscall([0], [1]) { fallthrough([2], [3], [4]) 627([5], [6], [7]) }; // 619
branch_align() -> (); // 620
struct_construct<Tuple<Box<core::starknet::info::v2::ExecutionInfo>>>([4]) -> ([8]); // 621
enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>, 0>([8]) -> ([9]); // 622
store_temp<GasBuiltin>([2]) -> ([2]); // 623
store_temp<System>([3]) -> ([3]); // 624
store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>>([9]) -> ([9]); // 625
return([2], [3], [9]); // 626
branch_align() -> (); // 627
struct_construct<core::panics::Panic>() -> ([10]); // 628
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([10], [7]) -> ([11]); // 629
enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>, 1>([11]) -> ([12]); // 630
store_temp<GasBuiltin>([5]) -> ([5]); // 631
store_temp<System>([6]) -> ([6]); // 632
store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>>([12]) -> ([12]); // 633
return([5], [6], [12]); // 634
drop<test::erc_20::__member_module_balances::ContractMemberState>([4]) -> (); // 635
contract_address_to_felt252([5]) -> ([6]); // 636
felt252_const<1065622543624526936256554561967983185612257046533136611876836524258158810564>() -> ([7]); // 637
store_temp<felt252>([7]) -> ([7]); // 638
pedersen([2], [7], [6]) -> ([8], [9]); // 639
store_temp<felt252>([9]) -> ([9]); // 640
storage_base_address_from_felt252([0], [9]) -> ([10], [11]); // 641
u32_const<0>() -> ([12]); // 642
store_temp<RangeCheck>([10]) -> ([10]); // 643
store_temp<GasBuiltin>([1]) -> ([1]); // 644
store_temp<System>([3]) -> ([3]); // 645
store_temp<u32>([12]) -> ([12]); // 646
store_temp<StorageBaseAddress>([11]) -> ([11]); // 647
function_call<user@core::integer::Storeu256::read>([10], [1], [3], [12], [11]) -> ([13], [14], [15], [16]); // 648
store_temp<Pedersen>([8]) -> ([8]); // 649
enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([16]) { fallthrough([17]) 673([18]) }; // 650
branch_align() -> (); // 651
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([17]) -> ([19]); // 652
enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([19]) { fallthrough([20]) 663([21]) }; // 653
branch_align() -> (); // 654
struct_construct<Tuple<core::integer::u256>>([20]) -> ([22]); // 655
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([22]) -> ([23]); // 656
store_temp<RangeCheck>([13]) -> ([13]); // 657
store_temp<GasBuiltin>([14]) -> ([14]); // 658
store_temp<Pedersen>([8]) -> ([8]); // 659
store_temp<System>([15]) -> ([15]); // 660
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([23]) -> ([23]); // 661
return([13], [14], [8], [15], [23]); // 662
branch_align() -> (); // 663
struct_construct<core::panics::Panic>() -> ([24]); // 664
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([24], [21]) -> ([25]); // 665
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([25]) -> ([26]); // 666
store_temp<RangeCheck>([13]) -> ([13]); // 667
store_temp<GasBuiltin>([14]) -> ([14]); // 668
store_temp<Pedersen>([8]) -> ([8]); // 669
store_temp<System>([15]) -> ([15]); // 670
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([26]) -> ([26]); // 671
return([13], [14], [8], [15], [26]); // 672
branch_align() -> (); // 673
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([18]) -> ([27]); // 674
store_temp<RangeCheck>([13]) -> ([13]); // 675
store_temp<GasBuiltin>([14]) -> ([14]); // 676
store_temp<Pedersen>([8]) -> ([8]); // 677
store_temp<System>([15]) -> ([15]); // 678
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([27]) -> ([27]); // 679
return([13], [14], [8], [15], [27]); // 680
store_temp<RangeCheck>([0]) -> ([0]); // 681
store_temp<core::integer::u256>([1]) -> ([1]); // 682
store_temp<core::integer::u256>([2]) -> ([2]); // 683
function_call<user@core::integer::u256_overflow_sub>([0], [1], [2]) -> ([3], [4]); // 684
struct_deconstruct<Tuple<core::integer::u256, core::bool>>([4]) -> ([5], [6]); // 685
enum_match<core::bool>([6]) { fallthrough([7]) 694([8]) }; // 686
branch_align() -> (); // 687
drop<Unit>([7]) -> (); // 688
struct_construct<Tuple<core::integer::u256>>([5]) -> ([9]); // 689
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([9]) -> ([10]); // 690
store_temp<RangeCheck>([3]) -> ([3]); // 691
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([10]) -> ([10]); // 692
return([3], [10]); // 693
branch_align() -> (); // 694
drop<Unit>([8]) -> (); // 695
drop<core::integer::u256>([5]) -> (); // 696
array_new<felt252>() -> ([11]); // 697
felt252_const<39879774624085075084607933104993585622903>() -> ([12]); // 698
store_temp<felt252>([12]) -> ([12]); // 699
array_append<felt252>([11], [12]) -> ([13]); // 700
struct_construct<core::panics::Panic>() -> ([14]); // 701
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([14], [13]) -> ([15]); // 702
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([15]) -> ([16]); // 703
store_temp<RangeCheck>([3]) -> ([3]); // 704
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([16]) -> ([16]); // 705
return([3], [16]); // 706
contract_address_to_felt252([5]) -> ([7]); // 707
felt252_const<1065622543624526936256554561967983185612257046533136611876836524258158810564>() -> ([8]); // 708
store_temp<felt252>([8]) -> ([8]); // 709
pedersen([2], [8], [7]) -> ([9], [10]); // 710
store_temp<felt252>([10]) -> ([10]); // 711
storage_base_address_from_felt252([0], [10]) -> ([11], [12]); // 712
u32_const<0>() -> ([13]); // 713
store_temp<GasBuiltin>([1]) -> ([1]); // 714
store_temp<System>([3]) -> ([3]); // 715
store_temp<u32>([13]) -> ([13]); // 716
store_temp<StorageBaseAddress>([12]) -> ([12]); // 717
store_temp<core::integer::u256>([6]) -> ([6]); // 718
function_call<user@core::integer::Storeu256::write>([1], [3], [13], [12], [6]) -> ([14], [15], [16]); // 719
store_temp<Pedersen>([9]) -> ([9]); // 720
store_temp<RangeCheck>([11]) -> ([11]); // 721
enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>>([16]) { fallthrough([17]) 732([18]) }; // 722
branch_align() -> (); // 723
struct_construct<Tuple<test::erc_20::__member_module_balances::ContractMemberState, Unit>>([4], [17]) -> ([19]); // 724
enum_init<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>, 0>([19]) -> ([20]); // 725
store_temp<RangeCheck>([11]) -> ([11]); // 726
store_temp<GasBuiltin>([14]) -> ([14]); // 727
store_temp<Pedersen>([9]) -> ([9]); // 728
store_temp<System>([15]) -> ([15]); // 729
store_temp<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>>([20]) -> ([20]); // 730
return([11], [14], [9], [15], [20]); // 731
branch_align() -> (); // 732
drop<test::erc_20::__member_module_balances::ContractMemberState>([4]) -> (); // 733
struct_construct<core::panics::Panic>() -> ([21]); // 734
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([21], [18]) -> ([22]); // 735
enum_init<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>, 1>([22]) -> ([23]); // 736
store_temp<RangeCheck>([11]) -> ([11]); // 737
store_temp<GasBuiltin>([14]) -> ([14]); // 738
store_temp<Pedersen>([9]) -> ([9]); // 739
store_temp<System>([15]) -> ([15]); // 740
store_temp<core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>>([23]) -> ([23]); // 741
return([11], [14], [9], [15], [23]); // 742
store_temp<RangeCheck>([0]) -> ([0]); // 743
store_temp<core::integer::u256>([1]) -> ([1]); // 744
store_temp<core::integer::u256>([2]) -> ([2]); // 745
function_call<user@core::integer::u256_overflowing_add>([0], [1], [2]) -> ([3], [4]); // 746
struct_deconstruct<Tuple<core::integer::u256, core::bool>>([4]) -> ([5], [6]); // 747
enum_match<core::bool>([6]) { fallthrough([7]) 756([8]) }; // 748
branch_align() -> (); // 749
drop<Unit>([7]) -> (); // 750
struct_construct<Tuple<core::integer::u256>>([5]) -> ([9]); // 751
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([9]) -> ([10]); // 752
store_temp<RangeCheck>([3]) -> ([3]); // 753
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([10]) -> ([10]); // 754
return([3], [10]); // 755
branch_align() -> (); // 756
drop<Unit>([8]) -> (); // 757
drop<core::integer::u256>([5]) -> (); // 758
array_new<felt252>() -> ([11]); // 759
felt252_const<39879774624079483812136948410799859986295>() -> ([12]); // 760
store_temp<felt252>([12]) -> ([12]); // 761
array_append<felt252>([11], [12]) -> ([13]); // 762
struct_construct<core::panics::Panic>() -> ([14]); // 763
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([14], [13]) -> ([15]); // 764
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([15]) -> ([16]); // 765
store_temp<RangeCheck>([3]) -> ([3]); // 766
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([16]) -> ([16]); // 767
return([3], [16]); // 768
array_new<felt252>() -> ([4]); // 769
array_new<felt252>() -> ([5]); // 770
enum_init<test::erc_20::Event, 0>([3]) -> ([6]); // 771
snapshot_take<test::erc_20::Event>([6]) -> ([7], [8]); // 772
drop<test::erc_20::Event>([7]) -> (); // 773
store_temp<test::erc_20::Event>([8]) -> ([8]); // 774
store_temp<Array<felt252>>([4]) -> ([4]); // 775
store_temp<Array<felt252>>([5]) -> ([5]); // 776
function_call<user@test::erc_20::EventIsEvent::append_keys_and_data>([8], [4], [5]) -> ([9], [10], [11]); // 777
drop<Unit>([11]) -> (); // 778
snapshot_take<Array<felt252>>([9]) -> ([12], [13]); // 779
drop<Array<felt252>>([12]) -> (); // 780
snapshot_take<Array<felt252>>([10]) -> ([14], [15]); // 781
drop<Array<felt252>>([14]) -> (); // 782
struct_construct<core::array::Span::<core::felt252>>([13]) -> ([16]); // 783
struct_construct<core::array::Span::<core::felt252>>([15]) -> ([17]); // 784
store_temp<core::array::Span::<core::felt252>>([16]) -> ([16]); // 785
store_temp<core::array::Span::<core::felt252>>([17]) -> ([17]); // 786
emit_event_syscall([0], [1], [16], [17]) { fallthrough([18], [19]) 796([20], [21], [22]) }; // 787
branch_align() -> (); // 788
struct_construct<Unit>() -> ([23]); // 789
struct_construct<Tuple<test::erc_20::ContractState, Unit>>([2], [23]) -> ([24]); // 790
enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 0>([24]) -> ([25]); // 791
store_temp<GasBuiltin>([18]) -> ([18]); // 792
store_temp<System>([19]) -> ([19]); // 793
store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([25]) -> ([25]); // 794
return([18], [19], [25]); // 795
branch_align() -> (); // 796
drop<test::erc_20::ContractState>([2]) -> (); // 797
struct_construct<core::panics::Panic>() -> ([26]); // 798
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([26], [22]) -> ([27]); // 799
enum_init<core::panics::PanicResult::<(test::erc_20::ContractState, ())>, 1>([27]) -> ([28]); // 800
store_temp<GasBuiltin>([20]) -> ([20]); // 801
store_temp<System>([21]) -> ([21]); // 802
store_temp<core::panics::PanicResult::<(test::erc_20::ContractState, ())>>([28]) -> ([28]); // 803
return([20], [21], [28]); // 804
dup<StorageBaseAddress>([4]) -> ([4], [5]); // 805
storage_address_from_base([5]) -> ([6]); // 806
dup<u32>([3]) -> ([3], [7]); // 807
storage_read_syscall([1], [2], [7], [6]) { fallthrough([8], [9], [10]) 878([11], [12], [13]) }; // 808
branch_align() -> (); // 809
store_temp<felt252>([10]) -> ([10]); // 810
store_temp<GasBuiltin>([8]) -> ([8]); // 811
store_temp<System>([9]) -> ([9]); // 812
u128s_from_felt252([0], [10]) { fallthrough([14], [15]) 861([16], [17], [18]) }; // 813
branch_align() -> (); // 814
u8_const<1>() -> ([19]); // 815
storage_address_from_base_and_offset([4], [19]) -> ([20]); // 816
store_temp<StorageAddress>([20]) -> ([20]); // 817
store_temp<RangeCheck>([14]) -> ([14]); // 818
storage_read_syscall([8], [9], [3], [20]) { fallthrough([21], [22], [23]) 851([24], [25], [26]) }; // 819
branch_align() -> (); // 820
store_temp<felt252>([23]) -> ([23]); // 821
store_temp<GasBuiltin>([21]) -> ([21]); // 822
store_temp<System>([22]) -> ([22]); // 823
u128s_from_felt252([14], [23]) { fallthrough([27], [28]) 835([29], [30], [31]) }; // 824
branch_align() -> (); // 825
struct_construct<core::integer::u256>([15], [28]) -> ([32]); // 826
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0>([32]) -> ([33]); // 827
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([33]) -> ([34]); // 828
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([34]) -> ([35]); // 829
store_temp<RangeCheck>([27]) -> ([27]); // 830
store_temp<GasBuiltin>([21]) -> ([21]); // 831
store_temp<System>([22]) -> ([22]); // 832
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([35]) -> ([35]); // 833
return([27], [21], [22], [35]); // 834
branch_align() -> (); // 835
drop<u128>([30]) -> (); // 836
drop<u128>([31]) -> (); // 837
drop<u128>([15]) -> (); // 838
array_new<felt252>() -> ([36]); // 839
felt252_const<476442828812030857794232422692155113556837216824>() -> ([37]); // 840
store_temp<felt252>([37]) -> ([37]); // 841
array_append<felt252>([36], [37]) -> ([38]); // 842
struct_construct<core::panics::Panic>() -> ([39]); // 843
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([39], [38]) -> ([40]); // 844
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>([40]) -> ([41]); // 845
store_temp<RangeCheck>([29]) -> ([29]); // 846
store_temp<GasBuiltin>([21]) -> ([21]); // 847
store_temp<System>([22]) -> ([22]); // 848
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([41]) -> ([41]); // 849
return([29], [21], [22], [41]); // 850
branch_align() -> (); // 851
drop<u128>([15]) -> (); // 852
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>([26]) -> ([42]); // 853
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([42]) -> ([43]); // 854
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([43]) -> ([44]); // 855
store_temp<RangeCheck>([14]) -> ([14]); // 856
store_temp<GasBuiltin>([24]) -> ([24]); // 857
store_temp<System>([25]) -> ([25]); // 858
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([44]) -> ([44]); // 859
return([14], [24], [25], [44]); // 860
branch_align() -> (); // 861
drop<u128>([17]) -> (); // 862
drop<u128>([18]) -> (); // 863
drop<StorageBaseAddress>([4]) -> (); // 864
drop<u32>([3]) -> (); // 865
array_new<felt252>() -> ([45]); // 866
felt252_const<476442828812030857794232422692155113556837216824>() -> ([46]); // 867
store_temp<felt252>([46]) -> ([46]); // 868
array_append<felt252>([45], [46]) -> ([47]); // 869
struct_construct<core::panics::Panic>() -> ([48]); // 870
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([48], [47]) -> ([49]); // 871
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>([49]) -> ([50]); // 872
store_temp<RangeCheck>([16]) -> ([16]); // 873
store_temp<GasBuiltin>([8]) -> ([8]); // 874
store_temp<System>([9]) -> ([9]); // 875
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([50]) -> ([50]); // 876
return([16], [8], [9], [50]); // 877
branch_align() -> (); // 878
drop<u32>([3]) -> (); // 879
drop<StorageBaseAddress>([4]) -> (); // 880
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>([13]) -> ([51]); // 881
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([51]) -> ([52]); // 882
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([52]) -> ([53]); // 883
store_temp<RangeCheck>([0]) -> ([0]); // 884
store_temp<GasBuiltin>([11]) -> ([11]); // 885
store_temp<System>([12]) -> ([12]); // 886
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([53]) -> ([53]); // 887
return([0], [11], [12], [53]); // 888
struct_deconstruct<core::integer::u256>([1]) -> ([3], [4]); // 889
struct_deconstruct<core::integer::u256>([2]) -> ([5], [6]); // 890
u128_overflowing_sub([0], [4], [6]) { fallthrough([7], [8]) 899([9], [10]) }; // 891
branch_align() -> (); // 892
struct_construct<Unit>() -> ([11]); // 893
enum_init<core::bool, 0>([11]) -> ([12]); // 894
store_temp<RangeCheck>([7]) -> ([13]); // 895
store_temp<u128>([8]) -> ([14]); // 896
store_temp<core::bool>([12]) -> ([15]); // 897
jump() { 905() }; // 898
branch_align() -> (); // 899
struct_construct<Unit>() -> ([16]); // 900
enum_init<core::bool, 1>([16]) -> ([17]); // 901
store_temp<RangeCheck>([9]) -> ([13]); // 902
store_temp<u128>([10]) -> ([14]); // 903
store_temp<core::bool>([17]) -> ([15]); // 904
u128_overflowing_sub([13], [3], [5]) { fallthrough([18], [19]) 912([20], [21]) }; // 905
branch_align() -> (); // 906
struct_construct<core::integer::u256>([19], [14]) -> ([22]); // 907
struct_construct<Tuple<core::integer::u256, core::bool>>([22], [15]) -> ([23]); // 908
store_temp<RangeCheck>([18]) -> ([18]); // 909
store_temp<Tuple<core::integer::u256, core::bool>>([23]) -> ([23]); // 910
return([18], [23]); // 911
branch_align() -> (); // 912
u128_const<1>() -> ([24]); // 913
store_temp<u128>([24]) -> ([24]); // 914
u128_overflowing_sub([20], [14], [24]) { fallthrough([25], [26]) 922([27], [28]) }; // 915
branch_align() -> (); // 916
struct_construct<core::integer::u256>([21], [26]) -> ([29]); // 917
struct_construct<Tuple<core::integer::u256, core::bool>>([29], [15]) -> ([30]); // 918
store_temp<RangeCheck>([25]) -> ([25]); // 919
store_temp<Tuple<core::integer::u256, core::bool>>([30]) -> ([30]); // 920
return([25], [30]); // 921
branch_align() -> (); // 922
drop<core::bool>([15]) -> (); // 923
struct_construct<Unit>() -> ([31]); // 924
enum_init<core::bool, 1>([31]) -> ([32]); // 925
struct_construct<core::integer::u256>([21], [28]) -> ([33]); // 926
struct_construct<Tuple<core::integer::u256, core::bool>>([33], [32]) -> ([34]); // 927
store_temp<RangeCheck>([27]) -> ([27]); // 928
store_temp<Tuple<core::integer::u256, core::bool>>([34]) -> ([34]); // 929
return([27], [34]); // 930
struct_deconstruct<core::integer::u256>([4]) -> ([5], [6]); // 931
u128_to_felt252([5]) -> ([7]); // 932
dup<StorageBaseAddress>([3]) -> ([3], [8]); // 933
storage_address_from_base([8]) -> ([9]); // 934
dup<u32>([2]) -> ([2], [10]); // 935
storage_write_syscall([0], [1], [10], [9], [7]) { fallthrough([11], [12]) 957([13], [14], [15]) }; // 936
branch_align() -> (); // 937
u128_to_felt252([6]) -> ([16]); // 938
u8_const<1>() -> ([17]); // 939
storage_address_from_base_and_offset([3], [17]) -> ([18]); // 940
store_temp<GasBuiltin>([11]) -> ([11]); // 941
store_temp<StorageAddress>([18]) -> ([18]); // 942
storage_write_syscall([11], [12], [2], [18], [16]) { fallthrough([19], [20]) 951([21], [22], [23]) }; // 943
branch_align() -> (); // 944
struct_construct<Unit>() -> ([24]); // 945
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([24]) -> ([25]); // 946
store_temp<GasBuiltin>([19]) -> ([19]); // 947
store_temp<System>([20]) -> ([20]); // 948
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([25]) -> ([25]); // 949
return([19], [20], [25]); // 950
branch_align() -> (); // 951
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([23]) -> ([26]); // 952
store_temp<GasBuiltin>([21]) -> ([21]); // 953
store_temp<System>([22]) -> ([22]); // 954
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([26]) -> ([26]); // 955
return([21], [22], [26]); // 956
branch_align() -> (); // 957
drop<StorageBaseAddress>([3]) -> (); // 958
drop<u128>([6]) -> (); // 959
drop<u32>([2]) -> (); // 960
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([15]) -> ([27]); // 961
store_temp<GasBuiltin>([13]) -> ([13]); // 962
store_temp<System>([14]) -> ([14]); // 963
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([27]) -> ([27]); // 964
return([13], [14], [27]); // 965
struct_deconstruct<core::integer::u256>([1]) -> ([3], [4]); // 966
struct_deconstruct<core::integer::u256>([2]) -> ([5], [6]); // 967
u128_overflowing_add([0], [4], [6]) { fallthrough([7], [8]) 976([9], [10]) }; // 968
branch_align() -> (); // 969
struct_construct<Unit>() -> ([11]); // 970
enum_init<core::bool, 0>([11]) -> ([12]); // 971
store_temp<RangeCheck>([7]) -> ([13]); // 972
store_temp<u128>([8]) -> ([14]); // 973
store_temp<core::bool>([12]) -> ([15]); // 974
jump() { 982() }; // 975
branch_align() -> (); // 976
struct_construct<Unit>() -> ([16]); // 977
enum_init<core::bool, 1>([16]) -> ([17]); // 978
store_temp<RangeCheck>([9]) -> ([13]); // 979
store_temp<u128>([10]) -> ([14]); // 980
store_temp<core::bool>([17]) -> ([15]); // 981
u128_overflowing_add([13], [3], [5]) { fallthrough([18], [19]) 989([20], [21]) }; // 982
branch_align() -> (); // 983
struct_construct<core::integer::u256>([19], [14]) -> ([22]); // 984
struct_construct<Tuple<core::integer::u256, core::bool>>([22], [15]) -> ([23]); // 985
store_temp<RangeCheck>([18]) -> ([18]); // 986
store_temp<Tuple<core::integer::u256, core::bool>>([23]) -> ([23]); // 987
return([18], [23]); // 988
branch_align() -> (); // 989
u128_const<1>() -> ([24]); // 990
store_temp<u128>([24]) -> ([24]); // 991
u128_overflowing_add([20], [14], [24]) { fallthrough([25], [26]) 999([27], [28]) }; // 992
branch_align() -> (); // 993
struct_construct<core::integer::u256>([21], [26]) -> ([29]); // 994
struct_construct<Tuple<core::integer::u256, core::bool>>([29], [15]) -> ([30]); // 995
store_temp<RangeCheck>([25]) -> ([25]); // 996
store_temp<Tuple<core::integer::u256, core::bool>>([30]) -> ([30]); // 997
return([25], [30]); // 998
branch_align() -> (); // 999
drop<core::bool>([15]) -> (); // 1000
struct_construct<Unit>() -> ([31]); // 1001
enum_init<core::bool, 1>([31]) -> ([32]); // 1002
struct_construct<core::integer::u256>([21], [28]) -> ([33]); // 1003
struct_construct<Tuple<core::integer::u256, core::bool>>([33], [32]) -> ([34]); // 1004
store_temp<RangeCheck>([27]) -> ([27]); // 1005
store_temp<Tuple<core::integer::u256, core::bool>>([34]) -> ([34]); // 1006
return([27], [34]); // 1007
enum_match<test::erc_20::Event>([0]) { fallthrough([3]) 1044([4]) }; // 1008
branch_align() -> (); // 1009
felt252_const<271746229759260285552388728919865295615886751538523744128730118297934206697>() -> ([5]); // 1010
store_temp<felt252>([5]) -> ([5]); // 1011
array_append<felt252>([1], [5]) -> ([6]); // 1012
dup<test::erc_20::Transfer>([3]) -> ([3], [7]); // 1013
struct_deconstruct<test::erc_20::Transfer>([7]) -> ([8], [9], [10]); // 1014
drop<ContractAddress>([9]) -> (); // 1015
drop<core::integer::u256>([10]) -> (); // 1016
rename<ContractAddress>([8]) -> ([11]); // 1017
contract_address_to_felt252([11]) -> ([12]); // 1018
array_append<felt252>([2], [12]) -> ([13]); // 1019
dup<test::erc_20::Transfer>([3]) -> ([3], [14]); // 1020
struct_deconstruct<test::erc_20::Transfer>([14]) -> ([15], [16], [17]); // 1021
drop<ContractAddress>([15]) -> (); // 1022
drop<core::integer::u256>([17]) -> (); // 1023
rename<ContractAddress>([16]) -> ([18]); // 1024
contract_address_to_felt252([18]) -> ([19]); // 1025
array_append<felt252>([13], [19]) -> ([20]); // 1026
struct_deconstruct<test::erc_20::Transfer>([3]) -> ([21], [22], [23]); // 1027
drop<ContractAddress>([21]) -> (); // 1028
drop<ContractAddress>([22]) -> (); // 1029
dup<core::integer::u256>([23]) -> ([23], [24]); // 1030
struct_deconstruct<core::integer::u256>([24]) -> ([25], [26]); // 1031
drop<u128>([26]) -> (); // 1032
rename<u128>([25]) -> ([27]); // 1033
u128_to_felt252([27]) -> ([28]); // 1034
array_append<felt252>([20], [28]) -> ([29]); // 1035
struct_deconstruct<core::integer::u256>([23]) -> ([30], [31]); // 1036
drop<u128>([30]) -> (); // 1037
rename<u128>([31]) -> ([32]); // 1038
u128_to_felt252([32]) -> ([33]); // 1039
array_append<felt252>([29], [33]) -> ([34]); // 1040
store_temp<Array<felt252>>([6]) -> ([35]); // 1041
store_temp<Array<felt252>>([34]) -> ([36]); // 1042
jump() { 1078() }; // 1043
branch_align() -> (); // 1044
felt252_const<544914742286571513055574265148471203182105283038408585630116262969508767999>() -> ([37]); // 1045
store_temp<felt252>([37]) -> ([37]); // 1046
array_append<felt252>([1], [37]) -> ([38]); // 1047
dup<test::erc_20::Approval>([4]) -> ([4], [39]); // 1048
struct_deconstruct<test::erc_20::Approval>([39]) -> ([40], [41], [42]); // 1049
drop<ContractAddress>([41]) -> (); // 1050
drop<core::integer::u256>([42]) -> (); // 1051
rename<ContractAddress>([40]) -> ([43]); // 1052
contract_address_to_felt252([43]) -> ([44]); // 1053
array_append<felt252>([2], [44]) -> ([45]); // 1054
dup<test::erc_20::Approval>([4]) -> ([4], [46]); // 1055
struct_deconstruct<test::erc_20::Approval>([46]) -> ([47], [48], [49]); // 1056
drop<ContractAddress>([47]) -> (); // 1057
drop<core::integer::u256>([49]) -> (); // 1058
rename<ContractAddress>([48]) -> ([50]); // 1059
contract_address_to_felt252([50]) -> ([51]); // 1060
array_append<felt252>([45], [51]) -> ([52]); // 1061
struct_deconstruct<test::erc_20::Approval>([4]) -> ([53], [54], [55]); // 1062
drop<ContractAddress>([53]) -> (); // 1063
drop<ContractAddress>([54]) -> (); // 1064
dup<core::integer::u256>([55]) -> ([55], [56]); // 1065
struct_deconstruct<core::integer::u256>([56]) -> ([57], [58]); // 1066
drop<u128>([58]) -> (); // 1067
rename<u128>([57]) -> ([59]); // 1068
u128_to_felt252([59]) -> ([60]); // 1069
array_append<felt252>([52], [60]) -> ([61]); // 1070
struct_deconstruct<core::integer::u256>([55]) -> ([62], [63]); // 1071
drop<u128>([62]) -> (); // 1072
rename<u128>([63]) -> ([64]); // 1073
u128_to_felt252([64]) -> ([65]); // 1074
array_append<felt252>([61], [65]) -> ([66]); // 1075
store_temp<Array<felt252>>([38]) -> ([35]); // 1076
store_temp<Array<felt252>>([66]) -> ([36]); // 1077
struct_construct<Unit>() -> ([67]); // 1078
return([35], [36], [67]); // 1079

test::erc20_transfer@0([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<((),)>);
test::erc_20::unsafe_new_contract_state@51() -> (test::erc_20::ContractState);
test::erc_20::__wrapper__IERC20Impl__transfer@59([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
core::starknet::contract_address::ContractAddressSerde::deserialize@199([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::starknet::contract_address::ContractAddress>);
core::integer::u256Serde::deserialize@240([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::integer::u256>);
test::erc_20::IERC20Impl::transfer@320([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: test::erc_20::ContractState, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(test::erc_20::ContractState, ())>);
core::starknet::info::get_caller_address@346([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>);
test::erc_20::StorageImpl::transfer_helper@370([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: test::erc_20::ContractState, [5]: ContractAddress, [6]: ContractAddress, [7]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(test::erc_20::ContractState, ())>);
core::starknet::info::get_execution_info@619([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::panics::PanicResult::<(core::box::Box::<core::starknet::info::v2::ExecutionInfo>,)>);
test::erc_20::__member_module_balances::InternalContractMemberStateImpl::read@635([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: test::erc_20::__member_module_balances::ContractMemberState, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(core::integer::u256,)>);
core::integer::U256Sub::sub@681([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u256,)>);
test::erc_20::__member_module_balances::InternalContractMemberStateImpl::write@707([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: test::erc_20::__member_module_balances::ContractMemberState, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(test::erc_20::__member_module_balances::ContractMemberState, ())>);
core::integer::U256Add::add@743([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u256,)>);
test::erc_20::ContractStateEventEmitter::emit::<test::erc_20::Transfer, test::erc_20::EventTransferIntoEvent>@769([0]: GasBuiltin, [1]: System, [2]: test::erc_20::ContractState, [3]: test::erc_20::Transfer) -> (GasBuiltin, System, core::panics::PanicResult::<(test::erc_20::ContractState, ())>);
core::integer::Storeu256::read@805([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>);
core::integer::u256_overflow_sub@889([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, Tuple<core::integer::u256, core::bool>);
core::integer::Storeu256::write@931([0]: GasBuiltin, [1]: System, [2]: u32, [3]: StorageBaseAddress, [4]: core::integer::u256) -> (GasBuiltin, System, core::result::Result::<(), core::array::Array::<core::felt252>>);
core::integer::u256_overflowing_add@966([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, Tuple<core::integer::u256, core::bool>);
test::erc_20::EventIsEvent::append_keys_and_data@1008([0]: test::erc_20::Event, [1]: Array<felt252>, [2]: Array<felt252>) -> (Array<felt252>, Array<felt252>, Unit);

//! > Casms Program
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 2, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [ap + -3] + 1, ap++;
%{ raise NotImplementedError %}
ap += 2;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 1, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = 0, ap++;
[ap + -1] = [[ap + -3] + 1];
[ap + 0] = 0, ap++;
[ap + -1] = [[ap + -4] + 2];
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -9] + 3, ap++;
call rel 25;
jmp rel 13 if [ap + -3] != 0;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
ret;
ret;
%{ memory[ap + 0] = 9960 <= memory[fp + -6] %}
jmp rel 7 if [ap + 0] != 0, ap++;
[ap + 0] = [fp + -6] + 340282366920938463463374607431768201496, ap++;
[ap + -1] = [[fp + -7] + 0];
jmp rel 138;
[fp + -6] = [ap + 0] + 9960, ap++;
[ap + -1] = [[fp + -7] + 0];
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 145;
jmp rel 112 if [ap + -2] != 0;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
call rel 213;
jmp rel 90 if [ap + -3] != 0;
[ap + -4] = [ap + 0] + [ap + -5], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 17;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 7733229381460288120802334208475838166080759535023995805565484692595, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -65], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
call rel 1220;
[ap + 0] = [ap + -1] + 1219, ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
[ap + 0] = [[ap + -1] + 0], ap++;
[ap + 0] = [ap + -1] * 4, ap++;
[ap + 0] = [ap + -1] + 151940, ap++;
%{ memory[ap + 0] = memory[ap + -1] <= memory[ap + -68] %}
jmp rel 8 if [ap + 0] != 0, ap++;
[ap + -69] = [ap + 0] + [ap + -2], ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[ap + -17] + 0];
jmp rel 36;
[ap + -69] = [ap + 0] + [ap + -2], ap++;
[ap + -1] = [[ap + -16] + 0];
[ap + 0] = [ap + -16] + 1, ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [ap + -50], ap++;
[ap + 0] = [ap + -17], ap++;
[ap + 0] = [ap + -17], ap++;
call rel 302;
jmp rel 13 if [ap + -3] != 0;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -7], ap++;
ret;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [ap + -20] + 1, ap++;
[ap + 0] = [ap + -75], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 485748461484230571791265682659113160264223489397539653310998840191492914, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -64], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 485748461484230571791265682659113160264223489397539653310998840191492913, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -29], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 375233589013918064796019, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
[fp + -3] = [ap + 0] + [fp + -4], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -4] + 1, ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
jmp rel 8;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 44 if [ap + -4] != 0;
[ap + 0] = [[ap + -3] + 0], ap++;
%{ memory[ap + 4] = memory[ap + -1] < 3618502788666131106986593281521497120414687020801267626233049500247285301248 %}
jmp rel 14 if [ap + 4] != 0, ap++;
[ap + -2] = [ap + 4] + 3618502788666131106986593281521497120414687020801267626233049500247285301248, ap++;
%{
(value, scalar) = (memory[ap + 3], 313594649253062377472)
x = min(value // scalar, 340282366920938463463374607431768211455)
y = value - x * scalar
memory[ap + -2] = x
memory[ap + -1] = y
%}
[ap + 0] = [ap + -2] * 313594649253062377472, ap++;
[ap + 2] = [ap + -1] + [ap + -2], ap++;
[ap + -4] = [[fp + -5] + 0], ap++;
[ap + -4] = [[fp + -5] + 1], ap++;
[ap + -3] = [ap + -5] + 340282366920938463149779958178705833983;
[ap + -3] = [[fp + -5] + 2];
jmp rel 20;
%{
(value, scalar) = (memory[ap + -2], 10633823966279326983230456482242756608)
x = min(value // scalar, 340282366920938463463374607431768211455)
y = value - x * scalar
memory[ap + -1] = x
memory[ap + 0] = y
%}
[ap + 1] = [ap + -1] * 10633823966279326983230456482242756608, ap++;
[ap + -3] = [ap + 0] + [ap + -1], ap++;
[ap + -3] = [[fp + -5] + 0], ap++;
[ap + -3] = [[fp + -5] + 1], ap++;
[ap + -2] = [ap + -4] + 329648542954659136480144150949525454848;
[ap + -2] = [[fp + -5] + 2];
ap += 1;
[ap + 0] = [fp + -5] + 3, ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -11], ap++;
ret;
[ap + 0] = [fp + -5] + 3, ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 7;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
ret;
[fp + -3] = [ap + 0] + [fp + -4], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [fp + -4] + 1, ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -4], ap++;
jmp rel 8;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 108 if [ap + -4] != 0;
[ap + 0] = [[ap + -3] + 0], ap++;
%{ memory[ap + 0] = memory[ap + -1] < 340282366920938463463374607431768211456 %}
jmp rel 22 if [ap + 0] != 0, ap++;
%{ (memory[ap + 3], memory[ap + 4]) = divmod(memory[ap + -2], 340282366920938463463374607431768211456) %}
[ap + 3] = [[fp + -5] + 0], ap++;
[ap + 3] = [[fp + -5] + 1], ap++;
[ap + -2] = [ap + 1] * 340282366920938463463374607431768211456, ap++;
[ap + -5] = [ap + -3] + [ap + 1], ap++;
[ap + -3] = [ap + -1] + -10633823966279327296825105735305134080, ap++;
jmp rel 6 if [ap + -4] != 0;
[ap + -3] = [ap + -1] + 340282366920938463463374607431768211455;
jmp rel 4;
[ap + -3] = [ap + -2] + 329648542954659136166549501696463077376;
[ap + -3] = [[fp + -5] + 2];
jmp rel 81 if [ap + -2] != 0;
[fp + -1] = [fp + -1] + 1;
[ap + -2] = [[fp + -5] + 0];
[ap + 0] = [fp + -5] + 1, ap++;
[ap + -8] = [ap + 0] + [ap + -9], ap++;
jmp rel 4 if [ap + -1] != 0;
jmp rel 10;
[ap + 0] = [ap + -10] + 1, ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -13], ap++;
jmp rel 8;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
jmp rel 41 if [ap + -4] != 0;
[ap + 0] = [[ap + -3] + 0], ap++;
%{ memory[ap + 0] = memory[ap + -1] < 340282366920938463463374607431768211456 %}
jmp rel 22 if [ap + 0] != 0, ap++;
%{ (memory[ap + 3], memory[ap + 4]) = divmod(memory[ap + -2], 340282366920938463463374607431768211456) %}
[ap + 3] = [[ap + -10] + 0], ap++;
[ap + 3] = [[ap + -11] + 1], ap++;
[ap + -2] = [ap + 1] * 340282366920938463463374607431768211456, ap++;
[ap + -5] = [ap + -3] + [ap + 1], ap++;
[ap + -3] = [ap + -1] + -10633823966279327296825105735305134080, ap++;
jmp rel 6 if [ap + -4] != 0;
[ap + -3] = [ap + -1] + 340282366920938463463374607431768211455;
jmp rel 4;
[ap + -3] = [ap + -2] + 329648542954659136166549501696463077376;
[ap + -3] = [[ap + -15] + 2];
jmp rel 16 if [ap + -2] != 0;
[fp + -1] = [fp + -1] + 1;
[ap + -2] = [[ap + -10] + 0];
ap += 5;
[ap + 0] = [ap + -15] + 1, ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -21], ap++;
[ap + 0] = [ap + -12], ap++;
ret;
[ap + 0] = [ap + -15] + 3, ap++;
jmp rel 5;
ap += 7;
[ap + 0] = [ap + -15], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = [ap + -10], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
ap += 10;
[ap + 0] = [fp + -5] + 3, ap++;
jmp rel 5;
ap += 17;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [ap + -20], ap++;
[ap + 0] = [ap + -20], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -6], ap++;
call rel 26;
jmp rel 13 if [ap + -3] != 0;
[ap + 0] = [fp + -9], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 35;
ret;
ap += 337;
[ap + 0] = [fp + -9], ap++;
[ap + 0] = [ap + -343], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [ap + -344], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -344], ap++;
[ap + 0] = [ap + -344], ap++;
ret;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 219;
jmp rel 10 if [ap + -3] != 0;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[ap + -5] + 2], ap++;
ret;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [ap + -5], ap++;
ret;
jmp rel 6 if [fp + -6] != 0;
[ap + 0] = 1, ap++;
jmp rel 4;
[ap + 0] = 0, ap++;
[ap + 0] = 1, ap++;
[ap + -1] = [ap + 0] + [ap + -2], ap++;
jmp rel 19 if [ap + -1] != 0;
ap += 322;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 25936191677694277552149992725516921697451103245639728, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -10], ap++;
[ap + 0] = [fp + -9], ap++;
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
jmp rel 6 if [fp + -5] != 0;
[ap + 0] = 1, ap++;
jmp rel 4;
[ap + 0] = 0, ap++;
[ap + 0] = 1, ap++;
[ap + -1] = [ap + 0] + [ap + -2], ap++;
jmp rel 19 if [ap + -1] != 0;
ap += 319;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 395754877894504967531585582359572169455970492464, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -10], ap++;
[ap + 0] = [fp + -9], ap++;
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
[ap + 0] = [fp + -10], ap++;
[ap + 0] = [fp + -9], ap++;
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [fp + -6], ap++;
call rel 159;
jmp rel 122 if [ap + -3] != 0;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 226;
jmp rel 102 if [ap + -3] != 0;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
call rel 244;
jmp rel 80 if [ap + -3] != 0;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [fp + -5], ap++;
call rel 130;
jmp rel 60 if [ap + -3] != 0;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 295;
jmp rel 40 if [ap + -3] != 0;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
call rel 215;
jmp rel 18 if [ap + -3] != 0;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -5], ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 303;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
ret;
ap += 37;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -44], ap++;
[ap + 0] = [ap + -44], ap++;
ret;
ap += 83;
[ap + 0] = [ap + -87], ap++;
[ap + 0] = [ap + -127], ap++;
[ap + 0] = [ap + -127], ap++;
[ap + 0] = [ap + -127], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -90], ap++;
[ap + 0] = [ap + -90], ap++;
ret;
ap += 120;
[ap + 0] = [ap + -127], ap++;
[ap + 0] = [ap + -127], ap++;
[ap + 0] = [ap + -127], ap++;
[ap + 0] = [ap + -127], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -127], ap++;
[ap + 0] = [ap + -127], ap++;
ret;
ap += 179;
[ap + 0] = [ap + -186], ap++;
[ap + 0] = [ap + -186], ap++;
[ap + 0] = [ap + -186], ap++;
[ap + 0] = [ap + -186], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -186], ap++;
[ap + 0] = [ap + -186], ap++;
ret;
ap += 225;
[ap + 0] = [ap + -229], ap++;
[ap + 0] = [ap + -269], ap++;
[ap + 0] = [ap + -269], ap++;
[ap + 0] = [ap + -269], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -232], ap++;
[ap + 0] = [ap + -232], ap++;
ret;
ap += 262;
[ap + 0] = [ap + -269], ap++;
[ap + 0] = [ap + -269], ap++;
[ap + 0] = [ap + -269], ap++;
[ap + 0] = [ap + -269], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -269], ap++;
[ap + 0] = [ap + -269], ap++;
ret;
[ap + 0] = 94901967946959054011942058057773508207, ap++;
[ap + -1] = [[fp + -3] + 0];
[fp + -4] = [[fp + -3] + 1];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -3]) %}
[ap + 0] = [[fp + -3] + 3], ap++;
jmp rel 11 if [ap + -1] != 0;
[ap + 0] = [[fp + -3] + 2], ap++;
[ap + 0] = [fp + -3] + 5, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [[fp + -3] + 4], ap++;
ret;
[ap + 0] = [[fp + -3] + 2], ap++;
[ap + 0] = [fp + -3] + 6, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -3] + 4], ap++;
[ap + 0] = [[fp + -3] + 5], ap++;
ret;
[ap + 0] = 1065622543624526936256554561967983185612257046533136611876836524258158810564, ap++;
[ap + -1] = [[fp + -5] + 0];
[fp + -3] = [[fp + -5] + 1];
[ap + 0] = [[fp + -5] + 2], ap++;
%{ memory[ap + 5] = memory[ap + -1] < 3618502788666131106986593281521497120414687020801267626233049500247285300992 %}
jmp rel 14 if [ap + 5] != 0, ap++;
[ap + -2] = [ap + 5] + 3618502788666131106986593281521497120414687020801267626233049500247285300992, ap++;
%{
(value, scalar) = (memory[ap + 4], 313594649253062377472)
x = min(value // scalar, 340282366920938463463374607431768211455)
y = value - x * scalar
memory[ap + -2] = x
memory[ap + -1] = y
%}
[ap + 0] = [ap + -2] * 313594649253062377472, ap++;
[ap + 3] = [ap + -1] + [ap + -2], ap++;
[ap + -4] = [[fp + -7] + 0], ap++;
[ap + -4] = [[fp + -7] + 1], ap++;
[ap + -3] = [ap + -5] + 340282366920938463149779958178705833727, ap++;
[ap + -4] = [[fp + -7] + 2];
jmp rel 17;
[ap + 5] = [ap + -2], ap++;
%{
(value, scalar) = (memory[ap + 4], 10633823966279326983230456482242756608)
x = min(value // scalar, 340282366920938463463374607431768211454)
y = value - x * scalar
memory[ap + -2] = x
memory[ap + -1] = y
%}
[ap + 0] = [ap + -2] * 10633823966279326983230456482242756608, ap++;
[ap + 3] = [ap + -1] + [ap + -2], ap++;
[ap + -3] = [[fp + -7] + 0], ap++;
[ap + -2] = [ap + -4] + 319014718988379809496913694467282698496, ap++;
[ap + -3] = [[fp + -7] + 1], ap++;
[ap + -7] = [[fp + -7] + 2];
[ap + -7] = [ap + -3] + 340282366920938463463374607431768211455;
jmp rel 4 if [ap + -3] != 0;
[fp + -1] = [fp + -1] + 1;
[ap + 0] = [fp + -7] + 3, ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -5], ap++;
call rel 211;
[ap + 0] = [fp + -5] + 3, ap++;
jmp rel 22 if [ap + -5] != 0;
jmp rel 11 if [ap + -4] != 0;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
ret;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
ret;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
ret;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 322;
jmp rel 10 if [ap + -1] != 0;
ap += 2;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 39879774624085075084607933104993585622903, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -6], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -5] + 1, ap++;
ret;
[ap + 0] = 1065622543624526936256554561967983185612257046533136611876836524258158810564, ap++;
[ap + -1] = [[fp + -7] + 0];
[fp + -5] = [[fp + -7] + 1];
[ap + 0] = [[fp + -7] + 2], ap++;
%{ memory[ap + 5] = memory[ap + -1] < 3618502788666131106986593281521497120414687020801267626233049500247285300992 %}
jmp rel 14 if [ap + 5] != 0, ap++;
[ap + -2] = [ap + 5] + 3618502788666131106986593281521497120414687020801267626233049500247285300992, ap++;
%{
(value, scalar) = (memory[ap + 4], 313594649253062377472)
x = min(value // scalar, 340282366920938463463374607431768211455)
y = value - x * scalar
memory[ap + -2] = x
memory[ap + -1] = y
%}
[ap + 0] = [ap + -2] * 313594649253062377472, ap++;
[ap + 3] = [ap + -1] + [ap + -2], ap++;
[ap + -4] = [[fp + -9] + 0], ap++;
[ap + -4] = [[fp + -9] + 1], ap++;
[ap + -3] = [ap + -5] + 340282366920938463149779958178705833727, ap++;
[ap + -4] = [[fp + -9] + 2];
jmp rel 17;
[ap + 5] = [ap + -2], ap++;
%{
(value, scalar) = (memory[ap + 4], 10633823966279326983230456482242756608)
x = min(value // scalar, 340282366920938463463374607431768211454)
y = value - x * scalar
memory[ap + -2] = x
memory[ap + -1] = y
%}
[ap + 0] = [ap + -2] * 10633823966279326983230456482242756608, ap++;
[ap + 3] = [ap + -1] + [ap + -2], ap++;
[ap + -3] = [[fp + -9] + 0], ap++;
[ap + -2] = [ap + -4] + 319014718988379809496913694467282698496, ap++;
[ap + -3] = [[fp + -9] + 1], ap++;
[ap + -7] = [[fp + -9] + 2];
[ap + -7] = [ap + -3] + 340282366920938463463374607431768211455;
jmp rel 4 if [ap + -3] != 0;
[fp + -1] = [fp + -1] + 1;
[ap + 0] = [fp + -8], ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 323;
[ap + 0] = [fp + -7] + 3, ap++;
[ap + 0] = [fp + -9] + 3, ap++;
jmp rel 13 if [ap + -5] != 0;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [ap + -1], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -9], ap++;
[ap + 0] = [ap + -9], ap++;
ret;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
call rel 341;
jmp rel 10 if [ap + -1] != 0;
ap += 2;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -7], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 39879774624079483812136948410799859986295, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -6], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -5] + 1, ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 0, ap++;
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5], ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3], ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -8], ap++;
[ap + 0] = [ap + -9], ap++;
call rel 369;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = 1280709301550335749748, ap++;
[ap + -1] = [[fp + -7] + 0];
[fp + -8] = [[fp + -7] + 1];
[ap + -5] = [[fp + -7] + 2];
[ap + -4] = [[fp + -7] + 3];
[ap + -3] = [[fp + -7] + 4];
[ap + -2] = [[fp + -7] + 5];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -7]) %}
[ap + 0] = [[fp + -7] + 7], ap++;
jmp rel 12 if [ap + -1] != 0;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 8, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [[fp + -7] + 6], ap++;
[ap + 0] = [fp + -7] + 10, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
[ap + 0] = [[fp + -7] + 9], ap++;
ret;
[ap + 0] = 100890693370601760042082660, ap++;
[ap + -1] = [[fp + -5] + 0];
[fp + -6] = [[fp + -5] + 1];
[fp + -4] = [[fp + -5] + 2];
[fp + -3] = [[fp + -5] + 3];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -5]) %}
[ap + 0] = [[fp + -5] + 5], ap++;
jmp rel 131 if [ap + -1] != 0;
[ap + 0] = [[fp + -5] + 6], ap++;
[ap + 0] = [[fp + -5] + 4], ap++;
[ap + 0] = [fp + -5] + 7, ap++;
%{ memory[ap + 0] = memory[ap + -3] < 340282366920938463463374607431768211456 %}
jmp rel 22 if [ap + 0] != 0, ap++;
%{ (memory[ap + 3], memory[ap + 4]) = divmod(memory[ap + -4], 340282366920938463463374607431768211456) %}
[ap + 3] = [[fp + -7] + 0], ap++;
[ap + 3] = [[fp + -7] + 1], ap++;
[ap + -2] = [ap + 1] * 340282366920938463463374607431768211456, ap++;
[ap + -7] = [ap + -3] + [ap + 1], ap++;
[ap + -3] = [ap + -1] + -10633823966279327296825105735305134080, ap++;
jmp rel 6 if [ap + -4] != 0;
[ap + -3] = [ap + -1] + 340282366920938463463374607431768211455;
jmp rel 4;
[ap + -3] = [ap + -2] + 329648542954659136166549501696463077376;
[ap + -3] = [[fp + -7] + 2];
jmp rel 88 if [ap + -2] != 0;
[fp + -1] = [fp + -1] + 1;
[ap + -4] = [[fp + -7] + 0];
[ap + 0] = [fp + -3] + 1, ap++;
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = 100890693370601760042082660, ap++;
[ap + -1] = [[ap + -5] + 0];
[ap + -6] = [[ap + -5] + 1];
[fp + -4] = [[ap + -5] + 2];
[ap + -3] = [[ap + -5] + 3];
%{ syscall_handler.syscall(syscall_ptr=memory[ap + -5]) %}
[ap + 0] = [[ap + -5] + 5], ap++;
jmp rel 59 if [ap + -1] != 0;
[ap + 0] = [[ap + -6] + 6], ap++;
[ap + 0] = [[ap + -7] + 4], ap++;
[ap + 0] = [ap + -8] + 7, ap++;
%{ memory[ap + 0] = memory[ap + -3] < 340282366920938463463374607431768211456 %}
jmp rel 22 if [ap + 0] != 0, ap++;
%{ (memory[ap + 3], memory[ap + 4]) = divmod(memory[ap + -4], 340282366920938463463374607431768211456) %}
[ap + 3] = [[ap + -7] + 0], ap++;
[ap + 3] = [[ap + -8] + 1], ap++;
[ap + -2] = [ap + 1] * 340282366920938463463374607431768211456, ap++;
[ap + -7] = [ap + -3] + [ap + 1], ap++;
[ap + -3] = [ap + -1] + -10633823966279327296825105735305134080, ap++;
jmp rel 6 if [ap + -4] != 0;
[ap + -3] = [ap + -1] + 340282366920938463463374607431768211455;
jmp rel 4;
[ap + -3] = [ap + -2] + 329648542954659136166549501696463077376;
[ap + -3] = [[ap + -12] + 2];
jmp rel 18 if [ap + -2] != 0;
[fp + -1] = [fp + -1] + 1;
[ap + -4] = [[ap + -7] + 0];
ap += 7;
[ap + 0] = [ap + -14] + 1, ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -24], ap++;
[ap + 0] = [ap + -17], ap++;
ret;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 476442828812030857794232422692155113556837216824, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [ap + -14] + 3, ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
ap += 11;
[ap + 0] = [ap + -14], ap++;
[ap + 0] = [[ap + -18] + 4], ap++;
[ap + 0] = [ap + -19] + 8, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[ap + -22] + 6], ap++;
[ap + 0] = [[ap + -23] + 7], ap++;
ret;
ap += 8;
%{ memory[ap + 0] = segments.add() %}
ap += 1;
[ap + 0] = 476442828812030857794232422692155113556837216824, ap++;
[ap + -1] = [[ap + -2] + 0];
[ap + 0] = [fp + -7] + 3, ap++;
[ap + 0] = [ap + -19], ap++;
[ap + 0] = [ap + -19], ap++;
[ap + 0] = 1, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -8] + 1, ap++;
ret;
ap += 19;
[ap + 0] = [fp + -7], ap++;
[ap + 0] = [[fp + -5] + 4], ap++;
[ap + 0] = [fp + -5] + 8, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -5] + 6], ap++;
[ap + 0] = [[fp + -5] + 7], ap++;
ret;
[fp + -5] = [ap + 1] + [fp + -3], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 340282366920938463463374607431768211456 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -7] + 0];
jmp rel 12;
[ap + -1] = [[fp + -7] + 0];
ap += 1;
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 0, ap++;
jmp rel 7;
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = 1, ap++;
[fp + -6] = [ap + 1] + [fp + -4], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 340282366920938463463374607431768211456 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[ap + -6] + 0];
jmp rel 11;
[ap + -1] = [[ap + -5] + 0];
ap += 5;
[ap + 0] = [ap + -10] + 1, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [ap + -11], ap++;
ret;
[ap + 0] = 1, ap++;
[ap + -6] = [ap + 1] + [ap + -1], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 340282366920938463463374607431768211456 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + 0] = [ap + -1] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[ap + -10] + 1];
jmp rel 11;
[ap + -1] = [[ap + -9] + 1];
ap += 1;
[ap + 0] = [ap + -10] + 2, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -11], ap++;
ret;
[ap + 0] = [ap + -10] + 2, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 1, ap++;
ret;
[ap + 0] = 25828017502874050592466629733, ap++;
[ap + -1] = [[fp + -7] + 0];
[fp + -8] = [[fp + -7] + 1];
[fp + -6] = [[fp + -7] + 2];
[fp + -5] = [[fp + -7] + 3];
[fp + -4] = [[fp + -7] + 4];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -7]) %}
[ap + 0] = [[fp + -7] + 6], ap++;
jmp rel 33 if [ap + -1] != 0;
[ap + 0] = [[fp + -7] + 5], ap++;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = 25828017502874050592466629733, ap++;
[ap + -1] = [[fp + -7] + 7];
[ap + -3] = [[fp + -7] + 8];
[fp + -6] = [[fp + -7] + 9];
[ap + -2] = [[fp + -7] + 10];
[fp + -3] = [[fp + -7] + 11];
%{ syscall_handler.syscall(syscall_ptr=memory[fp + -7] + 7) %}
[ap + 0] = [[fp + -7] + 13], ap++;
jmp rel 12 if [ap + -1] != 0;
[ap + 0] = [[fp + -7] + 12], ap++;
[ap + 0] = [fp + -7] + 14, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
[ap + 0] = 0, ap++;
ret;
[ap + 0] = [[fp + -7] + 12], ap++;
[ap + 0] = [fp + -7] + 16, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -7] + 14], ap++;
[ap + 0] = [[fp + -7] + 15], ap++;
ret;
ap += 4;
[ap + 0] = [[fp + -7] + 5], ap++;
[ap + 0] = [fp + -7] + 9, ap++;
[ap + 0] = 1, ap++;
[ap + 0] = [[fp + -7] + 7], ap++;
[ap + 0] = [[fp + -7] + 8], ap++;
ret;
[ap + 1] = [fp + -5] + [fp + -3], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 340282366920938463463374607431768211456 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + -1] = [ap + 0] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[fp + -7] + 0];
jmp rel 12;
[ap + -1] = [[fp + -7] + 0];
ap += 1;
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 0, ap++;
jmp rel 7;
[ap + 0] = [fp + -7] + 1, ap++;
[ap + 0] = [ap + -2], ap++;
[ap + 0] = 1, ap++;
[ap + 1] = [fp + -6] + [fp + -4], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 340282366920938463463374607431768211456 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + -1] = [ap + 0] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[ap + -6] + 0];
jmp rel 11;
[ap + -1] = [[ap + -5] + 0];
ap += 5;
[ap + 0] = [ap + -10] + 1, ap++;
[ap + 0] = [ap + -7], ap++;
[ap + 0] = [ap + -11], ap++;
[ap + 0] = [ap + -11], ap++;
ret;
[ap + 0] = 1, ap++;
[ap + 1] = [ap + -6] + [ap + -1], ap++;
%{ memory[ap + -1] = memory[ap + 0] < 340282366920938463463374607431768211456 %}
jmp rel 7 if [ap + -1] != 0, ap++;
[ap + -1] = [ap + 0] + 340282366920938463463374607431768211456, ap++;
[ap + -1] = [[ap + -10] + 1];
jmp rel 11;
[ap + -1] = [[ap + -9] + 1];
ap += 1;
[ap + 0] = [ap + -10] + 2, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -4], ap++;
[ap + 0] = [ap + -11], ap++;
ret;
[ap + 0] = [ap + -10] + 2, ap++;
[ap + 0] = [ap + -6], ap++;
[ap + 0] = [ap + -3], ap++;
[ap + 0] = 1, ap++;
ret;
jmp rel 17 if [fp + -11] != 0;
[ap + 0] = 271746229759260285552388728919865295615886751538523744128730118297934206697, ap++;
[ap + -1] = [[fp + -5] + 0];
[fp + -10] = [[fp + -3] + 0];
[fp + -9] = [[fp + -3] + 1];
[fp + -8] = [[fp + -3] + 2];
[fp + -7] = [[fp + -3] + 3];
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3] + 4, ap++;
jmp rel 15;
[ap + 0] = 544914742286571513055574265148471203182105283038408585630116262969508767999, ap++;
[ap + -1] = [[fp + -5] + 0];
[fp + -10] = [[fp + -3] + 0];
[fp + -9] = [[fp + -3] + 1];
[fp + -8] = [[fp + -3] + 2];
[fp + -7] = [[fp + -3] + 3];
[ap + 0] = [fp + -6], ap++;
[ap + 0] = [fp + -5] + 1, ap++;
[ap + 0] = [fp + -4], ap++;
[ap + 0] = [fp + -3] + 4, ap++;
ret;
