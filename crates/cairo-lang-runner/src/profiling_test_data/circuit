//! > Test profiling info of circuit.sierra

//! > test_runner_name
test_profiling

//! > cairo_code
use core::circuit::{
    RangeCheck96, AddMod, MulMod, u96, CircuitElement, CircuitInput, circuit_add, circuit_sub,
    circuit_mul, circuit_inverse, EvalCircuitResult, EvalCircuitTrait, u384, CircuitOutputsTrait,
    CircuitModulus, AddInputResultTrait, CircuitInputs,
};

pub fn eval_circuit() -> u384 {
    let in1 = CircuitElement::<CircuitInput<0>> {};
    let in2 = CircuitElement::<CircuitInput<1>> {};
    let add = circuit_add(in1, in2);
    let inv = circuit_inverse(add);
    let sub = circuit_sub(inv, in2);
    let mul = circuit_mul(inv, sub);

    let modulus = TryInto::<_, CircuitModulus>::try_into([7, 0, 0, 0]).unwrap();
    let outputs = (mul, add, inv)
        .new_inputs()
        .next([3, 0, 0, 0])
        .next([6, 0, 0, 0])
        .done()
        .eval(modulus)
        .unwrap();

    outputs.get_output(mul)
}

//! > function_name
eval_circuit

//! > expected_profiling_info
Weight by sierra statement:
  statement 134: 22 (eval_circuit<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>([1], [2], [95], [93], [16], [96], [97]) { fallthrough([98], [99], [100]) 168([101], [102], [103], [104]) })
  statement 26: 7 (add_circuit_input<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>([17], [26]) { fallthrough([27]) 114([28]) })
  statement 126: 7 (add_circuit_input<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>([28], [92]) { fallthrough([93]) 214([94]) })
  statement 11: 6 (try_into_circuit_modulus([15]) { fallthrough([16]) 300() })
  statement 129: 5 (get_circuit_descriptor<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>() -> ([95]))
  statement 136: 5 (get_circuit_output<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>, core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>>([100]) -> ([105], [106]))
  statement 166: 5 (store_temp<core::panics::PanicResult::<(core::circuit::u384,)>>([117]) -> ([117]))
  statement 10: 4 (store_temp<Tuple<BoundedInt<0, 79228162514264337593543950335>, BoundedInt<0, 79228162514264337593543950335>, BoundedInt<0, 79228162514264337593543950335>, BoundedInt<0, 79228162514264337593543950335>>>([15]) -> ([15]))
  statement 24: 4 (store_temp<Tuple<U96Guarantee, U96Guarantee, U96Guarantee, U96Guarantee>>([26]) -> ([26]))
  statement 125: 4 (store_temp<Tuple<U96Guarantee, U96Guarantee, U96Guarantee, U96Guarantee>>([92]) -> ([92]))
  statement 23: 2 (store_temp<CircuitInputAccumulator<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>>([17]) -> ([17]))
  statement 140: 2 (u96_limbs_less_than_guarantee_verify<4>([106]) { fallthrough([107]) 155([108]) })
  statement 142: 2 (u96_limbs_less_than_guarantee_verify<3>([107]) { fallthrough([109]) 152([110]) })
  statement 144: 2 (u96_limbs_less_than_guarantee_verify<2>([109]) { fallthrough([111]) 149([112]) })
  statement 3: 1 (finalize_locals() -> ())
  statement 25: 1 (store_local<RangeCheck96>([8], [7]) -> ([7]))
  statement 132: 1 (store_temp<BoundedInt<0, 0>>([96]) -> ([96]))
  statement 133: 1 (store_temp<BoundedInt<1, 1>>([97]) -> ([97]))
  statement 138: 1 (store_temp<AddMod>([98]) -> ([98]))
  statement 139: 1 (store_temp<MulMod>([99]) -> ([99]))
  statement 147: 1 (store_temp<U96Guarantee>([113]) -> ([114]))
  statement 148: 1 (jump() { 157() })
  statement 158: 1 (u96_guarantee_verify([7], [114]) -> ([115]))
  statement 161: 1 (store_temp<RangeCheck>([0]) -> ([0]))
  statement 162: 1 (store_temp<AddMod>([98]) -> ([98]))
  statement 163: 1 (store_temp<MulMod>([99]) -> ([99]))
  statement 164: 1 (store_temp<RangeCheck96>([115]) -> ([115]))
  statement 165: 1 (store_temp<GasBuiltin>([4]) -> ([4]))
  statement 167: 1 (return([0], [98], [99], [115], [4], [117]))
Weight by concrete libfunc:
  libfunc eval_circuit<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>: 22
  libfunc add_circuit_input<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>: 14
  libfunc store_temp<Tuple<U96Guarantee, U96Guarantee, U96Guarantee, U96Guarantee>>: 8
  libfunc try_into_circuit_modulus: 6
  libfunc get_circuit_descriptor<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>: 5
  libfunc get_circuit_output<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>, core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>>: 5
  libfunc store_temp<core::panics::PanicResult::<(core::circuit::u384,)>>: 5
  libfunc store_temp<Tuple<BoundedInt<0, 79228162514264337593543950335>, BoundedInt<0, 79228162514264337593543950335>, BoundedInt<0, 79228162514264337593543950335>, BoundedInt<0, 79228162514264337593543950335>>>: 4
  libfunc store_temp<AddMod>: 2
  libfunc store_temp<CircuitInputAccumulator<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>>: 2
  libfunc store_temp<MulMod>: 2
  libfunc u96_limbs_less_than_guarantee_verify<2>: 2
  libfunc u96_limbs_less_than_guarantee_verify<3>: 2
  libfunc u96_limbs_less_than_guarantee_verify<4>: 2
  libfunc finalize_locals: 1
  libfunc jump: 1
  libfunc store_local<RangeCheck96>: 1
  libfunc store_temp<BoundedInt<0, 0>>: 1
  libfunc store_temp<BoundedInt<1, 1>>: 1
  libfunc store_temp<GasBuiltin>: 1
  libfunc store_temp<RangeCheck96>: 1
  libfunc store_temp<RangeCheck>: 1
  libfunc store_temp<U96Guarantee>: 1
  libfunc u96_guarantee_verify: 1
  return: 1
Weight by generic libfunc:
  libfunc store_temp: 29
  libfunc eval_circuit: 22
  libfunc add_circuit_input: 14
  libfunc try_into_circuit_modulus: 6
  libfunc u96_limbs_less_than_guarantee_verify: 6
  libfunc get_circuit_descriptor: 5
  libfunc get_circuit_output: 5
  libfunc finalize_locals: 1
  libfunc jump: 1
  libfunc store_local: 1
  libfunc u96_guarantee_verify: 1
  return: 1
Weight by user function (inc. generated):
  function test::eval_circuit: 92
Weight by original user function (exc. generated):
  function test::eval_circuit: 92
Weight by Cairo function:
  function core::circuit::AddInputResultImpl::next: 25
  function core::circuit::EvalCircuitImpl::eval_ex: 24
  function lib.cairo::eval_circuit: 11
  function core::circuit::U384TryIntoCircuitModulus::try_into: 10
  function core::circuit::IntoU96GuaranteeImplByNext::into_u96_guarantee: 8
  function core::circuit::CircuitOutputsImpl::get_output: 5
  function core::circuit::EvalCircuitImpl::eval: 5
  function core::circuit::IntoU96GuaranteeImplFinal::into_u96_guarantee: 2
  function core::circuit::DestructU96Guarantee::destruct: 1
  function unknown: 1
Weight by Sierra stack trace:
  test::eval_circuit: 92
Weight by Cairo stack trace:
  test::eval_circuit: 92
