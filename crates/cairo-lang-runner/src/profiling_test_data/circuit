//! > Test profiling info of circuit.sierra

//! > test_runner_name
test_profiling

//! > cairo_code
use core::circuit::{
    AddInputResultTrait, AddMod, CircuitElement, CircuitInput, CircuitInputs, CircuitModulus,
    CircuitOutputsTrait, EvalCircuitResult, EvalCircuitTrait, MulMod, RangeCheck96, circuit_add,
    circuit_inverse, circuit_mul, circuit_sub, u384, u96,
};

pub fn eval_circuit() -> u384 {
    let in1 = CircuitElement::<CircuitInput<0>> {};
    let in2 = CircuitElement::<CircuitInput<1>> {};
    let add = circuit_add(in1, in2);
    let inv = circuit_inverse(add);
    let sub = circuit_sub(inv, in2);
    let mul = circuit_mul(inv, sub);

    let modulus = TryInto::<_, CircuitModulus>::try_into([7, 0, 0, 0]).unwrap();
    let outputs = (mul, add, inv)
        .new_inputs()
        .next([3, 0, 0, 0])
        .next([6, 0, 0, 0])
        .done()
        .eval(modulus)
        .unwrap();

    outputs.get_output(mul)
}

//! > function_name
eval_circuit

//! > expected_profiling_info
Weight by sierra statement:
  statement 42: 22 (eval_circuit<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>([0], [1], [33], [31], [4], [34], [35]) { fallthrough([36], [37], [38]) 72([39], [40], [41], [42]) })
  statement 15: 7 (add_circuit_input<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>([6], [16]) { fallthrough([17]) 26([18]) })
  statement 35: 7 (add_circuit_input<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>([18], [30]) { fallthrough([31]) 108([32]) })
  statement 2: 6 (try_into_circuit_modulus([3]) { fallthrough([4]) 118() })
  statement 37: 5 (get_circuit_descriptor<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>() -> ([33]))
  statement 44: 5 (get_circuit_output<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>, core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>>([38]) -> ([43], [44]))
  statement 70: 5 (store_temp<core::panics::PanicResult::<(core::circuit::u384,)>>([55]) -> ([55]))
  statement 1: 4 (store_temp<Tuple<BoundedInt<0, 79228162514264337593543950335>, BoundedInt<0, 79228162514264337593543950335>, BoundedInt<0, 79228162514264337593543950335>, BoundedInt<0, 79228162514264337593543950335>>>([3]) -> ([3]))
  statement 13: 4 (store_temp<Tuple<U96Guarantee, U96Guarantee, U96Guarantee, U96Guarantee>>([16]) -> ([16]))
  statement 34: 4 (store_temp<Tuple<U96Guarantee, U96Guarantee, U96Guarantee, U96Guarantee>>([30]) -> ([30]))
  statement 12: 2 (store_temp<CircuitInputAccumulator<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>>([6]) -> ([6]))
  statement 47: 2 (u96_limbs_less_than_guarantee_verify<4>([44]) { fallthrough([45]) 62([46]) })
  statement 49: 2 (u96_limbs_less_than_guarantee_verify<3>([45]) { fallthrough([47]) 59([48]) })
  statement 51: 2 (u96_limbs_less_than_guarantee_verify<2>([47]) { fallthrough([49]) 56([50]) })
  statement 14: 1 (store_temp<RangeCheck96>([5]) -> ([5]))
  statement 40: 1 (store_temp<BoundedInt<0, 0>>([34]) -> ([34]))
  statement 41: 1 (store_temp<BoundedInt<1, 1>>([35]) -> ([35]))
  statement 43: 1 (branch_align() -> ())
  statement 45: 1 (store_temp<AddMod>([36]) -> ([36]))
  statement 46: 1 (store_temp<MulMod>([37]) -> ([37]))
  statement 54: 1 (store_temp<U96Guarantee>([51]) -> ([52]))
  statement 55: 1 (jump() { 64() })
  statement 64: 1 (u96_guarantee_verify([5], [52]) -> ([53]))
  statement 67: 1 (store_temp<AddMod>([36]) -> ([36]))
  statement 68: 1 (store_temp<MulMod>([37]) -> ([37]))
  statement 69: 1 (store_temp<RangeCheck96>([53]) -> ([53]))
  statement 71: 1 (return([36], [37], [53], [55]))
Weight by concrete libfunc:
  libfunc eval_circuit<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>: 22
  libfunc add_circuit_input<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>: 14
  libfunc store_temp<Tuple<U96Guarantee, U96Guarantee, U96Guarantee, U96Guarantee>>: 8
  libfunc try_into_circuit_modulus: 6
  libfunc get_circuit_descriptor<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>: 5
  libfunc get_circuit_output<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>, core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>>: 5
  libfunc store_temp<core::panics::PanicResult::<(core::circuit::u384,)>>: 5
  libfunc store_temp<Tuple<BoundedInt<0, 79228162514264337593543950335>, BoundedInt<0, 79228162514264337593543950335>, BoundedInt<0, 79228162514264337593543950335>, BoundedInt<0, 79228162514264337593543950335>>>: 4
  libfunc store_temp<AddMod>: 2
  libfunc store_temp<CircuitInputAccumulator<Circuit<(core::circuit::MulModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::SubModGate::<core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>, core::circuit::CircuitInput::<1>>>, core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>, core::circuit::InverseGate::<core::circuit::AddModGate::<core::circuit::CircuitInput::<0>, core::circuit::CircuitInput::<1>>>)>>>: 2
  libfunc store_temp<MulMod>: 2
  libfunc store_temp<RangeCheck96>: 2
  libfunc u96_limbs_less_than_guarantee_verify<2>: 2
  libfunc u96_limbs_less_than_guarantee_verify<3>: 2
  libfunc u96_limbs_less_than_guarantee_verify<4>: 2
  libfunc branch_align: 1
  libfunc jump: 1
  libfunc store_temp<BoundedInt<0, 0>>: 1
  libfunc store_temp<BoundedInt<1, 1>>: 1
  libfunc store_temp<U96Guarantee>: 1
  libfunc u96_guarantee_verify: 1
  return: 1
Weight by generic libfunc:
  libfunc store_temp: 28
  libfunc eval_circuit: 22
  libfunc add_circuit_input: 14
  libfunc try_into_circuit_modulus: 6
  libfunc u96_limbs_less_than_guarantee_verify: 6
  libfunc get_circuit_descriptor: 5
  libfunc get_circuit_output: 5
  libfunc branch_align: 1
  libfunc jump: 1
  libfunc u96_guarantee_verify: 1
  return: 1
Weight by user function (inc. generated):
  function test::eval_circuit: 90
Weight by original user function (exc. generated):
  function test::eval_circuit: 90
Weight by Cairo function:
  function core::circuit::AddInputResultImpl::next: 25
  function core::circuit::EvalCircuitImpl::eval_ex: 25
  function core::circuit::U384TryIntoCircuitModulus::try_into: 10
  function lib.cairo::eval_circuit: 9
  function core::circuit::IntoU96GuaranteeImplByNext::into_u96_guarantee: 8
  function core::circuit::CircuitOutputsImpl::get_output: 5
  function core::circuit::EvalCircuitImpl::eval: 5
  function core::circuit::IntoU96GuaranteeImplFinal::into_u96_guarantee: 2
  function core::circuit::DestructU96Guarantee::destruct: 1
Weight by Sierra stack trace:
  test::eval_circuit: 90
Weight by Cairo stack trace:
  test::eval_circuit: 90
