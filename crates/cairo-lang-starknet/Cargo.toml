[package]
name = "cairo-lang-starknet"
version.workspace = true
edition.workspace = true
repository.workspace = true
license-file.workspace = true
description = "Starknet capabilities and utilities on top of Cairo."

[dependencies]
cairo-felt.workspace = true
cairo-lang-casm = { path = "../cairo-lang-casm", version = "2.5.3" }
cairo-lang-utils = { path = "../cairo-lang-utils", version = "2.5.3" }
cairo-lang-starknet-types= { path = "../cairo-lang-starknet-types", version = "2.5.3" }
itertools = { workspace = true, features = ["use_alloc"] }
num-bigint = { workspace = true }

# Optional std
cairo-lang-compiler = { path = "../cairo-lang-compiler", version = "2.5.3", optional = true }
cairo-lang-defs = { path = "../cairo-lang-defs", version = "2.5.3", optional = true }
cairo-lang-diagnostics = { path = "../cairo-lang-diagnostics", version = "2.5.3", optional = true }
cairo-lang-filesystem = { path = "../cairo-lang-filesystem", version = "2.5.3", optional = true }
cairo-lang-lowering = { path = "../cairo-lang-lowering", version = "2.5.3", optional = true }
cairo-lang-plugins = { path = "../cairo-lang-plugins", version = "2.5.3", optional = true }
cairo-lang-semantic = { path = "../cairo-lang-semantic", version = "2.5.3", optional = true }
cairo-lang-sierra = { path = "../cairo-lang-sierra", version = "2.5.3", optional = true }
cairo-lang-sierra-generator = { path = "../cairo-lang-sierra-generator", version = "2.5.3", optional = true }
cairo-lang-syntax = { path = "../cairo-lang-syntax", version = "2.5.3", optional = true }
once_cell = { workspace = true, optional = true }
smol_str = { workspace = true, optional = true }
thiserror = { workspace = true, optional = true }
indent = { workspace = true, optional = true }
anyhow = { workspace = true, optional = true }
const_format = { workspace = true, optional = true }
indoc = { workspace = true, optional = true }

# Optional serde
serde = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }

[dev-dependencies]
cairo-lang-diagnostics = { path = "../cairo-lang-diagnostics" }
cairo-lang-plugins = { path = "../cairo-lang-plugins", features = ["testing"] }
cairo-lang-semantic = { path = "../cairo-lang-semantic", features = ["testing"] }
cairo-lang-test-utils = { path = "../cairo-lang-test-utils", features = ["testing"] }
env_logger.workspace = true
pretty_assertions.workspace = true
test-case.workspace = true
test-log.workspace = true

[features]
default = ["std", "serde"]
serde = ["dep:serde", "dep:serde_json", "cairo-lang-starknet-types/serde"]
std = [
  # The ones used in no_std
  "cairo-lang-utils/std",
  "num-bigint/std",
  # The ones used in serde
  "serde?/std",
  "serde_json?/std",
  # Everything else used in std
  "dep:cairo-lang-compiler",
  "dep:cairo-lang-defs",
  "dep:cairo-lang-diagnostics",
  "dep:cairo-lang-filesystem",
  "dep:cairo-lang-lowering",
  "dep:cairo-lang-plugins",
  "dep:cairo-lang-semantic",
  "dep:cairo-lang-sierra",
  "dep:cairo-lang-sierra-generator",
  "dep:cairo-lang-syntax",
  "dep:once_cell",
  "dep:smol_str",
  "dep:thiserror",
  "dep:indent",
  "dep:anyhow",
  "dep:const_format",
  "dep:indoc",
]
