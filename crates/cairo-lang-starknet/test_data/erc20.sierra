type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>>;
type core::array::Span::<core::felt252> = Struct<ut@[782572820229152792105145177694740816763001980856532159945905090893343825762], Snapshot<Array<felt252>>>;
type u32 = u32;
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]>;
type core::bool = Enum<ut@[1428587981972971377690703480718106917688158670535227238524565791273937320306], Unit, Unit>;
type BuiltinCosts = BuiltinCosts;
type erc20::erc20::ERC20::name::Storage = Struct<ut@[1279246718657236285882016538558545510648363542581138756462991623761501398195]>;
type erc20::erc20::ERC20::symbol::Storage = Struct<ut@[418102978435404218742574783570252172162319648946501850061633421213983797663]>;
type erc20::erc20::ERC20::decimals::Storage = Struct<ut@[773134131808452046777494812781217467396526119839805723230586099574048303650]>;
type erc20::erc20::ERC20::total_supply::Storage = Struct<ut@[631149941040930366530970477469638989032192229612994689389411080217359966372]>;
type erc20::erc20::ERC20::balances::Storage = Struct<ut@[1673405683482322965658185153975252195658666855734590268500867733612648603021]>;
type erc20::erc20::ERC20::allowances::Storage = Struct<ut@[1604362812532302690909148491047827776737543804581419153954593094592827202976]>;
type erc20::erc20::ERC20::Storage = Struct<ut@[1505342701246452630018307425834662522223610642808126217707438916062940672157], erc20::erc20::ERC20::name::Storage, erc20::erc20::ERC20::symbol::Storage, erc20::erc20::ERC20::decimals::Storage, erc20::erc20::ERC20::total_supply::Storage, erc20::erc20::ERC20::balances::Storage, erc20::erc20::ERC20::allowances::Storage>;
type System = System;
type Tuple<felt252> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], felt252>;
type core::Panic = Struct<ut@[589936597947325945158462427232849468230833491189683515153318698610876564977]>;
type Tuple<core::Panic, Array<felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::Panic, Array<felt252>>;
type core::PanicResult::<(core::felt252,)> = Enum<ut@[1337785438710847796361585803509086526690852027193810330220381837571094829714], Tuple<felt252>, Tuple<core::Panic, Array<felt252>>>;
type Tuple<core::array::Span::<core::felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::array::Span::<core::felt252>>;
type core::PanicResult::<(core::array::Span::<core::felt252>,)> = Enum<ut@[726583323764111849207710747544627107765659270979625874228729705596766268119], Tuple<core::array::Span::<core::felt252>>, Tuple<core::Panic, Array<felt252>>>;
type u8 = u8;
type Tuple<u8> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], u8>;
type core::PanicResult::<(core::integer::u8,)> = Enum<ut@[363293563585309154259806893024613779305046216512458641877252885718027023450], Tuple<u8>, Tuple<core::Panic, Array<felt252>>>;
type u128 = u128;
type core::integer::u256 = Struct<ut@[1071017438933873571052977544980627024045949220019505706267713774331285277618], u128, u128>;
type Tuple<core::integer::u256> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::integer::u256>;
type core::PanicResult::<(core::integer::u256,)> = Enum<ut@[1766688147455137705240905129329481966973498634770070537819590582308755341973], Tuple<core::integer::u256>, Tuple<core::Panic, Array<felt252>>>;
type ContractAddress = ContractAddress;
type core::option::Option::<core::starknet::contract_address::ContractAddress> = Enum<ut@[1730591083647345995550560488717538099208395506321115194079300232838727341527], ContractAddress, Unit>;
type Pedersen = Pedersen;
type core::option::Option::<core::integer::u256> = Enum<ut@[523703995564884992331731899845619438921868538240978529314873467267171327154], core::integer::u256, Unit>;
type Tuple<erc20::erc20::ERC20::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::Storage, ())> = Enum<ut@[1328350705554389428423680733371080630984521469695149274424732836908099615992], Tuple<erc20::erc20::ERC20::Storage, Unit>, Tuple<core::Panic, Array<felt252>>>;
type core::option::Option::<core::felt252> = Enum<ut@[502540321931352404499287398278270665773953423387279675570524389549882807569], felt252, Unit>;
type core::option::Option::<core::integer::u8> = Enum<ut@[1685337264744422315758003496270779824690430640778989843914465691348625003554], u8, Unit>;
type Tuple<ContractAddress, ContractAddress> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], ContractAddress, ContractAddress>;
type core::option::Option::<core::integer::u128> = Enum<ut@[707802566805637274160536953450653899678320584667373508165987445807323736680], u128, Unit>;
type Tuple<ContractAddress> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], ContractAddress>;
type core::PanicResult::<(core::starknet::contract_address::ContractAddress,)> = Enum<ut@[517717563993683954431066196808737762573123393225434032215499638276214044910], Tuple<ContractAddress>, Tuple<core::Panic, Array<felt252>>>;
type Box<felt252> = Box<felt252>;
type core::option::Option::<core::box::Box::<@core::felt252>> = Enum<ut@[1182885770396068416776258475038712898857052156962285097349975100489777991911], Box<felt252>, Unit>;
type Tuple<erc20::erc20::ERC20::name::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::name::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())> = Enum<ut@[953432628152931088512154774515262466960229293706723451828773362479034845991], Tuple<erc20::erc20::ERC20::name::Storage, Unit>, Tuple<core::Panic, Array<felt252>>>;
type Tuple<erc20::erc20::ERC20::symbol::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::symbol::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())> = Enum<ut@[699576154942283578178373243990259768756847804270255434265324341400354338899], Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>, Tuple<core::Panic, Array<felt252>>>;
type Tuple<erc20::erc20::ERC20::decimals::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::decimals::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())> = Enum<ut@[1128121503594443869145555738556590562495479227620615932635423382490383408878], Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>, Tuple<core::Panic, Array<felt252>>>;
type NonZero<felt252> = NonZero<felt252>;
type Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::total_supply::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())> = Enum<ut@[1121304277564188722343772916382967417988958107735634214882690925655016421557], Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>, Tuple<core::Panic, Array<felt252>>>;
type Tuple<erc20::erc20::ERC20::balances::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::balances::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())> = Enum<ut@[759559699582621244038582969148131079848047649891932747322384082601985402992], Tuple<erc20::erc20::ERC20::balances::Storage, Unit>, Tuple<core::Panic, Array<felt252>>>;
type erc20::erc20::ERC20::Transfer = Struct<ut@[497330669176761433319746194745261640179450943533449374512093435109120046690], ContractAddress, ContractAddress, core::integer::u256>;
type erc20::erc20::ERC20::Approval = Struct<ut@[1183381404408557715659104281082581942518428040934214473458074803792218101953], ContractAddress, ContractAddress, core::integer::u256>;
type erc20::erc20::ERC20::Event = Enum<ut@[1382674247558513014698951515907287999690276820209723591211373658591388016225], erc20::erc20::ERC20::Transfer, erc20::erc20::ERC20::Approval>;
type StorageBaseAddress = StorageBaseAddress;
type StorageAddress = StorageAddress;
type core::result::Result::<core::felt252, core::array::Array::<core::felt252>> = Enum<ut@[255862409632268709382876667385135391700507824083520182711692061443766480604], felt252, Array<felt252>>;
type core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>> = Enum<ut@[1686776504318576349617790826926349831519127596918854083900978058033064710828], u8, Array<felt252>>;
type Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>;
type core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)> = Enum<ut@[951581974262417507546887215389455423460958255477775743948998796087798990746], Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>, Tuple<core::Panic, Array<felt252>>>;
type core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>> = Enum<ut@[362128906923728080759621783213493759217792890399397457737333282516326806212], core::integer::u256, Array<felt252>>;
type Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>;
type core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)> = Enum<ut@[1399550358875283026214579391098633094857864844180724082363340774933850101758], Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>, Tuple<core::Panic, Array<felt252>>>;
type u64 = u64;
type core::starknet::info::BlockInfo = Struct<ut@[1584064236820419267635853880275057357497142966426465622513080398763825874917], u64, u64, ContractAddress>;
type Box<core::starknet::info::BlockInfo> = Box<core::starknet::info::BlockInfo>;
type core::starknet::info::TxInfo = Struct<ut@[1311591681366727100053328626396740590119038174476558212695017318172456171879], felt252, ContractAddress, u128, core::array::Span::<core::felt252>, felt252, felt252, felt252>;
type Box<core::starknet::info::TxInfo> = Box<core::starknet::info::TxInfo>;
type core::starknet::info::ExecutionInfo = Struct<ut@[712752056230952147112465546512164546685036797379963700882913452643338533978], Box<core::starknet::info::BlockInfo>, Box<core::starknet::info::TxInfo>, ContractAddress, ContractAddress, felt252>;
type Box<core::starknet::info::ExecutionInfo> = Box<core::starknet::info::ExecutionInfo>;
type Tuple<Box<core::starknet::info::ExecutionInfo>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], Box<core::starknet::info::ExecutionInfo>>;
type core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)> = Enum<ut@[1096489960210821177705952953477673141260894369823899538645403446187197364935], Tuple<Box<core::starknet::info::ExecutionInfo>>, Tuple<core::Panic, Array<felt252>>>;
type Tuple<erc20::erc20::ERC20::allowances::Storage, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], erc20::erc20::ERC20::allowances::Storage, Unit>;
type core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())> = Enum<ut@[136112300095896984777244603048167413353722483537393128613894782898496042098], Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>, Tuple<core::Panic, Array<felt252>>>;
type core::result::Result::<(), core::array::Array::<core::felt252>> = Enum<ut@[455598176897554951975518433047350165683642644060968901071973598007398862489], Unit, Array<felt252>>;
type Tuple<Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], Unit>;
type core::PanicResult::<((),)> = Enum<ut@[23370355241912226703375055216556194705277310207056017096530924163612291064], Tuple<Unit>, Tuple<core::Panic, Array<felt252>>>;
type core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>> = Enum<ut@[1270906046977841141060978118411832258207934732743670527139603475143660678225], u128, Array<felt252>>;
type Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>;
type core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)> = Enum<ut@[608521606863430432447095256052838911166120715067993825241605886347878717527], Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>, Tuple<core::Panic, Array<felt252>>>;
type Tuple<u128, u128> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], u128, u128>;
type core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>> = Enum<ut@[1257518009720519585285637338408389618956030011120420360206100431616276923554], Box<core::starknet::info::ExecutionInfo>, Array<felt252>>;
type Tuple<core::integer::u256, core::bool> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::integer::u256, core::bool>;
type Tuple<u128, core::bool> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], u128, core::bool>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc enable_ap_tracking = enable_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc branch_align = branch_align;
libfunc struct_deconstruct<core::array::Span::<core::felt252>> = struct_deconstruct<core::array::Span::<core::felt252>>;
libfunc array_len<felt252> = array_len<felt252>;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc u32_eq = u32_eq;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc drop<Unit> = drop<Unit>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc struct_construct<erc20::erc20::ERC20::name::Storage> = struct_construct<erc20::erc20::ERC20::name::Storage>;
libfunc struct_construct<erc20::erc20::ERC20::symbol::Storage> = struct_construct<erc20::erc20::ERC20::symbol::Storage>;
libfunc struct_construct<erc20::erc20::ERC20::decimals::Storage> = struct_construct<erc20::erc20::ERC20::decimals::Storage>;
libfunc struct_construct<erc20::erc20::ERC20::total_supply::Storage> = struct_construct<erc20::erc20::ERC20::total_supply::Storage>;
libfunc struct_construct<erc20::erc20::ERC20::balances::Storage> = struct_construct<erc20::erc20::ERC20::balances::Storage>;
libfunc struct_construct<erc20::erc20::ERC20::allowances::Storage> = struct_construct<erc20::erc20::ERC20::allowances::Storage>;
libfunc struct_construct<erc20::erc20::ERC20::Storage> = struct_construct<erc20::erc20::ERC20::Storage>;
libfunc store_temp<erc20::erc20::ERC20::Storage> = store_temp<erc20::erc20::ERC20::Storage>;
libfunc dup<erc20::erc20::ERC20::Storage> = dup<erc20::erc20::ERC20::Storage>;
libfunc drop<erc20::erc20::ERC20::Storage> = drop<erc20::erc20::ERC20::Storage>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc function_call<user@erc20::erc20::ERC20::IERC20Impl::get_name> = function_call<user@erc20::erc20::ERC20::IERC20Impl::get_name>;
libfunc enum_match<core::PanicResult::<(core::felt252,)>> = enum_match<core::PanicResult::<(core::felt252,)>>;
libfunc struct_deconstruct<Tuple<felt252>> = struct_deconstruct<Tuple<felt252>>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc dup<felt252> = dup<felt252>;
libfunc drop<felt252> = drop<felt252>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc store_temp<Array<felt252>> = store_temp<Array<felt252>>;
libfunc function_call<user@core::Felt252Serde::serialize> = function_call<user@core::Felt252Serde::serialize>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc struct_construct<core::array::Span::<core::felt252>> = struct_construct<core::array::Span::<core::felt252>>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>>> = struct_construct<Tuple<core::array::Span::<core::felt252>>>;
libfunc enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0> = enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>> = store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1> = enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::Panic> = struct_construct<core::Panic>;
libfunc struct_construct<Tuple<core::Panic, Array<felt252>>> = struct_construct<Tuple<core::Panic, Array<felt252>>>;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc felt252_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc drop<core::array::Span::<core::felt252>> = drop<core::array::Span::<core::felt252>>;
libfunc function_call<user@erc20::erc20::ERC20::IERC20Impl::get_symbol> = function_call<user@erc20::erc20::ERC20::IERC20Impl::get_symbol>;
libfunc function_call<user@erc20::erc20::ERC20::IERC20Impl::get_decimals> = function_call<user@erc20::erc20::ERC20::IERC20Impl::get_decimals>;
libfunc enum_match<core::PanicResult::<(core::integer::u8,)>> = enum_match<core::PanicResult::<(core::integer::u8,)>>;
libfunc struct_deconstruct<Tuple<u8>> = struct_deconstruct<Tuple<u8>>;
libfunc dup<u8> = dup<u8>;
libfunc drop<u8> = drop<u8>;
libfunc store_temp<u8> = store_temp<u8>;
libfunc function_call<user@core::integer::U8Serde::serialize> = function_call<user@core::integer::U8Serde::serialize>;
libfunc function_call<user@erc20::erc20::ERC20::IERC20Impl::get_total_supply> = function_call<user@erc20::erc20::ERC20::IERC20Impl::get_total_supply>;
libfunc enum_match<core::PanicResult::<(core::integer::u256,)>> = enum_match<core::PanicResult::<(core::integer::u256,)>>;
libfunc struct_deconstruct<Tuple<core::integer::u256>> = struct_deconstruct<Tuple<core::integer::u256>>;
libfunc dup<core::integer::u256> = dup<core::integer::u256>;
libfunc drop<core::integer::u256> = drop<core::integer::u256>;
libfunc store_temp<core::integer::u256> = store_temp<core::integer::u256>;
libfunc function_call<user@core::integer::u256Serde::serialize> = function_call<user@core::integer::u256Serde::serialize>;
libfunc store_temp<core::array::Span::<core::felt252>> = store_temp<core::array::Span::<core::felt252>>;
libfunc function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize> = function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>;
libfunc enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>> = enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc store_temp<Pedersen> = store_temp<Pedersen>;
libfunc store_temp<ContractAddress> = store_temp<ContractAddress>;
libfunc function_call<user@erc20::erc20::ERC20::IERC20Impl::balance_of> = function_call<user@erc20::erc20::ERC20::IERC20Impl::balance_of>;
libfunc drop<ContractAddress> = drop<ContractAddress>;
libfunc felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243> = felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>;
libfunc function_call<user@erc20::erc20::ERC20::IERC20Impl::allowance> = function_call<user@erc20::erc20::ERC20::IERC20Impl::allowance>;
libfunc function_call<user@core::integer::u256Serde::deserialize> = function_call<user@core::integer::u256Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::integer::u256>> = enum_match<core::option::Option::<core::integer::u256>>;
libfunc function_call<user@erc20::erc20::ERC20::IERC20Impl::transfer> = function_call<user@erc20::erc20::ERC20::IERC20Impl::transfer>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>;
libfunc drop<Tuple<erc20::erc20::ERC20::Storage, Unit>> = drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>;
libfunc function_call<user@erc20::erc20::ERC20::IERC20Impl::transfer_from> = function_call<user@erc20::erc20::ERC20::IERC20Impl::transfer_from>;
libfunc function_call<user@erc20::erc20::ERC20::IERC20Impl::approve> = function_call<user@erc20::erc20::ERC20::IERC20Impl::approve>;
libfunc function_call<user@erc20::erc20::ERC20::IERC20Impl::increase_allowance> = function_call<user@erc20::erc20::ERC20::IERC20Impl::increase_allowance>;
libfunc function_call<user@erc20::erc20::ERC20::IERC20Impl::decrease_allowance> = function_call<user@erc20::erc20::ERC20::IERC20Impl::decrease_allowance>;
libfunc function_call<user@core::Felt252Serde::deserialize> = function_call<user@core::Felt252Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::felt252>> = enum_match<core::option::Option::<core::felt252>>;
libfunc function_call<user@core::integer::U8Serde::deserialize> = function_call<user@core::integer::U8Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::integer::u8>> = enum_match<core::option::Option::<core::integer::u8>>;
libfunc function_call<user@erc20::erc20::ERC20::constructor> = function_call<user@erc20::erc20::ERC20::constructor>;
libfunc struct_deconstruct<erc20::erc20::ERC20::Storage> = struct_deconstruct<erc20::erc20::ERC20::Storage>;
libfunc drop<erc20::erc20::ERC20::symbol::Storage> = drop<erc20::erc20::ERC20::symbol::Storage>;
libfunc drop<erc20::erc20::ERC20::decimals::Storage> = drop<erc20::erc20::ERC20::decimals::Storage>;
libfunc drop<erc20::erc20::ERC20::total_supply::Storage> = drop<erc20::erc20::ERC20::total_supply::Storage>;
libfunc drop<erc20::erc20::ERC20::balances::Storage> = drop<erc20::erc20::ERC20::balances::Storage>;
libfunc drop<erc20::erc20::ERC20::allowances::Storage> = drop<erc20::erc20::ERC20::allowances::Storage>;
libfunc store_temp<erc20::erc20::ERC20::name::Storage> = store_temp<erc20::erc20::ERC20::name::Storage>;
libfunc function_call<user@erc20::erc20::ERC20::name::InternalStorageImpl::read> = function_call<user@erc20::erc20::ERC20::name::InternalStorageImpl::read>;
libfunc struct_construct<Tuple<felt252>> = struct_construct<Tuple<felt252>>;
libfunc enum_init<core::PanicResult::<(core::felt252,)>, 0> = enum_init<core::PanicResult::<(core::felt252,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::felt252,)>> = store_temp<core::PanicResult::<(core::felt252,)>>;
libfunc enum_init<core::PanicResult::<(core::felt252,)>, 1> = enum_init<core::PanicResult::<(core::felt252,)>, 1>;
libfunc rename<felt252> = rename<felt252>;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc drop<erc20::erc20::ERC20::name::Storage> = drop<erc20::erc20::ERC20::name::Storage>;
libfunc store_temp<erc20::erc20::ERC20::symbol::Storage> = store_temp<erc20::erc20::ERC20::symbol::Storage>;
libfunc function_call<user@erc20::erc20::ERC20::symbol::InternalStorageImpl::read> = function_call<user@erc20::erc20::ERC20::symbol::InternalStorageImpl::read>;
libfunc store_temp<erc20::erc20::ERC20::decimals::Storage> = store_temp<erc20::erc20::ERC20::decimals::Storage>;
libfunc function_call<user@erc20::erc20::ERC20::decimals::InternalStorageImpl::read> = function_call<user@erc20::erc20::ERC20::decimals::InternalStorageImpl::read>;
libfunc struct_construct<Tuple<u8>> = struct_construct<Tuple<u8>>;
libfunc enum_init<core::PanicResult::<(core::integer::u8,)>, 0> = enum_init<core::PanicResult::<(core::integer::u8,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::integer::u8,)>> = store_temp<core::PanicResult::<(core::integer::u8,)>>;
libfunc enum_init<core::PanicResult::<(core::integer::u8,)>, 1> = enum_init<core::PanicResult::<(core::integer::u8,)>, 1>;
libfunc rename<u8> = rename<u8>;
libfunc u8_to_felt252 = u8_to_felt252;
libfunc store_temp<erc20::erc20::ERC20::total_supply::Storage> = store_temp<erc20::erc20::ERC20::total_supply::Storage>;
libfunc function_call<user@erc20::erc20::ERC20::total_supply::InternalStorageImpl::read> = function_call<user@erc20::erc20::ERC20::total_supply::InternalStorageImpl::read>;
libfunc struct_construct<Tuple<core::integer::u256>> = struct_construct<Tuple<core::integer::u256>>;
libfunc enum_init<core::PanicResult::<(core::integer::u256,)>, 0> = enum_init<core::PanicResult::<(core::integer::u256,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::integer::u256,)>> = store_temp<core::PanicResult::<(core::integer::u256,)>>;
libfunc enum_init<core::PanicResult::<(core::integer::u256,)>, 1> = enum_init<core::PanicResult::<(core::integer::u256,)>, 1>;
libfunc struct_deconstruct<core::integer::u256> = struct_deconstruct<core::integer::u256>;
libfunc drop<u128> = drop<u128>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::integer::U128Serde::serialize> = function_call<user@core::integer::U128Serde::serialize>;
libfunc rename<Array<felt252>> = rename<Array<felt252>>;
libfunc rename<Unit> = rename<Unit>;
libfunc contract_address_try_from_felt252 = contract_address_try_from_felt252;
libfunc enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0> = enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>;
libfunc store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>> = store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1> = enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>;
libfunc store_temp<erc20::erc20::ERC20::balances::Storage> = store_temp<erc20::erc20::ERC20::balances::Storage>;
libfunc function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::read> = function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::read>;
libfunc struct_construct<Tuple<ContractAddress, ContractAddress>> = struct_construct<Tuple<ContractAddress, ContractAddress>>;
libfunc store_temp<erc20::erc20::ERC20::allowances::Storage> = store_temp<erc20::erc20::ERC20::allowances::Storage>;
libfunc store_temp<Tuple<ContractAddress, ContractAddress>> = store_temp<Tuple<ContractAddress, ContractAddress>>;
libfunc function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::read> = function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::read>;
libfunc function_call<user@core::integer::U128Serde::deserialize> = function_call<user@core::integer::U128Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::integer::u128>> = enum_match<core::option::Option::<core::integer::u128>>;
libfunc struct_construct<core::integer::u256> = struct_construct<core::integer::u256>;
libfunc enum_init<core::option::Option::<core::integer::u256>, 0> = enum_init<core::option::Option::<core::integer::u256>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u256>> = store_temp<core::option::Option::<core::integer::u256>>;
libfunc enum_init<core::option::Option::<core::integer::u256>, 1> = enum_init<core::option::Option::<core::integer::u256>, 1>;
libfunc function_call<user@core::starknet::info::get_caller_address> = function_call<user@core::starknet::info::get_caller_address>;
libfunc enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>> = enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>;
libfunc struct_deconstruct<Tuple<ContractAddress>> = struct_deconstruct<Tuple<ContractAddress>>;
libfunc function_call<user@erc20::erc20::ERC20::StorageImpl::transfer_helper> = function_call<user@erc20::erc20::ERC20::StorageImpl::transfer_helper>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>;
libfunc dup<ContractAddress> = dup<ContractAddress>;
libfunc function_call<user@erc20::erc20::ERC20::StorageImpl::spend_allowance> = function_call<user@erc20::erc20::ERC20::StorageImpl::spend_allowance>;
libfunc function_call<user@erc20::erc20::ERC20::StorageImpl::approve_helper> = function_call<user@erc20::erc20::ERC20::StorageImpl::approve_helper>;
libfunc dup<erc20::erc20::ERC20::allowances::Storage> = dup<erc20::erc20::ERC20::allowances::Storage>;
libfunc function_call<user@core::integer::U256Add::add> = function_call<user@core::integer::U256Add::add>;
libfunc function_call<user@core::integer::U256Sub::sub> = function_call<user@core::integer::U256Sub::sub>;
libfunc array_snapshot_pop_front<felt252> = array_snapshot_pop_front<felt252>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>;
libfunc store_temp<Snapshot<Array<felt252>>> = store_temp<Snapshot<Array<felt252>>>;
libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>> = store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>;
libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>> = enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc unbox<felt252> = unbox<felt252>;
libfunc enum_init<core::option::Option::<core::felt252>, 0> = enum_init<core::option::Option::<core::felt252>, 0>;
libfunc store_temp<core::option::Option::<core::felt252>> = store_temp<core::option::Option::<core::felt252>>;
libfunc enum_init<core::option::Option::<core::felt252>, 1> = enum_init<core::option::Option::<core::felt252>, 1>;
libfunc function_call<user@core::integer::Felt252TryIntoU8::try_into> = function_call<user@core::integer::Felt252TryIntoU8::try_into>;
libfunc enum_init<core::option::Option::<core::integer::u8>, 0> = enum_init<core::option::Option::<core::integer::u8>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u8>> = store_temp<core::option::Option::<core::integer::u8>>;
libfunc enum_init<core::option::Option::<core::integer::u8>, 1> = enum_init<core::option::Option::<core::integer::u8>, 1>;
libfunc function_call<user@erc20::erc20::ERC20::name::InternalStorageImpl::write> = function_call<user@erc20::erc20::ERC20::name::InternalStorageImpl::write>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::name::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::name::Storage, Unit>>;
libfunc function_call<user@erc20::erc20::ERC20::symbol::InternalStorageImpl::write> = function_call<user@erc20::erc20::ERC20::symbol::InternalStorageImpl::write>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>>;
libfunc function_call<user@erc20::erc20::ERC20::decimals::InternalStorageImpl::write> = function_call<user@erc20::erc20::ERC20::decimals::InternalStorageImpl::write>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>>;
libfunc contract_address_to_felt252 = contract_address_to_felt252;
libfunc felt252_const<0> = felt252_const<0>;
libfunc felt252_sub = felt252_sub;
libfunc felt252_is_zero = felt252_is_zero;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc function_call<user@erc20::erc20::ERC20::total_supply::InternalStorageImpl::write> = function_call<user@erc20::erc20::ERC20::total_supply::InternalStorageImpl::write>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>>;
libfunc function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::write> = function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::write>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>>;
libfunc contract_address_const<0> = contract_address_const<0>;
libfunc struct_construct<erc20::erc20::ERC20::Transfer> = struct_construct<erc20::erc20::ERC20::Transfer>;
libfunc enum_init<erc20::erc20::ERC20::Event, 0> = enum_init<erc20::erc20::ERC20::Event, 0>;
libfunc store_temp<erc20::erc20::ERC20::Event> = store_temp<erc20::erc20::ERC20::Event>;
libfunc function_call<user@erc20::erc20::ERC20::StorageEventEmitter::emit> = function_call<user@erc20::erc20::ERC20::StorageEventEmitter::emit>;
libfunc felt252_const<7300388948442106731950660484798539862217172507820428101544021685107> = felt252_const<7300388948442106731950660484798539862217172507820428101544021685107>;
libfunc storage_base_address_const<1528802474226268325865027367859591458315299653151958663884057507666229546336> = storage_base_address_const<1528802474226268325865027367859591458315299653151958663884057507666229546336>;
libfunc storage_address_from_base = storage_address_from_base;
libfunc store_temp<StorageAddress> = store_temp<StorageAddress>;
libfunc storage_read_syscall = storage_read_syscall;
libfunc enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1>;
libfunc rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall>;
libfunc storage_base_address_const<944713526212149105522785400348068751682982210605126537021911324578866405028> = storage_base_address_const<944713526212149105522785400348068751682982210605126537021911324578866405028>;
libfunc storage_base_address_const<134830404806214277570220174593674215737759987247891306080029841794115377321> = storage_base_address_const<134830404806214277570220174593674215737759987247891306080029841794115377321>;
libfunc store_temp<StorageBaseAddress> = store_temp<StorageBaseAddress>;
libfunc function_call<user@core::starknet::storage_access::StorageAccessU8::read> = function_call<user@core::starknet::storage_access::StorageAccessU8::read>;
libfunc enum_match<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>> = enum_match<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>;
libfunc store_temp<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u8>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u8>::unwrap_syscall>;
libfunc storage_base_address_const<603278275252936218847294002513349627170936020082667936993356353388973422646> = storage_base_address_const<603278275252936218847294002513349627170936020082667936993356353388973422646>;
libfunc function_call<user@core::integer::StorageAccessu256::read> = function_call<user@core::integer::StorageAccessu256::read>;
libfunc enum_match<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>> = enum_match<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>;
libfunc store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>;
libfunc rename<u128> = rename<u128>;
libfunc u128_to_felt252 = u128_to_felt252;
libfunc function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::address> = function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::address>;
libfunc function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::address> = function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::address>;
libfunc function_call<user@core::integer::u128_try_from_felt252> = function_call<user@core::integer::u128_try_from_felt252>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 0> = enum_init<core::option::Option::<core::integer::u128>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u128>> = store_temp<core::option::Option::<core::integer::u128>>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 1> = enum_init<core::option::Option::<core::integer::u128>, 1>;
libfunc function_call<user@core::starknet::info::get_execution_info> = function_call<user@core::starknet::info::get_execution_info>;
libfunc enum_match<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>> = enum_match<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>;
libfunc struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>> = struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>>;
libfunc unbox<core::starknet::info::ExecutionInfo> = unbox<core::starknet::info::ExecutionInfo>;
libfunc struct_deconstruct<core::starknet::info::ExecutionInfo> = struct_deconstruct<core::starknet::info::ExecutionInfo>;
libfunc drop<Box<core::starknet::info::BlockInfo>> = drop<Box<core::starknet::info::BlockInfo>>;
libfunc drop<Box<core::starknet::info::TxInfo>> = drop<Box<core::starknet::info::TxInfo>>;
libfunc struct_construct<Tuple<ContractAddress>> = struct_construct<Tuple<ContractAddress>>;
libfunc enum_init<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0> = enum_init<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>> = store_temp<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>;
libfunc enum_init<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1> = enum_init<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1>;
libfunc dup<erc20::erc20::ERC20::balances::Storage> = dup<erc20::erc20::ERC20::balances::Storage>;
libfunc felt252_const<395754877894504967531585582359572169455970492464> = felt252_const<395754877894504967531585582359572169455970492464>;
libfunc felt252_const<25936191677694277552149992725516921697451103245639728> = felt252_const<25936191677694277552149992725516921697451103245639728>;
libfunc u128_const<340282366920938463463374607431768211455> = u128_const<340282366920938463463374607431768211455>;
libfunc dup<u128> = dup<u128>;
libfunc u128_eq = u128_eq;
libfunc rename<core::bool> = rename<core::bool>;
libfunc dup<erc20::erc20::ERC20::name::Storage> = dup<erc20::erc20::ERC20::name::Storage>;
libfunc dup<erc20::erc20::ERC20::symbol::Storage> = dup<erc20::erc20::ERC20::symbol::Storage>;
libfunc dup<erc20::erc20::ERC20::decimals::Storage> = dup<erc20::erc20::ERC20::decimals::Storage>;
libfunc dup<erc20::erc20::ERC20::total_supply::Storage> = dup<erc20::erc20::ERC20::total_supply::Storage>;
libfunc function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::write> = function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::write>;
libfunc enum_match<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>> = enum_match<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>>;
libfunc struct_deconstruct<Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>> = struct_deconstruct<Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>>;
libfunc struct_construct<erc20::erc20::ERC20::Approval> = struct_construct<erc20::erc20::ERC20::Approval>;
libfunc enum_init<erc20::erc20::ERC20::Event, 1> = enum_init<erc20::erc20::ERC20::Event, 1>;
libfunc felt252_const<101313248740993271302566317381896466254801065025584> = felt252_const<101313248740993271302566317381896466254801065025584>;
libfunc function_call<user@core::integer::u256_checked_add> = function_call<user@core::integer::u256_checked_add>;
libfunc felt252_const<39879774624079483812136948410799859986295> = felt252_const<39879774624079483812136948410799859986295>;
libfunc function_call<user@core::integer::u256_checked_sub> = function_call<user@core::integer::u256_checked_sub>;
libfunc felt252_const<39879774624085075084607933104993585622903> = felt252_const<39879774624085075084607933104993585622903>;
libfunc u8_try_from_felt252 = u8_try_from_felt252;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<core::option::Option::<core::integer::u8>> = rename<core::option::Option::<core::integer::u8>>;
libfunc storage_write_syscall = storage_write_syscall;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>;
libfunc rename<core::result::Result::<(), core::array::Array::<core::felt252>>> = rename<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>;
libfunc enum_match<core::PanicResult::<((),)>> = enum_match<core::PanicResult::<((),)>>;
libfunc struct_deconstruct<Tuple<Unit>> = struct_deconstruct<Tuple<Unit>>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::name::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::name::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>, 1>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>, 1>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>, 1>;
libfunc function_call<user@core::integer::StorageAccessu256::write> = function_call<user@core::integer::StorageAccessu256::write>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>, 1>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>, 1>;
libfunc dup<erc20::erc20::ERC20::Event> = dup<erc20::erc20::ERC20::Event>;
libfunc drop<erc20::erc20::ERC20::Event> = drop<erc20::erc20::ERC20::Event>;
libfunc function_call<user@erc20::erc20::ERC20::EventIsEvent::append_keys_and_values> = function_call<user@erc20::erc20::ERC20::EventIsEvent::append_keys_and_values>;
libfunc emit_event_syscall = emit_event_syscall;
libfunc enum_match<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>> = store_temp<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>;
libfunc felt252_const<2046306368138969050899942931452836379425163887498684822840> = felt252_const<2046306368138969050899942931452836379425163887498684822840>;
libfunc enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 1>;
libfunc enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 1>;
libfunc enum_match<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>;
libfunc dup<u32> = dup<u32>;
libfunc dup<StorageBaseAddress> = dup<StorageBaseAddress>;
libfunc function_call<user@core::starknet::storage_access::StorageAccessU128::read> = function_call<user@core::starknet::storage_access::StorageAccessU128::read>;
libfunc enum_match<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>> = enum_match<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>;
libfunc u8_const<1> = u8_const<1>;
libfunc storage_address_from_base_and_offset = storage_address_from_base_and_offset;
libfunc enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>> = store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>;
libfunc felt252_const<8788818928753408456771414258856301875522769902639082522293830758968> = felt252_const<8788818928753408456771414258856301875522769902639082522293830758968>;
libfunc enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>;
libfunc enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>;
libfunc drop<StorageBaseAddress> = drop<StorageBaseAddress>;
libfunc drop<u32> = drop<u32>;
libfunc enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>;
libfunc felt252_const<1065622543624526936256554561967983185612257046533136611876836524258158810564> = felt252_const<1065622543624526936256554561967983185612257046533136611876836524258158810564>;
libfunc function_call<user@core::hash::LegacyHashContractAddress::hash> = function_call<user@core::hash::LegacyHashContractAddress::hash>;
libfunc storage_base_address_from_felt252 = storage_base_address_from_felt252;
libfunc felt252_const<337994139936370667767799129369552596157394447336989834104582481799883947719> = felt252_const<337994139936370667767799129369552596157394447336989834104582481799883947719>;
libfunc function_call<user@core::hash::TupleSize2LegacyHash::<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress, core::hash::LegacyHashContractAddress, core::hash::LegacyHashContractAddress, core::starknet::contract_address::ContractAddressDrop, core::starknet::contract_address::ContractAddressDrop>::hash> = function_call<user@core::hash::TupleSize2LegacyHash::<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress, core::hash::LegacyHashContractAddress, core::hash::LegacyHashContractAddress, core::starknet::contract_address::ContractAddressDrop, core::starknet::contract_address::ContractAddressDrop>::hash>;
libfunc u128s_from_felt252 = u128s_from_felt252;
libfunc struct_construct<Tuple<u128, u128>> = struct_construct<Tuple<u128, u128>>;
libfunc drop<Tuple<u128, u128>> = drop<Tuple<u128, u128>>;
libfunc rename<core::option::Option::<core::integer::u128>> = rename<core::option::Option::<core::integer::u128>>;
libfunc get_execution_info_syscall = get_execution_info_syscall;
libfunc enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 1>;
libfunc rename<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::box::Box::<core::starknet::info::ExecutionInfo>>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::box::Box::<core::starknet::info::ExecutionInfo>>::unwrap_syscall>;
libfunc struct_construct<Tuple<Box<core::starknet::info::ExecutionInfo>>> = struct_construct<Tuple<Box<core::starknet::info::ExecutionInfo>>>;
libfunc enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 0> = enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>> = store_temp<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>;
libfunc enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 1> = enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 1>;
libfunc struct_construct<Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>> = struct_construct<Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>, 0> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>, 0>;
libfunc store_temp<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>> = store_temp<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>>;
libfunc enum_init<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>, 1> = enum_init<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>, 1>;
libfunc function_call<user@core::integer::u256_overflowing_add> = function_call<user@core::integer::u256_overflowing_add>;
libfunc struct_deconstruct<Tuple<core::integer::u256, core::bool>> = struct_deconstruct<Tuple<core::integer::u256, core::bool>>;
libfunc function_call<user@core::integer::u256_overflow_sub> = function_call<user@core::integer::u256_overflow_sub>;
libfunc enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::PanicResult::<((),)>, 0> = enum_init<core::PanicResult::<((),)>, 0>;
libfunc store_temp<core::PanicResult::<((),)>> = store_temp<core::PanicResult::<((),)>>;
libfunc enum_init<core::PanicResult::<((),)>, 1> = enum_init<core::PanicResult::<((),)>, 1>;
libfunc enum_match<erc20::erc20::ERC20::Event> = enum_match<erc20::erc20::ERC20::Event>;
libfunc felt252_const<271746229759260285552388728919865295615886751538523744128730118297934206697> = felt252_const<271746229759260285552388728919865295615886751538523744128730118297934206697>;
libfunc store_temp<erc20::erc20::ERC20::Transfer> = store_temp<erc20::erc20::ERC20::Transfer>;
libfunc function_call<user@erc20::erc20::ERC20::TransferIsEvent::append_keys_and_values> = function_call<user@erc20::erc20::ERC20::TransferIsEvent::append_keys_and_values>;
libfunc felt252_const<544914742286571513055574265148471203182105283038408585630116262969508767999> = felt252_const<544914742286571513055574265148471203182105283038408585630116262969508767999>;
libfunc store_temp<erc20::erc20::ERC20::Approval> = store_temp<erc20::erc20::ERC20::Approval>;
libfunc function_call<user@erc20::erc20::ERC20::ApprovalIsEvent::append_keys_and_values> = function_call<user@erc20::erc20::ERC20::ApprovalIsEvent::append_keys_and_values>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>> = store_temp<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>;
libfunc enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 1>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 1>;
libfunc pedersen = pedersen;
libfunc struct_deconstruct<Tuple<ContractAddress, ContractAddress>> = struct_deconstruct<Tuple<ContractAddress, ContractAddress>>;
libfunc rename<Pedersen> = rename<Pedersen>;
libfunc enum_match<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc struct_construct<Tuple<u128, core::bool>> = struct_construct<Tuple<u128, core::bool>>;
libfunc store_temp<Tuple<u128, core::bool>> = store_temp<Tuple<u128, core::bool>>;
libfunc struct_deconstruct<Tuple<u128, core::bool>> = struct_deconstruct<Tuple<u128, core::bool>>;
libfunc struct_construct<Tuple<core::integer::u256, core::bool>> = struct_construct<Tuple<core::integer::u256, core::bool>>;
libfunc store_temp<Tuple<core::integer::u256, core::bool>> = store_temp<Tuple<core::integer::u256, core::bool>>;
libfunc u128_const<1> = u128_const<1>;
libfunc drop<core::bool> = drop<core::bool>;
libfunc rename<Tuple<core::integer::u256, core::bool>> = rename<Tuple<core::integer::u256, core::bool>>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc dup<erc20::erc20::ERC20::Transfer> = dup<erc20::erc20::ERC20::Transfer>;
libfunc struct_deconstruct<erc20::erc20::ERC20::Transfer> = struct_deconstruct<erc20::erc20::ERC20::Transfer>;
libfunc function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize> = function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>;
libfunc dup<erc20::erc20::ERC20::Approval> = dup<erc20::erc20::ERC20::Approval>;
libfunc struct_deconstruct<erc20::erc20::ERC20::Approval> = struct_deconstruct<erc20::erc20::ERC20::Approval>;
libfunc rename<ContractAddress> = rename<ContractAddress>;

revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 102([6], [7]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]);
array_len<felt252>([8]) -> ([9]);
u32_const<0>() -> ([10]);
store_temp<u32>([9]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([9], [10]) { fallthrough() 15() };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<core::bool>([12]) -> ([13]);
jump() { 19() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([13]);
bool_not_impl([13]) -> ([16]);
store_temp<core::bool>([16]) -> ([16]);
enum_match<core::bool>([16]) { fallthrough([17]) 84([18]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([17]) -> ();
get_builtin_costs() -> ([19]);
store_temp<BuiltinCosts>([19]) -> ([19]);
withdraw_gas_all([4], [5], [19]) { fallthrough([20], [21]) 71([22], [23]) };
branch_align() -> ();
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([24]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([25]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([26]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([27]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([28]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([29]);
struct_construct<erc20::erc20::ERC20::Storage>([24], [25], [26], [27], [28], [29]) -> ([30]);
store_temp<erc20::erc20::ERC20::Storage>([30]) -> ([30]);
dup<erc20::erc20::ERC20::Storage>([30]) -> ([31], [32]);
drop<erc20::erc20::ERC20::Storage>([31]) -> ();
store_temp<GasBuiltin>([21]) -> ([36]);
store_temp<System>([2]) -> ([37]);
store_temp<erc20::erc20::ERC20::Storage>([32]) -> ([38]);
function_call<user@erc20::erc20::ERC20::IERC20Impl::get_name>([36], [37], [38]) -> ([33], [34], [35]);
store_temp<RangeCheck>([20]) -> ([20]);
enum_match<core::PanicResult::<(core::felt252,)>>([35]) { fallthrough([39]) 64([40]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([39]) -> ([41]);
array_new<felt252>() -> ([42]);
dup<felt252>([41]) -> ([43], [44]);
drop<felt252>([43]) -> ();
store_temp<felt252>([44]) -> ([47]);
store_temp<Array<felt252>>([42]) -> ([48]);
function_call<user@core::Felt252Serde::serialize>([47], [48]) -> ([45], [46]);
drop<Unit>([46]) -> ();
snapshot_take<Array<felt252>>([45]) -> ([49], [50]);
drop<Array<felt252>>([49]) -> ();
struct_construct<core::array::Span::<core::felt252>>([50]) -> ([51]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([51]) -> ([52]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([52]) -> ([53]);
store_temp<RangeCheck>([20]) -> ([54]);
store_temp<GasBuiltin>([33]) -> ([55]);
store_temp<System>([34]) -> ([56]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([53]) -> ([57]);
return([54], [55], [56], [57]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([40]) -> ([58]);
store_temp<RangeCheck>([20]) -> ([59]);
store_temp<GasBuiltin>([33]) -> ([60]);
store_temp<System>([34]) -> ([61]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([58]) -> ([62]);
return([59], [60], [61], [62]);
branch_align() -> ();
array_new<felt252>() -> ([63]);
felt252_const<375233589013918064796019>() -> ([64]);
store_temp<felt252>([64]) -> ([64]);
array_append<felt252>([63], [64]) -> ([65]);
struct_construct<core::Panic>() -> ([66]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([66], [65]) -> ([67]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([67]) -> ([68]);
store_temp<RangeCheck>([22]) -> ([69]);
store_temp<GasBuiltin>([23]) -> ([70]);
store_temp<System>([2]) -> ([71]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([68]) -> ([72]);
return([69], [70], [71], [72]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([18]) -> ();
store_temp<System>([2]) -> ([75]);
function_call<user@core::starknet::use_system_implicit>([75]) -> ([73], [74]);
drop<Unit>([74]) -> ();
array_new<felt252>() -> ([76]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([77]);
store_temp<felt252>([77]) -> ([77]);
array_append<felt252>([76], [77]) -> ([78]);
struct_construct<core::Panic>() -> ([79]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([79], [78]) -> ([80]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([80]) -> ([81]);
store_temp<RangeCheck>([4]) -> ([82]);
store_temp<GasBuiltin>([5]) -> ([83]);
store_temp<System>([73]) -> ([84]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([81]) -> ([85]);
return([82], [83], [84], [85]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([86]);
felt252_const<375233589013918064796019>() -> ([87]);
store_temp<felt252>([87]) -> ([87]);
array_append<felt252>([86], [87]) -> ([88]);
struct_construct<core::Panic>() -> ([89]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([89], [88]) -> ([90]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([90]) -> ([91]);
store_temp<RangeCheck>([6]) -> ([92]);
store_temp<GasBuiltin>([7]) -> ([93]);
store_temp<System>([2]) -> ([94]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([91]) -> ([95]);
return([92], [93], [94], [95]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 219([6], [7]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]);
array_len<felt252>([8]) -> ([9]);
u32_const<0>() -> ([10]);
store_temp<u32>([9]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([9], [10]) { fallthrough() 132() };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<core::bool>([12]) -> ([13]);
jump() { 136() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([13]);
bool_not_impl([13]) -> ([16]);
store_temp<core::bool>([16]) -> ([16]);
enum_match<core::bool>([16]) { fallthrough([17]) 201([18]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([17]) -> ();
get_builtin_costs() -> ([19]);
store_temp<BuiltinCosts>([19]) -> ([19]);
withdraw_gas_all([4], [5], [19]) { fallthrough([20], [21]) 188([22], [23]) };
branch_align() -> ();
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([24]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([25]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([26]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([27]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([28]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([29]);
struct_construct<erc20::erc20::ERC20::Storage>([24], [25], [26], [27], [28], [29]) -> ([30]);
store_temp<erc20::erc20::ERC20::Storage>([30]) -> ([30]);
dup<erc20::erc20::ERC20::Storage>([30]) -> ([31], [32]);
drop<erc20::erc20::ERC20::Storage>([31]) -> ();
store_temp<GasBuiltin>([21]) -> ([36]);
store_temp<System>([2]) -> ([37]);
store_temp<erc20::erc20::ERC20::Storage>([32]) -> ([38]);
function_call<user@erc20::erc20::ERC20::IERC20Impl::get_symbol>([36], [37], [38]) -> ([33], [34], [35]);
store_temp<RangeCheck>([20]) -> ([20]);
enum_match<core::PanicResult::<(core::felt252,)>>([35]) { fallthrough([39]) 181([40]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([39]) -> ([41]);
array_new<felt252>() -> ([42]);
dup<felt252>([41]) -> ([43], [44]);
drop<felt252>([43]) -> ();
store_temp<felt252>([44]) -> ([47]);
store_temp<Array<felt252>>([42]) -> ([48]);
function_call<user@core::Felt252Serde::serialize>([47], [48]) -> ([45], [46]);
drop<Unit>([46]) -> ();
snapshot_take<Array<felt252>>([45]) -> ([49], [50]);
drop<Array<felt252>>([49]) -> ();
struct_construct<core::array::Span::<core::felt252>>([50]) -> ([51]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([51]) -> ([52]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([52]) -> ([53]);
store_temp<RangeCheck>([20]) -> ([54]);
store_temp<GasBuiltin>([33]) -> ([55]);
store_temp<System>([34]) -> ([56]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([53]) -> ([57]);
return([54], [55], [56], [57]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([40]) -> ([58]);
store_temp<RangeCheck>([20]) -> ([59]);
store_temp<GasBuiltin>([33]) -> ([60]);
store_temp<System>([34]) -> ([61]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([58]) -> ([62]);
return([59], [60], [61], [62]);
branch_align() -> ();
array_new<felt252>() -> ([63]);
felt252_const<375233589013918064796019>() -> ([64]);
store_temp<felt252>([64]) -> ([64]);
array_append<felt252>([63], [64]) -> ([65]);
struct_construct<core::Panic>() -> ([66]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([66], [65]) -> ([67]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([67]) -> ([68]);
store_temp<RangeCheck>([22]) -> ([69]);
store_temp<GasBuiltin>([23]) -> ([70]);
store_temp<System>([2]) -> ([71]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([68]) -> ([72]);
return([69], [70], [71], [72]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([18]) -> ();
store_temp<System>([2]) -> ([75]);
function_call<user@core::starknet::use_system_implicit>([75]) -> ([73], [74]);
drop<Unit>([74]) -> ();
array_new<felt252>() -> ([76]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([77]);
store_temp<felt252>([77]) -> ([77]);
array_append<felt252>([76], [77]) -> ([78]);
struct_construct<core::Panic>() -> ([79]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([79], [78]) -> ([80]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([80]) -> ([81]);
store_temp<RangeCheck>([4]) -> ([82]);
store_temp<GasBuiltin>([5]) -> ([83]);
store_temp<System>([73]) -> ([84]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([81]) -> ([85]);
return([82], [83], [84], [85]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([86]);
felt252_const<375233589013918064796019>() -> ([87]);
store_temp<felt252>([87]) -> ([87]);
array_append<felt252>([86], [87]) -> ([88]);
struct_construct<core::Panic>() -> ([89]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([89], [88]) -> ([90]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([90]) -> ([91]);
store_temp<RangeCheck>([6]) -> ([92]);
store_temp<GasBuiltin>([7]) -> ([93]);
store_temp<System>([2]) -> ([94]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([91]) -> ([95]);
return([92], [93], [94], [95]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 336([6], [7]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]);
array_len<felt252>([8]) -> ([9]);
u32_const<0>() -> ([10]);
store_temp<u32>([9]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([9], [10]) { fallthrough() 249() };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<core::bool>([12]) -> ([13]);
jump() { 253() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([13]);
bool_not_impl([13]) -> ([16]);
store_temp<core::bool>([16]) -> ([16]);
enum_match<core::bool>([16]) { fallthrough([17]) 318([18]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([17]) -> ();
get_builtin_costs() -> ([19]);
store_temp<BuiltinCosts>([19]) -> ([19]);
withdraw_gas_all([4], [5], [19]) { fallthrough([20], [21]) 305([22], [23]) };
branch_align() -> ();
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([24]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([25]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([26]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([27]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([28]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([29]);
struct_construct<erc20::erc20::ERC20::Storage>([24], [25], [26], [27], [28], [29]) -> ([30]);
store_temp<erc20::erc20::ERC20::Storage>([30]) -> ([30]);
dup<erc20::erc20::ERC20::Storage>([30]) -> ([31], [32]);
drop<erc20::erc20::ERC20::Storage>([31]) -> ();
store_temp<RangeCheck>([20]) -> ([37]);
store_temp<GasBuiltin>([21]) -> ([38]);
store_temp<System>([2]) -> ([39]);
store_temp<erc20::erc20::ERC20::Storage>([32]) -> ([40]);
function_call<user@erc20::erc20::ERC20::IERC20Impl::get_decimals>([37], [38], [39], [40]) -> ([33], [34], [35], [36]);
enum_match<core::PanicResult::<(core::integer::u8,)>>([36]) { fallthrough([41]) 298([42]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([41]) -> ([43]);
array_new<felt252>() -> ([44]);
dup<u8>([43]) -> ([45], [46]);
drop<u8>([45]) -> ();
store_temp<u8>([46]) -> ([49]);
store_temp<Array<felt252>>([44]) -> ([50]);
function_call<user@core::integer::U8Serde::serialize>([49], [50]) -> ([47], [48]);
drop<Unit>([48]) -> ();
snapshot_take<Array<felt252>>([47]) -> ([51], [52]);
drop<Array<felt252>>([51]) -> ();
struct_construct<core::array::Span::<core::felt252>>([52]) -> ([53]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([53]) -> ([54]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([54]) -> ([55]);
store_temp<RangeCheck>([33]) -> ([56]);
store_temp<GasBuiltin>([34]) -> ([57]);
store_temp<System>([35]) -> ([58]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([55]) -> ([59]);
return([56], [57], [58], [59]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([42]) -> ([60]);
store_temp<RangeCheck>([33]) -> ([61]);
store_temp<GasBuiltin>([34]) -> ([62]);
store_temp<System>([35]) -> ([63]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([60]) -> ([64]);
return([61], [62], [63], [64]);
branch_align() -> ();
array_new<felt252>() -> ([65]);
felt252_const<375233589013918064796019>() -> ([66]);
store_temp<felt252>([66]) -> ([66]);
array_append<felt252>([65], [66]) -> ([67]);
struct_construct<core::Panic>() -> ([68]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([68], [67]) -> ([69]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([69]) -> ([70]);
store_temp<RangeCheck>([22]) -> ([71]);
store_temp<GasBuiltin>([23]) -> ([72]);
store_temp<System>([2]) -> ([73]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([70]) -> ([74]);
return([71], [72], [73], [74]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([18]) -> ();
store_temp<System>([2]) -> ([77]);
function_call<user@core::starknet::use_system_implicit>([77]) -> ([75], [76]);
drop<Unit>([76]) -> ();
array_new<felt252>() -> ([78]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([79]);
store_temp<felt252>([79]) -> ([79]);
array_append<felt252>([78], [79]) -> ([80]);
struct_construct<core::Panic>() -> ([81]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([81], [80]) -> ([82]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([82]) -> ([83]);
store_temp<RangeCheck>([4]) -> ([84]);
store_temp<GasBuiltin>([5]) -> ([85]);
store_temp<System>([75]) -> ([86]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([83]) -> ([87]);
return([84], [85], [86], [87]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([88]);
felt252_const<375233589013918064796019>() -> ([89]);
store_temp<felt252>([89]) -> ([89]);
array_append<felt252>([88], [89]) -> ([90]);
struct_construct<core::Panic>() -> ([91]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([91], [90]) -> ([92]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([92]) -> ([93]);
store_temp<RangeCheck>([6]) -> ([94]);
store_temp<GasBuiltin>([7]) -> ([95]);
store_temp<System>([2]) -> ([96]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([93]) -> ([97]);
return([94], [95], [96], [97]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 453([6], [7]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]);
array_len<felt252>([8]) -> ([9]);
u32_const<0>() -> ([10]);
store_temp<u32>([9]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([9], [10]) { fallthrough() 366() };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<core::bool>([12]) -> ([13]);
jump() { 370() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([13]);
bool_not_impl([13]) -> ([16]);
store_temp<core::bool>([16]) -> ([16]);
enum_match<core::bool>([16]) { fallthrough([17]) 435([18]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([17]) -> ();
get_builtin_costs() -> ([19]);
store_temp<BuiltinCosts>([19]) -> ([19]);
withdraw_gas_all([4], [5], [19]) { fallthrough([20], [21]) 422([22], [23]) };
branch_align() -> ();
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([24]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([25]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([26]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([27]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([28]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([29]);
struct_construct<erc20::erc20::ERC20::Storage>([24], [25], [26], [27], [28], [29]) -> ([30]);
store_temp<erc20::erc20::ERC20::Storage>([30]) -> ([30]);
dup<erc20::erc20::ERC20::Storage>([30]) -> ([31], [32]);
drop<erc20::erc20::ERC20::Storage>([31]) -> ();
store_temp<RangeCheck>([20]) -> ([37]);
store_temp<GasBuiltin>([21]) -> ([38]);
store_temp<System>([2]) -> ([39]);
store_temp<erc20::erc20::ERC20::Storage>([32]) -> ([40]);
function_call<user@erc20::erc20::ERC20::IERC20Impl::get_total_supply>([37], [38], [39], [40]) -> ([33], [34], [35], [36]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([36]) { fallthrough([41]) 415([42]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([41]) -> ([43]);
array_new<felt252>() -> ([44]);
dup<core::integer::u256>([43]) -> ([45], [46]);
drop<core::integer::u256>([45]) -> ();
store_temp<core::integer::u256>([46]) -> ([49]);
store_temp<Array<felt252>>([44]) -> ([50]);
function_call<user@core::integer::u256Serde::serialize>([49], [50]) -> ([47], [48]);
drop<Unit>([48]) -> ();
snapshot_take<Array<felt252>>([47]) -> ([51], [52]);
drop<Array<felt252>>([51]) -> ();
struct_construct<core::array::Span::<core::felt252>>([52]) -> ([53]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([53]) -> ([54]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([54]) -> ([55]);
store_temp<RangeCheck>([33]) -> ([56]);
store_temp<GasBuiltin>([34]) -> ([57]);
store_temp<System>([35]) -> ([58]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([55]) -> ([59]);
return([56], [57], [58], [59]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([42]) -> ([60]);
store_temp<RangeCheck>([33]) -> ([61]);
store_temp<GasBuiltin>([34]) -> ([62]);
store_temp<System>([35]) -> ([63]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([60]) -> ([64]);
return([61], [62], [63], [64]);
branch_align() -> ();
array_new<felt252>() -> ([65]);
felt252_const<375233589013918064796019>() -> ([66]);
store_temp<felt252>([66]) -> ([66]);
array_append<felt252>([65], [66]) -> ([67]);
struct_construct<core::Panic>() -> ([68]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([68], [67]) -> ([69]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([69]) -> ([70]);
store_temp<RangeCheck>([22]) -> ([71]);
store_temp<GasBuiltin>([23]) -> ([72]);
store_temp<System>([2]) -> ([73]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([70]) -> ([74]);
return([71], [72], [73], [74]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([18]) -> ();
store_temp<System>([2]) -> ([77]);
function_call<user@core::starknet::use_system_implicit>([77]) -> ([75], [76]);
drop<Unit>([76]) -> ();
array_new<felt252>() -> ([78]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([79]);
store_temp<felt252>([79]) -> ([79]);
array_append<felt252>([78], [79]) -> ([80]);
struct_construct<core::Panic>() -> ([81]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([81], [80]) -> ([82]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([82]) -> ([83]);
store_temp<RangeCheck>([4]) -> ([84]);
store_temp<GasBuiltin>([5]) -> ([85]);
store_temp<System>([75]) -> ([86]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([83]) -> ([87]);
return([84], [85], [86], [87]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([88]);
felt252_const<375233589013918064796019>() -> ([89]);
store_temp<felt252>([89]) -> ([89]);
array_append<felt252>([88], [89]) -> ([90]);
struct_construct<core::Panic>() -> ([91]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([91], [90]) -> ([92]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([92]) -> ([93]);
store_temp<RangeCheck>([6]) -> ([94]);
store_temp<GasBuiltin>([7]) -> ([95]);
store_temp<System>([2]) -> ([96]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([93]) -> ([97]);
return([94], [95], [96], [97]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 600([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 583([15]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([10]) -> ([16]);
array_len<felt252>([16]) -> ([17]);
u32_const<0>() -> ([18]);
store_temp<u32>([17]) -> ([17]);
u32_eq([17], [18]) { fallthrough() 487() };
branch_align() -> ();
struct_construct<Unit>() -> ([19]);
enum_init<core::bool, 0>([19]) -> ([20]);
store_temp<core::bool>([20]) -> ([21]);
jump() { 491() };
branch_align() -> ();
struct_construct<Unit>() -> ([22]);
enum_init<core::bool, 1>([22]) -> ([23]);
store_temp<core::bool>([23]) -> ([21]);
bool_not_impl([21]) -> ([24]);
store_temp<core::bool>([24]) -> ([24]);
enum_match<core::bool>([24]) { fallthrough([25]) 563([26]) };
branch_align() -> ();
drop<Unit>([25]) -> ();
get_builtin_costs() -> ([27]);
store_temp<BuiltinCosts>([27]) -> ([27]);
withdraw_gas_all([9], [6], [27]) { fallthrough([28], [29]) 547([30], [31]) };
branch_align() -> ();
disable_ap_tracking() -> ();
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([32]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([33]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([34]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([35]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([36]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([37]);
struct_construct<erc20::erc20::ERC20::Storage>([32], [33], [34], [35], [36], [37]) -> ([38]);
store_temp<erc20::erc20::ERC20::Storage>([38]) -> ([38]);
dup<erc20::erc20::ERC20::Storage>([38]) -> ([39], [40]);
drop<erc20::erc20::ERC20::Storage>([39]) -> ();
store_temp<RangeCheck>([28]) -> ([46]);
store_temp<GasBuiltin>([29]) -> ([47]);
store_temp<Pedersen>([0]) -> ([48]);
store_temp<System>([3]) -> ([49]);
store_temp<erc20::erc20::ERC20::Storage>([40]) -> ([50]);
store_temp<ContractAddress>([14]) -> ([51]);
function_call<user@erc20::erc20::ERC20::IERC20Impl::balance_of>([46], [47], [48], [49], [50], [51]) -> ([41], [42], [43], [44], [45]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([45]) { fallthrough([52]) 539([53]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([52]) -> ([54]);
array_new<felt252>() -> ([55]);
dup<core::integer::u256>([54]) -> ([56], [57]);
drop<core::integer::u256>([56]) -> ();
store_temp<core::integer::u256>([57]) -> ([60]);
store_temp<Array<felt252>>([55]) -> ([61]);
function_call<user@core::integer::u256Serde::serialize>([60], [61]) -> ([58], [59]);
drop<Unit>([59]) -> ();
snapshot_take<Array<felt252>>([58]) -> ([62], [63]);
drop<Array<felt252>>([62]) -> ();
struct_construct<core::array::Span::<core::felt252>>([63]) -> ([64]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([64]) -> ([65]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([65]) -> ([66]);
store_temp<Pedersen>([43]) -> ([67]);
store_temp<RangeCheck>([41]) -> ([68]);
store_temp<GasBuiltin>([42]) -> ([69]);
store_temp<System>([44]) -> ([70]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([66]) -> ([71]);
return([67], [68], [69], [70], [71]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([53]) -> ([72]);
store_temp<Pedersen>([43]) -> ([73]);
store_temp<RangeCheck>([41]) -> ([74]);
store_temp<GasBuiltin>([42]) -> ([75]);
store_temp<System>([44]) -> ([76]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([72]) -> ([77]);
return([73], [74], [75], [76], [77]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([78]);
felt252_const<375233589013918064796019>() -> ([79]);
store_temp<felt252>([79]) -> ([79]);
array_append<felt252>([78], [79]) -> ([80]);
struct_construct<core::Panic>() -> ([81]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([81], [80]) -> ([82]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([82]) -> ([83]);
store_temp<Pedersen>([0]) -> ([84]);
store_temp<RangeCheck>([30]) -> ([85]);
store_temp<GasBuiltin>([31]) -> ([86]);
store_temp<System>([3]) -> ([87]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([83]) -> ([88]);
return([84], [85], [86], [87], [88]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([26]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([91]);
function_call<user@core::starknet::use_system_implicit>([91]) -> ([89], [90]);
drop<Unit>([90]) -> ();
array_new<felt252>() -> ([92]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([93]);
store_temp<felt252>([93]) -> ([93]);
array_append<felt252>([92], [93]) -> ([94]);
struct_construct<core::Panic>() -> ([95]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([95], [94]) -> ([96]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([96]) -> ([97]);
store_temp<Pedersen>([0]) -> ([98]);
store_temp<RangeCheck>([9]) -> ([99]);
store_temp<GasBuiltin>([6]) -> ([100]);
store_temp<System>([89]) -> ([101]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([97]) -> ([102]);
return([98], [99], [100], [101], [102]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([103]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([104]);
store_temp<felt252>([104]) -> ([104]);
array_append<felt252>([103], [104]) -> ([105]);
struct_construct<core::Panic>() -> ([106]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([106], [105]) -> ([107]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([107]) -> ([108]);
store_temp<Pedersen>([0]) -> ([109]);
store_temp<RangeCheck>([9]) -> ([110]);
store_temp<GasBuiltin>([6]) -> ([111]);
store_temp<System>([3]) -> ([112]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([108]) -> ([113]);
return([109], [110], [111], [112], [113]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([114]);
felt252_const<375233589013918064796019>() -> ([115]);
store_temp<felt252>([115]) -> ([115]);
array_append<felt252>([114], [115]) -> ([116]);
struct_construct<core::Panic>() -> ([117]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([117], [116]) -> ([118]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([118]) -> ([119]);
store_temp<Pedersen>([0]) -> ([120]);
store_temp<RangeCheck>([7]) -> ([121]);
store_temp<GasBuiltin>([8]) -> ([122]);
store_temp<System>([3]) -> ([123]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([119]) -> ([124]);
return([120], [121], [122], [123], [124]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 774([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 757([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([18]) { fallthrough([21]) 739([22]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([17]) -> ([23]);
array_len<felt252>([23]) -> ([24]);
u32_const<0>() -> ([25]);
store_temp<u32>([24]) -> ([24]);
u32_eq([24], [25]) { fallthrough() 640() };
branch_align() -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([28]);
jump() { 644() };
branch_align() -> ();
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<core::bool>([30]) -> ([28]);
bool_not_impl([28]) -> ([31]);
store_temp<core::bool>([31]) -> ([31]);
enum_match<core::bool>([31]) { fallthrough([32]) 718([33]) };
branch_align() -> ();
drop<Unit>([32]) -> ();
get_builtin_costs() -> ([34]);
store_temp<BuiltinCosts>([34]) -> ([34]);
withdraw_gas_all([16], [6], [34]) { fallthrough([35], [36]) 701([37], [38]) };
branch_align() -> ();
disable_ap_tracking() -> ();
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([39]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([40]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([41]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([42]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([43]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([44]);
struct_construct<erc20::erc20::ERC20::Storage>([39], [40], [41], [42], [43], [44]) -> ([45]);
store_temp<erc20::erc20::ERC20::Storage>([45]) -> ([45]);
dup<erc20::erc20::ERC20::Storage>([45]) -> ([46], [47]);
drop<erc20::erc20::ERC20::Storage>([46]) -> ();
store_temp<RangeCheck>([35]) -> ([53]);
store_temp<GasBuiltin>([36]) -> ([54]);
store_temp<Pedersen>([0]) -> ([55]);
store_temp<System>([3]) -> ([56]);
store_temp<erc20::erc20::ERC20::Storage>([47]) -> ([57]);
store_temp<ContractAddress>([14]) -> ([58]);
store_temp<ContractAddress>([21]) -> ([59]);
function_call<user@erc20::erc20::ERC20::IERC20Impl::allowance>([53], [54], [55], [56], [57], [58], [59]) -> ([48], [49], [50], [51], [52]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([52]) { fallthrough([60]) 693([61]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([60]) -> ([62]);
array_new<felt252>() -> ([63]);
dup<core::integer::u256>([62]) -> ([64], [65]);
drop<core::integer::u256>([64]) -> ();
store_temp<core::integer::u256>([65]) -> ([68]);
store_temp<Array<felt252>>([63]) -> ([69]);
function_call<user@core::integer::u256Serde::serialize>([68], [69]) -> ([66], [67]);
drop<Unit>([67]) -> ();
snapshot_take<Array<felt252>>([66]) -> ([70], [71]);
drop<Array<felt252>>([70]) -> ();
struct_construct<core::array::Span::<core::felt252>>([71]) -> ([72]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([72]) -> ([73]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([73]) -> ([74]);
store_temp<Pedersen>([50]) -> ([75]);
store_temp<RangeCheck>([48]) -> ([76]);
store_temp<GasBuiltin>([49]) -> ([77]);
store_temp<System>([51]) -> ([78]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([74]) -> ([79]);
return([75], [76], [77], [78], [79]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([61]) -> ([80]);
store_temp<Pedersen>([50]) -> ([81]);
store_temp<RangeCheck>([48]) -> ([82]);
store_temp<GasBuiltin>([49]) -> ([83]);
store_temp<System>([51]) -> ([84]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([80]) -> ([85]);
return([81], [82], [83], [84], [85]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<ContractAddress>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([86]);
felt252_const<375233589013918064796019>() -> ([87]);
store_temp<felt252>([87]) -> ([87]);
array_append<felt252>([86], [87]) -> ([88]);
struct_construct<core::Panic>() -> ([89]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([89], [88]) -> ([90]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([90]) -> ([91]);
store_temp<Pedersen>([0]) -> ([92]);
store_temp<RangeCheck>([37]) -> ([93]);
store_temp<GasBuiltin>([38]) -> ([94]);
store_temp<System>([3]) -> ([95]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([91]) -> ([96]);
return([92], [93], [94], [95], [96]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([33]) -> ();
drop<ContractAddress>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([99]);
function_call<user@core::starknet::use_system_implicit>([99]) -> ([97], [98]);
drop<Unit>([98]) -> ();
array_new<felt252>() -> ([100]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([101]);
store_temp<felt252>([101]) -> ([101]);
array_append<felt252>([100], [101]) -> ([102]);
struct_construct<core::Panic>() -> ([103]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([103], [102]) -> ([104]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([104]) -> ([105]);
store_temp<Pedersen>([0]) -> ([106]);
store_temp<RangeCheck>([16]) -> ([107]);
store_temp<GasBuiltin>([6]) -> ([108]);
store_temp<System>([97]) -> ([109]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([105]) -> ([110]);
return([106], [107], [108], [109], [110]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([111]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([112]);
store_temp<felt252>([112]) -> ([112]);
array_append<felt252>([111], [112]) -> ([113]);
struct_construct<core::Panic>() -> ([114]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([114], [113]) -> ([115]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([115]) -> ([116]);
store_temp<Pedersen>([0]) -> ([117]);
store_temp<RangeCheck>([16]) -> ([118]);
store_temp<GasBuiltin>([6]) -> ([119]);
store_temp<System>([3]) -> ([120]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([116]) -> ([121]);
return([117], [118], [119], [120], [121]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([122]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([123]);
store_temp<felt252>([123]) -> ([123]);
array_append<felt252>([122], [123]) -> ([124]);
struct_construct<core::Panic>() -> ([125]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([125], [124]) -> ([126]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([126]) -> ([127]);
store_temp<Pedersen>([0]) -> ([128]);
store_temp<RangeCheck>([9]) -> ([129]);
store_temp<GasBuiltin>([6]) -> ([130]);
store_temp<System>([3]) -> ([131]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([127]) -> ([132]);
return([128], [129], [130], [131], [132]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([133]);
felt252_const<375233589013918064796019>() -> ([134]);
store_temp<felt252>([134]) -> ([134]);
array_append<felt252>([133], [134]) -> ([135]);
struct_construct<core::Panic>() -> ([136]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([136], [135]) -> ([137]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([137]) -> ([138]);
store_temp<Pedersen>([0]) -> ([139]);
store_temp<RangeCheck>([7]) -> ([140]);
store_temp<GasBuiltin>([8]) -> ([141]);
store_temp<System>([3]) -> ([142]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([138]) -> ([143]);
return([139], [140], [141], [142], [143]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 939([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 922([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::integer::u256Serde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::integer::u256>>([18]) { fallthrough([21]) 904([22]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([17]) -> ([23]);
array_len<felt252>([23]) -> ([24]);
u32_const<0>() -> ([25]);
store_temp<u32>([24]) -> ([24]);
u32_eq([24], [25]) { fallthrough() 814() };
branch_align() -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([28]);
jump() { 818() };
branch_align() -> ();
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<core::bool>([30]) -> ([28]);
bool_not_impl([28]) -> ([31]);
store_temp<core::bool>([31]) -> ([31]);
enum_match<core::bool>([31]) { fallthrough([32]) 883([33]) };
branch_align() -> ();
drop<Unit>([32]) -> ();
get_builtin_costs() -> ([34]);
store_temp<BuiltinCosts>([34]) -> ([34]);
withdraw_gas_all([16], [6], [34]) { fallthrough([35], [36]) 866([37], [38]) };
branch_align() -> ();
disable_ap_tracking() -> ();
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([39]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([40]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([41]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([42]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([43]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([44]);
struct_construct<erc20::erc20::ERC20::Storage>([39], [40], [41], [42], [43], [44]) -> ([45]);
store_temp<RangeCheck>([35]) -> ([51]);
store_temp<GasBuiltin>([36]) -> ([52]);
store_temp<Pedersen>([0]) -> ([53]);
store_temp<System>([3]) -> ([54]);
store_temp<erc20::erc20::ERC20::Storage>([45]) -> ([55]);
store_temp<ContractAddress>([14]) -> ([56]);
store_temp<core::integer::u256>([21]) -> ([57]);
function_call<user@erc20::erc20::ERC20::IERC20Impl::transfer>([51], [52], [53], [54], [55], [56], [57]) -> ([46], [47], [48], [49], [50]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([50]) { fallthrough([58]) 858([59]) };
branch_align() -> ();
drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>([58]) -> ();
array_new<felt252>() -> ([60]);
snapshot_take<Array<felt252>>([60]) -> ([61], [62]);
drop<Array<felt252>>([61]) -> ();
struct_construct<core::array::Span::<core::felt252>>([62]) -> ([63]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([63]) -> ([64]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([64]) -> ([65]);
store_temp<Pedersen>([48]) -> ([66]);
store_temp<RangeCheck>([46]) -> ([67]);
store_temp<GasBuiltin>([47]) -> ([68]);
store_temp<System>([49]) -> ([69]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([65]) -> ([70]);
return([66], [67], [68], [69], [70]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([59]) -> ([71]);
store_temp<Pedersen>([48]) -> ([72]);
store_temp<RangeCheck>([46]) -> ([73]);
store_temp<GasBuiltin>([47]) -> ([74]);
store_temp<System>([49]) -> ([75]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([71]) -> ([76]);
return([72], [73], [74], [75], [76]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([77]);
felt252_const<375233589013918064796019>() -> ([78]);
store_temp<felt252>([78]) -> ([78]);
array_append<felt252>([77], [78]) -> ([79]);
struct_construct<core::Panic>() -> ([80]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([80], [79]) -> ([81]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([81]) -> ([82]);
store_temp<Pedersen>([0]) -> ([83]);
store_temp<RangeCheck>([37]) -> ([84]);
store_temp<GasBuiltin>([38]) -> ([85]);
store_temp<System>([3]) -> ([86]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([82]) -> ([87]);
return([83], [84], [85], [86], [87]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([33]) -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([90]);
function_call<user@core::starknet::use_system_implicit>([90]) -> ([88], [89]);
drop<Unit>([89]) -> ();
array_new<felt252>() -> ([91]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([92]);
store_temp<felt252>([92]) -> ([92]);
array_append<felt252>([91], [92]) -> ([93]);
struct_construct<core::Panic>() -> ([94]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([94], [93]) -> ([95]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([95]) -> ([96]);
store_temp<Pedersen>([0]) -> ([97]);
store_temp<RangeCheck>([16]) -> ([98]);
store_temp<GasBuiltin>([6]) -> ([99]);
store_temp<System>([88]) -> ([100]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([96]) -> ([101]);
return([97], [98], [99], [100], [101]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([102]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([103]);
store_temp<felt252>([103]) -> ([103]);
array_append<felt252>([102], [103]) -> ([104]);
struct_construct<core::Panic>() -> ([105]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([105], [104]) -> ([106]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([106]) -> ([107]);
store_temp<Pedersen>([0]) -> ([108]);
store_temp<RangeCheck>([16]) -> ([109]);
store_temp<GasBuiltin>([6]) -> ([110]);
store_temp<System>([3]) -> ([111]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([107]) -> ([112]);
return([108], [109], [110], [111], [112]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([113]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([114]);
store_temp<felt252>([114]) -> ([114]);
array_append<felt252>([113], [114]) -> ([115]);
struct_construct<core::Panic>() -> ([116]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([116], [115]) -> ([117]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([117]) -> ([118]);
store_temp<Pedersen>([0]) -> ([119]);
store_temp<RangeCheck>([9]) -> ([120]);
store_temp<GasBuiltin>([6]) -> ([121]);
store_temp<System>([3]) -> ([122]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([118]) -> ([123]);
return([119], [120], [121], [122], [123]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([124]);
felt252_const<375233589013918064796019>() -> ([125]);
store_temp<felt252>([125]) -> ([125]);
array_append<felt252>([124], [125]) -> ([126]);
struct_construct<core::Panic>() -> ([127]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([127], [126]) -> ([128]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([128]) -> ([129]);
store_temp<Pedersen>([0]) -> ([130]);
store_temp<RangeCheck>([7]) -> ([131]);
store_temp<GasBuiltin>([8]) -> ([132]);
store_temp<System>([3]) -> ([133]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([129]) -> ([134]);
return([130], [131], [132], [133], [134]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1131([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 1114([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([18]) { fallthrough([21]) 1096([22]) };
branch_align() -> ();
store_temp<RangeCheck>([16]) -> ([26]);
store_temp<core::array::Span::<core::felt252>>([17]) -> ([27]);
function_call<user@core::integer::u256Serde::deserialize>([26], [27]) -> ([23], [24], [25]);
enum_match<core::option::Option::<core::integer::u256>>([25]) { fallthrough([28]) 1077([29]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([24]) -> ([30]);
array_len<felt252>([30]) -> ([31]);
u32_const<0>() -> ([32]);
store_temp<u32>([31]) -> ([31]);
u32_eq([31], [32]) { fallthrough() 984() };
branch_align() -> ();
struct_construct<Unit>() -> ([33]);
enum_init<core::bool, 0>([33]) -> ([34]);
store_temp<core::bool>([34]) -> ([35]);
jump() { 988() };
branch_align() -> ();
struct_construct<Unit>() -> ([36]);
enum_init<core::bool, 1>([36]) -> ([37]);
store_temp<core::bool>([37]) -> ([35]);
bool_not_impl([35]) -> ([38]);
store_temp<core::bool>([38]) -> ([38]);
enum_match<core::bool>([38]) { fallthrough([39]) 1055([40]) };
branch_align() -> ();
drop<Unit>([39]) -> ();
get_builtin_costs() -> ([41]);
store_temp<BuiltinCosts>([41]) -> ([41]);
withdraw_gas_all([23], [6], [41]) { fallthrough([42], [43]) 1037([44], [45]) };
branch_align() -> ();
disable_ap_tracking() -> ();
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([46]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([47]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([48]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([49]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([50]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([51]);
struct_construct<erc20::erc20::ERC20::Storage>([46], [47], [48], [49], [50], [51]) -> ([52]);
store_temp<RangeCheck>([42]) -> ([58]);
store_temp<GasBuiltin>([43]) -> ([59]);
store_temp<Pedersen>([0]) -> ([60]);
store_temp<System>([3]) -> ([61]);
store_temp<erc20::erc20::ERC20::Storage>([52]) -> ([62]);
store_temp<ContractAddress>([14]) -> ([63]);
store_temp<ContractAddress>([21]) -> ([64]);
store_temp<core::integer::u256>([28]) -> ([65]);
function_call<user@erc20::erc20::ERC20::IERC20Impl::transfer_from>([58], [59], [60], [61], [62], [63], [64], [65]) -> ([53], [54], [55], [56], [57]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([57]) { fallthrough([66]) 1029([67]) };
branch_align() -> ();
drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>([66]) -> ();
array_new<felt252>() -> ([68]);
snapshot_take<Array<felt252>>([68]) -> ([69], [70]);
drop<Array<felt252>>([69]) -> ();
struct_construct<core::array::Span::<core::felt252>>([70]) -> ([71]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([71]) -> ([72]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([72]) -> ([73]);
store_temp<Pedersen>([55]) -> ([74]);
store_temp<RangeCheck>([53]) -> ([75]);
store_temp<GasBuiltin>([54]) -> ([76]);
store_temp<System>([56]) -> ([77]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([73]) -> ([78]);
return([74], [75], [76], [77], [78]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([67]) -> ([79]);
store_temp<Pedersen>([55]) -> ([80]);
store_temp<RangeCheck>([53]) -> ([81]);
store_temp<GasBuiltin>([54]) -> ([82]);
store_temp<System>([56]) -> ([83]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([79]) -> ([84]);
return([80], [81], [82], [83], [84]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::integer::u256>([28]) -> ();
drop<ContractAddress>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([85]);
felt252_const<375233589013918064796019>() -> ([86]);
store_temp<felt252>([86]) -> ([86]);
array_append<felt252>([85], [86]) -> ([87]);
struct_construct<core::Panic>() -> ([88]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([88], [87]) -> ([89]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([89]) -> ([90]);
store_temp<Pedersen>([0]) -> ([91]);
store_temp<RangeCheck>([44]) -> ([92]);
store_temp<GasBuiltin>([45]) -> ([93]);
store_temp<System>([3]) -> ([94]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([90]) -> ([95]);
return([91], [92], [93], [94], [95]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([40]) -> ();
drop<core::integer::u256>([28]) -> ();
drop<ContractAddress>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([98]);
function_call<user@core::starknet::use_system_implicit>([98]) -> ([96], [97]);
drop<Unit>([97]) -> ();
array_new<felt252>() -> ([99]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([100]);
store_temp<felt252>([100]) -> ([100]);
array_append<felt252>([99], [100]) -> ([101]);
struct_construct<core::Panic>() -> ([102]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([102], [101]) -> ([103]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([103]) -> ([104]);
store_temp<Pedersen>([0]) -> ([105]);
store_temp<RangeCheck>([23]) -> ([106]);
store_temp<GasBuiltin>([6]) -> ([107]);
store_temp<System>([96]) -> ([108]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([104]) -> ([109]);
return([105], [106], [107], [108], [109]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([29]) -> ();
drop<core::array::Span::<core::felt252>>([24]) -> ();
drop<ContractAddress>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([110]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([111]);
store_temp<felt252>([111]) -> ([111]);
array_append<felt252>([110], [111]) -> ([112]);
struct_construct<core::Panic>() -> ([113]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([113], [112]) -> ([114]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([114]) -> ([115]);
store_temp<Pedersen>([0]) -> ([116]);
store_temp<RangeCheck>([23]) -> ([117]);
store_temp<GasBuiltin>([6]) -> ([118]);
store_temp<System>([3]) -> ([119]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([115]) -> ([120]);
return([116], [117], [118], [119], [120]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<ContractAddress>([14]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
array_new<felt252>() -> ([121]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([122]);
store_temp<felt252>([122]) -> ([122]);
array_append<felt252>([121], [122]) -> ([123]);
struct_construct<core::Panic>() -> ([124]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([124], [123]) -> ([125]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([125]) -> ([126]);
store_temp<Pedersen>([0]) -> ([127]);
store_temp<RangeCheck>([16]) -> ([128]);
store_temp<GasBuiltin>([6]) -> ([129]);
store_temp<System>([3]) -> ([130]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([126]) -> ([131]);
return([127], [128], [129], [130], [131]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([132]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([133]);
store_temp<felt252>([133]) -> ([133]);
array_append<felt252>([132], [133]) -> ([134]);
struct_construct<core::Panic>() -> ([135]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([135], [134]) -> ([136]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([136]) -> ([137]);
store_temp<Pedersen>([0]) -> ([138]);
store_temp<RangeCheck>([9]) -> ([139]);
store_temp<GasBuiltin>([6]) -> ([140]);
store_temp<System>([3]) -> ([141]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([137]) -> ([142]);
return([138], [139], [140], [141], [142]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([143]);
felt252_const<375233589013918064796019>() -> ([144]);
store_temp<felt252>([144]) -> ([144]);
array_append<felt252>([143], [144]) -> ([145]);
struct_construct<core::Panic>() -> ([146]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([146], [145]) -> ([147]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([147]) -> ([148]);
store_temp<Pedersen>([0]) -> ([149]);
store_temp<RangeCheck>([7]) -> ([150]);
store_temp<GasBuiltin>([8]) -> ([151]);
store_temp<System>([3]) -> ([152]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([148]) -> ([153]);
return([149], [150], [151], [152], [153]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1296([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 1279([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::integer::u256Serde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::integer::u256>>([18]) { fallthrough([21]) 1261([22]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([17]) -> ([23]);
array_len<felt252>([23]) -> ([24]);
u32_const<0>() -> ([25]);
store_temp<u32>([24]) -> ([24]);
u32_eq([24], [25]) { fallthrough() 1171() };
branch_align() -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([28]);
jump() { 1175() };
branch_align() -> ();
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<core::bool>([30]) -> ([28]);
bool_not_impl([28]) -> ([31]);
store_temp<core::bool>([31]) -> ([31]);
enum_match<core::bool>([31]) { fallthrough([32]) 1240([33]) };
branch_align() -> ();
drop<Unit>([32]) -> ();
get_builtin_costs() -> ([34]);
store_temp<BuiltinCosts>([34]) -> ([34]);
withdraw_gas_all([16], [6], [34]) { fallthrough([35], [36]) 1223([37], [38]) };
branch_align() -> ();
disable_ap_tracking() -> ();
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([39]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([40]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([41]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([42]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([43]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([44]);
struct_construct<erc20::erc20::ERC20::Storage>([39], [40], [41], [42], [43], [44]) -> ([45]);
store_temp<RangeCheck>([35]) -> ([51]);
store_temp<GasBuiltin>([36]) -> ([52]);
store_temp<Pedersen>([0]) -> ([53]);
store_temp<System>([3]) -> ([54]);
store_temp<erc20::erc20::ERC20::Storage>([45]) -> ([55]);
store_temp<ContractAddress>([14]) -> ([56]);
store_temp<core::integer::u256>([21]) -> ([57]);
function_call<user@erc20::erc20::ERC20::IERC20Impl::approve>([51], [52], [53], [54], [55], [56], [57]) -> ([46], [47], [48], [49], [50]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([50]) { fallthrough([58]) 1215([59]) };
branch_align() -> ();
drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>([58]) -> ();
array_new<felt252>() -> ([60]);
snapshot_take<Array<felt252>>([60]) -> ([61], [62]);
drop<Array<felt252>>([61]) -> ();
struct_construct<core::array::Span::<core::felt252>>([62]) -> ([63]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([63]) -> ([64]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([64]) -> ([65]);
store_temp<Pedersen>([48]) -> ([66]);
store_temp<RangeCheck>([46]) -> ([67]);
store_temp<GasBuiltin>([47]) -> ([68]);
store_temp<System>([49]) -> ([69]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([65]) -> ([70]);
return([66], [67], [68], [69], [70]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([59]) -> ([71]);
store_temp<Pedersen>([48]) -> ([72]);
store_temp<RangeCheck>([46]) -> ([73]);
store_temp<GasBuiltin>([47]) -> ([74]);
store_temp<System>([49]) -> ([75]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([71]) -> ([76]);
return([72], [73], [74], [75], [76]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([77]);
felt252_const<375233589013918064796019>() -> ([78]);
store_temp<felt252>([78]) -> ([78]);
array_append<felt252>([77], [78]) -> ([79]);
struct_construct<core::Panic>() -> ([80]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([80], [79]) -> ([81]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([81]) -> ([82]);
store_temp<Pedersen>([0]) -> ([83]);
store_temp<RangeCheck>([37]) -> ([84]);
store_temp<GasBuiltin>([38]) -> ([85]);
store_temp<System>([3]) -> ([86]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([82]) -> ([87]);
return([83], [84], [85], [86], [87]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([33]) -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([90]);
function_call<user@core::starknet::use_system_implicit>([90]) -> ([88], [89]);
drop<Unit>([89]) -> ();
array_new<felt252>() -> ([91]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([92]);
store_temp<felt252>([92]) -> ([92]);
array_append<felt252>([91], [92]) -> ([93]);
struct_construct<core::Panic>() -> ([94]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([94], [93]) -> ([95]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([95]) -> ([96]);
store_temp<Pedersen>([0]) -> ([97]);
store_temp<RangeCheck>([16]) -> ([98]);
store_temp<GasBuiltin>([6]) -> ([99]);
store_temp<System>([88]) -> ([100]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([96]) -> ([101]);
return([97], [98], [99], [100], [101]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([102]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([103]);
store_temp<felt252>([103]) -> ([103]);
array_append<felt252>([102], [103]) -> ([104]);
struct_construct<core::Panic>() -> ([105]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([105], [104]) -> ([106]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([106]) -> ([107]);
store_temp<Pedersen>([0]) -> ([108]);
store_temp<RangeCheck>([16]) -> ([109]);
store_temp<GasBuiltin>([6]) -> ([110]);
store_temp<System>([3]) -> ([111]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([107]) -> ([112]);
return([108], [109], [110], [111], [112]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([113]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([114]);
store_temp<felt252>([114]) -> ([114]);
array_append<felt252>([113], [114]) -> ([115]);
struct_construct<core::Panic>() -> ([116]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([116], [115]) -> ([117]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([117]) -> ([118]);
store_temp<Pedersen>([0]) -> ([119]);
store_temp<RangeCheck>([9]) -> ([120]);
store_temp<GasBuiltin>([6]) -> ([121]);
store_temp<System>([3]) -> ([122]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([118]) -> ([123]);
return([119], [120], [121], [122], [123]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([124]);
felt252_const<375233589013918064796019>() -> ([125]);
store_temp<felt252>([125]) -> ([125]);
array_append<felt252>([124], [125]) -> ([126]);
struct_construct<core::Panic>() -> ([127]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([127], [126]) -> ([128]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([128]) -> ([129]);
store_temp<Pedersen>([0]) -> ([130]);
store_temp<RangeCheck>([7]) -> ([131]);
store_temp<GasBuiltin>([8]) -> ([132]);
store_temp<System>([3]) -> ([133]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([129]) -> ([134]);
return([130], [131], [132], [133], [134]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1461([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 1444([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::integer::u256Serde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::integer::u256>>([18]) { fallthrough([21]) 1426([22]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([17]) -> ([23]);
array_len<felt252>([23]) -> ([24]);
u32_const<0>() -> ([25]);
store_temp<u32>([24]) -> ([24]);
u32_eq([24], [25]) { fallthrough() 1336() };
branch_align() -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([28]);
jump() { 1340() };
branch_align() -> ();
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<core::bool>([30]) -> ([28]);
bool_not_impl([28]) -> ([31]);
store_temp<core::bool>([31]) -> ([31]);
enum_match<core::bool>([31]) { fallthrough([32]) 1405([33]) };
branch_align() -> ();
drop<Unit>([32]) -> ();
get_builtin_costs() -> ([34]);
store_temp<BuiltinCosts>([34]) -> ([34]);
withdraw_gas_all([16], [6], [34]) { fallthrough([35], [36]) 1388([37], [38]) };
branch_align() -> ();
disable_ap_tracking() -> ();
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([39]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([40]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([41]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([42]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([43]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([44]);
struct_construct<erc20::erc20::ERC20::Storage>([39], [40], [41], [42], [43], [44]) -> ([45]);
store_temp<RangeCheck>([35]) -> ([51]);
store_temp<GasBuiltin>([36]) -> ([52]);
store_temp<Pedersen>([0]) -> ([53]);
store_temp<System>([3]) -> ([54]);
store_temp<erc20::erc20::ERC20::Storage>([45]) -> ([55]);
store_temp<ContractAddress>([14]) -> ([56]);
store_temp<core::integer::u256>([21]) -> ([57]);
function_call<user@erc20::erc20::ERC20::IERC20Impl::increase_allowance>([51], [52], [53], [54], [55], [56], [57]) -> ([46], [47], [48], [49], [50]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([50]) { fallthrough([58]) 1380([59]) };
branch_align() -> ();
drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>([58]) -> ();
array_new<felt252>() -> ([60]);
snapshot_take<Array<felt252>>([60]) -> ([61], [62]);
drop<Array<felt252>>([61]) -> ();
struct_construct<core::array::Span::<core::felt252>>([62]) -> ([63]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([63]) -> ([64]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([64]) -> ([65]);
store_temp<Pedersen>([48]) -> ([66]);
store_temp<RangeCheck>([46]) -> ([67]);
store_temp<GasBuiltin>([47]) -> ([68]);
store_temp<System>([49]) -> ([69]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([65]) -> ([70]);
return([66], [67], [68], [69], [70]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([59]) -> ([71]);
store_temp<Pedersen>([48]) -> ([72]);
store_temp<RangeCheck>([46]) -> ([73]);
store_temp<GasBuiltin>([47]) -> ([74]);
store_temp<System>([49]) -> ([75]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([71]) -> ([76]);
return([72], [73], [74], [75], [76]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([77]);
felt252_const<375233589013918064796019>() -> ([78]);
store_temp<felt252>([78]) -> ([78]);
array_append<felt252>([77], [78]) -> ([79]);
struct_construct<core::Panic>() -> ([80]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([80], [79]) -> ([81]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([81]) -> ([82]);
store_temp<Pedersen>([0]) -> ([83]);
store_temp<RangeCheck>([37]) -> ([84]);
store_temp<GasBuiltin>([38]) -> ([85]);
store_temp<System>([3]) -> ([86]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([82]) -> ([87]);
return([83], [84], [85], [86], [87]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([33]) -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([90]);
function_call<user@core::starknet::use_system_implicit>([90]) -> ([88], [89]);
drop<Unit>([89]) -> ();
array_new<felt252>() -> ([91]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([92]);
store_temp<felt252>([92]) -> ([92]);
array_append<felt252>([91], [92]) -> ([93]);
struct_construct<core::Panic>() -> ([94]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([94], [93]) -> ([95]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([95]) -> ([96]);
store_temp<Pedersen>([0]) -> ([97]);
store_temp<RangeCheck>([16]) -> ([98]);
store_temp<GasBuiltin>([6]) -> ([99]);
store_temp<System>([88]) -> ([100]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([96]) -> ([101]);
return([97], [98], [99], [100], [101]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([102]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([103]);
store_temp<felt252>([103]) -> ([103]);
array_append<felt252>([102], [103]) -> ([104]);
struct_construct<core::Panic>() -> ([105]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([105], [104]) -> ([106]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([106]) -> ([107]);
store_temp<Pedersen>([0]) -> ([108]);
store_temp<RangeCheck>([16]) -> ([109]);
store_temp<GasBuiltin>([6]) -> ([110]);
store_temp<System>([3]) -> ([111]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([107]) -> ([112]);
return([108], [109], [110], [111], [112]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([113]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([114]);
store_temp<felt252>([114]) -> ([114]);
array_append<felt252>([113], [114]) -> ([115]);
struct_construct<core::Panic>() -> ([116]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([116], [115]) -> ([117]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([117]) -> ([118]);
store_temp<Pedersen>([0]) -> ([119]);
store_temp<RangeCheck>([9]) -> ([120]);
store_temp<GasBuiltin>([6]) -> ([121]);
store_temp<System>([3]) -> ([122]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([118]) -> ([123]);
return([119], [120], [121], [122], [123]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([124]);
felt252_const<375233589013918064796019>() -> ([125]);
store_temp<felt252>([125]) -> ([125]);
array_append<felt252>([124], [125]) -> ([126]);
struct_construct<core::Panic>() -> ([127]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([127], [126]) -> ([128]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([128]) -> ([129]);
store_temp<Pedersen>([0]) -> ([130]);
store_temp<RangeCheck>([7]) -> ([131]);
store_temp<GasBuiltin>([8]) -> ([132]);
store_temp<System>([3]) -> ([133]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([129]) -> ([134]);
return([130], [131], [132], [133], [134]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1626([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 1609([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::integer::u256Serde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::integer::u256>>([18]) { fallthrough([21]) 1591([22]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([17]) -> ([23]);
array_len<felt252>([23]) -> ([24]);
u32_const<0>() -> ([25]);
store_temp<u32>([24]) -> ([24]);
u32_eq([24], [25]) { fallthrough() 1501() };
branch_align() -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([28]);
jump() { 1505() };
branch_align() -> ();
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<core::bool>([30]) -> ([28]);
bool_not_impl([28]) -> ([31]);
store_temp<core::bool>([31]) -> ([31]);
enum_match<core::bool>([31]) { fallthrough([32]) 1570([33]) };
branch_align() -> ();
drop<Unit>([32]) -> ();
get_builtin_costs() -> ([34]);
store_temp<BuiltinCosts>([34]) -> ([34]);
withdraw_gas_all([16], [6], [34]) { fallthrough([35], [36]) 1553([37], [38]) };
branch_align() -> ();
disable_ap_tracking() -> ();
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([39]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([40]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([41]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([42]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([43]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([44]);
struct_construct<erc20::erc20::ERC20::Storage>([39], [40], [41], [42], [43], [44]) -> ([45]);
store_temp<RangeCheck>([35]) -> ([51]);
store_temp<GasBuiltin>([36]) -> ([52]);
store_temp<Pedersen>([0]) -> ([53]);
store_temp<System>([3]) -> ([54]);
store_temp<erc20::erc20::ERC20::Storage>([45]) -> ([55]);
store_temp<ContractAddress>([14]) -> ([56]);
store_temp<core::integer::u256>([21]) -> ([57]);
function_call<user@erc20::erc20::ERC20::IERC20Impl::decrease_allowance>([51], [52], [53], [54], [55], [56], [57]) -> ([46], [47], [48], [49], [50]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([50]) { fallthrough([58]) 1545([59]) };
branch_align() -> ();
drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>([58]) -> ();
array_new<felt252>() -> ([60]);
snapshot_take<Array<felt252>>([60]) -> ([61], [62]);
drop<Array<felt252>>([61]) -> ();
struct_construct<core::array::Span::<core::felt252>>([62]) -> ([63]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([63]) -> ([64]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([64]) -> ([65]);
store_temp<Pedersen>([48]) -> ([66]);
store_temp<RangeCheck>([46]) -> ([67]);
store_temp<GasBuiltin>([47]) -> ([68]);
store_temp<System>([49]) -> ([69]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([65]) -> ([70]);
return([66], [67], [68], [69], [70]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([59]) -> ([71]);
store_temp<Pedersen>([48]) -> ([72]);
store_temp<RangeCheck>([46]) -> ([73]);
store_temp<GasBuiltin>([47]) -> ([74]);
store_temp<System>([49]) -> ([75]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([71]) -> ([76]);
return([72], [73], [74], [75], [76]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([77]);
felt252_const<375233589013918064796019>() -> ([78]);
store_temp<felt252>([78]) -> ([78]);
array_append<felt252>([77], [78]) -> ([79]);
struct_construct<core::Panic>() -> ([80]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([80], [79]) -> ([81]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([81]) -> ([82]);
store_temp<Pedersen>([0]) -> ([83]);
store_temp<RangeCheck>([37]) -> ([84]);
store_temp<GasBuiltin>([38]) -> ([85]);
store_temp<System>([3]) -> ([86]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([82]) -> ([87]);
return([83], [84], [85], [86], [87]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([33]) -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([90]);
function_call<user@core::starknet::use_system_implicit>([90]) -> ([88], [89]);
drop<Unit>([89]) -> ();
array_new<felt252>() -> ([91]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([92]);
store_temp<felt252>([92]) -> ([92]);
array_append<felt252>([91], [92]) -> ([93]);
struct_construct<core::Panic>() -> ([94]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([94], [93]) -> ([95]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([95]) -> ([96]);
store_temp<Pedersen>([0]) -> ([97]);
store_temp<RangeCheck>([16]) -> ([98]);
store_temp<GasBuiltin>([6]) -> ([99]);
store_temp<System>([88]) -> ([100]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([96]) -> ([101]);
return([97], [98], [99], [100], [101]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([102]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([103]);
store_temp<felt252>([103]) -> ([103]);
array_append<felt252>([102], [103]) -> ([104]);
struct_construct<core::Panic>() -> ([105]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([105], [104]) -> ([106]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([106]) -> ([107]);
store_temp<Pedersen>([0]) -> ([108]);
store_temp<RangeCheck>([16]) -> ([109]);
store_temp<GasBuiltin>([6]) -> ([110]);
store_temp<System>([3]) -> ([111]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([107]) -> ([112]);
return([108], [109], [110], [111], [112]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([113]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([114]);
store_temp<felt252>([114]) -> ([114]);
array_append<felt252>([113], [114]) -> ([115]);
struct_construct<core::Panic>() -> ([116]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([116], [115]) -> ([117]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([117]) -> ([118]);
store_temp<Pedersen>([0]) -> ([119]);
store_temp<RangeCheck>([9]) -> ([120]);
store_temp<GasBuiltin>([6]) -> ([121]);
store_temp<System>([3]) -> ([122]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([118]) -> ([123]);
return([119], [120], [121], [122], [123]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([124]);
felt252_const<375233589013918064796019>() -> ([125]);
store_temp<felt252>([125]) -> ([125]);
array_append<felt252>([124], [125]) -> ([126]);
struct_construct<core::Panic>() -> ([127]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([127], [126]) -> ([128]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([128]) -> ([129]);
store_temp<Pedersen>([0]) -> ([130]);
store_temp<RangeCheck>([7]) -> ([131]);
store_temp<GasBuiltin>([8]) -> ([132]);
store_temp<System>([3]) -> ([133]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([129]) -> ([134]);
return([130], [131], [132], [133], [134]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1874([7], [8]) };
branch_align() -> ();
store_temp<core::array::Span::<core::felt252>>([4]) -> ([11]);
function_call<user@core::Felt252Serde::deserialize>([11]) -> ([9], [10]);
store_temp<RangeCheck>([5]) -> ([5]);
enum_match<core::option::Option::<core::felt252>>([10]) { fallthrough([12]) 1857([13]) };
branch_align() -> ();
store_temp<core::array::Span::<core::felt252>>([9]) -> ([16]);
function_call<user@core::Felt252Serde::deserialize>([16]) -> ([14], [15]);
enum_match<core::option::Option::<core::felt252>>([15]) { fallthrough([17]) 1839([18]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([22]);
store_temp<core::array::Span::<core::felt252>>([14]) -> ([23]);
function_call<user@core::integer::U8Serde::deserialize>([22], [23]) -> ([19], [20], [21]);
enum_match<core::option::Option::<core::integer::u8>>([21]) { fallthrough([24]) 1820([25]) };
branch_align() -> ();
store_temp<RangeCheck>([19]) -> ([29]);
store_temp<core::array::Span::<core::felt252>>([20]) -> ([30]);
function_call<user@core::integer::u256Serde::deserialize>([29], [30]) -> ([26], [27], [28]);
enum_match<core::option::Option::<core::integer::u256>>([28]) { fallthrough([31]) 1800([32]) };
branch_align() -> ();
store_temp<RangeCheck>([26]) -> ([36]);
store_temp<core::array::Span::<core::felt252>>([27]) -> ([37]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([36], [37]) -> ([33], [34], [35]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([35]) { fallthrough([38]) 1779([39]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([34]) -> ([40]);
array_len<felt252>([40]) -> ([41]);
u32_const<0>() -> ([42]);
store_temp<u32>([41]) -> ([41]);
u32_eq([41], [42]) { fallthrough() 1680() };
branch_align() -> ();
struct_construct<Unit>() -> ([43]);
enum_init<core::bool, 0>([43]) -> ([44]);
store_temp<core::bool>([44]) -> ([45]);
jump() { 1684() };
branch_align() -> ();
struct_construct<Unit>() -> ([46]);
enum_init<core::bool, 1>([46]) -> ([47]);
store_temp<core::bool>([47]) -> ([45]);
bool_not_impl([45]) -> ([48]);
store_temp<core::bool>([48]) -> ([48]);
enum_match<core::bool>([48]) { fallthrough([49]) 1755([50]) };
branch_align() -> ();
drop<Unit>([49]) -> ();
get_builtin_costs() -> ([51]);
store_temp<BuiltinCosts>([51]) -> ([51]);
withdraw_gas_all([33], [6], [51]) { fallthrough([52], [53]) 1735([54], [55]) };
branch_align() -> ();
disable_ap_tracking() -> ();
struct_construct<erc20::erc20::ERC20::name::Storage>() -> ([56]);
struct_construct<erc20::erc20::ERC20::symbol::Storage>() -> ([57]);
struct_construct<erc20::erc20::ERC20::decimals::Storage>() -> ([58]);
struct_construct<erc20::erc20::ERC20::total_supply::Storage>() -> ([59]);
struct_construct<erc20::erc20::ERC20::balances::Storage>() -> ([60]);
struct_construct<erc20::erc20::ERC20::allowances::Storage>() -> ([61]);
struct_construct<erc20::erc20::ERC20::Storage>([56], [57], [58], [59], [60], [61]) -> ([62]);
store_temp<RangeCheck>([52]) -> ([68]);
store_temp<GasBuiltin>([53]) -> ([69]);
store_temp<Pedersen>([0]) -> ([70]);
store_temp<System>([3]) -> ([71]);
store_temp<erc20::erc20::ERC20::Storage>([62]) -> ([72]);
store_temp<felt252>([12]) -> ([73]);
store_temp<felt252>([17]) -> ([74]);
store_temp<u8>([24]) -> ([75]);
store_temp<core::integer::u256>([31]) -> ([76]);
store_temp<ContractAddress>([38]) -> ([77]);
function_call<user@erc20::erc20::ERC20::constructor>([68], [69], [70], [71], [72], [73], [74], [75], [76], [77]) -> ([63], [64], [65], [66], [67]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([67]) { fallthrough([78]) 1727([79]) };
branch_align() -> ();
drop<Tuple<erc20::erc20::ERC20::Storage, Unit>>([78]) -> ();
array_new<felt252>() -> ([80]);
snapshot_take<Array<felt252>>([80]) -> ([81], [82]);
drop<Array<felt252>>([81]) -> ();
struct_construct<core::array::Span::<core::felt252>>([82]) -> ([83]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([83]) -> ([84]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([84]) -> ([85]);
store_temp<Pedersen>([65]) -> ([86]);
store_temp<RangeCheck>([63]) -> ([87]);
store_temp<GasBuiltin>([64]) -> ([88]);
store_temp<System>([66]) -> ([89]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([85]) -> ([90]);
return([86], [87], [88], [89], [90]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([79]) -> ([91]);
store_temp<Pedersen>([65]) -> ([92]);
store_temp<RangeCheck>([63]) -> ([93]);
store_temp<GasBuiltin>([64]) -> ([94]);
store_temp<System>([66]) -> ([95]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([91]) -> ([96]);
return([92], [93], [94], [95], [96]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<ContractAddress>([38]) -> ();
drop<core::integer::u256>([31]) -> ();
drop<u8>([24]) -> ();
drop<felt252>([17]) -> ();
drop<felt252>([12]) -> ();
array_new<felt252>() -> ([97]);
felt252_const<375233589013918064796019>() -> ([98]);
store_temp<felt252>([98]) -> ([98]);
array_append<felt252>([97], [98]) -> ([99]);
struct_construct<core::Panic>() -> ([100]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([100], [99]) -> ([101]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([101]) -> ([102]);
store_temp<Pedersen>([0]) -> ([103]);
store_temp<RangeCheck>([54]) -> ([104]);
store_temp<GasBuiltin>([55]) -> ([105]);
store_temp<System>([3]) -> ([106]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([102]) -> ([107]);
return([103], [104], [105], [106], [107]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([50]) -> ();
drop<ContractAddress>([38]) -> ();
drop<core::integer::u256>([31]) -> ();
drop<u8>([24]) -> ();
drop<felt252>([17]) -> ();
drop<felt252>([12]) -> ();
store_temp<System>([3]) -> ([110]);
function_call<user@core::starknet::use_system_implicit>([110]) -> ([108], [109]);
drop<Unit>([109]) -> ();
array_new<felt252>() -> ([111]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([112]);
store_temp<felt252>([112]) -> ([112]);
array_append<felt252>([111], [112]) -> ([113]);
struct_construct<core::Panic>() -> ([114]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([114], [113]) -> ([115]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([115]) -> ([116]);
store_temp<Pedersen>([0]) -> ([117]);
store_temp<RangeCheck>([33]) -> ([118]);
store_temp<GasBuiltin>([6]) -> ([119]);
store_temp<System>([108]) -> ([120]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([116]) -> ([121]);
return([117], [118], [119], [120], [121]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([39]) -> ();
drop<core::array::Span::<core::felt252>>([34]) -> ();
drop<core::integer::u256>([31]) -> ();
drop<u8>([24]) -> ();
drop<felt252>([17]) -> ();
drop<felt252>([12]) -> ();
array_new<felt252>() -> ([122]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([123]);
store_temp<felt252>([123]) -> ([123]);
array_append<felt252>([122], [123]) -> ([124]);
struct_construct<core::Panic>() -> ([125]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([125], [124]) -> ([126]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([126]) -> ([127]);
store_temp<Pedersen>([0]) -> ([128]);
store_temp<RangeCheck>([33]) -> ([129]);
store_temp<GasBuiltin>([6]) -> ([130]);
store_temp<System>([3]) -> ([131]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([127]) -> ([132]);
return([128], [129], [130], [131], [132]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([32]) -> ();
drop<u8>([24]) -> ();
drop<felt252>([17]) -> ();
drop<felt252>([12]) -> ();
drop<core::array::Span::<core::felt252>>([27]) -> ();
array_new<felt252>() -> ([133]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([134]);
store_temp<felt252>([134]) -> ([134]);
array_append<felt252>([133], [134]) -> ([135]);
struct_construct<core::Panic>() -> ([136]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([136], [135]) -> ([137]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([137]) -> ([138]);
store_temp<Pedersen>([0]) -> ([139]);
store_temp<RangeCheck>([26]) -> ([140]);
store_temp<GasBuiltin>([6]) -> ([141]);
store_temp<System>([3]) -> ([142]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([138]) -> ([143]);
return([139], [140], [141], [142], [143]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([25]) -> ();
drop<felt252>([17]) -> ();
drop<felt252>([12]) -> ();
drop<core::array::Span::<core::felt252>>([20]) -> ();
array_new<felt252>() -> ([144]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([145]);
store_temp<felt252>([145]) -> ([145]);
array_append<felt252>([144], [145]) -> ([146]);
struct_construct<core::Panic>() -> ([147]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([147], [146]) -> ([148]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([148]) -> ([149]);
store_temp<Pedersen>([0]) -> ([150]);
store_temp<RangeCheck>([19]) -> ([151]);
store_temp<GasBuiltin>([6]) -> ([152]);
store_temp<System>([3]) -> ([153]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([149]) -> ([154]);
return([150], [151], [152], [153], [154]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([18]) -> ();
drop<felt252>([12]) -> ();
drop<core::array::Span::<core::felt252>>([14]) -> ();
array_new<felt252>() -> ([155]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([156]);
store_temp<felt252>([156]) -> ([156]);
array_append<felt252>([155], [156]) -> ([157]);
struct_construct<core::Panic>() -> ([158]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([158], [157]) -> ([159]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([159]) -> ([160]);
store_temp<Pedersen>([0]) -> ([161]);
store_temp<RangeCheck>([5]) -> ([162]);
store_temp<GasBuiltin>([6]) -> ([163]);
store_temp<System>([3]) -> ([164]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([160]) -> ([165]);
return([161], [162], [163], [164], [165]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([13]) -> ();
drop<core::array::Span::<core::felt252>>([9]) -> ();
array_new<felt252>() -> ([166]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([167]);
store_temp<felt252>([167]) -> ([167]);
array_append<felt252>([166], [167]) -> ([168]);
struct_construct<core::Panic>() -> ([169]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([169], [168]) -> ([170]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([170]) -> ([171]);
store_temp<Pedersen>([0]) -> ([172]);
store_temp<RangeCheck>([5]) -> ([173]);
store_temp<GasBuiltin>([6]) -> ([174]);
store_temp<System>([3]) -> ([175]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([171]) -> ([176]);
return([172], [173], [174], [175], [176]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([177]);
felt252_const<375233589013918064796019>() -> ([178]);
store_temp<felt252>([178]) -> ([178]);
array_append<felt252>([177], [178]) -> ([179]);
struct_construct<core::Panic>() -> ([180]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([180], [179]) -> ([181]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([181]) -> ([182]);
store_temp<Pedersen>([0]) -> ([183]);
store_temp<RangeCheck>([7]) -> ([184]);
store_temp<GasBuiltin>([8]) -> ([185]);
store_temp<System>([3]) -> ([186]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([182]) -> ([187]);
return([183], [184], [185], [186], [187]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([2]) -> ([3], [4], [5], [6], [7], [8]);
drop<erc20::erc20::ERC20::symbol::Storage>([4]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([5]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([6]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([7]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([8]) -> ();
store_temp<GasBuiltin>([0]) -> ([12]);
store_temp<System>([1]) -> ([13]);
store_temp<erc20::erc20::ERC20::name::Storage>([3]) -> ([14]);
function_call<user@erc20::erc20::ERC20::name::InternalStorageImpl::read>([12], [13], [14]) -> ([9], [10], [11]);
enum_match<core::PanicResult::<(core::felt252,)>>([11]) { fallthrough([15]) 1909([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([15]) -> ([17]);
struct_construct<Tuple<felt252>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::felt252,)>, 0>([18]) -> ([19]);
store_temp<GasBuiltin>([9]) -> ([20]);
store_temp<System>([10]) -> ([21]);
store_temp<core::PanicResult::<(core::felt252,)>>([19]) -> ([22]);
return([20], [21], [22]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt252,)>, 1>([16]) -> ([23]);
store_temp<GasBuiltin>([9]) -> ([24]);
store_temp<System>([10]) -> ([25]);
store_temp<core::PanicResult::<(core::felt252,)>>([23]) -> ([26]);
return([24], [25], [26]);
rename<felt252>([0]) -> ([2]);
array_append<felt252>([1], [2]) -> ([3]);
struct_construct<Unit>() -> ([4]);
store_temp<Array<felt252>>([3]) -> ([5]);
store_temp<Unit>([4]) -> ([6]);
return([5], [6]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([2]) -> ([3], [4], [5], [6], [7], [8]);
drop<erc20::erc20::ERC20::name::Storage>([3]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([5]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([6]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([7]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([8]) -> ();
store_temp<GasBuiltin>([0]) -> ([12]);
store_temp<System>([1]) -> ([13]);
store_temp<erc20::erc20::ERC20::symbol::Storage>([4]) -> ([14]);
function_call<user@erc20::erc20::ERC20::symbol::InternalStorageImpl::read>([12], [13], [14]) -> ([9], [10], [11]);
enum_match<core::PanicResult::<(core::felt252,)>>([11]) { fallthrough([15]) 1944([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([15]) -> ([17]);
struct_construct<Tuple<felt252>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::felt252,)>, 0>([18]) -> ([19]);
store_temp<GasBuiltin>([9]) -> ([20]);
store_temp<System>([10]) -> ([21]);
store_temp<core::PanicResult::<(core::felt252,)>>([19]) -> ([22]);
return([20], [21], [22]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt252,)>, 1>([16]) -> ([23]);
store_temp<GasBuiltin>([9]) -> ([24]);
store_temp<System>([10]) -> ([25]);
store_temp<core::PanicResult::<(core::felt252,)>>([23]) -> ([26]);
return([24], [25], [26]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([3]) -> ([4], [5], [6], [7], [8], [9]);
drop<erc20::erc20::ERC20::name::Storage>([4]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([5]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([7]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([8]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([9]) -> ();
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<GasBuiltin>([1]) -> ([15]);
store_temp<System>([2]) -> ([16]);
store_temp<erc20::erc20::ERC20::decimals::Storage>([6]) -> ([17]);
function_call<user@erc20::erc20::ERC20::decimals::InternalStorageImpl::read>([14], [15], [16], [17]) -> ([10], [11], [12], [13]);
enum_match<core::PanicResult::<(core::integer::u8,)>>([13]) { fallthrough([18]) 1971([19]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([18]) -> ([20]);
struct_construct<Tuple<u8>>([20]) -> ([21]);
enum_init<core::PanicResult::<(core::integer::u8,)>, 0>([21]) -> ([22]);
store_temp<RangeCheck>([10]) -> ([23]);
store_temp<GasBuiltin>([11]) -> ([24]);
store_temp<System>([12]) -> ([25]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([22]) -> ([26]);
return([23], [24], [25], [26]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u8,)>, 1>([19]) -> ([27]);
store_temp<RangeCheck>([10]) -> ([28]);
store_temp<GasBuiltin>([11]) -> ([29]);
store_temp<System>([12]) -> ([30]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([27]) -> ([31]);
return([28], [29], [30], [31]);
rename<u8>([0]) -> ([2]);
u8_to_felt252([2]) -> ([3]);
dup<felt252>([3]) -> ([4], [5]);
drop<felt252>([4]) -> ();
store_temp<felt252>([5]) -> ([8]);
store_temp<Array<felt252>>([1]) -> ([9]);
function_call<user@core::Felt252Serde::serialize>([8], [9]) -> ([6], [7]);
drop<Unit>([7]) -> ();
struct_construct<Unit>() -> ([10]);
store_temp<Array<felt252>>([6]) -> ([11]);
store_temp<Unit>([10]) -> ([12]);
return([11], [12]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([3]) -> ([4], [5], [6], [7], [8], [9]);
drop<erc20::erc20::ERC20::name::Storage>([4]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([5]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([6]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([8]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([9]) -> ();
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<GasBuiltin>([1]) -> ([15]);
store_temp<System>([2]) -> ([16]);
store_temp<erc20::erc20::ERC20::total_supply::Storage>([7]) -> ([17]);
function_call<user@erc20::erc20::ERC20::total_supply::InternalStorageImpl::read>([14], [15], [16], [17]) -> ([10], [11], [12], [13]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([13]) { fallthrough([18]) 2011([19]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([18]) -> ([20]);
struct_construct<Tuple<core::integer::u256>>([20]) -> ([21]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([21]) -> ([22]);
store_temp<RangeCheck>([10]) -> ([23]);
store_temp<GasBuiltin>([11]) -> ([24]);
store_temp<System>([12]) -> ([25]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([22]) -> ([26]);
return([23], [24], [25], [26]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([19]) -> ([27]);
store_temp<RangeCheck>([10]) -> ([28]);
store_temp<GasBuiltin>([11]) -> ([29]);
store_temp<System>([12]) -> ([30]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([27]) -> ([31]);
return([28], [29], [30], [31]);
dup<core::integer::u256>([0]) -> ([0], [2]);
struct_deconstruct<core::integer::u256>([2]) -> ([3], [4]);
drop<u128>([4]) -> ();
store_temp<u128>([3]) -> ([7]);
store_temp<Array<felt252>>([1]) -> ([8]);
function_call<user@core::integer::U128Serde::serialize>([7], [8]) -> ([5], [6]);
drop<Unit>([6]) -> ();
struct_deconstruct<core::integer::u256>([0]) -> ([9], [10]);
drop<u128>([9]) -> ();
store_temp<u128>([10]) -> ([13]);
store_temp<Array<felt252>>([5]) -> ([14]);
function_call<user@core::integer::U128Serde::serialize>([13], [14]) -> ([11], [12]);
rename<Array<felt252>>([11]) -> ([15]);
rename<Unit>([12]) -> ([16]);
return([15], [16]);
store_temp<core::array::Span::<core::felt252>>([1]) -> ([4]);
function_call<user@core::Felt252Serde::deserialize>([4]) -> ([2], [3]);
enum_match<core::option::Option::<core::felt252>>([3]) { fallthrough([5]) 2051([6]) };
branch_align() -> ();
contract_address_try_from_felt252([0], [5]) { fallthrough([7], [8]) 2044([9]) };
branch_align() -> ();
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>([8]) -> ([10]);
store_temp<RangeCheck>([7]) -> ([11]);
store_temp<core::array::Span::<core::felt252>>([2]) -> ([12]);
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([10]) -> ([13]);
return([11], [12], [13]);
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([9]) -> ([16]);
store_temp<core::array::Span::<core::felt252>>([2]) -> ([17]);
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([15]) -> ([18]);
return([16], [17], [18]);
branch_align() -> ();
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([6]) -> ([19]);
store_temp<RangeCheck>([0]) -> ([20]);
store_temp<core::array::Span::<core::felt252>>([2]) -> ([21]);
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([19]) -> ([22]);
return([20], [21], [22]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([6], [7], [8], [9], [10], [11]);
drop<erc20::erc20::ERC20::name::Storage>([6]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([7]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([8]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([9]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([11]) -> ();
store_temp<RangeCheck>([0]) -> ([17]);
store_temp<GasBuiltin>([1]) -> ([18]);
store_temp<Pedersen>([2]) -> ([19]);
store_temp<System>([3]) -> ([20]);
store_temp<erc20::erc20::ERC20::balances::Storage>([10]) -> ([21]);
store_temp<ContractAddress>([5]) -> ([22]);
function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::read>([17], [18], [19], [20], [21], [22]) -> ([12], [13], [14], [15], [16]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([16]) { fallthrough([23]) 2081([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([23]) -> ([25]);
struct_construct<Tuple<core::integer::u256>>([25]) -> ([26]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([26]) -> ([27]);
store_temp<RangeCheck>([12]) -> ([28]);
store_temp<GasBuiltin>([13]) -> ([29]);
store_temp<Pedersen>([14]) -> ([30]);
store_temp<System>([15]) -> ([31]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([27]) -> ([32]);
return([28], [29], [30], [31], [32]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([24]) -> ([33]);
store_temp<RangeCheck>([12]) -> ([34]);
store_temp<GasBuiltin>([13]) -> ([35]);
store_temp<Pedersen>([14]) -> ([36]);
store_temp<System>([15]) -> ([37]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([33]) -> ([38]);
return([34], [35], [36], [37], [38]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([7], [8], [9], [10], [11], [12]);
drop<erc20::erc20::ERC20::name::Storage>([7]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([8]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([9]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([10]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([11]) -> ();
struct_construct<Tuple<ContractAddress, ContractAddress>>([5], [6]) -> ([13]);
store_temp<RangeCheck>([0]) -> ([19]);
store_temp<GasBuiltin>([1]) -> ([20]);
store_temp<Pedersen>([2]) -> ([21]);
store_temp<System>([3]) -> ([22]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([12]) -> ([23]);
store_temp<Tuple<ContractAddress, ContractAddress>>([13]) -> ([24]);
function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::read>([19], [20], [21], [22], [23], [24]) -> ([14], [15], [16], [17], [18]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([18]) { fallthrough([25]) 2114([26]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([25]) -> ([27]);
struct_construct<Tuple<core::integer::u256>>([27]) -> ([28]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([28]) -> ([29]);
store_temp<RangeCheck>([14]) -> ([30]);
store_temp<GasBuiltin>([15]) -> ([31]);
store_temp<Pedersen>([16]) -> ([32]);
store_temp<System>([17]) -> ([33]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([29]) -> ([34]);
return([30], [31], [32], [33], [34]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([26]) -> ([35]);
store_temp<RangeCheck>([14]) -> ([36]);
store_temp<GasBuiltin>([15]) -> ([37]);
store_temp<Pedersen>([16]) -> ([38]);
store_temp<System>([17]) -> ([39]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([35]) -> ([40]);
return([36], [37], [38], [39], [40]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::array::Span::<core::felt252>>([1]) -> ([6]);
function_call<user@core::integer::U128Serde::deserialize>([5], [6]) -> ([2], [3], [4]);
enum_match<core::option::Option::<core::integer::u128>>([4]) { fallthrough([7]) 2145([8]) };
branch_align() -> ();
store_temp<RangeCheck>([2]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([3]) -> ([13]);
function_call<user@core::integer::U128Serde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::integer::u128>>([11]) { fallthrough([14]) 2138([15]) };
branch_align() -> ();
struct_construct<core::integer::u256>([7], [14]) -> ([16]);
enum_init<core::option::Option::<core::integer::u256>, 0>([16]) -> ([17]);
store_temp<RangeCheck>([9]) -> ([18]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([19]);
store_temp<core::option::Option::<core::integer::u256>>([17]) -> ([20]);
return([18], [19], [20]);
branch_align() -> ();
drop<u128>([7]) -> ();
enum_init<core::option::Option::<core::integer::u256>, 1>([15]) -> ([21]);
store_temp<RangeCheck>([9]) -> ([22]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([23]);
store_temp<core::option::Option::<core::integer::u256>>([21]) -> ([24]);
return([22], [23], [24]);
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u256>, 1>([8]) -> ([25]);
store_temp<RangeCheck>([2]) -> ([26]);
store_temp<core::array::Span::<core::felt252>>([3]) -> ([27]);
store_temp<core::option::Option::<core::integer::u256>>([25]) -> ([28]);
return([26], [27], [28]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([3]) -> ([11]);
function_call<user@core::starknet::info::get_caller_address>([10], [11]) -> ([7], [8], [9]);
enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([9]) { fallthrough([12]) 2187([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([12]) -> ([14]);
store_temp<RangeCheck>([0]) -> ([20]);
store_temp<GasBuiltin>([7]) -> ([21]);
store_temp<Pedersen>([2]) -> ([22]);
store_temp<System>([8]) -> ([23]);
store_temp<erc20::erc20::ERC20::Storage>([4]) -> ([24]);
store_temp<ContractAddress>([14]) -> ([25]);
store_temp<ContractAddress>([5]) -> ([26]);
store_temp<core::integer::u256>([6]) -> ([27]);
function_call<user@erc20::erc20::ERC20::StorageImpl::transfer_helper>([20], [21], [22], [23], [24], [25], [26], [27]) -> ([15], [16], [17], [18], [19]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([19]) { fallthrough([28]) 2179([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([28]) -> ([30], [31]);
drop<Unit>([31]) -> ();
struct_construct<Unit>() -> ([32]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([30], [32]) -> ([33]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([33]) -> ([34]);
store_temp<RangeCheck>([15]) -> ([35]);
store_temp<GasBuiltin>([16]) -> ([36]);
store_temp<Pedersen>([17]) -> ([37]);
store_temp<System>([18]) -> ([38]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([34]) -> ([39]);
return([35], [36], [37], [38], [39]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([29]) -> ([40]);
store_temp<RangeCheck>([15]) -> ([41]);
store_temp<GasBuiltin>([16]) -> ([42]);
store_temp<Pedersen>([17]) -> ([43]);
store_temp<System>([18]) -> ([44]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([40]) -> ([45]);
return([41], [42], [43], [44], [45]);
branch_align() -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([13]) -> ([46]);
store_temp<RangeCheck>([0]) -> ([47]);
store_temp<GasBuiltin>([7]) -> ([48]);
store_temp<Pedersen>([2]) -> ([49]);
store_temp<System>([8]) -> ([50]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([46]) -> ([51]);
return([47], [48], [49], [50], [51]);
store_temp<GasBuiltin>([1]) -> ([11]);
store_temp<System>([3]) -> ([12]);
function_call<user@core::starknet::info::get_caller_address>([11], [12]) -> ([8], [9], [10]);
enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([10]) { fallthrough([13]) 2260([14]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([13]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([21]);
store_temp<GasBuiltin>([8]) -> ([22]);
store_temp<Pedersen>([2]) -> ([23]);
store_temp<System>([9]) -> ([24]);
store_temp<erc20::erc20::ERC20::Storage>([4]) -> ([25]);
dup<ContractAddress>([5]) -> ([5], [26]);
store_temp<ContractAddress>([26]) -> ([26]);
store_temp<ContractAddress>([15]) -> ([27]);
dup<core::integer::u256>([7]) -> ([7], [28]);
store_temp<core::integer::u256>([28]) -> ([28]);
function_call<user@erc20::erc20::ERC20::StorageImpl::spend_allowance>([21], [22], [23], [24], [25], [26], [27], [28]) -> ([16], [17], [18], [19], [20]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([20]) { fallthrough([29]) 2249([30]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([29]) -> ([31], [32]);
drop<Unit>([32]) -> ();
store_temp<RangeCheck>([16]) -> ([38]);
store_temp<GasBuiltin>([17]) -> ([39]);
store_temp<Pedersen>([18]) -> ([40]);
store_temp<System>([19]) -> ([41]);
store_temp<erc20::erc20::ERC20::Storage>([31]) -> ([42]);
store_temp<ContractAddress>([5]) -> ([43]);
store_temp<ContractAddress>([6]) -> ([44]);
store_temp<core::integer::u256>([7]) -> ([45]);
function_call<user@erc20::erc20::ERC20::StorageImpl::transfer_helper>([38], [39], [40], [41], [42], [43], [44], [45]) -> ([33], [34], [35], [36], [37]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([37]) { fallthrough([46]) 2241([47]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([46]) -> ([48], [49]);
drop<Unit>([49]) -> ();
struct_construct<Unit>() -> ([50]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([48], [50]) -> ([51]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([51]) -> ([52]);
store_temp<RangeCheck>([33]) -> ([53]);
store_temp<GasBuiltin>([34]) -> ([54]);
store_temp<Pedersen>([35]) -> ([55]);
store_temp<System>([36]) -> ([56]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([52]) -> ([57]);
return([53], [54], [55], [56], [57]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([47]) -> ([58]);
store_temp<RangeCheck>([33]) -> ([59]);
store_temp<GasBuiltin>([34]) -> ([60]);
store_temp<Pedersen>([35]) -> ([61]);
store_temp<System>([36]) -> ([62]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([58]) -> ([63]);
return([59], [60], [61], [62], [63]);
branch_align() -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([30]) -> ([64]);
store_temp<RangeCheck>([16]) -> ([65]);
store_temp<GasBuiltin>([17]) -> ([66]);
store_temp<Pedersen>([18]) -> ([67]);
store_temp<System>([19]) -> ([68]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([64]) -> ([69]);
return([65], [66], [67], [68], [69]);
branch_align() -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([14]) -> ([70]);
store_temp<RangeCheck>([0]) -> ([71]);
store_temp<GasBuiltin>([8]) -> ([72]);
store_temp<Pedersen>([2]) -> ([73]);
store_temp<System>([9]) -> ([74]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([70]) -> ([75]);
return([71], [72], [73], [74], [75]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([3]) -> ([11]);
function_call<user@core::starknet::info::get_caller_address>([10], [11]) -> ([7], [8], [9]);
enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([9]) { fallthrough([12]) 2308([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([12]) -> ([14]);
store_temp<RangeCheck>([0]) -> ([20]);
store_temp<GasBuiltin>([7]) -> ([21]);
store_temp<Pedersen>([2]) -> ([22]);
store_temp<System>([8]) -> ([23]);
store_temp<erc20::erc20::ERC20::Storage>([4]) -> ([24]);
store_temp<ContractAddress>([14]) -> ([25]);
store_temp<ContractAddress>([5]) -> ([26]);
store_temp<core::integer::u256>([6]) -> ([27]);
function_call<user@erc20::erc20::ERC20::StorageImpl::approve_helper>([20], [21], [22], [23], [24], [25], [26], [27]) -> ([15], [16], [17], [18], [19]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([19]) { fallthrough([28]) 2300([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([28]) -> ([30], [31]);
drop<Unit>([31]) -> ();
struct_construct<Unit>() -> ([32]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([30], [32]) -> ([33]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([33]) -> ([34]);
store_temp<RangeCheck>([15]) -> ([35]);
store_temp<GasBuiltin>([16]) -> ([36]);
store_temp<Pedersen>([17]) -> ([37]);
store_temp<System>([18]) -> ([38]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([34]) -> ([39]);
return([35], [36], [37], [38], [39]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([29]) -> ([40]);
store_temp<RangeCheck>([15]) -> ([41]);
store_temp<GasBuiltin>([16]) -> ([42]);
store_temp<Pedersen>([17]) -> ([43]);
store_temp<System>([18]) -> ([44]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([40]) -> ([45]);
return([41], [42], [43], [44], [45]);
branch_align() -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([13]) -> ([46]);
store_temp<RangeCheck>([0]) -> ([47]);
store_temp<GasBuiltin>([7]) -> ([48]);
store_temp<Pedersen>([2]) -> ([49]);
store_temp<System>([8]) -> ([50]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([46]) -> ([51]);
return([47], [48], [49], [50], [51]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([3]) -> ([11]);
function_call<user@core::starknet::info::get_caller_address>([10], [11]) -> ([7], [8], [9]);
enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([9]) { fallthrough([12]) 2411([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([12]) -> ([14]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([15], [16], [17], [18], [19], [20]);
dup<erc20::erc20::ERC20::allowances::Storage>([20]) -> ([21], [22]);
dup<ContractAddress>([14]) -> ([14], [23]);
dup<ContractAddress>([5]) -> ([5], [24]);
struct_construct<Tuple<ContractAddress, ContractAddress>>([23], [24]) -> ([25]);
store_temp<RangeCheck>([0]) -> ([31]);
store_temp<GasBuiltin>([7]) -> ([32]);
store_temp<Pedersen>([2]) -> ([33]);
store_temp<System>([8]) -> ([34]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([22]) -> ([35]);
store_temp<Tuple<ContractAddress, ContractAddress>>([25]) -> ([36]);
function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::read>([31], [32], [33], [34], [35], [36]) -> ([26], [27], [28], [29], [30]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([30]) { fallthrough([37]) 2394([38]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([37]) -> ([39]);
store_temp<RangeCheck>([26]) -> ([42]);
store_temp<core::integer::u256>([39]) -> ([43]);
store_temp<core::integer::u256>([6]) -> ([44]);
function_call<user@core::integer::U256Add::add>([42], [43], [44]) -> ([40], [41]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([41]) { fallthrough([45]) 2378([46]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([45]) -> ([47]);
struct_construct<erc20::erc20::ERC20::Storage>([15], [16], [17], [18], [19], [21]) -> ([48]);
store_temp<RangeCheck>([40]) -> ([54]);
store_temp<GasBuiltin>([27]) -> ([55]);
store_temp<Pedersen>([28]) -> ([56]);
store_temp<System>([29]) -> ([57]);
store_temp<erc20::erc20::ERC20::Storage>([48]) -> ([58]);
store_temp<ContractAddress>([14]) -> ([59]);
store_temp<ContractAddress>([5]) -> ([60]);
store_temp<core::integer::u256>([47]) -> ([61]);
function_call<user@erc20::erc20::ERC20::StorageImpl::approve_helper>([54], [55], [56], [57], [58], [59], [60], [61]) -> ([49], [50], [51], [52], [53]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([53]) { fallthrough([62]) 2370([63]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([62]) -> ([64], [65]);
drop<Unit>([65]) -> ();
struct_construct<Unit>() -> ([66]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([64], [66]) -> ([67]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([67]) -> ([68]);
store_temp<RangeCheck>([49]) -> ([69]);
store_temp<GasBuiltin>([50]) -> ([70]);
store_temp<Pedersen>([51]) -> ([71]);
store_temp<System>([52]) -> ([72]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([68]) -> ([73]);
return([69], [70], [71], [72], [73]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([63]) -> ([74]);
store_temp<RangeCheck>([49]) -> ([75]);
store_temp<GasBuiltin>([50]) -> ([76]);
store_temp<Pedersen>([51]) -> ([77]);
store_temp<System>([52]) -> ([78]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([74]) -> ([79]);
return([75], [76], [77], [78], [79]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([15]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([14]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([21]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([19]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([18]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([17]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([16]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([46]) -> ([80]);
store_temp<RangeCheck>([40]) -> ([81]);
store_temp<GasBuiltin>([27]) -> ([82]);
store_temp<Pedersen>([28]) -> ([83]);
store_temp<System>([29]) -> ([84]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([80]) -> ([85]);
return([81], [82], [83], [84], [85]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([15]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([14]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([16]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([21]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([19]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([18]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([17]) -> ();
drop<core::integer::u256>([6]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([38]) -> ([86]);
store_temp<RangeCheck>([26]) -> ([87]);
store_temp<GasBuiltin>([27]) -> ([88]);
store_temp<Pedersen>([28]) -> ([89]);
store_temp<System>([29]) -> ([90]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
drop<core::integer::u256>([6]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([13]) -> ([92]);
store_temp<RangeCheck>([0]) -> ([93]);
store_temp<GasBuiltin>([7]) -> ([94]);
store_temp<Pedersen>([2]) -> ([95]);
store_temp<System>([8]) -> ([96]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([92]) -> ([97]);
return([93], [94], [95], [96], [97]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([3]) -> ([11]);
function_call<user@core::starknet::info::get_caller_address>([10], [11]) -> ([7], [8], [9]);
enum_match<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([9]) { fallthrough([12]) 2514([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([12]) -> ([14]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([15], [16], [17], [18], [19], [20]);
dup<erc20::erc20::ERC20::allowances::Storage>([20]) -> ([21], [22]);
dup<ContractAddress>([14]) -> ([14], [23]);
dup<ContractAddress>([5]) -> ([5], [24]);
struct_construct<Tuple<ContractAddress, ContractAddress>>([23], [24]) -> ([25]);
store_temp<RangeCheck>([0]) -> ([31]);
store_temp<GasBuiltin>([7]) -> ([32]);
store_temp<Pedersen>([2]) -> ([33]);
store_temp<System>([8]) -> ([34]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([22]) -> ([35]);
store_temp<Tuple<ContractAddress, ContractAddress>>([25]) -> ([36]);
function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::read>([31], [32], [33], [34], [35], [36]) -> ([26], [27], [28], [29], [30]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([30]) { fallthrough([37]) 2497([38]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([37]) -> ([39]);
store_temp<RangeCheck>([26]) -> ([42]);
store_temp<core::integer::u256>([39]) -> ([43]);
store_temp<core::integer::u256>([6]) -> ([44]);
function_call<user@core::integer::U256Sub::sub>([42], [43], [44]) -> ([40], [41]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([41]) { fallthrough([45]) 2481([46]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([45]) -> ([47]);
struct_construct<erc20::erc20::ERC20::Storage>([15], [16], [17], [18], [19], [21]) -> ([48]);
store_temp<RangeCheck>([40]) -> ([54]);
store_temp<GasBuiltin>([27]) -> ([55]);
store_temp<Pedersen>([28]) -> ([56]);
store_temp<System>([29]) -> ([57]);
store_temp<erc20::erc20::ERC20::Storage>([48]) -> ([58]);
store_temp<ContractAddress>([14]) -> ([59]);
store_temp<ContractAddress>([5]) -> ([60]);
store_temp<core::integer::u256>([47]) -> ([61]);
function_call<user@erc20::erc20::ERC20::StorageImpl::approve_helper>([54], [55], [56], [57], [58], [59], [60], [61]) -> ([49], [50], [51], [52], [53]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([53]) { fallthrough([62]) 2473([63]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([62]) -> ([64], [65]);
drop<Unit>([65]) -> ();
struct_construct<Unit>() -> ([66]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([64], [66]) -> ([67]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([67]) -> ([68]);
store_temp<RangeCheck>([49]) -> ([69]);
store_temp<GasBuiltin>([50]) -> ([70]);
store_temp<Pedersen>([51]) -> ([71]);
store_temp<System>([52]) -> ([72]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([68]) -> ([73]);
return([69], [70], [71], [72], [73]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([63]) -> ([74]);
store_temp<RangeCheck>([49]) -> ([75]);
store_temp<GasBuiltin>([50]) -> ([76]);
store_temp<Pedersen>([51]) -> ([77]);
store_temp<System>([52]) -> ([78]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([74]) -> ([79]);
return([75], [76], [77], [78], [79]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([15]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([14]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([21]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([19]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([18]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([17]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([16]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([46]) -> ([80]);
store_temp<RangeCheck>([40]) -> ([81]);
store_temp<GasBuiltin>([27]) -> ([82]);
store_temp<Pedersen>([28]) -> ([83]);
store_temp<System>([29]) -> ([84]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([80]) -> ([85]);
return([81], [82], [83], [84], [85]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([15]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([14]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([16]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([21]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([19]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([18]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([17]) -> ();
drop<core::integer::u256>([6]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([38]) -> ([86]);
store_temp<RangeCheck>([26]) -> ([87]);
store_temp<GasBuiltin>([27]) -> ([88]);
store_temp<Pedersen>([28]) -> ([89]);
store_temp<System>([29]) -> ([90]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
drop<core::integer::u256>([6]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([13]) -> ([92]);
store_temp<RangeCheck>([0]) -> ([93]);
store_temp<GasBuiltin>([7]) -> ([94]);
store_temp<Pedersen>([2]) -> ([95]);
store_temp<System>([8]) -> ([96]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([92]) -> ([97]);
return([93], [94], [95], [96], [97]);
struct_deconstruct<core::array::Span::<core::felt252>>([0]) -> ([1]);
array_snapshot_pop_front<felt252>([1]) { fallthrough([2], [3]) 2532([4]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([3]) -> ([5]);
store_temp<Snapshot<Array<felt252>>>([2]) -> ([6]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([5]) -> ([7]);
jump() { 2537() };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([8]) -> ([9]);
store_temp<Snapshot<Array<felt252>>>([4]) -> ([6]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([9]) -> ([7]);
struct_construct<core::array::Span::<core::felt252>>([6]) -> ([10]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([10]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([7]) { fallthrough([11]) 2548([12]) };
branch_align() -> ();
unbox<felt252>([11]) -> ([13]);
store_temp<felt252>([13]) -> ([13]);
rename<felt252>([13]) -> ([14]);
enum_init<core::option::Option::<core::felt252>, 0>([14]) -> ([15]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([16]);
store_temp<core::option::Option::<core::felt252>>([15]) -> ([17]);
return([16], [17]);
branch_align() -> ();
drop<Unit>([12]) -> ();
struct_construct<Unit>() -> ([18]);
enum_init<core::option::Option::<core::felt252>, 1>([18]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
store_temp<core::option::Option::<core::felt252>>([19]) -> ([21]);
return([20], [21]);
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]);
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 2562([5]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]);
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]);
jump() { 2567() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]);
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]);
struct_construct<core::array::Span::<core::felt252>>([7]) -> ([11]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 2590([13]) };
branch_align() -> ();
unbox<felt252>([12]) -> ([14]);
store_temp<felt252>([14]) -> ([14]);
rename<felt252>([14]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([18]);
store_temp<felt252>([15]) -> ([19]);
function_call<user@core::integer::Felt252TryIntoU8::try_into>([18], [19]) -> ([16], [17]);
enum_match<core::option::Option::<core::integer::u8>>([17]) { fallthrough([20]) 2584([21]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 0>([20]) -> ([22]);
store_temp<RangeCheck>([16]) -> ([23]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([24]);
store_temp<core::option::Option::<core::integer::u8>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 1>([21]) -> ([26]);
store_temp<RangeCheck>([16]) -> ([27]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([28]);
store_temp<core::option::Option::<core::integer::u8>>([26]) -> ([29]);
return([27], [28], [29]);
branch_align() -> ();
drop<Unit>([13]) -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::option::Option::<core::integer::u8>, 1>([30]) -> ([31]);
store_temp<RangeCheck>([0]) -> ([32]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([33]);
store_temp<core::option::Option::<core::integer::u8>>([31]) -> ([34]);
return([32], [33], [34]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([10], [11], [12], [13], [14], [15]);
store_temp<GasBuiltin>([1]) -> ([19]);
store_temp<System>([3]) -> ([20]);
store_temp<erc20::erc20::ERC20::name::Storage>([10]) -> ([21]);
store_temp<felt252>([5]) -> ([22]);
function_call<user@erc20::erc20::ERC20::name::InternalStorageImpl::write>([19], [20], [21], [22]) -> ([16], [17], [18]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>>([18]) { fallthrough([23]) 2787([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::name::Storage, Unit>>([23]) -> ([25], [26]);
drop<Unit>([26]) -> ();
store_temp<GasBuiltin>([16]) -> ([30]);
store_temp<System>([17]) -> ([31]);
store_temp<erc20::erc20::ERC20::symbol::Storage>([11]) -> ([32]);
store_temp<felt252>([6]) -> ([33]);
function_call<user@erc20::erc20::ERC20::symbol::InternalStorageImpl::write>([30], [31], [32], [33]) -> ([27], [28], [29]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>>([29]) { fallthrough([34]) 2771([35]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>>([34]) -> ([36], [37]);
drop<Unit>([37]) -> ();
store_temp<GasBuiltin>([27]) -> ([41]);
store_temp<System>([28]) -> ([42]);
store_temp<erc20::erc20::ERC20::decimals::Storage>([12]) -> ([43]);
store_temp<u8>([7]) -> ([44]);
function_call<user@erc20::erc20::ERC20::decimals::InternalStorageImpl::write>([41], [42], [43], [44]) -> ([38], [39], [40]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>>([40]) { fallthrough([45]) 2756([46]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>>([45]) -> ([47], [48]);
drop<Unit>([48]) -> ();
dup<ContractAddress>([9]) -> ([9], [50]);
contract_address_to_felt252([50]) -> ([49]);
felt252_const<0>() -> ([51]);
felt252_sub([49], [51]) -> ([52]);
store_temp<felt252>([52]) -> ([52]);
felt252_is_zero([52]) { fallthrough() 2637([53]) };
branch_align() -> ();
struct_construct<Unit>() -> ([54]);
enum_init<core::bool, 1>([54]) -> ([55]);
store_temp<core::bool>([55]) -> ([56]);
jump() { 2642() };
branch_align() -> ();
drop<NonZero<felt252>>([53]) -> ();
struct_construct<Unit>() -> ([57]);
enum_init<core::bool, 0>([57]) -> ([58]);
store_temp<core::bool>([58]) -> ([56]);
bool_not_impl([56]) -> ([59]);
store_temp<core::bool>([59]) -> ([59]);
bool_not_impl([59]) -> ([60]);
store_temp<core::bool>([60]) -> ([60]);
enum_match<core::bool>([60]) { fallthrough([61]) 2733([62]) };
branch_align() -> ();
drop<Unit>([61]) -> ();
store_temp<GasBuiltin>([38]) -> ([66]);
store_temp<System>([39]) -> ([67]);
store_temp<erc20::erc20::ERC20::total_supply::Storage>([13]) -> ([68]);
dup<core::integer::u256>([8]) -> ([8], [69]);
store_temp<core::integer::u256>([69]) -> ([69]);
function_call<user@erc20::erc20::ERC20::total_supply::InternalStorageImpl::write>([66], [67], [68], [69]) -> ([63], [64], [65]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>>([65]) { fallthrough([70]) 2718([71]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>>([70]) -> ([72], [73]);
drop<Unit>([73]) -> ();
store_temp<RangeCheck>([0]) -> ([79]);
store_temp<GasBuiltin>([63]) -> ([80]);
store_temp<Pedersen>([2]) -> ([81]);
store_temp<System>([64]) -> ([82]);
store_temp<erc20::erc20::ERC20::balances::Storage>([14]) -> ([83]);
dup<ContractAddress>([9]) -> ([9], [84]);
store_temp<ContractAddress>([84]) -> ([84]);
dup<core::integer::u256>([8]) -> ([8], [85]);
store_temp<core::integer::u256>([85]) -> ([85]);
function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::write>([79], [80], [81], [82], [83], [84], [85]) -> ([74], [75], [76], [77], [78]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>([78]) { fallthrough([86]) 2703([87]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>>([86]) -> ([88], [89]);
drop<Unit>([89]) -> ();
contract_address_const<0>() -> ([90]);
struct_construct<erc20::erc20::ERC20::Transfer>([90], [9], [8]) -> ([91]);
enum_init<erc20::erc20::ERC20::Event, 0>([91]) -> ([92]);
struct_construct<erc20::erc20::ERC20::Storage>([25], [36], [47], [72], [88], [15]) -> ([93]);
store_temp<GasBuiltin>([75]) -> ([97]);
store_temp<System>([77]) -> ([98]);
store_temp<erc20::erc20::ERC20::Storage>([93]) -> ([99]);
store_temp<erc20::erc20::ERC20::Event>([92]) -> ([100]);
function_call<user@erc20::erc20::ERC20::StorageEventEmitter::emit>([97], [98], [99], [100]) -> ([94], [95], [96]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([96]) { fallthrough([101]) 2695([102]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([101]) -> ([103], [104]);
drop<Unit>([104]) -> ();
struct_construct<Unit>() -> ([105]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([103], [105]) -> ([106]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([106]) -> ([107]);
store_temp<RangeCheck>([74]) -> ([108]);
store_temp<GasBuiltin>([94]) -> ([109]);
store_temp<Pedersen>([76]) -> ([110]);
store_temp<System>([95]) -> ([111]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([107]) -> ([112]);
return([108], [109], [110], [111], [112]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([102]) -> ([113]);
store_temp<RangeCheck>([74]) -> ([114]);
store_temp<GasBuiltin>([94]) -> ([115]);
store_temp<Pedersen>([76]) -> ([116]);
store_temp<System>([95]) -> ([117]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([113]) -> ([118]);
return([114], [115], [116], [117], [118]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([25]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<ContractAddress>([9]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([72]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([47]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([36]) -> ();
drop<core::integer::u256>([8]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([87]) -> ([119]);
store_temp<RangeCheck>([74]) -> ([120]);
store_temp<GasBuiltin>([75]) -> ([121]);
store_temp<Pedersen>([76]) -> ([122]);
store_temp<System>([77]) -> ([123]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([119]) -> ([124]);
return([120], [121], [122], [123], [124]);
branch_align() -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([36]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([25]) -> ();
drop<core::integer::u256>([8]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([47]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<ContractAddress>([9]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([14]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([71]) -> ([125]);
store_temp<RangeCheck>([0]) -> ([126]);
store_temp<GasBuiltin>([63]) -> ([127]);
store_temp<Pedersen>([2]) -> ([128]);
store_temp<System>([64]) -> ([129]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([125]) -> ([130]);
return([126], [127], [128], [129], [130]);
branch_align() -> ();
drop<Unit>([62]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([36]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([25]) -> ();
drop<core::integer::u256>([8]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([47]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<ContractAddress>([9]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([14]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([13]) -> ();
array_new<felt252>() -> ([131]);
felt252_const<7300388948442106731950660484798539862217172507820428101544021685107>() -> ([132]);
store_temp<felt252>([132]) -> ([132]);
array_append<felt252>([131], [132]) -> ([133]);
struct_construct<core::Panic>() -> ([134]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([134], [133]) -> ([135]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([135]) -> ([136]);
store_temp<RangeCheck>([0]) -> ([137]);
store_temp<GasBuiltin>([38]) -> ([138]);
store_temp<Pedersen>([2]) -> ([139]);
store_temp<System>([39]) -> ([140]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([136]) -> ([141]);
return([137], [138], [139], [140], [141]);
branch_align() -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([36]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([25]) -> ();
drop<core::integer::u256>([8]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<ContractAddress>([9]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([14]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([13]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([46]) -> ([142]);
store_temp<RangeCheck>([0]) -> ([143]);
store_temp<GasBuiltin>([38]) -> ([144]);
store_temp<Pedersen>([2]) -> ([145]);
store_temp<System>([39]) -> ([146]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([142]) -> ([147]);
return([143], [144], [145], [146], [147]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([25]) -> ();
drop<core::integer::u256>([8]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([13]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<ContractAddress>([9]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([14]) -> ();
drop<u8>([7]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([12]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([35]) -> ([148]);
store_temp<RangeCheck>([0]) -> ([149]);
store_temp<GasBuiltin>([27]) -> ([150]);
store_temp<Pedersen>([2]) -> ([151]);
store_temp<System>([28]) -> ([152]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([148]) -> ([153]);
return([149], [150], [151], [152], [153]);
branch_align() -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([12]) -> ();
drop<core::integer::u256>([8]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([13]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([15]) -> ();
drop<ContractAddress>([9]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([14]) -> ();
drop<u8>([7]) -> ();
drop<felt252>([6]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([11]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([24]) -> ([154]);
store_temp<RangeCheck>([0]) -> ([155]);
store_temp<GasBuiltin>([16]) -> ([156]);
store_temp<Pedersen>([2]) -> ([157]);
store_temp<System>([17]) -> ([158]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([154]) -> ([159]);
return([155], [156], [157], [158], [159]);
drop<erc20::erc20::ERC20::name::Storage>([2]) -> ();
storage_base_address_const<1528802474226268325865027367859591458315299653151958663884057507666229546336>() -> ([3]);
storage_address_from_base([3]) -> ([4]);
u32_const<0>() -> ([5]);
store_temp<u32>([5]) -> ([5]);
store_temp<StorageAddress>([4]) -> ([4]);
storage_read_syscall([0], [1], [5], [4]) { fallthrough([6], [7], [8]) 2817([9], [10], [11]) };
branch_align() -> ();
enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0>([8]) -> ([12]);
store_temp<GasBuiltin>([6]) -> ([13]);
store_temp<System>([7]) -> ([14]);
store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([12]) -> ([15]);
jump() { 2822() };
branch_align() -> ();
enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1>([11]) -> ([16]);
store_temp<GasBuiltin>([9]) -> ([13]);
store_temp<System>([10]) -> ([14]);
store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([16]) -> ([15]);
rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([15]) -> ([18]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall>([18]) -> ([17]);
enum_match<core::PanicResult::<(core::felt252,)>>([17]) { fallthrough([19]) 2833([20]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([19]) -> ([21]);
struct_construct<Tuple<felt252>>([21]) -> ([22]);
enum_init<core::PanicResult::<(core::felt252,)>, 0>([22]) -> ([23]);
store_temp<GasBuiltin>([13]) -> ([24]);
store_temp<System>([14]) -> ([25]);
store_temp<core::PanicResult::<(core::felt252,)>>([23]) -> ([26]);
return([24], [25], [26]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt252,)>, 1>([20]) -> ([27]);
store_temp<GasBuiltin>([13]) -> ([28]);
store_temp<System>([14]) -> ([29]);
store_temp<core::PanicResult::<(core::felt252,)>>([27]) -> ([30]);
return([28], [29], [30]);
drop<erc20::erc20::ERC20::symbol::Storage>([2]) -> ();
storage_base_address_const<944713526212149105522785400348068751682982210605126537021911324578866405028>() -> ([3]);
storage_address_from_base([3]) -> ([4]);
u32_const<0>() -> ([5]);
store_temp<u32>([5]) -> ([5]);
store_temp<StorageAddress>([4]) -> ([4]);
storage_read_syscall([0], [1], [5], [4]) { fallthrough([6], [7], [8]) 2852([9], [10], [11]) };
branch_align() -> ();
enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0>([8]) -> ([12]);
store_temp<GasBuiltin>([6]) -> ([13]);
store_temp<System>([7]) -> ([14]);
store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([12]) -> ([15]);
jump() { 2857() };
branch_align() -> ();
enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1>([11]) -> ([16]);
store_temp<GasBuiltin>([9]) -> ([13]);
store_temp<System>([10]) -> ([14]);
store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([16]) -> ([15]);
rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([15]) -> ([18]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall>([18]) -> ([17]);
enum_match<core::PanicResult::<(core::felt252,)>>([17]) { fallthrough([19]) 2868([20]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([19]) -> ([21]);
struct_construct<Tuple<felt252>>([21]) -> ([22]);
enum_init<core::PanicResult::<(core::felt252,)>, 0>([22]) -> ([23]);
store_temp<GasBuiltin>([13]) -> ([24]);
store_temp<System>([14]) -> ([25]);
store_temp<core::PanicResult::<(core::felt252,)>>([23]) -> ([26]);
return([24], [25], [26]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt252,)>, 1>([20]) -> ([27]);
store_temp<GasBuiltin>([13]) -> ([28]);
store_temp<System>([14]) -> ([29]);
store_temp<core::PanicResult::<(core::felt252,)>>([27]) -> ([30]);
return([28], [29], [30]);
drop<erc20::erc20::ERC20::decimals::Storage>([3]) -> ();
storage_base_address_const<134830404806214277570220174593674215737759987247891306080029841794115377321>() -> ([4]);
u32_const<0>() -> ([5]);
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<GasBuiltin>([1]) -> ([11]);
store_temp<System>([2]) -> ([12]);
store_temp<u32>([5]) -> ([13]);
store_temp<StorageBaseAddress>([4]) -> ([14]);
function_call<user@core::starknet::storage_access::StorageAccessU8::read>([10], [11], [12], [13], [14]) -> ([6], [7], [8], [9]);
enum_match<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>([9]) { fallthrough([15]) 2905([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>([15]) -> ([17]);
store_temp<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>([17]) -> ([19]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u8>::unwrap_syscall>([19]) -> ([18]);
enum_match<core::PanicResult::<(core::integer::u8,)>>([18]) { fallthrough([20]) 2898([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([20]) -> ([22]);
struct_construct<Tuple<u8>>([22]) -> ([23]);
enum_init<core::PanicResult::<(core::integer::u8,)>, 0>([23]) -> ([24]);
store_temp<RangeCheck>([6]) -> ([25]);
store_temp<GasBuiltin>([7]) -> ([26]);
store_temp<System>([8]) -> ([27]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([24]) -> ([28]);
return([25], [26], [27], [28]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u8,)>, 1>([21]) -> ([29]);
store_temp<RangeCheck>([6]) -> ([30]);
store_temp<GasBuiltin>([7]) -> ([31]);
store_temp<System>([8]) -> ([32]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([29]) -> ([33]);
return([30], [31], [32], [33]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u8,)>, 1>([16]) -> ([34]);
store_temp<RangeCheck>([6]) -> ([35]);
store_temp<GasBuiltin>([7]) -> ([36]);
store_temp<System>([8]) -> ([37]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([34]) -> ([38]);
return([35], [36], [37], [38]);
drop<erc20::erc20::ERC20::total_supply::Storage>([3]) -> ();
storage_base_address_const<603278275252936218847294002513349627170936020082667936993356353388973422646>() -> ([4]);
u32_const<0>() -> ([5]);
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<GasBuiltin>([1]) -> ([11]);
store_temp<System>([2]) -> ([12]);
store_temp<u32>([5]) -> ([13]);
store_temp<StorageBaseAddress>([4]) -> ([14]);
function_call<user@core::integer::StorageAccessu256::read>([10], [11], [12], [13], [14]) -> ([6], [7], [8], [9]);
enum_match<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([9]) { fallthrough([15]) 2943([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([15]) -> ([17]);
store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([17]) -> ([19]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>([19]) -> ([18]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([18]) { fallthrough([20]) 2936([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([20]) -> ([22]);
struct_construct<Tuple<core::integer::u256>>([22]) -> ([23]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([23]) -> ([24]);
store_temp<RangeCheck>([6]) -> ([25]);
store_temp<GasBuiltin>([7]) -> ([26]);
store_temp<System>([8]) -> ([27]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([24]) -> ([28]);
return([25], [26], [27], [28]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([21]) -> ([29]);
store_temp<RangeCheck>([6]) -> ([30]);
store_temp<GasBuiltin>([7]) -> ([31]);
store_temp<System>([8]) -> ([32]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([29]) -> ([33]);
return([30], [31], [32], [33]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([16]) -> ([34]);
store_temp<RangeCheck>([6]) -> ([35]);
store_temp<GasBuiltin>([7]) -> ([36]);
store_temp<System>([8]) -> ([37]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([34]) -> ([38]);
return([35], [36], [37], [38]);
rename<u128>([0]) -> ([2]);
u128_to_felt252([2]) -> ([3]);
dup<felt252>([3]) -> ([4], [5]);
drop<felt252>([4]) -> ();
store_temp<felt252>([5]) -> ([8]);
store_temp<Array<felt252>>([1]) -> ([9]);
function_call<user@core::Felt252Serde::serialize>([8], [9]) -> ([6], [7]);
drop<Unit>([7]) -> ();
struct_construct<Unit>() -> ([10]);
store_temp<Array<felt252>>([6]) -> ([11]);
store_temp<Unit>([10]) -> ([12]);
return([11], [12]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<Pedersen>([2]) -> ([10]);
store_temp<erc20::erc20::ERC20::balances::Storage>([4]) -> ([11]);
store_temp<ContractAddress>([5]) -> ([12]);
function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::address>([9], [10], [11], [12]) -> ([6], [7], [8]);
u32_const<0>() -> ([13]);
store_temp<RangeCheck>([6]) -> ([18]);
store_temp<GasBuiltin>([1]) -> ([19]);
store_temp<System>([3]) -> ([20]);
store_temp<u32>([13]) -> ([21]);
store_temp<StorageBaseAddress>([8]) -> ([22]);
function_call<user@core::integer::StorageAccessu256::read>([18], [19], [20], [21], [22]) -> ([14], [15], [16], [17]);
enum_match<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([17]) { fallthrough([23]) 2998([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([23]) -> ([25]);
store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([25]) -> ([27]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>([27]) -> ([26]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([26]) { fallthrough([28]) 2990([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([28]) -> ([30]);
struct_construct<Tuple<core::integer::u256>>([30]) -> ([31]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([31]) -> ([32]);
store_temp<RangeCheck>([14]) -> ([33]);
store_temp<GasBuiltin>([15]) -> ([34]);
store_temp<Pedersen>([7]) -> ([35]);
store_temp<System>([16]) -> ([36]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([32]) -> ([37]);
return([33], [34], [35], [36], [37]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([29]) -> ([38]);
store_temp<RangeCheck>([14]) -> ([39]);
store_temp<GasBuiltin>([15]) -> ([40]);
store_temp<Pedersen>([7]) -> ([41]);
store_temp<System>([16]) -> ([42]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([38]) -> ([43]);
return([39], [40], [41], [42], [43]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([24]) -> ([44]);
store_temp<RangeCheck>([14]) -> ([45]);
store_temp<GasBuiltin>([15]) -> ([46]);
store_temp<Pedersen>([7]) -> ([47]);
store_temp<System>([16]) -> ([48]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([44]) -> ([49]);
return([45], [46], [47], [48], [49]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<Pedersen>([2]) -> ([10]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([4]) -> ([11]);
store_temp<Tuple<ContractAddress, ContractAddress>>([5]) -> ([12]);
function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::address>([9], [10], [11], [12]) -> ([6], [7], [8]);
u32_const<0>() -> ([13]);
store_temp<RangeCheck>([6]) -> ([18]);
store_temp<GasBuiltin>([1]) -> ([19]);
store_temp<System>([3]) -> ([20]);
store_temp<u32>([13]) -> ([21]);
store_temp<StorageBaseAddress>([8]) -> ([22]);
function_call<user@core::integer::StorageAccessu256::read>([18], [19], [20], [21], [22]) -> ([14], [15], [16], [17]);
enum_match<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([17]) { fallthrough([23]) 3042([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([23]) -> ([25]);
store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([25]) -> ([27]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>([27]) -> ([26]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([26]) { fallthrough([28]) 3034([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([28]) -> ([30]);
struct_construct<Tuple<core::integer::u256>>([30]) -> ([31]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([31]) -> ([32]);
store_temp<RangeCheck>([14]) -> ([33]);
store_temp<GasBuiltin>([15]) -> ([34]);
store_temp<Pedersen>([7]) -> ([35]);
store_temp<System>([16]) -> ([36]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([32]) -> ([37]);
return([33], [34], [35], [36], [37]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([29]) -> ([38]);
store_temp<RangeCheck>([14]) -> ([39]);
store_temp<GasBuiltin>([15]) -> ([40]);
store_temp<Pedersen>([7]) -> ([41]);
store_temp<System>([16]) -> ([42]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([38]) -> ([43]);
return([39], [40], [41], [42], [43]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([24]) -> ([44]);
store_temp<RangeCheck>([14]) -> ([45]);
store_temp<GasBuiltin>([15]) -> ([46]);
store_temp<Pedersen>([7]) -> ([47]);
store_temp<System>([16]) -> ([48]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([44]) -> ([49]);
return([45], [46], [47], [48], [49]);
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]);
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 3057([5]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]);
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]);
jump() { 3062() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]);
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]);
struct_construct<core::array::Span::<core::felt252>>([7]) -> ([11]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 3085([13]) };
branch_align() -> ();
unbox<felt252>([12]) -> ([14]);
store_temp<felt252>([14]) -> ([14]);
rename<felt252>([14]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([18]);
store_temp<felt252>([15]) -> ([19]);
function_call<user@core::integer::u128_try_from_felt252>([18], [19]) -> ([16], [17]);
enum_match<core::option::Option::<core::integer::u128>>([17]) { fallthrough([20]) 3079([21]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([20]) -> ([22]);
store_temp<RangeCheck>([16]) -> ([23]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([24]);
store_temp<core::option::Option::<core::integer::u128>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 1>([21]) -> ([26]);
store_temp<RangeCheck>([16]) -> ([27]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([28]);
store_temp<core::option::Option::<core::integer::u128>>([26]) -> ([29]);
return([27], [28], [29]);
branch_align() -> ();
drop<Unit>([13]) -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::option::Option::<core::integer::u128>, 1>([30]) -> ([31]);
store_temp<RangeCheck>([0]) -> ([32]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([33]);
store_temp<core::option::Option::<core::integer::u128>>([31]) -> ([34]);
return([32], [33], [34]);
store_temp<GasBuiltin>([0]) -> ([5]);
store_temp<System>([1]) -> ([6]);
function_call<user@core::starknet::info::get_execution_info>([5], [6]) -> ([2], [3], [4]);
enum_match<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([4]) { fallthrough([7]) 3111([8]) };
branch_align() -> ();
struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([7]) -> ([9]);
unbox<core::starknet::info::ExecutionInfo>([9]) -> ([10]);
struct_deconstruct<core::starknet::info::ExecutionInfo>([10]) -> ([11], [12], [13], [14], [15]);
drop<Box<core::starknet::info::BlockInfo>>([11]) -> ();
drop<Box<core::starknet::info::TxInfo>>([12]) -> ();
drop<ContractAddress>([14]) -> ();
drop<felt252>([15]) -> ();
struct_construct<Tuple<ContractAddress>>([13]) -> ([16]);
enum_init<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0>([16]) -> ([17]);
store_temp<GasBuiltin>([2]) -> ([18]);
store_temp<System>([3]) -> ([19]);
store_temp<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([17]) -> ([20]);
return([18], [19], [20]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1>([8]) -> ([21]);
store_temp<GasBuiltin>([2]) -> ([22]);
store_temp<System>([3]) -> ([23]);
store_temp<core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([21]) -> ([24]);
return([22], [23], [24]);
dup<ContractAddress>([5]) -> ([5], [9]);
contract_address_to_felt252([9]) -> ([8]);
felt252_const<0>() -> ([10]);
felt252_sub([8], [10]) -> ([11]);
store_temp<felt252>([11]) -> ([11]);
felt252_is_zero([11]) { fallthrough() 3128([12]) };
branch_align() -> ();
struct_construct<Unit>() -> ([13]);
enum_init<core::bool, 1>([13]) -> ([14]);
store_temp<core::bool>([14]) -> ([15]);
jump() { 3133() };
branch_align() -> ();
drop<NonZero<felt252>>([12]) -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 0>([16]) -> ([17]);
store_temp<core::bool>([17]) -> ([15]);
bool_not_impl([15]) -> ([18]);
store_temp<core::bool>([18]) -> ([18]);
bool_not_impl([18]) -> ([19]);
store_temp<core::bool>([19]) -> ([19]);
enum_match<core::bool>([19]) { fallthrough([20]) 3378([21]) };
branch_align() -> ();
drop<Unit>([20]) -> ();
dup<ContractAddress>([6]) -> ([6], [23]);
contract_address_to_felt252([23]) -> ([22]);
felt252_const<0>() -> ([24]);
felt252_sub([22], [24]) -> ([25]);
store_temp<felt252>([25]) -> ([25]);
felt252_is_zero([25]) { fallthrough() 3151([26]) };
branch_align() -> ();
struct_construct<Unit>() -> ([27]);
enum_init<core::bool, 1>([27]) -> ([28]);
store_temp<core::bool>([28]) -> ([29]);
jump() { 3156() };
branch_align() -> ();
drop<NonZero<felt252>>([26]) -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::bool, 0>([30]) -> ([31]);
store_temp<core::bool>([31]) -> ([29]);
bool_not_impl([29]) -> ([32]);
store_temp<core::bool>([32]) -> ([32]);
bool_not_impl([32]) -> ([33]);
store_temp<core::bool>([33]) -> ([33]);
enum_match<core::bool>([33]) { fallthrough([34]) 3359([35]) };
branch_align() -> ();
drop<Unit>([34]) -> ();
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([36], [37], [38], [39], [40], [41]);
dup<erc20::erc20::ERC20::balances::Storage>([40]) -> ([42], [43]);
store_temp<RangeCheck>([0]) -> ([49]);
store_temp<GasBuiltin>([1]) -> ([50]);
store_temp<Pedersen>([2]) -> ([51]);
store_temp<System>([3]) -> ([52]);
store_temp<erc20::erc20::ERC20::balances::Storage>([43]) -> ([53]);
dup<ContractAddress>([5]) -> ([5], [54]);
store_temp<ContractAddress>([54]) -> ([54]);
function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::read>([49], [50], [51], [52], [53], [54]) -> ([44], [45], [46], [47], [48]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([48]) { fallthrough([55]) 3342([56]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([55]) -> ([57]);
store_temp<RangeCheck>([44]) -> ([60]);
store_temp<core::integer::u256>([57]) -> ([61]);
dup<core::integer::u256>([7]) -> ([7], [62]);
store_temp<core::integer::u256>([62]) -> ([62]);
function_call<user@core::integer::U256Sub::sub>([60], [61], [62]) -> ([58], [59]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([59]) { fallthrough([63]) 3325([64]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([63]) -> ([65]);
store_temp<RangeCheck>([58]) -> ([71]);
store_temp<GasBuiltin>([45]) -> ([72]);
store_temp<Pedersen>([46]) -> ([73]);
store_temp<System>([47]) -> ([74]);
store_temp<erc20::erc20::ERC20::balances::Storage>([42]) -> ([75]);
dup<ContractAddress>([5]) -> ([5], [76]);
store_temp<ContractAddress>([76]) -> ([76]);
store_temp<core::integer::u256>([65]) -> ([77]);
function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::write>([71], [72], [73], [74], [75], [76], [77]) -> ([66], [67], [68], [69], [70]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>([70]) { fallthrough([78]) 3309([79]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>>([78]) -> ([80], [81]);
drop<Unit>([81]) -> ();
dup<erc20::erc20::ERC20::balances::Storage>([80]) -> ([82], [83]);
store_temp<RangeCheck>([66]) -> ([89]);
store_temp<GasBuiltin>([67]) -> ([90]);
store_temp<Pedersen>([68]) -> ([91]);
store_temp<System>([69]) -> ([92]);
store_temp<erc20::erc20::ERC20::balances::Storage>([83]) -> ([93]);
dup<ContractAddress>([6]) -> ([6], [94]);
store_temp<ContractAddress>([94]) -> ([94]);
function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::read>([89], [90], [91], [92], [93], [94]) -> ([84], [85], [86], [87], [88]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([88]) { fallthrough([95]) 3292([96]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([95]) -> ([97]);
store_temp<RangeCheck>([84]) -> ([100]);
store_temp<core::integer::u256>([97]) -> ([101]);
dup<core::integer::u256>([7]) -> ([7], [102]);
store_temp<core::integer::u256>([102]) -> ([102]);
function_call<user@core::integer::U256Add::add>([100], [101], [102]) -> ([98], [99]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([99]) { fallthrough([103]) 3275([104]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([103]) -> ([105]);
store_temp<RangeCheck>([98]) -> ([111]);
store_temp<GasBuiltin>([85]) -> ([112]);
store_temp<Pedersen>([86]) -> ([113]);
store_temp<System>([87]) -> ([114]);
store_temp<erc20::erc20::ERC20::balances::Storage>([82]) -> ([115]);
dup<ContractAddress>([6]) -> ([6], [116]);
store_temp<ContractAddress>([116]) -> ([116]);
store_temp<core::integer::u256>([105]) -> ([117]);
function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::write>([111], [112], [113], [114], [115], [116], [117]) -> ([106], [107], [108], [109], [110]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>([110]) { fallthrough([118]) 3259([119]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>>([118]) -> ([120], [121]);
drop<Unit>([121]) -> ();
struct_construct<erc20::erc20::ERC20::Transfer>([5], [6], [7]) -> ([122]);
enum_init<erc20::erc20::ERC20::Event, 0>([122]) -> ([123]);
struct_construct<erc20::erc20::ERC20::Storage>([36], [37], [38], [39], [120], [41]) -> ([124]);
store_temp<GasBuiltin>([107]) -> ([128]);
store_temp<System>([109]) -> ([129]);
store_temp<erc20::erc20::ERC20::Storage>([124]) -> ([130]);
store_temp<erc20::erc20::ERC20::Event>([123]) -> ([131]);
function_call<user@erc20::erc20::ERC20::StorageEventEmitter::emit>([128], [129], [130], [131]) -> ([125], [126], [127]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([127]) { fallthrough([132]) 3251([133]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([132]) -> ([134], [135]);
drop<Unit>([135]) -> ();
struct_construct<Unit>() -> ([136]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([134], [136]) -> ([137]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([137]) -> ([138]);
store_temp<RangeCheck>([106]) -> ([139]);
store_temp<GasBuiltin>([125]) -> ([140]);
store_temp<Pedersen>([108]) -> ([141]);
store_temp<System>([126]) -> ([142]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([138]) -> ([143]);
return([139], [140], [141], [142], [143]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([133]) -> ([144]);
store_temp<RangeCheck>([106]) -> ([145]);
store_temp<GasBuiltin>([125]) -> ([146]);
store_temp<Pedersen>([108]) -> ([147]);
store_temp<System>([126]) -> ([148]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([144]) -> ([149]);
return([145], [146], [147], [148], [149]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([36]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([41]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([39]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([38]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([37]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([6]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([119]) -> ([150]);
store_temp<RangeCheck>([106]) -> ([151]);
store_temp<GasBuiltin>([107]) -> ([152]);
store_temp<Pedersen>([108]) -> ([153]);
store_temp<System>([109]) -> ([154]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([150]) -> ([155]);
return([151], [152], [153], [154], [155]);
branch_align() -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([38]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([36]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([37]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([41]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([39]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([82]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([104]) -> ([156]);
store_temp<RangeCheck>([98]) -> ([157]);
store_temp<GasBuiltin>([85]) -> ([158]);
store_temp<Pedersen>([86]) -> ([159]);
store_temp<System>([87]) -> ([160]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([156]) -> ([161]);
return([157], [158], [159], [160], [161]);
branch_align() -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([38]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([36]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([37]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([41]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([39]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([82]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([96]) -> ([162]);
store_temp<RangeCheck>([84]) -> ([163]);
store_temp<GasBuiltin>([85]) -> ([164]);
store_temp<Pedersen>([86]) -> ([165]);
store_temp<System>([87]) -> ([166]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([162]) -> ([167]);
return([163], [164], [165], [166], [167]);
branch_align() -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([38]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([36]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([37]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([41]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([39]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([79]) -> ([168]);
store_temp<RangeCheck>([66]) -> ([169]);
store_temp<GasBuiltin>([67]) -> ([170]);
store_temp<Pedersen>([68]) -> ([171]);
store_temp<System>([69]) -> ([172]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([168]) -> ([173]);
return([169], [170], [171], [172], [173]);
branch_align() -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([38]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([36]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([37]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([41]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([39]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([42]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([64]) -> ([174]);
store_temp<RangeCheck>([58]) -> ([175]);
store_temp<GasBuiltin>([45]) -> ([176]);
store_temp<Pedersen>([46]) -> ([177]);
store_temp<System>([47]) -> ([178]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([174]) -> ([179]);
return([175], [176], [177], [178], [179]);
branch_align() -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([38]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([36]) -> ();
drop<ContractAddress>([6]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([37]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([41]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([39]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([42]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([56]) -> ([180]);
store_temp<RangeCheck>([44]) -> ([181]);
store_temp<GasBuiltin>([45]) -> ([182]);
store_temp<Pedersen>([46]) -> ([183]);
store_temp<System>([47]) -> ([184]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([180]) -> ([185]);
return([181], [182], [183], [184], [185]);
branch_align() -> ();
drop<Unit>([35]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
array_new<felt252>() -> ([186]);
felt252_const<395754877894504967531585582359572169455970492464>() -> ([187]);
store_temp<felt252>([187]) -> ([187]);
array_append<felt252>([186], [187]) -> ([188]);
struct_construct<core::Panic>() -> ([189]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([189], [188]) -> ([190]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([190]) -> ([191]);
store_temp<RangeCheck>([0]) -> ([192]);
store_temp<GasBuiltin>([1]) -> ([193]);
store_temp<Pedersen>([2]) -> ([194]);
store_temp<System>([3]) -> ([195]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([191]) -> ([196]);
return([192], [193], [194], [195], [196]);
branch_align() -> ();
drop<Unit>([21]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
array_new<felt252>() -> ([197]);
felt252_const<25936191677694277552149992725516921697451103245639728>() -> ([198]);
store_temp<felt252>([198]) -> ([198]);
array_append<felt252>([197], [198]) -> ([199]);
struct_construct<core::Panic>() -> ([200]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([200], [199]) -> ([201]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([201]) -> ([202]);
store_temp<RangeCheck>([0]) -> ([203]);
store_temp<GasBuiltin>([1]) -> ([204]);
store_temp<Pedersen>([2]) -> ([205]);
store_temp<System>([3]) -> ([206]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([202]) -> ([207]);
return([203], [204], [205], [206], [207]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([8], [9], [10], [11], [12], [13]);
dup<erc20::erc20::ERC20::allowances::Storage>([13]) -> ([14], [15]);
dup<ContractAddress>([5]) -> ([5], [16]);
dup<ContractAddress>([6]) -> ([6], [17]);
struct_construct<Tuple<ContractAddress, ContractAddress>>([16], [17]) -> ([18]);
store_temp<RangeCheck>([0]) -> ([24]);
store_temp<GasBuiltin>([1]) -> ([25]);
store_temp<Pedersen>([2]) -> ([26]);
store_temp<System>([3]) -> ([27]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([15]) -> ([28]);
store_temp<Tuple<ContractAddress, ContractAddress>>([18]) -> ([29]);
function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::read>([24], [25], [26], [27], [28], [29]) -> ([19], [20], [21], [22], [23]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([23]) { fallthrough([30]) 3524([31]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([30]) -> ([32]);
struct_deconstruct<core::integer::u256>([32]) -> ([33], [34]);
u128_const<340282366920938463463374607431768211455>() -> ([35]);
dup<u128>([33]) -> ([33], [36]);
store_temp<u128>([35]) -> ([35]);
dup<u128>([35]) -> ([35], [37]);
u128_eq([36], [37]) { fallthrough() 3424() };
branch_align() -> ();
drop<u128>([35]) -> ();
struct_construct<Unit>() -> ([38]);
enum_init<core::bool, 0>([38]) -> ([39]);
store_temp<core::bool>([39]) -> ([40]);
jump() { 3437() };
branch_align() -> ();
dup<u128>([34]) -> ([34], [41]);
u128_eq([41], [35]) { fallthrough() 3432() };
branch_align() -> ();
struct_construct<Unit>() -> ([42]);
enum_init<core::bool, 0>([42]) -> ([43]);
store_temp<core::bool>([43]) -> ([44]);
jump() { 3436() };
branch_align() -> ();
struct_construct<Unit>() -> ([45]);
enum_init<core::bool, 1>([45]) -> ([46]);
store_temp<core::bool>([46]) -> ([44]);
rename<core::bool>([44]) -> ([40]);
bool_not_impl([40]) -> ([47]);
dup<erc20::erc20::ERC20::name::Storage>([8]) -> ([8], [48]);
dup<erc20::erc20::ERC20::symbol::Storage>([9]) -> ([9], [49]);
dup<erc20::erc20::ERC20::decimals::Storage>([10]) -> ([10], [50]);
dup<erc20::erc20::ERC20::total_supply::Storage>([11]) -> ([11], [51]);
dup<erc20::erc20::ERC20::balances::Storage>([12]) -> ([12], [52]);
dup<erc20::erc20::ERC20::allowances::Storage>([14]) -> ([14], [53]);
struct_construct<erc20::erc20::ERC20::Storage>([48], [49], [50], [51], [52], [53]) -> ([54]);
drop<erc20::erc20::ERC20::Storage>([54]) -> ();
store_temp<core::bool>([47]) -> ([47]);
enum_match<core::bool>([47]) { fallthrough([55]) 3462([56]) };
branch_align() -> ();
drop<Unit>([55]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<u128>([34]) -> ();
drop<u128>([33]) -> ();
struct_construct<erc20::erc20::ERC20::Storage>([8], [9], [10], [11], [12], [14]) -> ([57]);
store_temp<RangeCheck>([19]) -> ([58]);
store_temp<GasBuiltin>([20]) -> ([59]);
store_temp<Pedersen>([21]) -> ([60]);
store_temp<System>([22]) -> ([61]);
store_temp<erc20::erc20::ERC20::Storage>([57]) -> ([62]);
jump() { 3491() };
branch_align() -> ();
drop<Unit>([56]) -> ();
struct_construct<core::integer::u256>([33], [34]) -> ([63]);
store_temp<RangeCheck>([19]) -> ([66]);
store_temp<core::integer::u256>([63]) -> ([67]);
store_temp<core::integer::u256>([7]) -> ([68]);
function_call<user@core::integer::U256Sub::sub>([66], [67], [68]) -> ([64], [65]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([65]) { fallthrough([69]) 3508([70]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([69]) -> ([71]);
struct_construct<erc20::erc20::ERC20::Storage>([8], [9], [10], [11], [12], [14]) -> ([72]);
store_temp<RangeCheck>([64]) -> ([78]);
store_temp<GasBuiltin>([20]) -> ([79]);
store_temp<Pedersen>([21]) -> ([80]);
store_temp<System>([22]) -> ([81]);
store_temp<erc20::erc20::ERC20::Storage>([72]) -> ([82]);
store_temp<ContractAddress>([5]) -> ([83]);
store_temp<ContractAddress>([6]) -> ([84]);
store_temp<core::integer::u256>([71]) -> ([85]);
function_call<user@erc20::erc20::ERC20::StorageImpl::approve_helper>([78], [79], [80], [81], [82], [83], [84], [85]) -> ([73], [74], [75], [76], [77]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([77]) { fallthrough([86]) 3500([87]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([86]) -> ([88], [89]);
drop<Unit>([89]) -> ();
store_temp<RangeCheck>([73]) -> ([58]);
store_temp<GasBuiltin>([74]) -> ([59]);
store_temp<Pedersen>([75]) -> ([60]);
store_temp<System>([76]) -> ([61]);
store_temp<erc20::erc20::ERC20::Storage>([88]) -> ([62]);
struct_construct<Unit>() -> ([90]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([62], [90]) -> ([91]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([91]) -> ([92]);
store_temp<RangeCheck>([58]) -> ([93]);
store_temp<GasBuiltin>([59]) -> ([94]);
store_temp<Pedersen>([60]) -> ([95]);
store_temp<System>([61]) -> ([96]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([92]) -> ([97]);
return([93], [94], [95], [96], [97]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([87]) -> ([98]);
store_temp<RangeCheck>([73]) -> ([99]);
store_temp<GasBuiltin>([74]) -> ([100]);
store_temp<Pedersen>([75]) -> ([101]);
store_temp<System>([76]) -> ([102]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([98]) -> ([103]);
return([99], [100], [101], [102], [103]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([8]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([14]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([12]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([11]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([10]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([9]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([70]) -> ([104]);
store_temp<RangeCheck>([64]) -> ([105]);
store_temp<GasBuiltin>([20]) -> ([106]);
store_temp<Pedersen>([21]) -> ([107]);
store_temp<System>([22]) -> ([108]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([104]) -> ([109]);
return([105], [106], [107], [108], [109]);
branch_align() -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([14]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([12]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([11]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([10]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([9]) -> ();
drop<erc20::erc20::ERC20::name::Storage>([8]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<core::integer::u256>([7]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([31]) -> ([110]);
store_temp<RangeCheck>([19]) -> ([111]);
store_temp<GasBuiltin>([20]) -> ([112]);
store_temp<Pedersen>([21]) -> ([113]);
store_temp<System>([22]) -> ([114]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([110]) -> ([115]);
return([111], [112], [113], [114], [115]);
dup<ContractAddress>([6]) -> ([6], [9]);
contract_address_to_felt252([9]) -> ([8]);
felt252_const<0>() -> ([10]);
felt252_sub([8], [10]) -> ([11]);
store_temp<felt252>([11]) -> ([11]);
felt252_is_zero([11]) { fallthrough() 3552([12]) };
branch_align() -> ();
struct_construct<Unit>() -> ([13]);
enum_init<core::bool, 1>([13]) -> ([14]);
store_temp<core::bool>([14]) -> ([15]);
jump() { 3557() };
branch_align() -> ();
drop<NonZero<felt252>>([12]) -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 0>([16]) -> ([17]);
store_temp<core::bool>([17]) -> ([15]);
bool_not_impl([15]) -> ([18]);
store_temp<core::bool>([18]) -> ([18]);
bool_not_impl([18]) -> ([19]);
store_temp<core::bool>([19]) -> ([19]);
enum_match<core::bool>([19]) { fallthrough([20]) 3626([21]) };
branch_align() -> ();
drop<Unit>([20]) -> ();
dup<ContractAddress>([5]) -> ([5], [22]);
dup<ContractAddress>([6]) -> ([6], [23]);
struct_construct<Tuple<ContractAddress, ContractAddress>>([22], [23]) -> ([24]);
struct_deconstruct<erc20::erc20::ERC20::Storage>([4]) -> ([25], [26], [27], [28], [29], [30]);
store_temp<RangeCheck>([0]) -> ([36]);
store_temp<GasBuiltin>([1]) -> ([37]);
store_temp<Pedersen>([2]) -> ([38]);
store_temp<System>([3]) -> ([39]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([30]) -> ([40]);
store_temp<Tuple<ContractAddress, ContractAddress>>([24]) -> ([41]);
dup<core::integer::u256>([7]) -> ([7], [42]);
store_temp<core::integer::u256>([42]) -> ([42]);
function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::write>([36], [37], [38], [39], [40], [41], [42]) -> ([31], [32], [33], [34], [35]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>>([35]) { fallthrough([43]) 3610([44]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>>([43]) -> ([45], [46]);
drop<Unit>([46]) -> ();
struct_construct<erc20::erc20::ERC20::Approval>([5], [6], [7]) -> ([47]);
enum_init<erc20::erc20::ERC20::Event, 1>([47]) -> ([48]);
struct_construct<erc20::erc20::ERC20::Storage>([25], [26], [27], [28], [29], [45]) -> ([49]);
store_temp<GasBuiltin>([32]) -> ([53]);
store_temp<System>([34]) -> ([54]);
store_temp<erc20::erc20::ERC20::Storage>([49]) -> ([55]);
store_temp<erc20::erc20::ERC20::Event>([48]) -> ([56]);
function_call<user@erc20::erc20::ERC20::StorageEventEmitter::emit>([53], [54], [55], [56]) -> ([50], [51], [52]);
enum_match<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([52]) { fallthrough([57]) 3602([58]) };
branch_align() -> ();
struct_deconstruct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([57]) -> ([59], [60]);
drop<Unit>([60]) -> ();
struct_construct<Unit>() -> ([61]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([59], [61]) -> ([62]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([62]) -> ([63]);
store_temp<RangeCheck>([31]) -> ([64]);
store_temp<GasBuiltin>([50]) -> ([65]);
store_temp<Pedersen>([33]) -> ([66]);
store_temp<System>([51]) -> ([67]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([63]) -> ([68]);
return([64], [65], [66], [67], [68]);
branch_align() -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([58]) -> ([69]);
store_temp<RangeCheck>([31]) -> ([70]);
store_temp<GasBuiltin>([50]) -> ([71]);
store_temp<Pedersen>([33]) -> ([72]);
store_temp<System>([51]) -> ([73]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([69]) -> ([74]);
return([70], [71], [72], [73], [74]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([25]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::balances::Storage>([29]) -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([28]) -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([27]) -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([26]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([6]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([44]) -> ([75]);
store_temp<RangeCheck>([31]) -> ([76]);
store_temp<GasBuiltin>([32]) -> ([77]);
store_temp<Pedersen>([33]) -> ([78]);
store_temp<System>([34]) -> ([79]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([75]) -> ([80]);
return([76], [77], [78], [79], [80]);
branch_align() -> ();
drop<Unit>([21]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<ContractAddress>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<erc20::erc20::ERC20::Storage>([4]) -> ();
array_new<felt252>() -> ([81]);
felt252_const<101313248740993271302566317381896466254801065025584>() -> ([82]);
store_temp<felt252>([82]) -> ([82]);
array_append<felt252>([81], [82]) -> ([83]);
struct_construct<core::Panic>() -> ([84]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([84], [83]) -> ([85]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([85]) -> ([86]);
store_temp<RangeCheck>([0]) -> ([87]);
store_temp<GasBuiltin>([1]) -> ([88]);
store_temp<Pedersen>([2]) -> ([89]);
store_temp<System>([3]) -> ([90]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_checked_add>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u256>>([4]) { fallthrough([8]) 3656([9]) };
branch_align() -> ();
struct_construct<Tuple<core::integer::u256>>([8]) -> ([10]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([10]) -> ([11]);
store_temp<RangeCheck>([3]) -> ([12]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([11]) -> ([13]);
return([12], [13]);
branch_align() -> ();
drop<Unit>([9]) -> ();
array_new<felt252>() -> ([14]);
felt252_const<39879774624079483812136948410799859986295>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
array_append<felt252>([14], [15]) -> ([16]);
struct_construct<core::Panic>() -> ([17]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([17], [16]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([18]) -> ([19]);
store_temp<RangeCheck>([3]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([19]) -> ([21]);
return([20], [21]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_checked_sub>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u256>>([4]) { fallthrough([8]) 3679([9]) };
branch_align() -> ();
struct_construct<Tuple<core::integer::u256>>([8]) -> ([10]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([10]) -> ([11]);
store_temp<RangeCheck>([3]) -> ([12]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([11]) -> ([13]);
return([12], [13]);
branch_align() -> ();
drop<Unit>([9]) -> ();
array_new<felt252>() -> ([14]);
felt252_const<39879774624085075084607933104993585622903>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
array_append<felt252>([14], [15]) -> ([16]);
struct_construct<core::Panic>() -> ([17]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([17], [16]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([18]) -> ([19]);
store_temp<RangeCheck>([3]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([19]) -> ([21]);
return([20], [21]);
u8_try_from_felt252([0], [1]) { fallthrough([2], [3]) 3697([4]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 0>([3]) -> ([5]);
store_temp<RangeCheck>([2]) -> ([6]);
store_temp<core::option::Option::<core::integer::u8>>([5]) -> ([7]);
jump() { 3702() };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
enum_init<core::option::Option::<core::integer::u8>, 1>([8]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([6]);
store_temp<core::option::Option::<core::integer::u8>>([9]) -> ([7]);
rename<RangeCheck>([6]) -> ([10]);
rename<core::option::Option::<core::integer::u8>>([7]) -> ([11]);
return([10], [11]);
dup<erc20::erc20::ERC20::name::Storage>([2]) -> ([4], [5]);
drop<erc20::erc20::ERC20::name::Storage>([5]) -> ();
storage_base_address_const<1528802474226268325865027367859591458315299653151958663884057507666229546336>() -> ([6]);
storage_address_from_base([6]) -> ([7]);
u32_const<0>() -> ([8]);
store_temp<u32>([8]) -> ([8]);
store_temp<StorageAddress>([7]) -> ([7]);
storage_write_syscall([0], [1], [8], [7], [3]) { fallthrough([9], [10]) 3720([11], [12], [13]) };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([14]) -> ([15]);
store_temp<GasBuiltin>([9]) -> ([16]);
store_temp<System>([10]) -> ([17]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([15]) -> ([18]);
jump() { 3725() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([13]) -> ([19]);
store_temp<GasBuiltin>([11]) -> ([16]);
store_temp<System>([12]) -> ([17]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([18]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([18]) -> ([21]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([21]) -> ([20]);
enum_match<core::PanicResult::<((),)>>([20]) { fallthrough([22]) 3736([23]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([22]) -> ([24]);
struct_construct<Tuple<erc20::erc20::ERC20::name::Storage, Unit>>([4], [24]) -> ([25]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>, 0>([25]) -> ([26]);
store_temp<GasBuiltin>([16]) -> ([27]);
store_temp<System>([17]) -> ([28]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>>([26]) -> ([29]);
return([27], [28], [29]);
branch_align() -> ();
drop<erc20::erc20::ERC20::name::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>, 1>([23]) -> ([30]);
store_temp<GasBuiltin>([16]) -> ([31]);
store_temp<System>([17]) -> ([32]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>>([30]) -> ([33]);
return([31], [32], [33]);
dup<erc20::erc20::ERC20::symbol::Storage>([2]) -> ([4], [5]);
drop<erc20::erc20::ERC20::symbol::Storage>([5]) -> ();
storage_base_address_const<944713526212149105522785400348068751682982210605126537021911324578866405028>() -> ([6]);
storage_address_from_base([6]) -> ([7]);
u32_const<0>() -> ([8]);
store_temp<u32>([8]) -> ([8]);
store_temp<StorageAddress>([7]) -> ([7]);
storage_write_syscall([0], [1], [8], [7], [3]) { fallthrough([9], [10]) 3758([11], [12], [13]) };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([14]) -> ([15]);
store_temp<GasBuiltin>([9]) -> ([16]);
store_temp<System>([10]) -> ([17]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([15]) -> ([18]);
jump() { 3763() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([13]) -> ([19]);
store_temp<GasBuiltin>([11]) -> ([16]);
store_temp<System>([12]) -> ([17]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([18]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([18]) -> ([21]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([21]) -> ([20]);
enum_match<core::PanicResult::<((),)>>([20]) { fallthrough([22]) 3774([23]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([22]) -> ([24]);
struct_construct<Tuple<erc20::erc20::ERC20::symbol::Storage, Unit>>([4], [24]) -> ([25]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>, 0>([25]) -> ([26]);
store_temp<GasBuiltin>([16]) -> ([27]);
store_temp<System>([17]) -> ([28]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>>([26]) -> ([29]);
return([27], [28], [29]);
branch_align() -> ();
drop<erc20::erc20::ERC20::symbol::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>, 1>([23]) -> ([30]);
store_temp<GasBuiltin>([16]) -> ([31]);
store_temp<System>([17]) -> ([32]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>>([30]) -> ([33]);
return([31], [32], [33]);
dup<erc20::erc20::ERC20::decimals::Storage>([2]) -> ([4], [5]);
drop<erc20::erc20::ERC20::decimals::Storage>([5]) -> ();
storage_base_address_const<134830404806214277570220174593674215737759987247891306080029841794115377321>() -> ([6]);
u8_to_felt252([3]) -> ([7]);
storage_address_from_base([6]) -> ([8]);
u32_const<0>() -> ([9]);
store_temp<u32>([9]) -> ([9]);
store_temp<StorageAddress>([8]) -> ([8]);
storage_write_syscall([0], [1], [9], [8], [7]) { fallthrough([10], [11]) 3797([12], [13], [14]) };
branch_align() -> ();
struct_construct<Unit>() -> ([15]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([15]) -> ([16]);
store_temp<GasBuiltin>([10]) -> ([17]);
store_temp<System>([11]) -> ([18]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([16]) -> ([19]);
jump() { 3802() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([14]) -> ([20]);
store_temp<GasBuiltin>([12]) -> ([17]);
store_temp<System>([13]) -> ([18]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([20]) -> ([19]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([22]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([22]) -> ([21]);
enum_match<core::PanicResult::<((),)>>([21]) { fallthrough([23]) 3813([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([23]) -> ([25]);
struct_construct<Tuple<erc20::erc20::ERC20::decimals::Storage, Unit>>([4], [25]) -> ([26]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>, 0>([26]) -> ([27]);
store_temp<GasBuiltin>([17]) -> ([28]);
store_temp<System>([18]) -> ([29]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>>([27]) -> ([30]);
return([28], [29], [30]);
branch_align() -> ();
drop<erc20::erc20::ERC20::decimals::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>, 1>([24]) -> ([31]);
store_temp<GasBuiltin>([17]) -> ([32]);
store_temp<System>([18]) -> ([33]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>>([31]) -> ([34]);
return([32], [33], [34]);
dup<erc20::erc20::ERC20::total_supply::Storage>([2]) -> ([4], [5]);
drop<erc20::erc20::ERC20::total_supply::Storage>([5]) -> ();
storage_base_address_const<603278275252936218847294002513349627170936020082667936993356353388973422646>() -> ([6]);
u32_const<0>() -> ([7]);
store_temp<GasBuiltin>([0]) -> ([11]);
store_temp<System>([1]) -> ([12]);
store_temp<u32>([7]) -> ([13]);
store_temp<StorageBaseAddress>([6]) -> ([14]);
store_temp<core::integer::u256>([3]) -> ([15]);
function_call<user@core::integer::StorageAccessu256::write>([11], [12], [13], [14], [15]) -> ([8], [9], [10]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([10]) -> ([17]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([17]) -> ([16]);
enum_match<core::PanicResult::<((),)>>([16]) { fallthrough([18]) 3841([19]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([18]) -> ([20]);
struct_construct<Tuple<erc20::erc20::ERC20::total_supply::Storage, Unit>>([4], [20]) -> ([21]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>, 0>([21]) -> ([22]);
store_temp<GasBuiltin>([8]) -> ([23]);
store_temp<System>([9]) -> ([24]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
drop<erc20::erc20::ERC20::total_supply::Storage>([4]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>, 1>([19]) -> ([26]);
store_temp<GasBuiltin>([8]) -> ([27]);
store_temp<System>([9]) -> ([28]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>>([26]) -> ([29]);
return([27], [28], [29]);
dup<erc20::erc20::ERC20::balances::Storage>([4]) -> ([7], [8]);
store_temp<RangeCheck>([0]) -> ([12]);
store_temp<Pedersen>([2]) -> ([13]);
store_temp<erc20::erc20::ERC20::balances::Storage>([8]) -> ([14]);
store_temp<ContractAddress>([5]) -> ([15]);
function_call<user@erc20::erc20::ERC20::balances::InternalStorageImpl::address>([12], [13], [14], [15]) -> ([9], [10], [11]);
u32_const<0>() -> ([16]);
store_temp<GasBuiltin>([1]) -> ([20]);
store_temp<System>([3]) -> ([21]);
store_temp<u32>([16]) -> ([22]);
store_temp<StorageBaseAddress>([11]) -> ([23]);
store_temp<core::integer::u256>([6]) -> ([24]);
function_call<user@core::integer::StorageAccessu256::write>([20], [21], [22], [23], [24]) -> ([17], [18], [19]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([26]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([26]) -> ([25]);
enum_match<core::PanicResult::<((),)>>([25]) { fallthrough([27]) 3874([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([27]) -> ([29]);
struct_construct<Tuple<erc20::erc20::ERC20::balances::Storage, Unit>>([7], [29]) -> ([30]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>, 0>([30]) -> ([31]);
store_temp<RangeCheck>([9]) -> ([32]);
store_temp<GasBuiltin>([17]) -> ([33]);
store_temp<Pedersen>([10]) -> ([34]);
store_temp<System>([18]) -> ([35]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>([31]) -> ([36]);
return([32], [33], [34], [35], [36]);
branch_align() -> ();
drop<erc20::erc20::ERC20::balances::Storage>([7]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>, 1>([28]) -> ([37]);
store_temp<RangeCheck>([9]) -> ([38]);
store_temp<GasBuiltin>([17]) -> ([39]);
store_temp<Pedersen>([10]) -> ([40]);
store_temp<System>([18]) -> ([41]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>>([37]) -> ([42]);
return([38], [39], [40], [41], [42]);
array_new<felt252>() -> ([4]);
array_new<felt252>() -> ([5]);
dup<erc20::erc20::ERC20::Event>([3]) -> ([6], [7]);
drop<erc20::erc20::ERC20::Event>([6]) -> ();
store_temp<erc20::erc20::ERC20::Event>([7]) -> ([11]);
store_temp<Array<felt252>>([4]) -> ([12]);
store_temp<Array<felt252>>([5]) -> ([13]);
function_call<user@erc20::erc20::ERC20::EventIsEvent::append_keys_and_values>([11], [12], [13]) -> ([8], [9], [10]);
drop<Unit>([10]) -> ();
snapshot_take<Array<felt252>>([8]) -> ([14], [15]);
drop<Array<felt252>>([14]) -> ();
struct_construct<core::array::Span::<core::felt252>>([15]) -> ([16]);
snapshot_take<Array<felt252>>([9]) -> ([17], [18]);
drop<Array<felt252>>([17]) -> ();
struct_construct<core::array::Span::<core::felt252>>([18]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([16]) -> ([16]);
store_temp<core::array::Span::<core::felt252>>([19]) -> ([19]);
emit_event_syscall([0], [1], [16], [19]) { fallthrough([20], [21]) 3908([22], [23], [24]) };
branch_align() -> ();
struct_construct<Unit>() -> ([25]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([25]) -> ([26]);
store_temp<GasBuiltin>([20]) -> ([27]);
store_temp<System>([21]) -> ([28]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([26]) -> ([29]);
jump() { 3913() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([24]) -> ([30]);
store_temp<GasBuiltin>([22]) -> ([27]);
store_temp<System>([23]) -> ([28]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([30]) -> ([29]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([29]) -> ([32]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([32]) -> ([31]);
enum_match<core::PanicResult::<((),)>>([31]) { fallthrough([33]) 3924([34]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([33]) -> ([35]);
struct_construct<Tuple<erc20::erc20::ERC20::Storage, Unit>>([2], [35]) -> ([36]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 0>([36]) -> ([37]);
store_temp<GasBuiltin>([27]) -> ([38]);
store_temp<System>([28]) -> ([39]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([37]) -> ([40]);
return([38], [39], [40]);
branch_align() -> ();
drop<erc20::erc20::ERC20::Storage>([2]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>, 1>([34]) -> ([41]);
store_temp<GasBuiltin>([27]) -> ([42]);
store_temp<System>([28]) -> ([43]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>>([41]) -> ([44]);
return([42], [43], [44]);
enum_match<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 3937([2]) };
branch_align() -> ();
struct_construct<Tuple<felt252>>([1]) -> ([3]);
enum_init<core::PanicResult::<(core::felt252,)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<(core::felt252,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
struct_construct<core::Panic>() -> ([6]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([6], [2]) -> ([7]);
enum_init<core::PanicResult::<(core::felt252,)>, 1>([7]) -> ([8]);
store_temp<core::PanicResult::<(core::felt252,)>>([8]) -> ([9]);
return([9]);
storage_address_from_base([4]) -> ([5]);
storage_read_syscall([1], [2], [3], [5]) { fallthrough([6], [7], [8]) 3975([9], [10], [11]) };
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<felt252>([8]) -> ([15]);
function_call<user@core::integer::Felt252TryIntoU8::try_into>([14], [15]) -> ([12], [13]);
store_temp<GasBuiltin>([6]) -> ([6]);
store_temp<System>([7]) -> ([7]);
enum_match<core::option::Option::<core::integer::u8>>([13]) { fallthrough([16]) 3961([17]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 0>([16]) -> ([18]);
struct_construct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>([18]) -> ([19]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 0>([19]) -> ([20]);
store_temp<RangeCheck>([12]) -> ([21]);
store_temp<GasBuiltin>([6]) -> ([22]);
store_temp<System>([7]) -> ([23]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>([20]) -> ([24]);
return([21], [22], [23], [24]);
branch_align() -> ();
drop<Unit>([17]) -> ();
array_new<felt252>() -> ([25]);
felt252_const<2046306368138969050899942931452836379425163887498684822840>() -> ([26]);
store_temp<felt252>([26]) -> ([26]);
array_append<felt252>([25], [26]) -> ([27]);
struct_construct<core::Panic>() -> ([28]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([28], [27]) -> ([29]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 1>([29]) -> ([30]);
store_temp<RangeCheck>([12]) -> ([31]);
store_temp<GasBuiltin>([6]) -> ([32]);
store_temp<System>([7]) -> ([33]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>([30]) -> ([34]);
return([31], [32], [33], [34]);
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 1>([11]) -> ([35]);
struct_construct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>([35]) -> ([36]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 0>([36]) -> ([37]);
store_temp<RangeCheck>([0]) -> ([38]);
store_temp<GasBuiltin>([9]) -> ([39]);
store_temp<System>([10]) -> ([40]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>([37]) -> ([41]);
return([38], [39], [40], [41]);
enum_match<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 3990([2]) };
branch_align() -> ();
struct_construct<Tuple<u8>>([1]) -> ([3]);
enum_init<core::PanicResult::<(core::integer::u8,)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
struct_construct<core::Panic>() -> ([6]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([6], [2]) -> ([7]);
enum_init<core::PanicResult::<(core::integer::u8,)>, 1>([7]) -> ([8]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([8]) -> ([9]);
return([9]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([2]) -> ([11]);
dup<u32>([3]) -> ([3], [12]);
store_temp<u32>([12]) -> ([12]);
dup<StorageBaseAddress>([4]) -> ([4], [13]);
store_temp<StorageBaseAddress>([13]) -> ([13]);
function_call<user@core::starknet::storage_access::StorageAccessU128::read>([9], [10], [11], [12], [13]) -> ([5], [6], [7], [8]);
enum_match<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>([8]) { fallthrough([14]) 4066([15]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>([14]) -> ([16]);
enum_match<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>([16]) { fallthrough([17]) 4055([18]) };
branch_align() -> ();
u8_const<1>() -> ([19]);
storage_address_from_base_and_offset([4], [19]) -> ([20]);
store_temp<StorageAddress>([20]) -> ([20]);
storage_read_syscall([6], [7], [3], [20]) { fallthrough([21], [22], [23]) 4045([24], [25], [26]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([29]);
store_temp<felt252>([23]) -> ([30]);
function_call<user@core::integer::u128_try_from_felt252>([29], [30]) -> ([27], [28]);
store_temp<GasBuiltin>([21]) -> ([21]);
store_temp<System>([22]) -> ([22]);
enum_match<core::option::Option::<core::integer::u128>>([28]) { fallthrough([31]) 4030([32]) };
branch_align() -> ();
struct_construct<core::integer::u256>([17], [31]) -> ([33]);
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0>([33]) -> ([34]);
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([34]) -> ([35]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([35]) -> ([36]);
store_temp<RangeCheck>([27]) -> ([37]);
store_temp<GasBuiltin>([21]) -> ([38]);
store_temp<System>([22]) -> ([39]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([36]) -> ([40]);
return([37], [38], [39], [40]);
branch_align() -> ();
drop<Unit>([32]) -> ();
drop<u128>([17]) -> ();
array_new<felt252>() -> ([41]);
felt252_const<8788818928753408456771414258856301875522769902639082522293830758968>() -> ([42]);
store_temp<felt252>([42]) -> ([42]);
array_append<felt252>([41], [42]) -> ([43]);
struct_construct<core::Panic>() -> ([44]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([44], [43]) -> ([45]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>([45]) -> ([46]);
store_temp<RangeCheck>([27]) -> ([47]);
store_temp<GasBuiltin>([21]) -> ([48]);
store_temp<System>([22]) -> ([49]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([46]) -> ([50]);
return([47], [48], [49], [50]);
branch_align() -> ();
drop<u128>([17]) -> ();
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>([26]) -> ([51]);
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([51]) -> ([52]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([52]) -> ([53]);
store_temp<RangeCheck>([5]) -> ([54]);
store_temp<GasBuiltin>([24]) -> ([55]);
store_temp<System>([25]) -> ([56]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([53]) -> ([57]);
return([54], [55], [56], [57]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>([18]) -> ([58]);
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([58]) -> ([59]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([59]) -> ([60]);
store_temp<RangeCheck>([5]) -> ([61]);
store_temp<GasBuiltin>([6]) -> ([62]);
store_temp<System>([7]) -> ([63]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([60]) -> ([64]);
return([61], [62], [63], [64]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>([15]) -> ([65]);
store_temp<RangeCheck>([5]) -> ([66]);
store_temp<GasBuiltin>([6]) -> ([67]);
store_temp<System>([7]) -> ([68]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([65]) -> ([69]);
return([66], [67], [68], [69]);
enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 4081([2]) };
branch_align() -> ();
struct_construct<Tuple<core::integer::u256>>([1]) -> ([3]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
struct_construct<core::Panic>() -> ([6]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([6], [2]) -> ([7]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([7]) -> ([8]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([8]) -> ([9]);
return([9]);
drop<erc20::erc20::ERC20::balances::Storage>([2]) -> ();
felt252_const<1065622543624526936256554561967983185612257046533136611876836524258158810564>() -> ([4]);
store_temp<Pedersen>([1]) -> ([7]);
store_temp<felt252>([4]) -> ([8]);
store_temp<ContractAddress>([3]) -> ([9]);
function_call<user@core::hash::LegacyHashContractAddress::hash>([7], [8], [9]) -> ([5], [6]);
storage_base_address_from_felt252([0], [6]) -> ([10], [11]);
store_temp<RangeCheck>([10]) -> ([12]);
store_temp<Pedersen>([5]) -> ([13]);
store_temp<StorageBaseAddress>([11]) -> ([14]);
return([12], [13], [14]);
drop<erc20::erc20::ERC20::allowances::Storage>([2]) -> ();
felt252_const<337994139936370667767799129369552596157394447336989834104582481799883947719>() -> ([4]);
store_temp<Pedersen>([1]) -> ([7]);
store_temp<felt252>([4]) -> ([8]);
store_temp<Tuple<ContractAddress, ContractAddress>>([3]) -> ([9]);
function_call<user@core::hash::TupleSize2LegacyHash::<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress, core::hash::LegacyHashContractAddress, core::hash::LegacyHashContractAddress, core::starknet::contract_address::ContractAddressDrop, core::starknet::contract_address::ContractAddressDrop>::hash>([7], [8], [9]) -> ([5], [6]);
storage_base_address_from_felt252([0], [6]) -> ([10], [11]);
store_temp<RangeCheck>([10]) -> ([12]);
store_temp<Pedersen>([5]) -> ([13]);
store_temp<StorageBaseAddress>([11]) -> ([14]);
return([12], [13], [14]);
u128s_from_felt252([0], [1]) { fallthrough([2], [3]) 4115([4], [5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([3]) -> ([7]);
store_temp<RangeCheck>([2]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 4122() };
branch_align() -> ();
struct_construct<Tuple<u128, u128>>([5], [6]) -> ([10]);
drop<Tuple<u128, u128>>([10]) -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::option::Option::<core::integer::u128>, 1>([11]) -> ([12]);
store_temp<RangeCheck>([4]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([12]) -> ([9]);
rename<RangeCheck>([8]) -> ([13]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([14]);
return([13], [14]);
get_execution_info_syscall([0], [1]) { fallthrough([2], [3], [4]) 4132([5], [6], [7]) };
branch_align() -> ();
enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 0>([4]) -> ([8]);
store_temp<GasBuiltin>([2]) -> ([9]);
store_temp<System>([3]) -> ([10]);
store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([8]) -> ([11]);
jump() { 4137() };
branch_align() -> ();
enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 1>([7]) -> ([12]);
store_temp<GasBuiltin>([5]) -> ([9]);
store_temp<System>([6]) -> ([10]);
store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([12]) -> ([11]);
rename<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([11]) -> ([14]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::box::Box::<core::starknet::info::ExecutionInfo>>::unwrap_syscall>([14]) -> ([13]);
enum_match<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([13]) { fallthrough([15]) 4148([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([15]) -> ([17]);
struct_construct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 0>([18]) -> ([19]);
store_temp<GasBuiltin>([9]) -> ([20]);
store_temp<System>([10]) -> ([21]);
store_temp<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([19]) -> ([22]);
return([20], [21], [22]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 1>([16]) -> ([23]);
store_temp<GasBuiltin>([9]) -> ([24]);
store_temp<System>([10]) -> ([25]);
store_temp<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([23]) -> ([26]);
return([24], [25], [26]);
dup<erc20::erc20::ERC20::allowances::Storage>([4]) -> ([7], [8]);
store_temp<RangeCheck>([0]) -> ([12]);
store_temp<Pedersen>([2]) -> ([13]);
store_temp<erc20::erc20::ERC20::allowances::Storage>([8]) -> ([14]);
store_temp<Tuple<ContractAddress, ContractAddress>>([5]) -> ([15]);
function_call<user@erc20::erc20::ERC20::allowances::InternalStorageImpl::address>([12], [13], [14], [15]) -> ([9], [10], [11]);
u32_const<0>() -> ([16]);
store_temp<GasBuiltin>([1]) -> ([20]);
store_temp<System>([3]) -> ([21]);
store_temp<u32>([16]) -> ([22]);
store_temp<StorageBaseAddress>([11]) -> ([23]);
store_temp<core::integer::u256>([6]) -> ([24]);
function_call<user@core::integer::StorageAccessu256::write>([20], [21], [22], [23], [24]) -> ([17], [18], [19]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([26]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([26]) -> ([25]);
enum_match<core::PanicResult::<((),)>>([25]) { fallthrough([27]) 4180([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([27]) -> ([29]);
struct_construct<Tuple<erc20::erc20::ERC20::allowances::Storage, Unit>>([7], [29]) -> ([30]);
enum_init<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>, 0>([30]) -> ([31]);
store_temp<RangeCheck>([9]) -> ([32]);
store_temp<GasBuiltin>([17]) -> ([33]);
store_temp<Pedersen>([10]) -> ([34]);
store_temp<System>([18]) -> ([35]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>>([31]) -> ([36]);
return([32], [33], [34], [35], [36]);
branch_align() -> ();
drop<erc20::erc20::ERC20::allowances::Storage>([7]) -> ();
enum_init<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>, 1>([28]) -> ([37]);
store_temp<RangeCheck>([9]) -> ([38]);
store_temp<GasBuiltin>([17]) -> ([39]);
store_temp<Pedersen>([10]) -> ([40]);
store_temp<System>([18]) -> ([41]);
store_temp<core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>>([37]) -> ([42]);
return([38], [39], [40], [41], [42]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_overflowing_add>([5], [6], [7]) -> ([3], [4]);
struct_deconstruct<Tuple<core::integer::u256, core::bool>>([4]) -> ([8], [9]);
enum_match<core::bool>([9]) { fallthrough([10]) 4200([11]) };
branch_align() -> ();
drop<Unit>([10]) -> ();
enum_init<core::option::Option::<core::integer::u256>, 0>([8]) -> ([12]);
store_temp<core::option::Option::<core::integer::u256>>([12]) -> ([13]);
jump() { 4206() };
branch_align() -> ();
drop<Unit>([11]) -> ();
drop<core::integer::u256>([8]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::option::Option::<core::integer::u256>, 1>([14]) -> ([15]);
store_temp<core::option::Option::<core::integer::u256>>([15]) -> ([13]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::option::Option::<core::integer::u256>>([13]) -> ([17]);
return([16], [17]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_overflow_sub>([5], [6], [7]) -> ([3], [4]);
struct_deconstruct<Tuple<core::integer::u256, core::bool>>([4]) -> ([8], [9]);
enum_match<core::bool>([9]) { fallthrough([10]) 4220([11]) };
branch_align() -> ();
drop<Unit>([10]) -> ();
enum_init<core::option::Option::<core::integer::u256>, 0>([8]) -> ([12]);
store_temp<core::option::Option::<core::integer::u256>>([12]) -> ([13]);
jump() { 4226() };
branch_align() -> ();
drop<Unit>([11]) -> ();
drop<core::integer::u256>([8]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::option::Option::<core::integer::u256>, 1>([14]) -> ([15]);
store_temp<core::option::Option::<core::integer::u256>>([15]) -> ([13]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::option::Option::<core::integer::u256>>([13]) -> ([17]);
return([16], [17]);
enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 4235([2]) };
branch_align() -> ();
struct_construct<Tuple<Unit>>([1]) -> ([3]);
enum_init<core::PanicResult::<((),)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<((),)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
struct_construct<core::Panic>() -> ([6]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([6], [2]) -> ([7]);
enum_init<core::PanicResult::<((),)>, 1>([7]) -> ([8]);
store_temp<core::PanicResult::<((),)>>([8]) -> ([9]);
return([9]);
struct_deconstruct<core::integer::u256>([4]) -> ([5], [6]);
u128_to_felt252([5]) -> ([7]);
dup<StorageBaseAddress>([3]) -> ([3], [9]);
storage_address_from_base([9]) -> ([8]);
dup<u32>([2]) -> ([2], [10]);
storage_write_syscall([0], [1], [10], [8], [7]) { fallthrough([11], [12]) 4267([13], [14], [15]) };
branch_align() -> ();
u128_to_felt252([6]) -> ([16]);
u8_const<1>() -> ([17]);
storage_address_from_base_and_offset([3], [17]) -> ([18]);
store_temp<GasBuiltin>([11]) -> ([11]);
store_temp<StorageAddress>([18]) -> ([18]);
storage_write_syscall([11], [12], [2], [18], [16]) { fallthrough([19], [20]) 4261([21], [22], [23]) };
branch_align() -> ();
struct_construct<Unit>() -> ([24]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([24]) -> ([25]);
store_temp<GasBuiltin>([19]) -> ([26]);
store_temp<System>([20]) -> ([27]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([25]) -> ([28]);
return([26], [27], [28]);
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([23]) -> ([29]);
store_temp<GasBuiltin>([21]) -> ([30]);
store_temp<System>([22]) -> ([31]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([29]) -> ([32]);
return([30], [31], [32]);
branch_align() -> ();
drop<StorageBaseAddress>([3]) -> ();
drop<u128>([6]) -> ();
drop<u32>([2]) -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([15]) -> ([33]);
store_temp<GasBuiltin>([13]) -> ([34]);
store_temp<System>([14]) -> ([35]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([33]) -> ([36]);
return([34], [35], [36]);
enum_match<erc20::erc20::ERC20::Event>([0]) { fallthrough([3]) 4289([4]) };
branch_align() -> ();
felt252_const<271746229759260285552388728919865295615886751538523744128730118297934206697>() -> ([5]);
store_temp<felt252>([5]) -> ([5]);
array_append<felt252>([1], [5]) -> ([6]);
store_temp<erc20::erc20::ERC20::Transfer>([3]) -> ([10]);
store_temp<Array<felt252>>([6]) -> ([11]);
store_temp<Array<felt252>>([2]) -> ([12]);
function_call<user@erc20::erc20::ERC20::TransferIsEvent::append_keys_and_values>([10], [11], [12]) -> ([7], [8], [9]);
drop<Unit>([9]) -> ();
store_temp<Array<felt252>>([7]) -> ([13]);
store_temp<Array<felt252>>([8]) -> ([14]);
jump() { 4300() };
branch_align() -> ();
felt252_const<544914742286571513055574265148471203182105283038408585630116262969508767999>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
array_append<felt252>([1], [15]) -> ([16]);
store_temp<erc20::erc20::ERC20::Approval>([4]) -> ([20]);
store_temp<Array<felt252>>([16]) -> ([21]);
store_temp<Array<felt252>>([2]) -> ([22]);
function_call<user@erc20::erc20::ERC20::ApprovalIsEvent::append_keys_and_values>([20], [21], [22]) -> ([17], [18], [19]);
drop<Unit>([19]) -> ();
store_temp<Array<felt252>>([17]) -> ([13]);
store_temp<Array<felt252>>([18]) -> ([14]);
struct_construct<Unit>() -> ([23]);
rename<Array<felt252>>([13]) -> ([24]);
rename<Array<felt252>>([14]) -> ([25]);
store_temp<Unit>([23]) -> ([26]);
return([24], [25], [26]);
storage_address_from_base([4]) -> ([5]);
storage_read_syscall([1], [2], [3], [5]) { fallthrough([6], [7], [8]) 4337([9], [10], [11]) };
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<felt252>([8]) -> ([15]);
function_call<user@core::integer::u128_try_from_felt252>([14], [15]) -> ([12], [13]);
store_temp<GasBuiltin>([6]) -> ([6]);
store_temp<System>([7]) -> ([7]);
enum_match<core::option::Option::<core::integer::u128>>([13]) { fallthrough([16]) 4323([17]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 0>([16]) -> ([18]);
struct_construct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>([18]) -> ([19]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 0>([19]) -> ([20]);
store_temp<RangeCheck>([12]) -> ([21]);
store_temp<GasBuiltin>([6]) -> ([22]);
store_temp<System>([7]) -> ([23]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>([20]) -> ([24]);
return([21], [22], [23], [24]);
branch_align() -> ();
drop<Unit>([17]) -> ();
array_new<felt252>() -> ([25]);
felt252_const<8788818928753408456771414258856301875522769902639082522293830758968>() -> ([26]);
store_temp<felt252>([26]) -> ([26]);
array_append<felt252>([25], [26]) -> ([27]);
struct_construct<core::Panic>() -> ([28]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([28], [27]) -> ([29]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 1>([29]) -> ([30]);
store_temp<RangeCheck>([12]) -> ([31]);
store_temp<GasBuiltin>([6]) -> ([32]);
store_temp<System>([7]) -> ([33]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>([30]) -> ([34]);
return([31], [32], [33], [34]);
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 1>([11]) -> ([35]);
struct_construct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>([35]) -> ([36]);
enum_init<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 0>([36]) -> ([37]);
store_temp<RangeCheck>([0]) -> ([38]);
store_temp<GasBuiltin>([9]) -> ([39]);
store_temp<System>([10]) -> ([40]);
store_temp<core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>([37]) -> ([41]);
return([38], [39], [40], [41]);
contract_address_to_felt252([2]) -> ([3]);
pedersen([0], [1], [3]) -> ([4], [5]);
store_temp<Pedersen>([4]) -> ([6]);
store_temp<felt252>([5]) -> ([7]);
return([6], [7]);
struct_deconstruct<Tuple<ContractAddress, ContractAddress>>([2]) -> ([3], [4]);
store_temp<Pedersen>([0]) -> ([7]);
store_temp<felt252>([1]) -> ([8]);
store_temp<ContractAddress>([3]) -> ([9]);
function_call<user@core::hash::LegacyHashContractAddress::hash>([7], [8], [9]) -> ([5], [6]);
rename<Pedersen>([5]) -> ([12]);
rename<felt252>([6]) -> ([13]);
store_temp<ContractAddress>([4]) -> ([14]);
function_call<user@core::hash::LegacyHashContractAddress::hash>([12], [13], [14]) -> ([10], [11]);
rename<Pedersen>([10]) -> ([15]);
rename<felt252>([11]) -> ([16]);
return([15], [16]);
enum_match<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 4369([2]) };
branch_align() -> ();
struct_construct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([1]) -> ([3]);
enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
struct_construct<core::Panic>() -> ([6]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([6], [2]) -> ([7]);
enum_init<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 1>([7]) -> ([8]);
store_temp<core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([8]) -> ([9]);
return([9]);
struct_deconstruct<core::integer::u256>([1]) -> ([3], [4]);
struct_deconstruct<core::integer::u256>([2]) -> ([5], [6]);
u128_overflowing_add([0], [4], [6]) { fallthrough([7], [8]) 4385([9], [10]) };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
struct_construct<Tuple<u128, core::bool>>([8], [12]) -> ([13]);
store_temp<RangeCheck>([7]) -> ([14]);
store_temp<Tuple<u128, core::bool>>([13]) -> ([15]);
jump() { 4391() };
branch_align() -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 1>([16]) -> ([17]);
struct_construct<Tuple<u128, core::bool>>([10], [17]) -> ([18]);
store_temp<RangeCheck>([9]) -> ([14]);
store_temp<Tuple<u128, core::bool>>([18]) -> ([15]);
struct_deconstruct<Tuple<u128, core::bool>>([15]) -> ([19], [20]);
u128_overflowing_add([14], [3], [5]) { fallthrough([21], [22]) 4399([23], [24]) };
branch_align() -> ();
struct_construct<core::integer::u256>([22], [19]) -> ([25]);
struct_construct<Tuple<core::integer::u256, core::bool>>([25], [20]) -> ([26]);
store_temp<RangeCheck>([21]) -> ([27]);
store_temp<Tuple<core::integer::u256, core::bool>>([26]) -> ([28]);
jump() { 4419() };
branch_align() -> ();
u128_const<1>() -> ([29]);
store_temp<u128>([29]) -> ([29]);
u128_overflowing_add([23], [19], [29]) { fallthrough([30], [31]) 4409([32], [33]) };
branch_align() -> ();
struct_construct<core::integer::u256>([24], [31]) -> ([34]);
struct_construct<Tuple<core::integer::u256, core::bool>>([34], [20]) -> ([35]);
store_temp<RangeCheck>([30]) -> ([36]);
store_temp<Tuple<core::integer::u256, core::bool>>([35]) -> ([37]);
jump() { 4417() };
branch_align() -> ();
drop<core::bool>([20]) -> ();
struct_construct<core::integer::u256>([24], [33]) -> ([38]);
struct_construct<Unit>() -> ([39]);
enum_init<core::bool, 1>([39]) -> ([40]);
struct_construct<Tuple<core::integer::u256, core::bool>>([38], [40]) -> ([41]);
store_temp<RangeCheck>([32]) -> ([36]);
store_temp<Tuple<core::integer::u256, core::bool>>([41]) -> ([37]);
rename<RangeCheck>([36]) -> ([27]);
rename<Tuple<core::integer::u256, core::bool>>([37]) -> ([28]);
rename<RangeCheck>([27]) -> ([42]);
rename<Tuple<core::integer::u256, core::bool>>([28]) -> ([43]);
return([42], [43]);
struct_deconstruct<core::integer::u256>([1]) -> ([3], [4]);
struct_deconstruct<core::integer::u256>([2]) -> ([5], [6]);
u128_overflowing_sub([0], [4], [6]) { fallthrough([7], [8]) 4432([9], [10]) };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
struct_construct<Tuple<u128, core::bool>>([8], [12]) -> ([13]);
store_temp<RangeCheck>([7]) -> ([14]);
store_temp<Tuple<u128, core::bool>>([13]) -> ([15]);
jump() { 4438() };
branch_align() -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 1>([16]) -> ([17]);
struct_construct<Tuple<u128, core::bool>>([10], [17]) -> ([18]);
store_temp<RangeCheck>([9]) -> ([14]);
store_temp<Tuple<u128, core::bool>>([18]) -> ([15]);
struct_deconstruct<Tuple<u128, core::bool>>([15]) -> ([19], [20]);
u128_overflowing_sub([14], [3], [5]) { fallthrough([21], [22]) 4446([23], [24]) };
branch_align() -> ();
struct_construct<core::integer::u256>([22], [19]) -> ([25]);
struct_construct<Tuple<core::integer::u256, core::bool>>([25], [20]) -> ([26]);
store_temp<RangeCheck>([21]) -> ([27]);
store_temp<Tuple<core::integer::u256, core::bool>>([26]) -> ([28]);
jump() { 4466() };
branch_align() -> ();
u128_const<1>() -> ([29]);
store_temp<u128>([29]) -> ([29]);
u128_overflowing_sub([23], [19], [29]) { fallthrough([30], [31]) 4456([32], [33]) };
branch_align() -> ();
struct_construct<core::integer::u256>([24], [31]) -> ([34]);
struct_construct<Tuple<core::integer::u256, core::bool>>([34], [20]) -> ([35]);
store_temp<RangeCheck>([30]) -> ([36]);
store_temp<Tuple<core::integer::u256, core::bool>>([35]) -> ([37]);
jump() { 4464() };
branch_align() -> ();
drop<core::bool>([20]) -> ();
struct_construct<core::integer::u256>([24], [33]) -> ([38]);
struct_construct<Unit>() -> ([39]);
enum_init<core::bool, 1>([39]) -> ([40]);
struct_construct<Tuple<core::integer::u256, core::bool>>([38], [40]) -> ([41]);
store_temp<RangeCheck>([32]) -> ([36]);
store_temp<Tuple<core::integer::u256, core::bool>>([41]) -> ([37]);
rename<RangeCheck>([36]) -> ([27]);
rename<Tuple<core::integer::u256, core::bool>>([37]) -> ([28]);
rename<RangeCheck>([27]) -> ([42]);
rename<Tuple<core::integer::u256, core::bool>>([28]) -> ([43]);
return([42], [43]);
dup<erc20::erc20::ERC20::Transfer>([0]) -> ([0], [3]);
struct_deconstruct<erc20::erc20::ERC20::Transfer>([3]) -> ([4], [5], [6]);
drop<ContractAddress>([5]) -> ();
drop<core::integer::u256>([6]) -> ();
store_temp<ContractAddress>([4]) -> ([9]);
store_temp<Array<felt252>>([2]) -> ([10]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>([9], [10]) -> ([7], [8]);
drop<Unit>([8]) -> ();
dup<erc20::erc20::ERC20::Transfer>([0]) -> ([0], [11]);
struct_deconstruct<erc20::erc20::ERC20::Transfer>([11]) -> ([12], [13], [14]);
drop<ContractAddress>([12]) -> ();
drop<core::integer::u256>([14]) -> ();
store_temp<ContractAddress>([13]) -> ([17]);
store_temp<Array<felt252>>([7]) -> ([18]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>([17], [18]) -> ([15], [16]);
drop<Unit>([16]) -> ();
struct_deconstruct<erc20::erc20::ERC20::Transfer>([0]) -> ([19], [20], [21]);
drop<ContractAddress>([19]) -> ();
drop<ContractAddress>([20]) -> ();
store_temp<core::integer::u256>([21]) -> ([24]);
store_temp<Array<felt252>>([15]) -> ([25]);
function_call<user@core::integer::u256Serde::serialize>([24], [25]) -> ([22], [23]);
drop<Unit>([23]) -> ();
struct_construct<Unit>() -> ([26]);
store_temp<Array<felt252>>([1]) -> ([27]);
store_temp<Array<felt252>>([22]) -> ([28]);
store_temp<Unit>([26]) -> ([29]);
return([27], [28], [29]);
dup<erc20::erc20::ERC20::Approval>([0]) -> ([0], [3]);
struct_deconstruct<erc20::erc20::ERC20::Approval>([3]) -> ([4], [5], [6]);
drop<ContractAddress>([5]) -> ();
drop<core::integer::u256>([6]) -> ();
store_temp<ContractAddress>([4]) -> ([9]);
store_temp<Array<felt252>>([2]) -> ([10]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>([9], [10]) -> ([7], [8]);
drop<Unit>([8]) -> ();
dup<erc20::erc20::ERC20::Approval>([0]) -> ([0], [11]);
struct_deconstruct<erc20::erc20::ERC20::Approval>([11]) -> ([12], [13], [14]);
drop<ContractAddress>([12]) -> ();
drop<core::integer::u256>([14]) -> ();
store_temp<ContractAddress>([13]) -> ([17]);
store_temp<Array<felt252>>([7]) -> ([18]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>([17], [18]) -> ([15], [16]);
drop<Unit>([16]) -> ();
struct_deconstruct<erc20::erc20::ERC20::Approval>([0]) -> ([19], [20], [21]);
drop<ContractAddress>([19]) -> ();
drop<ContractAddress>([20]) -> ();
store_temp<core::integer::u256>([21]) -> ([24]);
store_temp<Array<felt252>>([15]) -> ([25]);
function_call<user@core::integer::u256Serde::serialize>([24], [25]) -> ([22], [23]);
drop<Unit>([23]) -> ();
struct_construct<Unit>() -> ([26]);
store_temp<Array<felt252>>([1]) -> ([27]);
store_temp<Array<felt252>>([22]) -> ([28]);
store_temp<Unit>([26]) -> ([29]);
return([27], [28], [29]);
rename<ContractAddress>([0]) -> ([2]);
contract_address_to_felt252([2]) -> ([3]);
dup<felt252>([3]) -> ([4], [5]);
drop<felt252>([4]) -> ();
store_temp<felt252>([5]) -> ([8]);
store_temp<Array<felt252>>([1]) -> ([9]);
function_call<user@core::Felt252Serde::serialize>([8], [9]) -> ([6], [7]);
drop<Unit>([7]) -> ();
struct_construct<Unit>() -> ([10]);
store_temp<Array<felt252>>([6]) -> ([11]);
store_temp<Unit>([10]) -> ([12]);
return([11], [12]);

erc20::erc20::ERC20::__external::get_name@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::get_symbol@117([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::get_decimals@234([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::get_total_supply@351([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::balance_of@468([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::allowance@616([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::transfer@790([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::transfer_from@955([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::approve@1147([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::increase_allowance@1312([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__external::decrease_allowance@1477([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::__constructor::constructor@1642([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
erc20::erc20::ERC20::IERC20Impl::get_name@1890([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::Storage) -> (GasBuiltin, System, core::PanicResult::<(core::felt252,)>);
core::Felt252Serde::serialize@1915([0]: felt252, [1]: Array<felt252>) -> (Array<felt252>, Unit);
core::starknet::use_system_implicit@1921([0]: System) -> (System, Unit);
erc20::erc20::ERC20::IERC20Impl::get_symbol@1925([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::Storage) -> (GasBuiltin, System, core::PanicResult::<(core::felt252,)>);
erc20::erc20::ERC20::IERC20Impl::get_decimals@1950([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: erc20::erc20::ERC20::Storage) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::integer::u8,)>);
core::integer::U8Serde::serialize@1978([0]: u8, [1]: Array<felt252>) -> (Array<felt252>, Unit);
erc20::erc20::ERC20::IERC20Impl::get_total_supply@1990([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: erc20::erc20::ERC20::Storage) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::integer::u256,)>);
core::integer::u256Serde::serialize@2018([0]: core::integer::u256, [1]: Array<felt252>) -> (Array<felt252>, Unit);
core::starknet::contract_address::ContractAddressSerde::deserialize@2033([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::starknet::contract_address::ContractAddress>);
erc20::erc20::ERC20::IERC20Impl::balance_of@2057([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(core::integer::u256,)>);
erc20::erc20::ERC20::IERC20Impl::allowance@2089([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(core::integer::u256,)>);
core::integer::u256Serde::deserialize@2122([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::integer::u256>);
erc20::erc20::ERC20::IERC20Impl::transfer@2151([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::IERC20Impl::transfer_from@2198([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: ContractAddress, [7]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::IERC20Impl::approve@2272([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::IERC20Impl::increase_allowance@2319([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::IERC20Impl::decrease_allowance@2422([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
core::Felt252Serde::deserialize@2525([0]: core::array::Span::<core::felt252>) -> (core::array::Span::<core::felt252>, core::option::Option::<core::felt252>);
core::integer::U8Serde::deserialize@2555([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::integer::u8>);
erc20::erc20::ERC20::constructor@2598([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: felt252, [6]: felt252, [7]: u8, [8]: core::integer::u256, [9]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::name::InternalStorageImpl::read@2804([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::name::Storage) -> (GasBuiltin, System, core::PanicResult::<(core::felt252,)>);
erc20::erc20::ERC20::symbol::InternalStorageImpl::read@2839([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::symbol::Storage) -> (GasBuiltin, System, core::PanicResult::<(core::felt252,)>);
erc20::erc20::ERC20::decimals::InternalStorageImpl::read@2874([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: erc20::erc20::ERC20::decimals::Storage) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::integer::u8,)>);
erc20::erc20::ERC20::total_supply::InternalStorageImpl::read@2912([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: erc20::erc20::ERC20::total_supply::Storage) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::integer::u256,)>);
core::integer::U128Serde::serialize@2950([0]: u128, [1]: Array<felt252>) -> (Array<felt252>, Unit);
erc20::erc20::ERC20::balances::InternalStorageImpl::read@2962([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::balances::Storage, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(core::integer::u256,)>);
erc20::erc20::ERC20::allowances::InternalStorageImpl::read@3006([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::allowances::Storage, [5]: Tuple<ContractAddress, ContractAddress>) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(core::integer::u256,)>);
core::integer::U128Serde::deserialize@3050([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::integer::u128>);
core::starknet::info::get_caller_address@3093([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::PanicResult::<(core::starknet::contract_address::ContractAddress,)>);
erc20::erc20::ERC20::StorageImpl::transfer_helper@3117([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: ContractAddress, [7]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::StorageImpl::spend_allowance@3397([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: ContractAddress, [7]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
erc20::erc20::ERC20::StorageImpl::approve_helper@3541([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::Storage, [5]: ContractAddress, [6]: ContractAddress, [7]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
core::integer::U256Add::add@3645([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::PanicResult::<(core::integer::u256,)>);
core::integer::U256Sub::sub@3668([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::PanicResult::<(core::integer::u256,)>);
core::integer::Felt252TryIntoU8::try_into@3691([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::option::Option::<core::integer::u8>);
erc20::erc20::ERC20::name::InternalStorageImpl::write@3705([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::name::Storage, [3]: felt252) -> (GasBuiltin, System, core::PanicResult::<(erc20::erc20::ERC20::name::Storage, ())>);
erc20::erc20::ERC20::symbol::InternalStorageImpl::write@3743([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::symbol::Storage, [3]: felt252) -> (GasBuiltin, System, core::PanicResult::<(erc20::erc20::ERC20::symbol::Storage, ())>);
erc20::erc20::ERC20::decimals::InternalStorageImpl::write@3781([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::decimals::Storage, [3]: u8) -> (GasBuiltin, System, core::PanicResult::<(erc20::erc20::ERC20::decimals::Storage, ())>);
erc20::erc20::ERC20::total_supply::InternalStorageImpl::write@3820([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::total_supply::Storage, [3]: core::integer::u256) -> (GasBuiltin, System, core::PanicResult::<(erc20::erc20::ERC20::total_supply::Storage, ())>);
erc20::erc20::ERC20::balances::InternalStorageImpl::write@3848([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::balances::Storage, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::balances::Storage, ())>);
erc20::erc20::ERC20::StorageEventEmitter::emit@3883([0]: GasBuiltin, [1]: System, [2]: erc20::erc20::ERC20::Storage, [3]: erc20::erc20::ERC20::Event) -> (GasBuiltin, System, core::PanicResult::<(erc20::erc20::ERC20::Storage, ())>);
core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall@3931([0]: core::result::Result::<core::felt252, core::array::Array::<core::felt252>>) -> (core::PanicResult::<(core::felt252,)>);
core::starknet::storage_access::StorageAccessU8::read@3943([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>);
core::starknet::SyscallResultTraitImpl::<core::integer::u8>::unwrap_syscall@3984([0]: core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>) -> (core::PanicResult::<(core::integer::u8,)>);
core::integer::StorageAccessu256::read@3996([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>);
core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall@4075([0]: core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>) -> (core::PanicResult::<(core::integer::u256,)>);
erc20::erc20::ERC20::balances::InternalStorageImpl::address@4087([0]: RangeCheck, [1]: Pedersen, [2]: erc20::erc20::ERC20::balances::Storage, [3]: ContractAddress) -> (RangeCheck, Pedersen, StorageBaseAddress);
erc20::erc20::ERC20::allowances::InternalStorageImpl::address@4098([0]: RangeCheck, [1]: Pedersen, [2]: erc20::erc20::ERC20::allowances::Storage, [3]: Tuple<ContractAddress, ContractAddress>) -> (RangeCheck, Pedersen, StorageBaseAddress);
core::integer::u128_try_from_felt252@4109([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::starknet::info::get_execution_info@4125([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>);
erc20::erc20::ERC20::allowances::InternalStorageImpl::write@4154([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: erc20::erc20::ERC20::allowances::Storage, [5]: Tuple<ContractAddress, ContractAddress>, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(erc20::erc20::ERC20::allowances::Storage, ())>);
core::integer::u256_checked_add@4189([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::option::Option::<core::integer::u256>);
core::integer::u256_checked_sub@4209([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::option::Option::<core::integer::u256>);
core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall@4229([0]: core::result::Result::<(), core::array::Array::<core::felt252>>) -> (core::PanicResult::<((),)>);
core::integer::StorageAccessu256::write@4241([0]: GasBuiltin, [1]: System, [2]: u32, [3]: StorageBaseAddress, [4]: core::integer::u256) -> (GasBuiltin, System, core::result::Result::<(), core::array::Array::<core::felt252>>);
erc20::erc20::ERC20::EventIsEvent::append_keys_and_values@4276([0]: erc20::erc20::ERC20::Event, [1]: Array<felt252>, [2]: Array<felt252>) -> (Array<felt252>, Array<felt252>, Unit);
core::starknet::storage_access::StorageAccessU128::read@4305([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>);
core::hash::LegacyHashContractAddress::hash@4346([0]: Pedersen, [1]: felt252, [2]: ContractAddress) -> (Pedersen, felt252);
core::hash::TupleSize2LegacyHash::<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress, core::hash::LegacyHashContractAddress, core::hash::LegacyHashContractAddress, core::starknet::contract_address::ContractAddressDrop, core::starknet::contract_address::ContractAddressDrop>::hash@4351([0]: Pedersen, [1]: felt252, [2]: Tuple<ContractAddress, ContractAddress>) -> (Pedersen, felt252);
core::starknet::SyscallResultTraitImpl::<core::box::Box::<core::starknet::info::ExecutionInfo>>::unwrap_syscall@4363([0]: core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>) -> (core::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>);
core::integer::u256_overflowing_add@4375([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, Tuple<core::integer::u256, core::bool>);
core::integer::u256_overflow_sub@4422([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, Tuple<core::integer::u256, core::bool>);
erc20::erc20::ERC20::TransferIsEvent::append_keys_and_values@4469([0]: erc20::erc20::ERC20::Transfer, [1]: Array<felt252>, [2]: Array<felt252>) -> (Array<felt252>, Array<felt252>, Unit);
erc20::erc20::ERC20::ApprovalIsEvent::append_keys_and_values@4497([0]: erc20::erc20::ERC20::Approval, [1]: Array<felt252>, [2]: Array<felt252>) -> (Array<felt252>, Array<felt252>, Unit);
core::starknet::contract_address::ContractAddressSerde::serialize@4525([0]: ContractAddress, [1]: Array<felt252>) -> (Array<felt252>, Unit);
