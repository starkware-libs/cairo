type RangeCheck = RangeCheck;
type Uninitialized<RangeCheck> = Uninitialized<RangeCheck>;
type felt = felt;
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]>;
type core::option::Option::<core::felt> = Enum<ut@[402588875001872815246525806586794691272347690189059305002372722184841346549], felt, Unit>;
type Uninitialized<core::option::Option::<core::felt>> = Uninitialized<core::option::Option::<core::felt>>;
type GasBuiltin = GasBuiltin;
type Uninitialized<GasBuiltin> = Uninitialized<GasBuiltin>;
type Array<felt> = Array<felt>;
type Snapshot<Array<felt>> = Snapshot<Array<felt>>;
type u32 = u32;
type core::bool = Enum<ut@[1428587981972971377690703480718106917688158670535227238524565791273937320306], Unit, Unit>;
type BuiltinCosts = BuiltinCosts;
type System = System;
type Tuple<felt> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], felt>;
type core::PanicResult::<(core::felt,)> = Enum<ut@[245793715668098038546118401883027280275881409426177909973086974098061614102], Tuple<felt>, Array<felt>>;
type Tuple<Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], Unit>;
type core::PanicResult::<((),)> = Enum<ut@[23370355241912226703375055216556194705277310207056017096530924163612291064], Tuple<Unit>, Array<felt>>;
type Tuple<Array<felt>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], Array<felt>>;
type core::PanicResult::<(core::array::Array::<core::felt>,)> = Enum<ut@[1039708868484410585646769549514331451885782840162913354010845720389909568309], Tuple<Array<felt>>, Array<felt>>;
type StorageBaseAddress = StorageBaseAddress;
type StorageAddress = StorageAddress;
type core::result::Result::<core::felt, core::array::Array::<core::felt>> = Enum<ut@[1775391202019154459836461443165096133047740358213622036106517721424732153731], felt, Array<felt>>;
type core::result::Result::<(), core::array::Array::<core::felt>> = Enum<ut@[1338826874705740002118790849304056283511837890906857531227651843417862643133], Unit, Array<felt>>;

libfunc alloc_local<RangeCheck> = alloc_local<RangeCheck>;
libfunc alloc_local<core::option::Option::<core::felt>> = alloc_local<core::option::Option::<core::felt>>;
libfunc alloc_local<GasBuiltin> = alloc_local<GasBuiltin>;
libfunc finalize_locals = finalize_locals;
libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc try_fetch_gas = try_fetch_gas;
libfunc branch_align = branch_align;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_local<GasBuiltin> = store_local<GasBuiltin>;
libfunc store_local<RangeCheck> = store_local<RangeCheck>;
libfunc array_pop_front<felt> = array_pop_front<felt>;
libfunc enum_init<core::option::Option::<core::felt>, 0> = enum_init<core::option::Option::<core::felt>, 0>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc store_temp<core::option::Option::<core::felt>> = store_temp<core::option::Option::<core::felt>>;
libfunc jump = jump;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::felt>, 1> = enum_init<core::option::Option::<core::felt>, 1>;
libfunc store_local<core::option::Option::<core::felt>> = store_local<core::option::Option::<core::felt>>;
libfunc enum_match<core::option::Option::<core::felt>> = enum_match<core::option::Option::<core::felt>>;
libfunc snapshot_take<Array<felt>> = snapshot_take<Array<felt>>;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc array_len<felt> = array_len<felt>;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc u32_eq = u32_eq;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc try_fetch_gas_all = try_fetch_gas_all;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc function_call<user@hello_starknet::hello_starknet::HelloStarknet::balance::read> = function_call<user@hello_starknet::hello_starknet::HelloStarknet::balance::read>;
libfunc enum_match<core::PanicResult::<(core::felt,)>> = enum_match<core::PanicResult::<(core::felt,)>>;
libfunc struct_deconstruct<Tuple<felt>> = struct_deconstruct<Tuple<felt>>;
libfunc felt_add = felt_add;
libfunc store_temp<felt> = store_temp<felt>;
libfunc function_call<user@hello_starknet::hello_starknet::HelloStarknet::balance::write> = function_call<user@hello_starknet::hello_starknet::HelloStarknet::balance::write>;
libfunc enum_match<core::PanicResult::<((),)>> = enum_match<core::PanicResult::<((),)>>;
libfunc struct_deconstruct<Tuple<Unit>> = struct_deconstruct<Tuple<Unit>>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::PanicResult::<((),)>, 0> = enum_init<core::PanicResult::<((),)>, 0>;
libfunc store_temp<core::PanicResult::<((),)>> = store_temp<core::PanicResult::<((),)>>;
libfunc enum_init<core::PanicResult::<((),)>, 1> = enum_init<core::PanicResult::<((),)>, 1>;
libfunc drop<felt> = drop<felt>;
libfunc array_new<felt> = array_new<felt>;
libfunc struct_construct<Tuple<Array<felt>>> = struct_construct<Tuple<Array<felt>>>;
libfunc enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 0> = enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>> = store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>;
libfunc enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1> = enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>;
libfunc drop<Uninitialized<RangeCheck>> = drop<Uninitialized<RangeCheck>>;
libfunc felt_const<375233589013918064796019> = felt_const<375233589013918064796019>;
libfunc array_append<felt> = array_append<felt>;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc felt_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc struct_deconstruct<Unit> = struct_deconstruct<Unit>;
libfunc felt_const<1979706721653833758925397712865600297316042839304765459608024204080243> = felt_const<1979706721653833758925397712865600297316042839304765459608024204080243>;
libfunc drop<Uninitialized<core::option::Option::<core::felt>>> = drop<Uninitialized<core::option::Option::<core::felt>>>;
libfunc drop<Uninitialized<GasBuiltin>> = drop<Uninitialized<GasBuiltin>>;
libfunc struct_construct<Tuple<felt>> = struct_construct<Tuple<felt>>;
libfunc enum_init<core::PanicResult::<(core::felt,)>, 0> = enum_init<core::PanicResult::<(core::felt,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::felt,)>> = store_temp<core::PanicResult::<(core::felt,)>>;
libfunc enum_init<core::PanicResult::<(core::felt,)>, 1> = enum_init<core::PanicResult::<(core::felt,)>, 1>;
libfunc function_call<user@core::serde::FeltSerde::serialize> = function_call<user@core::serde::FeltSerde::serialize>;
libfunc felt_const<0> = felt_const<0>;
libfunc storage_base_address_const<916907772491729262376534102982219947830828984996257231353398618781993312401> = storage_base_address_const<916907772491729262376534102982219947830828984996257231353398618781993312401>;
libfunc storage_address_from_base = storage_address_from_base;
libfunc store_temp<StorageAddress> = store_temp<StorageAddress>;
libfunc storage_read_syscall = storage_read_syscall;
libfunc enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 0> = enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 0>;
libfunc store_temp<core::result::Result::<core::felt, core::array::Array::<core::felt>>> = store_temp<core::result::Result::<core::felt, core::array::Array::<core::felt>>>;
libfunc enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 1> = enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 1>;
libfunc rename<core::result::Result::<core::felt, core::array::Array::<core::felt>>> = rename<core::result::Result::<core::felt, core::array::Array::<core::felt>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt>::unwrap_syscall>;
libfunc storage_write_syscall = storage_write_syscall;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt>>, 0> = enum_init<core::result::Result::<(), core::array::Array::<core::felt>>, 0>;
libfunc store_temp<core::result::Result::<(), core::array::Array::<core::felt>>> = store_temp<core::result::Result::<(), core::array::Array::<core::felt>>>;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt>>, 1> = enum_init<core::result::Result::<(), core::array::Array::<core::felt>>, 1>;
libfunc rename<core::result::Result::<(), core::array::Array::<core::felt>>> = rename<core::result::Result::<(), core::array::Array::<core::felt>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc enum_match<core::result::Result::<core::felt, core::array::Array::<core::felt>>> = enum_match<core::result::Result::<core::felt, core::array::Array::<core::felt>>>;
libfunc enum_match<core::result::Result::<(), core::array::Array::<core::felt>>> = enum_match<core::result::Result::<(), core::array::Array::<core::felt>>>;

alloc_local<RangeCheck>() -> ([5]);
alloc_local<core::option::Option::<core::felt>>() -> ([7]);
alloc_local<RangeCheck>() -> ([9]);
alloc_local<GasBuiltin>() -> ([11]);
finalize_locals() -> ();
revoke_ap_tracking() -> ();
try_fetch_gas([0], [1]) { fallthrough([8], [10]) 148([12], [13]) };
branch_align() -> ();
store_temp<RangeCheck>([8]) -> ([8]);
store_local<GasBuiltin>([11], [10]) -> ([10]);
store_local<RangeCheck>([9], [8]) -> ([8]);
array_pop_front<felt>([3]) { fallthrough([14], [15]) 17([16]) };
branch_align() -> ();
enum_init<core::option::Option::<core::felt>, 0>([15]) -> ([17]);
store_temp<Array<felt>>([14]) -> ([18]);
store_temp<core::option::Option::<core::felt>>([17]) -> ([6]);
jump() { 22() };
branch_align() -> ();
struct_construct<Unit>() -> ([19]);
enum_init<core::option::Option::<core::felt>, 1>([19]) -> ([20]);
store_temp<Array<felt>>([16]) -> ([18]);
store_temp<core::option::Option::<core::felt>>([20]) -> ([6]);
store_local<core::option::Option::<core::felt>>([7], [6]) -> ([6]);
enum_match<core::option::Option::<core::felt>>([6]) { fallthrough([21]) 134([22]) };
branch_align() -> ();
snapshot_take<Array<felt>>([18]) -> ([23], [24]);
drop<Array<felt>>([23]) -> ();
array_len<felt>([24]) -> ([25]);
u32_const<0>() -> ([26]);
store_temp<u32>([25]) -> ([25]);
u32_eq([25], [26]) { fallthrough() 36() };
branch_align() -> ();
struct_construct<Unit>() -> ([27]);
enum_init<core::bool, 0>([27]) -> ([28]);
store_temp<core::bool>([28]) -> ([29]);
jump() { 40() };
branch_align() -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::bool, 1>([30]) -> ([31]);
store_temp<core::bool>([31]) -> ([29]);
bool_not_impl([29]) -> ([32]);
store_temp<core::bool>([32]) -> ([32]);
enum_match<core::bool>([32]) { fallthrough([33]) 117([34]) };
branch_align() -> ();
drop<Unit>([33]) -> ();
get_builtin_costs() -> ([35]);
store_temp<BuiltinCosts>([35]) -> ([35]);
try_fetch_gas_all([8], [10], [35]) { fallthrough([4], [36]) 104([37], [38]) };
branch_align() -> ();
store_temp<GasBuiltin>([36]) -> ([42]);
store_temp<System>([2]) -> ([43]);
function_call<user@hello_starknet::hello_starknet::HelloStarknet::balance::read>([42], [43]) -> ([39], [40], [41]);
store_temp<RangeCheck>([4]) -> ([4]);
store_local<RangeCheck>([5], [4]) -> ([4]);
enum_match<core::PanicResult::<(core::felt,)>>([41]) { fallthrough([44]) 79([45]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt>>([44]) -> ([46]);
felt_add([46], [21]) -> ([47]);
store_temp<GasBuiltin>([39]) -> ([51]);
store_temp<System>([40]) -> ([52]);
store_temp<felt>([47]) -> ([53]);
function_call<user@hello_starknet::hello_starknet::HelloStarknet::balance::write>([51], [52], [53]) -> ([48], [49], [50]);
enum_match<core::PanicResult::<((),)>>([50]) { fallthrough([54]) 73([55]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([54]) -> ([56]);
drop<Unit>([56]) -> ();
struct_construct<Unit>() -> ([57]);
struct_construct<Tuple<Unit>>([57]) -> ([58]);
enum_init<core::PanicResult::<((),)>, 0>([58]) -> ([59]);
store_temp<GasBuiltin>([48]) -> ([60]);
store_temp<System>([49]) -> ([61]);
store_temp<core::PanicResult::<((),)>>([59]) -> ([62]);
jump() { 85() };
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([55]) -> ([63]);
store_temp<GasBuiltin>([48]) -> ([60]);
store_temp<System>([49]) -> ([61]);
store_temp<core::PanicResult::<((),)>>([63]) -> ([62]);
jump() { 85() };
branch_align() -> ();
drop<felt>([21]) -> ();
enum_init<core::PanicResult::<((),)>, 1>([45]) -> ([64]);
store_temp<GasBuiltin>([39]) -> ([60]);
store_temp<System>([40]) -> ([61]);
store_temp<core::PanicResult::<((),)>>([64]) -> ([62]);
enum_match<core::PanicResult::<((),)>>([62]) { fallthrough([65]) 97([66]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([65]) -> ([67]);
drop<Unit>([67]) -> ();
array_new<felt>() -> ([68]);
struct_construct<Tuple<Array<felt>>>([68]) -> ([69]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 0>([69]) -> ([70]);
store_temp<RangeCheck>([4]) -> ([71]);
store_temp<GasBuiltin>([60]) -> ([72]);
store_temp<System>([61]) -> ([73]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([70]) -> ([74]);
return([71], [72], [73], [74]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>([66]) -> ([75]);
store_temp<RangeCheck>([4]) -> ([76]);
store_temp<GasBuiltin>([60]) -> ([77]);
store_temp<System>([61]) -> ([78]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([75]) -> ([79]);
return([76], [77], [78], [79]);
branch_align() -> ();
drop<felt>([21]) -> ();
drop<Uninitialized<RangeCheck>>([5]) -> ();
array_new<felt>() -> ([80]);
felt_const<375233589013918064796019>() -> ([81]);
store_temp<felt>([81]) -> ([81]);
array_append<felt>([80], [81]) -> ([82]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>([82]) -> ([83]);
store_temp<RangeCheck>([37]) -> ([84]);
store_temp<GasBuiltin>([38]) -> ([85]);
store_temp<System>([2]) -> ([86]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([83]) -> ([87]);
return([84], [85], [86], [87]);
branch_align() -> ();
drop<Unit>([34]) -> ();
drop<felt>([21]) -> ();
drop<Uninitialized<RangeCheck>>([5]) -> ();
store_temp<System>([2]) -> ([90]);
function_call<user@core::starknet::use_system_implicit>([90]) -> ([88], [89]);
drop<Unit>([89]) -> ();
array_new<felt>() -> ([91]);
felt_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([92]);
store_temp<felt>([92]) -> ([92]);
array_append<felt>([91], [92]) -> ([93]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>([93]) -> ([94]);
store_temp<RangeCheck>([8]) -> ([95]);
store_temp<GasBuiltin>([10]) -> ([96]);
store_temp<System>([88]) -> ([97]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([94]) -> ([98]);
return([95], [96], [97], [98]);
branch_align() -> ();
drop<Array<felt>>([18]) -> ();
drop<Uninitialized<RangeCheck>>([5]) -> ();
struct_deconstruct<Unit>([22]) -> ();
array_new<felt>() -> ([99]);
felt_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([100]);
store_temp<felt>([100]) -> ([100]);
array_append<felt>([99], [100]) -> ([101]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>([101]) -> ([102]);
store_temp<RangeCheck>([8]) -> ([103]);
store_temp<GasBuiltin>([10]) -> ([104]);
store_temp<System>([2]) -> ([105]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([102]) -> ([106]);
return([103], [104], [105], [106]);
branch_align() -> ();
drop<Uninitialized<core::option::Option::<core::felt>>>([7]) -> ();
drop<Uninitialized<RangeCheck>>([5]) -> ();
drop<Array<felt>>([3]) -> ();
drop<Uninitialized<RangeCheck>>([9]) -> ();
drop<Uninitialized<GasBuiltin>>([11]) -> ();
array_new<felt>() -> ([107]);
felt_const<375233589013918064796019>() -> ([108]);
store_temp<felt>([108]) -> ([108]);
array_append<felt>([107], [108]) -> ([109]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>([109]) -> ([110]);
store_temp<RangeCheck>([12]) -> ([111]);
store_temp<GasBuiltin>([13]) -> ([112]);
store_temp<System>([2]) -> ([113]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([110]) -> ([114]);
return([111], [112], [113], [114]);
alloc_local<RangeCheck>() -> ([5]);
alloc_local<RangeCheck>() -> ([7]);
alloc_local<GasBuiltin>() -> ([9]);
finalize_locals() -> ();
revoke_ap_tracking() -> ();
try_fetch_gas([0], [1]) { fallthrough([6], [8]) 267([10], [11]) };
branch_align() -> ();
snapshot_take<Array<felt>>([3]) -> ([12], [13]);
drop<Array<felt>>([12]) -> ();
array_len<felt>([13]) -> ([14]);
u32_const<0>() -> ([15]);
store_temp<u32>([14]) -> ([14]);
store_temp<RangeCheck>([6]) -> ([6]);
store_local<GasBuiltin>([9], [8]) -> ([8]);
store_local<RangeCheck>([7], [6]) -> ([6]);
u32_eq([14], [15]) { fallthrough() 185() };
branch_align() -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 0>([16]) -> ([17]);
store_temp<core::bool>([17]) -> ([18]);
jump() { 189() };
branch_align() -> ();
struct_construct<Unit>() -> ([19]);
enum_init<core::bool, 1>([19]) -> ([20]);
store_temp<core::bool>([20]) -> ([18]);
bool_not_impl([18]) -> ([21]);
store_temp<core::bool>([21]) -> ([21]);
enum_match<core::bool>([21]) { fallthrough([22]) 251([23]) };
branch_align() -> ();
drop<Unit>([22]) -> ();
get_builtin_costs() -> ([24]);
store_temp<BuiltinCosts>([24]) -> ([24]);
try_fetch_gas_all([6], [8], [24]) { fallthrough([4], [25]) 239([26], [27]) };
branch_align() -> ();
store_temp<GasBuiltin>([25]) -> ([31]);
store_temp<System>([2]) -> ([32]);
function_call<user@hello_starknet::hello_starknet::HelloStarknet::balance::read>([31], [32]) -> ([28], [29], [30]);
store_temp<RangeCheck>([4]) -> ([4]);
store_local<RangeCheck>([5], [4]) -> ([4]);
enum_match<core::PanicResult::<(core::felt,)>>([30]) { fallthrough([33]) 212([34]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt>>([33]) -> ([35]);
struct_construct<Tuple<felt>>([35]) -> ([36]);
enum_init<core::PanicResult::<(core::felt,)>, 0>([36]) -> ([37]);
store_temp<GasBuiltin>([28]) -> ([38]);
store_temp<System>([29]) -> ([39]);
store_temp<core::PanicResult::<(core::felt,)>>([37]) -> ([40]);
jump() { 217() };
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt,)>, 1>([34]) -> ([41]);
store_temp<GasBuiltin>([28]) -> ([38]);
store_temp<System>([29]) -> ([39]);
store_temp<core::PanicResult::<(core::felt,)>>([41]) -> ([40]);
enum_match<core::PanicResult::<(core::felt,)>>([40]) { fallthrough([42]) 232([43]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt>>([42]) -> ([44]);
array_new<felt>() -> ([45]);
store_temp<Array<felt>>([45]) -> ([48]);
store_temp<felt>([44]) -> ([49]);
function_call<user@core::serde::FeltSerde::serialize>([48], [49]) -> ([46], [47]);
drop<Unit>([47]) -> ();
struct_construct<Tuple<Array<felt>>>([46]) -> ([50]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 0>([50]) -> ([51]);
store_temp<RangeCheck>([4]) -> ([52]);
store_temp<GasBuiltin>([38]) -> ([53]);
store_temp<System>([39]) -> ([54]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([51]) -> ([55]);
return([52], [53], [54], [55]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>([43]) -> ([56]);
store_temp<RangeCheck>([4]) -> ([57]);
store_temp<GasBuiltin>([38]) -> ([58]);
store_temp<System>([39]) -> ([59]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([56]) -> ([60]);
return([57], [58], [59], [60]);
branch_align() -> ();
drop<Uninitialized<RangeCheck>>([5]) -> ();
array_new<felt>() -> ([61]);
felt_const<375233589013918064796019>() -> ([62]);
store_temp<felt>([62]) -> ([62]);
array_append<felt>([61], [62]) -> ([63]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>([63]) -> ([64]);
store_temp<RangeCheck>([26]) -> ([65]);
store_temp<GasBuiltin>([27]) -> ([66]);
store_temp<System>([2]) -> ([67]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([64]) -> ([68]);
return([65], [66], [67], [68]);
branch_align() -> ();
drop<Unit>([23]) -> ();
drop<Uninitialized<RangeCheck>>([5]) -> ();
store_temp<System>([2]) -> ([71]);
function_call<user@core::starknet::use_system_implicit>([71]) -> ([69], [70]);
drop<Unit>([70]) -> ();
array_new<felt>() -> ([72]);
felt_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([73]);
store_temp<felt>([73]) -> ([73]);
array_append<felt>([72], [73]) -> ([74]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>([74]) -> ([75]);
store_temp<RangeCheck>([6]) -> ([76]);
store_temp<GasBuiltin>([8]) -> ([77]);
store_temp<System>([69]) -> ([78]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([75]) -> ([79]);
return([76], [77], [78], [79]);
branch_align() -> ();
drop<Uninitialized<RangeCheck>>([5]) -> ();
drop<Array<felt>>([3]) -> ();
drop<Uninitialized<RangeCheck>>([7]) -> ();
drop<Uninitialized<GasBuiltin>>([9]) -> ();
array_new<felt>() -> ([80]);
felt_const<375233589013918064796019>() -> ([81]);
store_temp<felt>([81]) -> ([81]);
array_append<felt>([80], [81]) -> ([82]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>([82]) -> ([83]);
store_temp<RangeCheck>([10]) -> ([84]);
store_temp<GasBuiltin>([11]) -> ([85]);
store_temp<System>([2]) -> ([86]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([83]) -> ([87]);
return([84], [85], [86], [87]);
felt_const<0>() -> ([2]);
storage_base_address_const<916907772491729262376534102982219947830828984996257231353398618781993312401>() -> ([3]);
storage_address_from_base([3]) -> ([4]);
store_temp<felt>([2]) -> ([2]);
store_temp<StorageAddress>([4]) -> ([4]);
storage_read_syscall([0], [1], [2], [4]) { fallthrough([5], [6], [7]) 294([8], [9], [10]) };
branch_align() -> ();
enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 0>([7]) -> ([11]);
store_temp<GasBuiltin>([5]) -> ([12]);
store_temp<System>([6]) -> ([13]);
store_temp<core::result::Result::<core::felt, core::array::Array::<core::felt>>>([11]) -> ([14]);
jump() { 299() };
branch_align() -> ();
enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 1>([10]) -> ([15]);
store_temp<GasBuiltin>([8]) -> ([12]);
store_temp<System>([9]) -> ([13]);
store_temp<core::result::Result::<core::felt, core::array::Array::<core::felt>>>([15]) -> ([14]);
rename<core::result::Result::<core::felt, core::array::Array::<core::felt>>>([14]) -> ([17]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt>::unwrap_syscall>([17]) -> ([16]);
enum_match<core::PanicResult::<(core::felt,)>>([16]) { fallthrough([18]) 310([19]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt>>([18]) -> ([20]);
struct_construct<Tuple<felt>>([20]) -> ([21]);
enum_init<core::PanicResult::<(core::felt,)>, 0>([21]) -> ([22]);
store_temp<GasBuiltin>([12]) -> ([23]);
store_temp<System>([13]) -> ([24]);
store_temp<core::PanicResult::<(core::felt,)>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt,)>, 1>([19]) -> ([26]);
store_temp<GasBuiltin>([12]) -> ([27]);
store_temp<System>([13]) -> ([28]);
store_temp<core::PanicResult::<(core::felt,)>>([26]) -> ([29]);
return([27], [28], [29]);
felt_const<0>() -> ([3]);
storage_base_address_const<916907772491729262376534102982219947830828984996257231353398618781993312401>() -> ([4]);
storage_address_from_base([4]) -> ([5]);
store_temp<felt>([3]) -> ([3]);
store_temp<StorageAddress>([5]) -> ([5]);
storage_write_syscall([0], [1], [3], [5], [2]) { fallthrough([6], [7]) 329([8], [9], [10]) };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt>>, 0>([11]) -> ([12]);
store_temp<GasBuiltin>([6]) -> ([13]);
store_temp<System>([7]) -> ([14]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt>>>([12]) -> ([15]);
jump() { 334() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt>>, 1>([10]) -> ([16]);
store_temp<GasBuiltin>([8]) -> ([13]);
store_temp<System>([9]) -> ([14]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt>>>([16]) -> ([15]);
rename<core::result::Result::<(), core::array::Array::<core::felt>>>([15]) -> ([18]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([18]) -> ([17]);
enum_match<core::PanicResult::<((),)>>([17]) { fallthrough([19]) 345([20]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([19]) -> ([21]);
struct_construct<Tuple<Unit>>([21]) -> ([22]);
enum_init<core::PanicResult::<((),)>, 0>([22]) -> ([23]);
store_temp<GasBuiltin>([13]) -> ([24]);
store_temp<System>([14]) -> ([25]);
store_temp<core::PanicResult::<((),)>>([23]) -> ([26]);
return([24], [25], [26]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([20]) -> ([27]);
store_temp<GasBuiltin>([13]) -> ([28]);
store_temp<System>([14]) -> ([29]);
store_temp<core::PanicResult::<((),)>>([27]) -> ([30]);
return([28], [29], [30]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);
array_append<felt>([0], [1]) -> ([2]);
struct_construct<Unit>() -> ([3]);
drop<Unit>([3]) -> ();
struct_construct<Unit>() -> ([4]);
store_temp<Array<felt>>([2]) -> ([5]);
store_temp<Unit>([4]) -> ([6]);
return([5], [6]);
enum_match<core::result::Result::<core::felt, core::array::Array::<core::felt>>>([0]) { fallthrough([1]) 368([2]) };
branch_align() -> ();
struct_construct<Tuple<felt>>([1]) -> ([3]);
enum_init<core::PanicResult::<(core::felt,)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<(core::felt,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt,)>, 1>([2]) -> ([6]);
store_temp<core::PanicResult::<(core::felt,)>>([6]) -> ([7]);
return([7]);
enum_match<core::result::Result::<(), core::array::Array::<core::felt>>>([0]) { fallthrough([1]) 378([2]) };
branch_align() -> ();
struct_construct<Tuple<Unit>>([1]) -> ([3]);
enum_init<core::PanicResult::<((),)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<((),)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([2]) -> ([6]);
store_temp<core::PanicResult::<((),)>>([6]) -> ([7]);
return([7]);

hello_starknet::hello_starknet::HelloStarknet::__external::increase_balance@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: Array<felt>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Array::<core::felt>,)>);
hello_starknet::hello_starknet::HelloStarknet::__external::get_balance@164([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: Array<felt>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Array::<core::felt>,)>);
hello_starknet::hello_starknet::HelloStarknet::balance::read@282([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::PanicResult::<(core::felt,)>);
hello_starknet::hello_starknet::HelloStarknet::balance::write@316([0]: GasBuiltin, [1]: System, [2]: felt) -> (GasBuiltin, System, core::PanicResult::<((),)>);
core::starknet::use_system_implicit@351([0]: System) -> (System, Unit);
core::serde::FeltSerde::serialize@355([0]: Array<felt>, [1]: felt) -> (Array<felt>, Unit);
core::starknet::SyscallResultTraitImpl::<core::felt>::unwrap_syscall@362([0]: core::result::Result::<core::felt, core::array::Array::<core::felt>>) -> (core::PanicResult::<(core::felt,)>);
core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall@372([0]: core::result::Result::<(), core::array::Array::<core::felt>>) -> (core::PanicResult::<((),)>);
