type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type Const<felt252, 1749165063169615148890104124711417950509560691> = Const<felt252, 1749165063169615148890104124711417950509560691> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 27063539617145597287547105838> = Const<felt252, 27063539617145597287547105838> [storable: false, drop: false, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type NonZero<felt252> = NonZero<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type Box<core::starknet::info::v2::TxInfo> = Box<core::starknet::info::v2::TxInfo> [storable: true, drop: true, dup: true, zero_sized: false];
type Box<core::starknet::info::BlockInfo> = Box<core::starknet::info::BlockInfo> [storable: true, drop: true, dup: true, zero_sized: false];
type ContractAddress = ContractAddress [storable: true, drop: true, dup: true, zero_sized: false];
type u128 = u128 [storable: true, drop: true, dup: true, zero_sized: false];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::array::Span::<core::felt252> = Struct<ut@[782572820229152792105145177694740816763001980856532159945905090893343825762], Snapshot<Array<felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];
type Array<core::starknet::info::v2::ResourceBounds> = Array<core::starknet::info::v2::ResourceBounds> [storable: true, drop: true, dup: false, zero_sized: false];
type Snapshot<Array<core::starknet::info::v2::ResourceBounds>> = Snapshot<Array<core::starknet::info::v2::ResourceBounds>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::array::Span::<core::starknet::info::v2::ResourceBounds> = Struct<ut@[610414687265092333515030097572820485100775140138339320017824976575632481516], Snapshot<Array<core::starknet::info::v2::ResourceBounds>>> [storable: true, drop: true, dup: true, zero_sized: false];
type u32 = u32 [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::info::v2::TxInfo = Struct<ut@[1485298396456562585458258705735398759980834552075423021701728656790685322041], felt252, ContractAddress, u128, core::array::Span::<core::felt252>, felt252, felt252, felt252, core::array::Span::<core::starknet::info::v2::ResourceBounds>, u128, core::array::Span::<core::felt252>, u32, u32, core::array::Span::<core::felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type u64 = u64 [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::info::BlockInfo = Struct<ut@[1584064236820419267635853880275057357497142966426465622513080398763825874917], u64, u64, ContractAddress> [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::info::v2::ResourceBounds = Struct<ut@[1449063728204456669537166935530586908681132053296035067898008429082243872008], felt252, u64, u128> [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::info::v2::ExecutionInfo = Struct<ut@[221391467073327924041011052339733471441050020995554893254144785727444530663], Box<core::starknet::info::BlockInfo>, Box<core::starknet::info::v2::TxInfo>, ContractAddress, ContractAddress, felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type Box<core::starknet::info::v2::ExecutionInfo> = Box<core::starknet::info::v2::ExecutionInfo> [storable: true, drop: true, dup: true, zero_sized: false];
type StorageBaseAddress = StorageBaseAddress [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress> = Struct<ut@[684885822084819006811669382433291536170969547481496406103746721682810784018], StorageBaseAddress> [storable: true, drop: true, dup: true, zero_sized: false];
type Const<felt252, 609027926996394448897110979893076510243972918373374893656125704091767682544> = Const<felt252, 609027926996394448897110979893076510243972918373374893656125704091767682544> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 230192814789850291994621760810535338129013919481720626953423731987611497567> = Const<felt252, 230192814789850291994621760810535338129013919481720626953423731987611497567> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 20679572143145055578227390170220963587562133719472661821696905634408685712> = Const<felt252, 20679572143145055578227390170220963587562133719472661821696905634408685712> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 364451368385661037075321874576483508309644891427381190745986300576661518140> = Const<felt252, 364451368385661037075321874576483508309644891427381190745986300576661518140> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 373502242078911797297509776863854163679541038429883461174855360031674187824> = Const<felt252, 373502242078911797297509776863854163679541038429883461174855360031674187824> [storable: false, drop: false, dup: false, zero_sized: false];
type cairo_level_tests::components::ownable::ownable::Event = Enum<ut@[159242497304001286940502695884045556513608061648114012756954426931007373496]> [storable: true, drop: true, dup: true, zero_sized: false];
type Const<felt252, 30828113188794245257250221355944970489240709081949230> = Const<felt252, 30828113188794245257250221355944970489240709081949230> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 6214282646402414199069093229416> = Const<felt252, 6214282646402414199069093229416> [storable: false, drop: false, dup: false, zero_sized: false];
type ClassHash = ClassHash [storable: true, drop: true, dup: true, zero_sized: false];
type cairo_level_tests::components::upgradable::upgradable::ContractUpgraded = Struct<ut@[490972161598209863077531322394939192593223352735052593875815113206383537707], ClassHash, ClassHash> [storable: true, drop: true, dup: true, zero_sized: false];
type cairo_level_tests::components::upgradable::upgradable::Event = Enum<ut@[1346187285187926958152874808647298752454881932532435783006741964050099118326], cairo_level_tests::components::upgradable::upgradable::ContractUpgraded> [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>> = Struct<ut@[683990950741772954390292701483780528744282417738343461052776243882535986327], StorageBaseAddress> [storable: true, drop: true, dup: true, zero_sized: false];
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], Unit> [storable: true, drop: true, dup: true, zero_sized: true];
type core::panics::Panic = Struct<ut@[640126984585624630990013944782631102820301644699864366139839615702772668018]> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<((),)> = Enum<ut@[361089181821616824109533730671601453699459898913788950609596320038338987733], Tuple<Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Const<felt252, 39878429859763533771555484554338820190071> = Const<felt252, 39878429859763533771555484554338820190071> [storable: false, drop: false, dup: false, zero_sized: false];
type cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterDecreased = Struct<ut@[321380985627604349771948379292401357195307854153947135904225804414557822520], u128> [storable: true, drop: true, dup: true, zero_sized: false];
type Const<felt252, 39878429859757942499084499860145094553463> = Const<felt252, 39878429859757942499084499860145094553463> [storable: false, drop: false, dup: false, zero_sized: false];
type cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterIncreased = Struct<ut@[199484990607557857512355595925387699443874824955951559808061636842253834929], u128> [storable: true, drop: true, dup: true, zero_sized: false];
type cairo_level_tests::contracts::upgradable_counter::counter_contract::Event = Enum<ut@[1060520973282059393949483737597373620686929516723524567169415795999555967745], cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterIncreased, cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterDecreased, cairo_level_tests::components::upgradable::upgradable::Event, cairo_level_tests::components::ownable::ownable::Event> [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>> = Struct<ut@[1443046882518886656173077359992472298089462391183495116875265254864931435345], StorageBaseAddress> [storable: true, drop: true, dup: true, zero_sized: false];
type cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState> = Struct<ut@[1461197178289460063413154251392053977322243085191401250637052871687269521025]> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, Unit> [storable: true, drop: true, dup: true, zero_sized: true];
type core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())> = Enum<ut@[1714491154234372702764135373397338221931515733007095170124707571712915961911], Tuple<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::option::Option::<core::felt252> = Enum<ut@[502540321931352404499287398278270665773953423387279675570524389549882807569], felt252, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Const<felt252, 485748461484230571791265682659113160264223489397539653310998840191492913> = Const<felt252, 485748461484230571791265682659113160264223489397539653310998840191492913> [storable: false, drop: false, dup: false, zero_sized: false];
type cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState> = Struct<ut@[1416814373318548953219077169895273597556430774741024497748886732314000354978]> [storable: true, drop: true, dup: true, zero_sized: true];
type cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState = Struct<ut@[1045771049389955888909039172568328869506877767619585932438301247437482972028], cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, Unit> [storable: true, drop: true, dup: true, zero_sized: true];
type core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())> = Enum<ut@[1647851022803147870919459882193472595982834239331376726786004055974661533151], Tuple<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, Unit>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Box<felt252> = Box<felt252> [storable: true, drop: true, dup: true, zero_sized: false];
type core::option::Option::<core::box::Box::<@core::felt252>> = Enum<ut@[1182885770396068416776258475038712898857052156962285097349975100489777991911], Box<felt252>, Unit> [storable: true, drop: true, dup: true, zero_sized: false];
type Const<felt252, 375233589013918064796019> = Const<felt252, 375233589013918064796019> [storable: false, drop: false, dup: false, zero_sized: false];
type Const<felt252, 476442828812030857794232422692155113556837216824> = Const<felt252, 476442828812030857794232422692155113556837216824> [storable: false, drop: false, dup: false, zero_sized: false];
type Tuple<core::array::Span::<core::felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::array::Span::<core::felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type Const<u32, 0> = Const<u32, 0> [storable: false, drop: false, dup: false, zero_sized: false];
type StorageAddress = StorageAddress [storable: true, drop: true, dup: true, zero_sized: false];
type core::starknet::storage::StoragePointer0Offset::<core::integer::u128> = Struct<ut@[900076576657854394924402023721091564864406525443448277479516273533483658992], StorageBaseAddress> [storable: true, drop: true, dup: true, zero_sized: false];
type BuiltinCosts = BuiltinCosts [storable: true, drop: true, dup: true, zero_sized: false];
type System = System [storable: true, drop: false, dup: false, zero_sized: false];
type core::panics::PanicResult::<(core::array::Span::<core::felt252>,)> = Enum<ut@[270671131472959732993844072583327084608513343873724697777364695367457417702], Tuple<core::array::Span::<core::felt252>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type Const<felt252, 7733229381460288120802334208475838166080759535023995805565484692595> = Const<felt252, 7733229381460288120802334208475838166080759535023995805565484692595> [storable: false, drop: false, dup: false, zero_sized: false];
type GasBuiltin = GasBuiltin [storable: true, drop: false, dup: false, zero_sized: false];

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc branch_align = branch_align;
libfunc redeposit_gas = redeposit_gas;
libfunc struct_deconstruct<core::array::Span::<core::felt252>> = struct_deconstruct<core::array::Span::<core::felt252>>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc array_snapshot_pop_front<felt252> = array_snapshot_pop_front<felt252>;
libfunc drop<Snapshot<Array<felt252>>> = drop<Snapshot<Array<felt252>>>;
libfunc drop<Box<felt252>> = drop<Box<felt252>>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc const_as_immediate<Const<felt252, 7733229381460288120802334208475838166080759535023995805565484692595>> = const_as_immediate<Const<felt252, 7733229381460288120802334208475838166080759535023995805565484692595>>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>> = store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc storage_base_address_const<223925651276572801467025322450506123433664924558092583619131301620304795732> = storage_base_address_const<223925651276572801467025322450506123433664924558092583619131301620304795732>;
libfunc struct_construct<core::starknet::storage::StoragePointer0Offset::<core::integer::u128>> = struct_construct<core::starknet::storage::StoragePointer0Offset::<core::integer::u128>>;
libfunc snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::integer::u128>> = snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::integer::u128>>;
libfunc drop<core::starknet::storage::StoragePointer0Offset::<core::integer::u128>> = drop<core::starknet::storage::StoragePointer0Offset::<core::integer::u128>>;
libfunc struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::integer::u128>> = struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::integer::u128>>;
libfunc rename<StorageBaseAddress> = rename<StorageBaseAddress>;
libfunc storage_address_from_base = storage_address_from_base;
libfunc const_as_immediate<Const<u32, 0>> = const_as_immediate<Const<u32, 0>>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<StorageAddress> = store_temp<StorageAddress>;
libfunc storage_read_syscall = storage_read_syscall;
libfunc u128s_from_felt252 = u128s_from_felt252;
libfunc u128_to_felt252 = u128_to_felt252;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc struct_construct<core::array::Span::<core::felt252>> = struct_construct<core::array::Span::<core::felt252>>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>>> = struct_construct<Tuple<core::array::Span::<core::felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>;
libfunc drop<u128> = drop<u128>;
libfunc const_as_immediate<Const<felt252, 476442828812030857794232422692155113556837216824>> = const_as_immediate<Const<felt252, 476442828812030857794232422692155113556837216824>>;
libfunc store_temp<Array<felt252>> = store_temp<Array<felt252>>;
libfunc jump = jump;
libfunc drop<core::array::Span::<core::felt252>> = drop<core::array::Span::<core::felt252>>;
libfunc const_as_immediate<Const<felt252, 375233589013918064796019>> = const_as_immediate<Const<felt252, 375233589013918064796019>>;
libfunc enable_ap_tracking = enable_ap_tracking;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>;
libfunc store_temp<Snapshot<Array<felt252>>> = store_temp<Snapshot<Array<felt252>>>;
libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>> = store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>;
libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>> = enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc unbox<felt252> = unbox<felt252>;
libfunc rename<felt252> = rename<felt252>;
libfunc struct_construct<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>> = struct_construct<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>;
libfunc struct_construct<cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>> = struct_construct<cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>;
libfunc struct_construct<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState> = struct_construct<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterContract::increase_counter> = function_call<user@cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterContract::increase_counter>;
libfunc enum_match<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>> = enum_match<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>;
libfunc drop<Tuple<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, Unit>> = drop<Tuple<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, Unit>>;
libfunc drop<Unit> = drop<Unit>;
libfunc const_as_immediate<Const<felt252, 485748461484230571791265682659113160264223489397539653310998840191492913>> = const_as_immediate<Const<felt252, 485748461484230571791265682659113160264223489397539653310998840191492913>>;
libfunc function_call<user@cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterContract::decrease_counter> = function_call<user@cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterContract::decrease_counter>;
libfunc enum_init<core::option::Option::<core::felt252>, 0> = enum_init<core::option::Option::<core::felt252>, 0>;
libfunc store_temp<core::option::Option::<core::felt252>> = store_temp<core::option::Option::<core::felt252>>;
libfunc enum_init<core::option::Option::<core::felt252>, 1> = enum_init<core::option::Option::<core::felt252>, 1>;
libfunc enum_match<core::option::Option::<core::felt252>> = enum_match<core::option::Option::<core::felt252>>;
libfunc class_hash_try_from_felt252 = class_hash_try_from_felt252;
libfunc drop<ClassHash> = drop<ClassHash>;
libfunc store_temp<ClassHash> = store_temp<ClassHash>;
libfunc function_call<user@cairo_level_tests::components::upgradable::upgradable::Upgradable::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_upgradable_comp, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_ownable_comp>::upgrade> = function_call<user@cairo_level_tests::components::upgradable::upgradable::Upgradable::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_upgradable_comp, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_ownable_comp>::upgrade>;
libfunc enum_match<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>> = enum_match<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>>;
libfunc drop<Tuple<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, Unit>> = drop<Tuple<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, Unit>>;
libfunc storage_write_syscall = storage_write_syscall;
libfunc struct_construct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>> = struct_construct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>>;
libfunc snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>> = snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>>;
libfunc drop<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>> = drop<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>>;
libfunc struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>> = struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>>;
libfunc dup<u128> = dup<u128>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc struct_construct<cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterIncreased> = struct_construct<cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterIncreased>;
libfunc enum_init<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event, 0> = enum_init<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event, 0>;
libfunc snapshot_take<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event> = snapshot_take<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>;
libfunc drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event> = drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>;
libfunc store_temp<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event> = store_temp<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>;
libfunc function_call<user@cairo_level_tests::contracts::upgradable_counter::counter_contract::EventIsEvent::append_keys_and_data> = function_call<user@cairo_level_tests::contracts::upgradable_counter::counter_contract::EventIsEvent::append_keys_and_data>;
libfunc emit_event_syscall = emit_event_syscall;
libfunc struct_construct<Tuple<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, Unit>> = struct_construct<Tuple<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 0> = enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>> = store_temp<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>;
libfunc drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState> = drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>;
libfunc enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 1> = enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 1>;
libfunc const_as_immediate<Const<felt252, 39878429859757942499084499860145094553463>> = const_as_immediate<Const<felt252, 39878429859757942499084499860145094553463>>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc struct_construct<cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterDecreased> = struct_construct<cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterDecreased>;
libfunc enum_init<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event, 1> = enum_init<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event, 1>;
libfunc const_as_immediate<Const<felt252, 39878429859763533771555484554338820190071>> = const_as_immediate<Const<felt252, 39878429859763533771555484554338820190071>>;
libfunc snapshot_take<cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>> = snapshot_take<cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>;
libfunc drop<cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>> = drop<cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>;
libfunc function_call<user@cairo_level_tests::components::ownable::ownable::OwnableHelperImpl::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_ownable_comp>::validate_ownership> = function_call<user@cairo_level_tests::components::ownable::ownable::OwnableHelperImpl::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_ownable_comp>::validate_ownership>;
libfunc enum_match<core::panics::PanicResult::<((),)>> = enum_match<core::panics::PanicResult::<((),)>>;
libfunc drop<Tuple<Unit>> = drop<Tuple<Unit>>;
libfunc dup<ClassHash> = dup<ClassHash>;
libfunc replace_class_syscall = replace_class_syscall;
libfunc storage_base_address_const<122428454986788377403067048277966546957631643527964214274804601770769789817> = storage_base_address_const<122428454986788377403067048277966546957631643527964214274804601770769789817>;
libfunc struct_construct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>>> = struct_construct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>>>;
libfunc snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>>> = snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>>>;
libfunc drop<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>>> = drop<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>>>;
libfunc struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>>> = struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>>>;
libfunc struct_construct<cairo_level_tests::components::upgradable::upgradable::ContractUpgraded> = struct_construct<cairo_level_tests::components::upgradable::upgradable::ContractUpgraded>;
libfunc enum_init<cairo_level_tests::components::upgradable::upgradable::Event, 0> = enum_init<cairo_level_tests::components::upgradable::upgradable::Event, 0>;
libfunc enum_init<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event, 2> = enum_init<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event, 2>;
libfunc class_hash_to_felt252 = class_hash_to_felt252;
libfunc struct_construct<Tuple<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, Unit>> = struct_construct<Tuple<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>, 0> = enum_init<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>> = store_temp<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>>;
libfunc drop<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>> = drop<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>;
libfunc enum_init<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>, 1> = enum_init<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>, 1>;
libfunc const_as_immediate<Const<felt252, 6214282646402414199069093229416>> = const_as_immediate<Const<felt252, 6214282646402414199069093229416>>;
libfunc const_as_immediate<Const<felt252, 30828113188794245257250221355944970489240709081949230>> = const_as_immediate<Const<felt252, 30828113188794245257250221355944970489240709081949230>>;
libfunc enum_match<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event> = enum_match<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>;
libfunc const_as_immediate<Const<felt252, 373502242078911797297509776863854163679541038429883461174855360031674187824>> = const_as_immediate<Const<felt252, 373502242078911797297509776863854163679541038429883461174855360031674187824>>;
libfunc struct_deconstruct<cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterIncreased> = struct_deconstruct<cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterIncreased>;
libfunc rename<u128> = rename<u128>;
libfunc const_as_immediate<Const<felt252, 364451368385661037075321874576483508309644891427381190745986300576661518140>> = const_as_immediate<Const<felt252, 364451368385661037075321874576483508309644891427381190745986300576661518140>>;
libfunc struct_deconstruct<cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterDecreased> = struct_deconstruct<cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterDecreased>;
libfunc const_as_immediate<Const<felt252, 20679572143145055578227390170220963587562133719472661821696905634408685712>> = const_as_immediate<Const<felt252, 20679572143145055578227390170220963587562133719472661821696905634408685712>>;
libfunc enum_match<cairo_level_tests::components::upgradable::upgradable::Event> = enum_match<cairo_level_tests::components::upgradable::upgradable::Event>;
libfunc const_as_immediate<Const<felt252, 230192814789850291994621760810535338129013919481720626953423731987611497567>> = const_as_immediate<Const<felt252, 230192814789850291994621760810535338129013919481720626953423731987611497567>>;
libfunc dup<cairo_level_tests::components::upgradable::upgradable::ContractUpgraded> = dup<cairo_level_tests::components::upgradable::upgradable::ContractUpgraded>;
libfunc struct_deconstruct<cairo_level_tests::components::upgradable::upgradable::ContractUpgraded> = struct_deconstruct<cairo_level_tests::components::upgradable::upgradable::ContractUpgraded>;
libfunc rename<ClassHash> = rename<ClassHash>;
libfunc const_as_immediate<Const<felt252, 609027926996394448897110979893076510243972918373374893656125704091767682544>> = const_as_immediate<Const<felt252, 609027926996394448897110979893076510243972918373374893656125704091767682544>>;
libfunc enum_match<cairo_level_tests::components::ownable::ownable::Event> = enum_match<cairo_level_tests::components::ownable::ownable::Event>;
libfunc storage_base_address_const<907111799109225873672206001743429201758838553092777504370151546632448000192> = storage_base_address_const<907111799109225873672206001743429201758838553092777504370151546632448000192>;
libfunc struct_construct<core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress>> = struct_construct<core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress>>;
libfunc snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress>> = snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress>>;
libfunc drop<core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress>> = drop<core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress>>;
libfunc struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress>> = struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress>>;
libfunc contract_address_try_from_felt252 = contract_address_try_from_felt252;
libfunc get_execution_info_v2_syscall = get_execution_info_v2_syscall;
libfunc store_temp<Box<core::starknet::info::v2::ExecutionInfo>> = store_temp<Box<core::starknet::info::v2::ExecutionInfo>>;
libfunc unbox<core::starknet::info::v2::ExecutionInfo> = unbox<core::starknet::info::v2::ExecutionInfo>;
libfunc contract_address_to_felt252 = contract_address_to_felt252;
libfunc struct_deconstruct<core::starknet::info::v2::ExecutionInfo> = struct_deconstruct<core::starknet::info::v2::ExecutionInfo>;
libfunc drop<Box<core::starknet::info::BlockInfo>> = drop<Box<core::starknet::info::BlockInfo>>;
libfunc drop<Box<core::starknet::info::v2::TxInfo>> = drop<Box<core::starknet::info::v2::TxInfo>>;
libfunc drop<ContractAddress> = drop<ContractAddress>;
libfunc drop<felt252> = drop<felt252>;
libfunc felt252_sub = felt252_sub;
libfunc felt252_is_zero = felt252_is_zero;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 0> = enum_init<core::panics::PanicResult::<((),)>, 0>;
libfunc store_temp<core::panics::PanicResult::<((),)>> = store_temp<core::panics::PanicResult::<((),)>>;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc const_as_immediate<Const<felt252, 27063539617145597287547105838>> = const_as_immediate<Const<felt252, 27063539617145597287547105838>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 1> = enum_init<core::panics::PanicResult::<((),)>, 1>;
libfunc const_as_immediate<Const<felt252, 1749165063169615148890104124711417950509560691>> = const_as_immediate<Const<felt252, 1749165063169615148890104124711417950509560691>>;

F0:
revoke_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) F0_B5([6], [7]) };
branch_align() -> ();
redeposit_gas([5]) -> ([8]);
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([4]);
store_temp<GasBuiltin>([8]) -> ([8]);
array_snapshot_pop_front<felt252>([9]) { fallthrough([10], [11]) F0_B0([12]) };
branch_align() -> ();
drop<Snapshot<Array<felt252>>>([10]) -> ();
drop<Box<felt252>>([11]) -> ();
redeposit_gas([8]) -> ([13]);
array_new<felt252>() -> ([14]);
const_as_immediate<Const<felt252, 7733229381460288120802334208475838166080759535023995805565484692595>>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
array_append<felt252>([14], [15]) -> ([16]);
struct_construct<core::panics::Panic>() -> ([17]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([17], [16]) -> ([18]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([18]) -> ([19]);
store_temp<RangeCheck>([4]) -> ([4]);
store_temp<GasBuiltin>([13]) -> ([13]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([19]) -> ([19]);
return([4], [13], [2], [19]);
F0_B0:
branch_align() -> ();
drop<Snapshot<Array<felt252>>>([12]) -> ();
redeposit_gas([8]) -> ([20]);
get_builtin_costs() -> ([21]);
store_temp<GasBuiltin>([20]) -> ([20]);
store_temp<BuiltinCosts>([21]) -> ([21]);
withdraw_gas_all([4], [20], [21]) { fallthrough([22], [23]) F0_B4([24], [25]) };
branch_align() -> ();
redeposit_gas([23]) -> ([26]);
storage_base_address_const<223925651276572801467025322450506123433664924558092583619131301620304795732>() -> ([27]);
struct_construct<core::starknet::storage::StoragePointer0Offset::<core::integer::u128>>([27]) -> ([28]);
snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::integer::u128>>([28]) -> ([29], [30]);
drop<core::starknet::storage::StoragePointer0Offset::<core::integer::u128>>([29]) -> ();
struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::integer::u128>>([30]) -> ([31]);
rename<StorageBaseAddress>([31]) -> ([32]);
storage_address_from_base([32]) -> ([33]);
const_as_immediate<Const<u32, 0>>() -> ([34]);
store_temp<GasBuiltin>([26]) -> ([26]);
store_temp<u32>([34]) -> ([34]);
store_temp<StorageAddress>([33]) -> ([33]);
store_temp<RangeCheck>([22]) -> ([22]);
storage_read_syscall([26], [2], [34], [33]) { fallthrough([35], [36], [37]) F0_B2([38], [39], [40]) };
branch_align() -> ();
store_temp<GasBuiltin>([35]) -> ([35]);
redeposit_gas([35]) -> ([41]);
store_temp<felt252>([37]) -> ([37]);
store_temp<System>([36]) -> ([36]);
store_temp<GasBuiltin>([41]) -> ([41]);
u128s_from_felt252([22], [37]) { fallthrough([42], [43]) F0_B1([44], [45], [46]) };
branch_align() -> ();
redeposit_gas([41]) -> ([47]);
array_new<felt252>() -> ([48]);
u128_to_felt252([43]) -> ([49]);
array_append<felt252>([48], [49]) -> ([50]);
snapshot_take<Array<felt252>>([50]) -> ([51], [52]);
drop<Array<felt252>>([51]) -> ();
struct_construct<core::array::Span::<core::felt252>>([52]) -> ([53]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([53]) -> ([54]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([54]) -> ([55]);
store_temp<RangeCheck>([42]) -> ([42]);
store_temp<GasBuiltin>([47]) -> ([47]);
store_temp<System>([36]) -> ([36]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([55]) -> ([55]);
return([42], [47], [36], [55]);
F0_B1:
branch_align() -> ();
drop<u128>([45]) -> ();
drop<u128>([46]) -> ();
array_new<felt252>() -> ([56]);
const_as_immediate<Const<felt252, 476442828812030857794232422692155113556837216824>>() -> ([57]);
store_temp<felt252>([57]) -> ([57]);
array_append<felt252>([56], [57]) -> ([58]);
store_temp<RangeCheck>([44]) -> ([59]);
store_temp<GasBuiltin>([41]) -> ([60]);
store_temp<System>([36]) -> ([61]);
store_temp<Array<felt252>>([58]) -> ([62]);
jump() { F0_B3() };
F0_B2:
branch_align() -> ();
store_temp<RangeCheck>([22]) -> ([59]);
store_temp<GasBuiltin>([38]) -> ([60]);
store_temp<System>([39]) -> ([61]);
store_temp<Array<felt252>>([40]) -> ([62]);
F0_B3:
redeposit_gas([60]) -> ([63]);
struct_construct<core::panics::Panic>() -> ([64]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([64], [62]) -> ([65]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([65]) -> ([66]);
store_temp<RangeCheck>([59]) -> ([59]);
store_temp<GasBuiltin>([63]) -> ([63]);
store_temp<System>([61]) -> ([61]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([66]) -> ([66]);
return([59], [63], [61], [66]);
F0_B4:
branch_align() -> ();
store_temp<RangeCheck>([24]) -> ([67]);
store_temp<GasBuiltin>([25]) -> ([68]);
jump() { F0_B6() };
F0_B5:
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
store_temp<RangeCheck>([6]) -> ([67]);
store_temp<GasBuiltin>([7]) -> ([68]);
F0_B6:
redeposit_gas([68]) -> ([69]);
array_new<felt252>() -> ([70]);
const_as_immediate<Const<felt252, 375233589013918064796019>>() -> ([71]);
store_temp<felt252>([71]) -> ([71]);
array_append<felt252>([70], [71]) -> ([72]);
struct_construct<core::panics::Panic>() -> ([73]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([73], [72]) -> ([74]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([74]) -> ([75]);
store_temp<RangeCheck>([67]) -> ([67]);
store_temp<GasBuiltin>([69]) -> ([69]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([75]) -> ([75]);
return([67], [69], [2], [75]);
F1:
revoke_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) F1_B8([6], [7]) };
branch_align() -> ();
redeposit_gas([5]) -> ([8]);
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([9]);
enable_ap_tracking() -> ();
store_temp<RangeCheck>([4]) -> ([4]);
store_temp<GasBuiltin>([8]) -> ([8]);
array_snapshot_pop_front<felt252>([9]) { fallthrough([10], [11]) F1_B0([12]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([11]) -> ([13]);
store_temp<Snapshot<Array<felt252>>>([10]) -> ([14]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([13]) -> ([15]);
jump() { F1_B1() };
F1_B0:
branch_align() -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([16]) -> ([17]);
store_temp<Snapshot<Array<felt252>>>([12]) -> ([14]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([17]) -> ([15]);
F1_B1:
redeposit_gas([8]) -> ([18]);
store_temp<GasBuiltin>([18]) -> ([18]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([15]) { fallthrough([19]) F1_B6([20]) };
branch_align() -> ();
disable_ap_tracking() -> ();
redeposit_gas([18]) -> ([21]);
unbox<felt252>([19]) -> ([22]);
rename<felt252>([22]) -> ([23]);
store_temp<felt252>([23]) -> ([23]);
store_temp<GasBuiltin>([21]) -> ([21]);
u128s_from_felt252([4], [23]) { fallthrough([24], [25]) F1_B5([26], [27], [28]) };
branch_align() -> ();
redeposit_gas([21]) -> ([29]);
store_temp<RangeCheck>([24]) -> ([24]);
store_temp<GasBuiltin>([29]) -> ([29]);
array_snapshot_pop_front<felt252>([14]) { fallthrough([30], [31]) F1_B2([32]) };
branch_align() -> ();
drop<Snapshot<Array<felt252>>>([30]) -> ();
drop<Box<felt252>>([31]) -> ();
drop<u128>([25]) -> ();
redeposit_gas([29]) -> ([33]);
array_new<felt252>() -> ([34]);
const_as_immediate<Const<felt252, 7733229381460288120802334208475838166080759535023995805565484692595>>() -> ([35]);
store_temp<felt252>([35]) -> ([35]);
array_append<felt252>([34], [35]) -> ([36]);
struct_construct<core::panics::Panic>() -> ([37]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([37], [36]) -> ([38]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([38]) -> ([39]);
store_temp<RangeCheck>([24]) -> ([24]);
store_temp<GasBuiltin>([33]) -> ([33]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([39]) -> ([39]);
return([24], [33], [2], [39]);
F1_B2:
branch_align() -> ();
drop<Snapshot<Array<felt252>>>([32]) -> ();
redeposit_gas([29]) -> ([40]);
get_builtin_costs() -> ([41]);
store_temp<GasBuiltin>([40]) -> ([40]);
store_temp<BuiltinCosts>([41]) -> ([41]);
withdraw_gas_all([24], [40], [41]) { fallthrough([42], [43]) F1_B4([44], [45]) };
branch_align() -> ();
redeposit_gas([43]) -> ([46]);
struct_construct<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>() -> ([47]);
struct_construct<cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>() -> ([48]);
struct_construct<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>([47], [48]) -> ([49]);
store_temp<RangeCheck>([42]) -> ([42]);
store_temp<GasBuiltin>([46]) -> ([46]);
store_temp<System>([2]) -> ([2]);
store_temp<u128>([25]) -> ([25]);
function_call<user@cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterContract::increase_counter>([42], [46], [2], [49], [25]) -> ([50], [51], [52], [53]);
enum_match<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>([53]) { fallthrough([54]) F1_B3([55]) };
branch_align() -> ();
drop<Tuple<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, Unit>>([54]) -> ();
redeposit_gas([51]) -> ([56]);
array_new<felt252>() -> ([57]);
snapshot_take<Array<felt252>>([57]) -> ([58], [59]);
drop<Array<felt252>>([58]) -> ();
struct_construct<core::array::Span::<core::felt252>>([59]) -> ([60]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([60]) -> ([61]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([61]) -> ([62]);
store_temp<RangeCheck>([50]) -> ([50]);
store_temp<GasBuiltin>([56]) -> ([56]);
store_temp<System>([52]) -> ([52]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([62]) -> ([62]);
return([50], [56], [52], [62]);
F1_B3:
branch_align() -> ();
redeposit_gas([51]) -> ([63]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([55]) -> ([64]);
store_temp<RangeCheck>([50]) -> ([50]);
store_temp<GasBuiltin>([63]) -> ([63]);
store_temp<System>([52]) -> ([52]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([64]) -> ([64]);
return([50], [63], [52], [64]);
F1_B4:
branch_align() -> ();
drop<u128>([25]) -> ();
store_temp<RangeCheck>([44]) -> ([65]);
store_temp<GasBuiltin>([45]) -> ([66]);
jump() { F1_B9() };
F1_B5:
branch_align() -> ();
drop<u128>([27]) -> ();
drop<u128>([28]) -> ();
drop<Snapshot<Array<felt252>>>([14]) -> ();
store_temp<RangeCheck>([26]) -> ([67]);
store_temp<GasBuiltin>([21]) -> ([68]);
jump() { F1_B7() };
F1_B6:
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([20]) -> ();
drop<Snapshot<Array<felt252>>>([14]) -> ();
store_temp<RangeCheck>([4]) -> ([67]);
store_temp<GasBuiltin>([18]) -> ([68]);
F1_B7:
redeposit_gas([68]) -> ([69]);
array_new<felt252>() -> ([70]);
const_as_immediate<Const<felt252, 485748461484230571791265682659113160264223489397539653310998840191492913>>() -> ([71]);
store_temp<felt252>([71]) -> ([71]);
array_append<felt252>([70], [71]) -> ([72]);
struct_construct<core::panics::Panic>() -> ([73]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([73], [72]) -> ([74]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([74]) -> ([75]);
store_temp<RangeCheck>([67]) -> ([67]);
store_temp<GasBuiltin>([69]) -> ([69]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([75]) -> ([75]);
return([67], [69], [2], [75]);
F1_B8:
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
store_temp<RangeCheck>([6]) -> ([65]);
store_temp<GasBuiltin>([7]) -> ([66]);
F1_B9:
redeposit_gas([66]) -> ([76]);
array_new<felt252>() -> ([77]);
const_as_immediate<Const<felt252, 375233589013918064796019>>() -> ([78]);
store_temp<felt252>([78]) -> ([78]);
array_append<felt252>([77], [78]) -> ([79]);
struct_construct<core::panics::Panic>() -> ([80]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([80], [79]) -> ([81]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([81]) -> ([82]);
store_temp<RangeCheck>([65]) -> ([65]);
store_temp<GasBuiltin>([76]) -> ([76]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([82]) -> ([82]);
return([65], [76], [2], [82]);
F2:
revoke_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) F2_B8([6], [7]) };
branch_align() -> ();
redeposit_gas([5]) -> ([8]);
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([9]);
enable_ap_tracking() -> ();
store_temp<RangeCheck>([4]) -> ([4]);
store_temp<GasBuiltin>([8]) -> ([8]);
array_snapshot_pop_front<felt252>([9]) { fallthrough([10], [11]) F2_B0([12]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([11]) -> ([13]);
store_temp<Snapshot<Array<felt252>>>([10]) -> ([14]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([13]) -> ([15]);
jump() { F2_B1() };
F2_B0:
branch_align() -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([16]) -> ([17]);
store_temp<Snapshot<Array<felt252>>>([12]) -> ([14]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([17]) -> ([15]);
F2_B1:
redeposit_gas([8]) -> ([18]);
store_temp<GasBuiltin>([18]) -> ([18]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([15]) { fallthrough([19]) F2_B6([20]) };
branch_align() -> ();
disable_ap_tracking() -> ();
redeposit_gas([18]) -> ([21]);
unbox<felt252>([19]) -> ([22]);
rename<felt252>([22]) -> ([23]);
store_temp<felt252>([23]) -> ([23]);
store_temp<GasBuiltin>([21]) -> ([21]);
u128s_from_felt252([4], [23]) { fallthrough([24], [25]) F2_B5([26], [27], [28]) };
branch_align() -> ();
redeposit_gas([21]) -> ([29]);
store_temp<RangeCheck>([24]) -> ([24]);
store_temp<GasBuiltin>([29]) -> ([29]);
array_snapshot_pop_front<felt252>([14]) { fallthrough([30], [31]) F2_B2([32]) };
branch_align() -> ();
drop<Snapshot<Array<felt252>>>([30]) -> ();
drop<Box<felt252>>([31]) -> ();
drop<u128>([25]) -> ();
redeposit_gas([29]) -> ([33]);
array_new<felt252>() -> ([34]);
const_as_immediate<Const<felt252, 7733229381460288120802334208475838166080759535023995805565484692595>>() -> ([35]);
store_temp<felt252>([35]) -> ([35]);
array_append<felt252>([34], [35]) -> ([36]);
struct_construct<core::panics::Panic>() -> ([37]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([37], [36]) -> ([38]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([38]) -> ([39]);
store_temp<RangeCheck>([24]) -> ([24]);
store_temp<GasBuiltin>([33]) -> ([33]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([39]) -> ([39]);
return([24], [33], [2], [39]);
F2_B2:
branch_align() -> ();
drop<Snapshot<Array<felt252>>>([32]) -> ();
redeposit_gas([29]) -> ([40]);
get_builtin_costs() -> ([41]);
store_temp<GasBuiltin>([40]) -> ([40]);
store_temp<BuiltinCosts>([41]) -> ([41]);
withdraw_gas_all([24], [40], [41]) { fallthrough([42], [43]) F2_B4([44], [45]) };
branch_align() -> ();
redeposit_gas([43]) -> ([46]);
struct_construct<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>() -> ([47]);
struct_construct<cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>() -> ([48]);
struct_construct<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>([47], [48]) -> ([49]);
store_temp<RangeCheck>([42]) -> ([42]);
store_temp<GasBuiltin>([46]) -> ([46]);
store_temp<System>([2]) -> ([2]);
store_temp<u128>([25]) -> ([25]);
function_call<user@cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterContract::decrease_counter>([42], [46], [2], [49], [25]) -> ([50], [51], [52], [53]);
enum_match<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>([53]) { fallthrough([54]) F2_B3([55]) };
branch_align() -> ();
drop<Tuple<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, Unit>>([54]) -> ();
redeposit_gas([51]) -> ([56]);
array_new<felt252>() -> ([57]);
snapshot_take<Array<felt252>>([57]) -> ([58], [59]);
drop<Array<felt252>>([58]) -> ();
struct_construct<core::array::Span::<core::felt252>>([59]) -> ([60]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([60]) -> ([61]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([61]) -> ([62]);
store_temp<RangeCheck>([50]) -> ([50]);
store_temp<GasBuiltin>([56]) -> ([56]);
store_temp<System>([52]) -> ([52]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([62]) -> ([62]);
return([50], [56], [52], [62]);
F2_B3:
branch_align() -> ();
redeposit_gas([51]) -> ([63]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([55]) -> ([64]);
store_temp<RangeCheck>([50]) -> ([50]);
store_temp<GasBuiltin>([63]) -> ([63]);
store_temp<System>([52]) -> ([52]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([64]) -> ([64]);
return([50], [63], [52], [64]);
F2_B4:
branch_align() -> ();
drop<u128>([25]) -> ();
store_temp<RangeCheck>([44]) -> ([65]);
store_temp<GasBuiltin>([45]) -> ([66]);
jump() { F2_B9() };
F2_B5:
branch_align() -> ();
drop<u128>([27]) -> ();
drop<u128>([28]) -> ();
drop<Snapshot<Array<felt252>>>([14]) -> ();
store_temp<RangeCheck>([26]) -> ([67]);
store_temp<GasBuiltin>([21]) -> ([68]);
jump() { F2_B7() };
F2_B6:
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([20]) -> ();
drop<Snapshot<Array<felt252>>>([14]) -> ();
store_temp<RangeCheck>([4]) -> ([67]);
store_temp<GasBuiltin>([18]) -> ([68]);
F2_B7:
redeposit_gas([68]) -> ([69]);
array_new<felt252>() -> ([70]);
const_as_immediate<Const<felt252, 485748461484230571791265682659113160264223489397539653310998840191492913>>() -> ([71]);
store_temp<felt252>([71]) -> ([71]);
array_append<felt252>([70], [71]) -> ([72]);
struct_construct<core::panics::Panic>() -> ([73]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([73], [72]) -> ([74]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([74]) -> ([75]);
store_temp<RangeCheck>([67]) -> ([67]);
store_temp<GasBuiltin>([69]) -> ([69]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([75]) -> ([75]);
return([67], [69], [2], [75]);
F2_B8:
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
store_temp<RangeCheck>([6]) -> ([65]);
store_temp<GasBuiltin>([7]) -> ([66]);
F2_B9:
redeposit_gas([66]) -> ([76]);
array_new<felt252>() -> ([77]);
const_as_immediate<Const<felt252, 375233589013918064796019>>() -> ([78]);
store_temp<felt252>([78]) -> ([78]);
array_append<felt252>([77], [78]) -> ([79]);
struct_construct<core::panics::Panic>() -> ([80]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([80], [79]) -> ([81]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([81]) -> ([82]);
store_temp<RangeCheck>([65]) -> ([65]);
store_temp<GasBuiltin>([76]) -> ([76]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([82]) -> ([82]);
return([65], [76], [2], [82]);
F3:
revoke_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) F3_B8([6], [7]) };
branch_align() -> ();
redeposit_gas([5]) -> ([8]);
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([9]);
enable_ap_tracking() -> ();
store_temp<RangeCheck>([4]) -> ([4]);
store_temp<GasBuiltin>([8]) -> ([8]);
array_snapshot_pop_front<felt252>([9]) { fallthrough([10], [11]) F3_B0([12]) };
branch_align() -> ();
unbox<felt252>([11]) -> ([13]);
rename<felt252>([13]) -> ([14]);
enum_init<core::option::Option::<core::felt252>, 0>([14]) -> ([15]);
store_temp<Snapshot<Array<felt252>>>([10]) -> ([16]);
store_temp<core::option::Option::<core::felt252>>([15]) -> ([17]);
jump() { F3_B1() };
F3_B0:
branch_align() -> ();
struct_construct<Unit>() -> ([18]);
enum_init<core::option::Option::<core::felt252>, 1>([18]) -> ([19]);
store_temp<Snapshot<Array<felt252>>>([12]) -> ([16]);
store_temp<core::option::Option::<core::felt252>>([19]) -> ([17]);
F3_B1:
redeposit_gas([8]) -> ([20]);
store_temp<GasBuiltin>([20]) -> ([20]);
enum_match<core::option::Option::<core::felt252>>([17]) { fallthrough([21]) F3_B6([22]) };
branch_align() -> ();
disable_ap_tracking() -> ();
redeposit_gas([20]) -> ([23]);
store_temp<GasBuiltin>([23]) -> ([23]);
class_hash_try_from_felt252([4], [21]) { fallthrough([24], [25]) F3_B5([26]) };
branch_align() -> ();
redeposit_gas([23]) -> ([27]);
store_temp<RangeCheck>([24]) -> ([24]);
store_temp<GasBuiltin>([27]) -> ([27]);
array_snapshot_pop_front<felt252>([16]) { fallthrough([28], [29]) F3_B2([30]) };
branch_align() -> ();
drop<Snapshot<Array<felt252>>>([28]) -> ();
drop<Box<felt252>>([29]) -> ();
drop<ClassHash>([25]) -> ();
redeposit_gas([27]) -> ([31]);
array_new<felt252>() -> ([32]);
const_as_immediate<Const<felt252, 7733229381460288120802334208475838166080759535023995805565484692595>>() -> ([33]);
store_temp<felt252>([33]) -> ([33]);
array_append<felt252>([32], [33]) -> ([34]);
struct_construct<core::panics::Panic>() -> ([35]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([35], [34]) -> ([36]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([36]) -> ([37]);
store_temp<RangeCheck>([24]) -> ([24]);
store_temp<GasBuiltin>([31]) -> ([31]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([37]) -> ([37]);
return([24], [31], [2], [37]);
F3_B2:
branch_align() -> ();
drop<Snapshot<Array<felt252>>>([30]) -> ();
redeposit_gas([27]) -> ([38]);
get_builtin_costs() -> ([39]);
store_temp<GasBuiltin>([38]) -> ([38]);
store_temp<BuiltinCosts>([39]) -> ([39]);
withdraw_gas_all([24], [38], [39]) { fallthrough([40], [41]) F3_B4([42], [43]) };
branch_align() -> ();
redeposit_gas([41]) -> ([44]);
struct_construct<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>() -> ([45]);
store_temp<RangeCheck>([40]) -> ([40]);
store_temp<GasBuiltin>([44]) -> ([44]);
store_temp<System>([2]) -> ([2]);
store_temp<ClassHash>([25]) -> ([25]);
function_call<user@cairo_level_tests::components::upgradable::upgradable::Upgradable::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_upgradable_comp, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_ownable_comp>::upgrade>([40], [44], [2], [45], [25]) -> ([46], [47], [48], [49]);
enum_match<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>>([49]) { fallthrough([50]) F3_B3([51]) };
branch_align() -> ();
drop<Tuple<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, Unit>>([50]) -> ();
redeposit_gas([47]) -> ([52]);
array_new<felt252>() -> ([53]);
snapshot_take<Array<felt252>>([53]) -> ([54], [55]);
drop<Array<felt252>>([54]) -> ();
struct_construct<core::array::Span::<core::felt252>>([55]) -> ([56]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([56]) -> ([57]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([57]) -> ([58]);
store_temp<RangeCheck>([46]) -> ([46]);
store_temp<GasBuiltin>([52]) -> ([52]);
store_temp<System>([48]) -> ([48]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([58]) -> ([58]);
return([46], [52], [48], [58]);
F3_B3:
branch_align() -> ();
redeposit_gas([47]) -> ([59]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([51]) -> ([60]);
store_temp<RangeCheck>([46]) -> ([46]);
store_temp<GasBuiltin>([59]) -> ([59]);
store_temp<System>([48]) -> ([48]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([60]) -> ([60]);
return([46], [59], [48], [60]);
F3_B4:
branch_align() -> ();
drop<ClassHash>([25]) -> ();
store_temp<RangeCheck>([42]) -> ([61]);
store_temp<GasBuiltin>([43]) -> ([62]);
jump() { F3_B9() };
F3_B5:
branch_align() -> ();
drop<Snapshot<Array<felt252>>>([16]) -> ();
store_temp<RangeCheck>([26]) -> ([63]);
store_temp<GasBuiltin>([23]) -> ([64]);
jump() { F3_B7() };
F3_B6:
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([22]) -> ();
drop<Snapshot<Array<felt252>>>([16]) -> ();
store_temp<RangeCheck>([4]) -> ([63]);
store_temp<GasBuiltin>([20]) -> ([64]);
F3_B7:
redeposit_gas([64]) -> ([65]);
array_new<felt252>() -> ([66]);
const_as_immediate<Const<felt252, 485748461484230571791265682659113160264223489397539653310998840191492913>>() -> ([67]);
store_temp<felt252>([67]) -> ([67]);
array_append<felt252>([66], [67]) -> ([68]);
struct_construct<core::panics::Panic>() -> ([69]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([69], [68]) -> ([70]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([70]) -> ([71]);
store_temp<RangeCheck>([63]) -> ([63]);
store_temp<GasBuiltin>([65]) -> ([65]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([71]) -> ([71]);
return([63], [65], [2], [71]);
F3_B8:
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
store_temp<RangeCheck>([6]) -> ([61]);
store_temp<GasBuiltin>([7]) -> ([62]);
F3_B9:
redeposit_gas([62]) -> ([72]);
array_new<felt252>() -> ([73]);
const_as_immediate<Const<felt252, 375233589013918064796019>>() -> ([74]);
store_temp<felt252>([74]) -> ([74]);
array_append<felt252>([73], [74]) -> ([75]);
struct_construct<core::panics::Panic>() -> ([76]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([76], [75]) -> ([77]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([77]) -> ([78]);
store_temp<RangeCheck>([61]) -> ([61]);
store_temp<GasBuiltin>([72]) -> ([72]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([78]) -> ([78]);
return([61], [72], [2], [78]);
F4:
revoke_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) F4_B8([6], [7]) };
branch_align() -> ();
redeposit_gas([5]) -> ([8]);
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([9]);
enable_ap_tracking() -> ();
store_temp<RangeCheck>([4]) -> ([4]);
store_temp<GasBuiltin>([8]) -> ([8]);
array_snapshot_pop_front<felt252>([9]) { fallthrough([10], [11]) F4_B0([12]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([11]) -> ([13]);
store_temp<Snapshot<Array<felt252>>>([10]) -> ([14]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([13]) -> ([15]);
jump() { F4_B1() };
F4_B0:
branch_align() -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([16]) -> ([17]);
store_temp<Snapshot<Array<felt252>>>([12]) -> ([14]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([17]) -> ([15]);
F4_B1:
redeposit_gas([8]) -> ([18]);
store_temp<GasBuiltin>([18]) -> ([18]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([15]) { fallthrough([19]) F4_B6([20]) };
branch_align() -> ();
disable_ap_tracking() -> ();
redeposit_gas([18]) -> ([21]);
unbox<felt252>([19]) -> ([22]);
rename<felt252>([22]) -> ([23]);
store_temp<felt252>([23]) -> ([23]);
store_temp<GasBuiltin>([21]) -> ([21]);
u128s_from_felt252([4], [23]) { fallthrough([24], [25]) F4_B5([26], [27], [28]) };
branch_align() -> ();
redeposit_gas([21]) -> ([29]);
store_temp<RangeCheck>([24]) -> ([24]);
store_temp<GasBuiltin>([29]) -> ([29]);
array_snapshot_pop_front<felt252>([14]) { fallthrough([30], [31]) F4_B2([32]) };
branch_align() -> ();
drop<Snapshot<Array<felt252>>>([30]) -> ();
drop<Box<felt252>>([31]) -> ();
drop<u128>([25]) -> ();
redeposit_gas([29]) -> ([33]);
array_new<felt252>() -> ([34]);
const_as_immediate<Const<felt252, 7733229381460288120802334208475838166080759535023995805565484692595>>() -> ([35]);
store_temp<felt252>([35]) -> ([35]);
array_append<felt252>([34], [35]) -> ([36]);
struct_construct<core::panics::Panic>() -> ([37]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([37], [36]) -> ([38]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([38]) -> ([39]);
store_temp<RangeCheck>([24]) -> ([24]);
store_temp<GasBuiltin>([33]) -> ([33]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([39]) -> ([39]);
return([24], [33], [2], [39]);
F4_B2:
branch_align() -> ();
drop<Snapshot<Array<felt252>>>([32]) -> ();
redeposit_gas([29]) -> ([40]);
get_builtin_costs() -> ([41]);
store_temp<GasBuiltin>([40]) -> ([40]);
store_temp<BuiltinCosts>([41]) -> ([41]);
withdraw_gas_all([24], [40], [41]) { fallthrough([42], [43]) F4_B4([44], [45]) };
branch_align() -> ();
redeposit_gas([43]) -> ([46]);
storage_base_address_const<223925651276572801467025322450506123433664924558092583619131301620304795732>() -> ([47]);
u128_to_felt252([25]) -> ([48]);
storage_address_from_base([47]) -> ([49]);
const_as_immediate<Const<u32, 0>>() -> ([50]);
store_temp<GasBuiltin>([46]) -> ([46]);
store_temp<u32>([50]) -> ([50]);
store_temp<StorageAddress>([49]) -> ([49]);
store_temp<RangeCheck>([42]) -> ([42]);
storage_write_syscall([46], [2], [50], [49], [48]) { fallthrough([51], [52]) F4_B3([53], [54], [55]) };
branch_align() -> ();
store_temp<GasBuiltin>([51]) -> ([51]);
redeposit_gas([51]) -> ([56]);
array_new<felt252>() -> ([57]);
snapshot_take<Array<felt252>>([57]) -> ([58], [59]);
drop<Array<felt252>>([58]) -> ();
struct_construct<core::array::Span::<core::felt252>>([59]) -> ([60]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([60]) -> ([61]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([61]) -> ([62]);
store_temp<RangeCheck>([42]) -> ([42]);
store_temp<GasBuiltin>([56]) -> ([56]);
store_temp<System>([52]) -> ([52]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([62]) -> ([62]);
return([42], [56], [52], [62]);
F4_B3:
branch_align() -> ();
store_temp<GasBuiltin>([53]) -> ([53]);
redeposit_gas([53]) -> ([63]);
struct_construct<core::panics::Panic>() -> ([64]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([64], [55]) -> ([65]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([65]) -> ([66]);
store_temp<RangeCheck>([42]) -> ([42]);
store_temp<GasBuiltin>([63]) -> ([63]);
store_temp<System>([54]) -> ([54]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([66]) -> ([66]);
return([42], [63], [54], [66]);
F4_B4:
branch_align() -> ();
drop<u128>([25]) -> ();
store_temp<RangeCheck>([44]) -> ([67]);
store_temp<GasBuiltin>([45]) -> ([68]);
jump() { F4_B9() };
F4_B5:
branch_align() -> ();
drop<u128>([27]) -> ();
drop<u128>([28]) -> ();
drop<Snapshot<Array<felt252>>>([14]) -> ();
store_temp<RangeCheck>([26]) -> ([69]);
store_temp<GasBuiltin>([21]) -> ([70]);
jump() { F4_B7() };
F4_B6:
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([20]) -> ();
drop<Snapshot<Array<felt252>>>([14]) -> ();
store_temp<RangeCheck>([4]) -> ([69]);
store_temp<GasBuiltin>([18]) -> ([70]);
F4_B7:
redeposit_gas([70]) -> ([71]);
array_new<felt252>() -> ([72]);
const_as_immediate<Const<felt252, 485748461484230571791265682659113160264223489397539653310998840191492913>>() -> ([73]);
store_temp<felt252>([73]) -> ([73]);
array_append<felt252>([72], [73]) -> ([74]);
struct_construct<core::panics::Panic>() -> ([75]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([75], [74]) -> ([76]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([76]) -> ([77]);
store_temp<RangeCheck>([69]) -> ([69]);
store_temp<GasBuiltin>([71]) -> ([71]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([77]) -> ([77]);
return([69], [71], [2], [77]);
F4_B8:
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
store_temp<RangeCheck>([6]) -> ([67]);
store_temp<GasBuiltin>([7]) -> ([68]);
F4_B9:
redeposit_gas([68]) -> ([78]);
array_new<felt252>() -> ([79]);
const_as_immediate<Const<felt252, 375233589013918064796019>>() -> ([80]);
store_temp<felt252>([80]) -> ([80]);
array_append<felt252>([79], [80]) -> ([81]);
struct_construct<core::panics::Panic>() -> ([82]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([82], [81]) -> ([83]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([83]) -> ([84]);
store_temp<RangeCheck>([67]) -> ([67]);
store_temp<GasBuiltin>([78]) -> ([78]);
store_temp<System>([2]) -> ([2]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([84]) -> ([84]);
return([67], [78], [2], [84]);
F5:
storage_base_address_const<223925651276572801467025322450506123433664924558092583619131301620304795732>() -> ([5]);
struct_construct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>>([5]) -> ([6]);
snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>>([6]) -> ([7], [8]);
drop<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>>([7]) -> ();
struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>>([8]) -> ([9]);
rename<StorageBaseAddress>([9]) -> ([10]);
storage_address_from_base([10]) -> ([11]);
const_as_immediate<Const<u32, 0>>() -> ([12]);
store_temp<u32>([12]) -> ([12]);
store_temp<StorageAddress>([11]) -> ([11]);
storage_read_syscall([1], [2], [12], [11]) { fallthrough([13], [14], [15]) F5_B4([16], [17], [18]) };
branch_align() -> ();
store_temp<GasBuiltin>([13]) -> ([13]);
redeposit_gas([13]) -> ([19]);
store_temp<felt252>([15]) -> ([15]);
store_temp<System>([14]) -> ([14]);
store_temp<GasBuiltin>([19]) -> ([19]);
u128s_from_felt252([0], [15]) { fallthrough([20], [21]) F5_B3([22], [23], [24]) };
branch_align() -> ();
redeposit_gas([19]) -> ([25]);
dup<u128>([4]) -> ([4], [26]);
store_temp<GasBuiltin>([25]) -> ([25]);
u128_overflowing_add([20], [21], [26]) { fallthrough([27], [28]) F5_B2([29], [30]) };
branch_align() -> ();
redeposit_gas([25]) -> ([31]);
storage_base_address_const<223925651276572801467025322450506123433664924558092583619131301620304795732>() -> ([32]);
u128_to_felt252([28]) -> ([33]);
storage_address_from_base([32]) -> ([34]);
const_as_immediate<Const<u32, 0>>() -> ([35]);
store_temp<GasBuiltin>([31]) -> ([31]);
store_temp<u32>([35]) -> ([35]);
store_temp<StorageAddress>([34]) -> ([34]);
store_temp<RangeCheck>([27]) -> ([27]);
storage_write_syscall([31], [14], [35], [34], [33]) { fallthrough([36], [37]) F5_B1([38], [39], [40]) };
branch_align() -> ();
store_temp<GasBuiltin>([36]) -> ([36]);
redeposit_gas([36]) -> ([41]);
array_new<felt252>() -> ([42]);
array_new<felt252>() -> ([43]);
struct_construct<cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterIncreased>([4]) -> ([44]);
enum_init<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event, 0>([44]) -> ([45]);
snapshot_take<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>([45]) -> ([46], [47]);
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>([46]) -> ();
store_temp<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>([47]) -> ([47]);
store_temp<Array<felt252>>([42]) -> ([42]);
store_temp<Array<felt252>>([43]) -> ([43]);
function_call<user@cairo_level_tests::contracts::upgradable_counter::counter_contract::EventIsEvent::append_keys_and_data>([47], [42], [43]) -> ([48], [49]);
snapshot_take<Array<felt252>>([48]) -> ([50], [51]);
drop<Array<felt252>>([50]) -> ();
snapshot_take<Array<felt252>>([49]) -> ([52], [53]);
drop<Array<felt252>>([52]) -> ();
struct_construct<core::array::Span::<core::felt252>>([51]) -> ([54]);
struct_construct<core::array::Span::<core::felt252>>([53]) -> ([55]);
store_temp<GasBuiltin>([41]) -> ([41]);
emit_event_syscall([41], [37], [54], [55]) { fallthrough([56], [57]) F5_B0([58], [59], [60]) };
branch_align() -> ();
store_temp<GasBuiltin>([56]) -> ([56]);
redeposit_gas([56]) -> ([61]);
struct_construct<Unit>() -> ([62]);
struct_construct<Tuple<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, Unit>>([3], [62]) -> ([63]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 0>([63]) -> ([64]);
store_temp<RangeCheck>([27]) -> ([27]);
store_temp<GasBuiltin>([61]) -> ([61]);
store_temp<System>([57]) -> ([57]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>([64]) -> ([64]);
return([27], [61], [57], [64]);
F5_B0:
branch_align() -> ();
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>([3]) -> ();
store_temp<GasBuiltin>([58]) -> ([58]);
redeposit_gas([58]) -> ([65]);
struct_construct<core::panics::Panic>() -> ([66]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([66], [60]) -> ([67]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 1>([67]) -> ([68]);
store_temp<RangeCheck>([27]) -> ([27]);
store_temp<GasBuiltin>([65]) -> ([65]);
store_temp<System>([59]) -> ([59]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>([68]) -> ([68]);
return([27], [65], [59], [68]);
F5_B1:
branch_align() -> ();
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>([3]) -> ();
drop<u128>([4]) -> ();
store_temp<GasBuiltin>([38]) -> ([38]);
redeposit_gas([38]) -> ([69]);
struct_construct<core::panics::Panic>() -> ([70]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([70], [40]) -> ([71]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 1>([71]) -> ([72]);
store_temp<RangeCheck>([27]) -> ([27]);
store_temp<GasBuiltin>([69]) -> ([69]);
store_temp<System>([39]) -> ([39]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>([72]) -> ([72]);
return([27], [69], [39], [72]);
F5_B2:
branch_align() -> ();
drop<u128>([30]) -> ();
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>([3]) -> ();
drop<u128>([4]) -> ();
redeposit_gas([25]) -> ([73]);
array_new<felt252>() -> ([74]);
const_as_immediate<Const<felt252, 39878429859757942499084499860145094553463>>() -> ([75]);
store_temp<felt252>([75]) -> ([75]);
array_append<felt252>([74], [75]) -> ([76]);
struct_construct<core::panics::Panic>() -> ([77]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([77], [76]) -> ([78]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 1>([78]) -> ([79]);
store_temp<RangeCheck>([29]) -> ([29]);
store_temp<GasBuiltin>([73]) -> ([73]);
store_temp<System>([14]) -> ([14]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>([79]) -> ([79]);
return([29], [73], [14], [79]);
F5_B3:
branch_align() -> ();
drop<u128>([23]) -> ();
drop<u128>([24]) -> ();
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>([3]) -> ();
drop<u128>([4]) -> ();
array_new<felt252>() -> ([80]);
const_as_immediate<Const<felt252, 476442828812030857794232422692155113556837216824>>() -> ([81]);
store_temp<felt252>([81]) -> ([81]);
array_append<felt252>([80], [81]) -> ([82]);
store_temp<RangeCheck>([22]) -> ([83]);
store_temp<GasBuiltin>([19]) -> ([84]);
store_temp<System>([14]) -> ([85]);
store_temp<Array<felt252>>([82]) -> ([86]);
jump() { F5_B5() };
F5_B4:
branch_align() -> ();
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>([3]) -> ();
drop<u128>([4]) -> ();
store_temp<RangeCheck>([0]) -> ([83]);
store_temp<GasBuiltin>([16]) -> ([84]);
store_temp<System>([17]) -> ([85]);
store_temp<Array<felt252>>([18]) -> ([86]);
F5_B5:
redeposit_gas([84]) -> ([87]);
struct_construct<core::panics::Panic>() -> ([88]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([88], [86]) -> ([89]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 1>([89]) -> ([90]);
store_temp<RangeCheck>([83]) -> ([83]);
store_temp<GasBuiltin>([87]) -> ([87]);
store_temp<System>([85]) -> ([85]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>([90]) -> ([90]);
return([83], [87], [85], [90]);
F6:
storage_base_address_const<223925651276572801467025322450506123433664924558092583619131301620304795732>() -> ([5]);
struct_construct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>>([5]) -> ([6]);
snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>>([6]) -> ([7], [8]);
drop<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>>([7]) -> ();
struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::integer::u128>>>([8]) -> ([9]);
rename<StorageBaseAddress>([9]) -> ([10]);
storage_address_from_base([10]) -> ([11]);
const_as_immediate<Const<u32, 0>>() -> ([12]);
store_temp<u32>([12]) -> ([12]);
store_temp<StorageAddress>([11]) -> ([11]);
storage_read_syscall([1], [2], [12], [11]) { fallthrough([13], [14], [15]) F6_B4([16], [17], [18]) };
branch_align() -> ();
store_temp<GasBuiltin>([13]) -> ([13]);
redeposit_gas([13]) -> ([19]);
store_temp<felt252>([15]) -> ([15]);
store_temp<System>([14]) -> ([14]);
store_temp<GasBuiltin>([19]) -> ([19]);
u128s_from_felt252([0], [15]) { fallthrough([20], [21]) F6_B3([22], [23], [24]) };
branch_align() -> ();
redeposit_gas([19]) -> ([25]);
dup<u128>([4]) -> ([4], [26]);
store_temp<GasBuiltin>([25]) -> ([25]);
u128_overflowing_sub([20], [21], [26]) { fallthrough([27], [28]) F6_B2([29], [30]) };
branch_align() -> ();
redeposit_gas([25]) -> ([31]);
storage_base_address_const<223925651276572801467025322450506123433664924558092583619131301620304795732>() -> ([32]);
u128_to_felt252([28]) -> ([33]);
storage_address_from_base([32]) -> ([34]);
const_as_immediate<Const<u32, 0>>() -> ([35]);
store_temp<GasBuiltin>([31]) -> ([31]);
store_temp<u32>([35]) -> ([35]);
store_temp<StorageAddress>([34]) -> ([34]);
store_temp<RangeCheck>([27]) -> ([27]);
storage_write_syscall([31], [14], [35], [34], [33]) { fallthrough([36], [37]) F6_B1([38], [39], [40]) };
branch_align() -> ();
store_temp<GasBuiltin>([36]) -> ([36]);
redeposit_gas([36]) -> ([41]);
array_new<felt252>() -> ([42]);
array_new<felt252>() -> ([43]);
struct_construct<cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterDecreased>([4]) -> ([44]);
enum_init<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event, 1>([44]) -> ([45]);
snapshot_take<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>([45]) -> ([46], [47]);
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>([46]) -> ();
store_temp<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>([47]) -> ([47]);
store_temp<Array<felt252>>([42]) -> ([42]);
store_temp<Array<felt252>>([43]) -> ([43]);
function_call<user@cairo_level_tests::contracts::upgradable_counter::counter_contract::EventIsEvent::append_keys_and_data>([47], [42], [43]) -> ([48], [49]);
snapshot_take<Array<felt252>>([48]) -> ([50], [51]);
drop<Array<felt252>>([50]) -> ();
snapshot_take<Array<felt252>>([49]) -> ([52], [53]);
drop<Array<felt252>>([52]) -> ();
struct_construct<core::array::Span::<core::felt252>>([51]) -> ([54]);
struct_construct<core::array::Span::<core::felt252>>([53]) -> ([55]);
store_temp<GasBuiltin>([41]) -> ([41]);
emit_event_syscall([41], [37], [54], [55]) { fallthrough([56], [57]) F6_B0([58], [59], [60]) };
branch_align() -> ();
store_temp<GasBuiltin>([56]) -> ([56]);
redeposit_gas([56]) -> ([61]);
struct_construct<Unit>() -> ([62]);
struct_construct<Tuple<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, Unit>>([3], [62]) -> ([63]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 0>([63]) -> ([64]);
store_temp<RangeCheck>([27]) -> ([27]);
store_temp<GasBuiltin>([61]) -> ([61]);
store_temp<System>([57]) -> ([57]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>([64]) -> ([64]);
return([27], [61], [57], [64]);
F6_B0:
branch_align() -> ();
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>([3]) -> ();
store_temp<GasBuiltin>([58]) -> ([58]);
redeposit_gas([58]) -> ([65]);
struct_construct<core::panics::Panic>() -> ([66]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([66], [60]) -> ([67]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 1>([67]) -> ([68]);
store_temp<RangeCheck>([27]) -> ([27]);
store_temp<GasBuiltin>([65]) -> ([65]);
store_temp<System>([59]) -> ([59]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>([68]) -> ([68]);
return([27], [65], [59], [68]);
F6_B1:
branch_align() -> ();
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>([3]) -> ();
drop<u128>([4]) -> ();
store_temp<GasBuiltin>([38]) -> ([38]);
redeposit_gas([38]) -> ([69]);
struct_construct<core::panics::Panic>() -> ([70]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([70], [40]) -> ([71]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 1>([71]) -> ([72]);
store_temp<RangeCheck>([27]) -> ([27]);
store_temp<GasBuiltin>([69]) -> ([69]);
store_temp<System>([39]) -> ([39]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>([72]) -> ([72]);
return([27], [69], [39], [72]);
F6_B2:
branch_align() -> ();
drop<u128>([30]) -> ();
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>([3]) -> ();
drop<u128>([4]) -> ();
redeposit_gas([25]) -> ([73]);
array_new<felt252>() -> ([74]);
const_as_immediate<Const<felt252, 39878429859763533771555484554338820190071>>() -> ([75]);
store_temp<felt252>([75]) -> ([75]);
array_append<felt252>([74], [75]) -> ([76]);
struct_construct<core::panics::Panic>() -> ([77]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([77], [76]) -> ([78]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 1>([78]) -> ([79]);
store_temp<RangeCheck>([29]) -> ([29]);
store_temp<GasBuiltin>([73]) -> ([73]);
store_temp<System>([14]) -> ([14]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>([79]) -> ([79]);
return([29], [73], [14], [79]);
F6_B3:
branch_align() -> ();
drop<u128>([23]) -> ();
drop<u128>([24]) -> ();
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>([3]) -> ();
drop<u128>([4]) -> ();
array_new<felt252>() -> ([80]);
const_as_immediate<Const<felt252, 476442828812030857794232422692155113556837216824>>() -> ([81]);
store_temp<felt252>([81]) -> ([81]);
array_append<felt252>([80], [81]) -> ([82]);
store_temp<RangeCheck>([22]) -> ([83]);
store_temp<GasBuiltin>([19]) -> ([84]);
store_temp<System>([14]) -> ([85]);
store_temp<Array<felt252>>([82]) -> ([86]);
jump() { F6_B5() };
F6_B4:
branch_align() -> ();
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>([3]) -> ();
drop<u128>([4]) -> ();
store_temp<RangeCheck>([0]) -> ([83]);
store_temp<GasBuiltin>([16]) -> ([84]);
store_temp<System>([17]) -> ([85]);
store_temp<Array<felt252>>([18]) -> ([86]);
F6_B5:
redeposit_gas([84]) -> ([87]);
struct_construct<core::panics::Panic>() -> ([88]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([88], [86]) -> ([89]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>, 1>([89]) -> ([90]);
store_temp<RangeCheck>([83]) -> ([83]);
store_temp<GasBuiltin>([87]) -> ([87]);
store_temp<System>([85]) -> ([85]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>>([90]) -> ([90]);
return([83], [87], [85], [90]);
F7:
struct_construct<cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>() -> ([5]);
snapshot_take<cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>([5]) -> ([6], [7]);
drop<cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>([6]) -> ();
store_temp<RangeCheck>([0]) -> ([0]);
store_temp<GasBuiltin>([1]) -> ([1]);
store_temp<System>([2]) -> ([2]);
function_call<user@cairo_level_tests::components::ownable::ownable::OwnableHelperImpl::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_ownable_comp>::validate_ownership>([0], [1], [2], [7]) -> ([8], [9], [10], [11]);
enum_match<core::panics::PanicResult::<((),)>>([11]) { fallthrough([12]) F7_B6([13]) };
branch_align() -> ();
drop<Tuple<Unit>>([12]) -> ();
redeposit_gas([9]) -> ([14]);
dup<ClassHash>([4]) -> ([4], [15]);
store_temp<GasBuiltin>([14]) -> ([14]);
replace_class_syscall([14], [10], [15]) { fallthrough([16], [17]) F7_B5([18], [19], [20]) };
branch_align() -> ();
store_temp<GasBuiltin>([16]) -> ([16]);
redeposit_gas([16]) -> ([21]);
storage_base_address_const<122428454986788377403067048277966546957631643527964214274804601770769789817>() -> ([22]);
struct_construct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>>>([22]) -> ([23]);
snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>>>([23]) -> ([24], [25]);
drop<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>>>([24]) -> ();
struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::starknet::storage::Mutable::<core::starknet::class_hash::ClassHash>>>([25]) -> ([26]);
rename<StorageBaseAddress>([26]) -> ([27]);
storage_address_from_base([27]) -> ([28]);
const_as_immediate<Const<u32, 0>>() -> ([29]);
store_temp<GasBuiltin>([21]) -> ([21]);
store_temp<u32>([29]) -> ([29]);
store_temp<StorageAddress>([28]) -> ([28]);
storage_read_syscall([21], [17], [29], [28]) { fallthrough([30], [31], [32]) F7_B3([33], [34], [35]) };
branch_align() -> ();
store_temp<GasBuiltin>([30]) -> ([30]);
redeposit_gas([30]) -> ([36]);
store_temp<felt252>([32]) -> ([32]);
store_temp<System>([31]) -> ([31]);
store_temp<GasBuiltin>([36]) -> ([36]);
class_hash_try_from_felt252([8], [32]) { fallthrough([37], [38]) F7_B2([39]) };
branch_align() -> ();
redeposit_gas([36]) -> ([40]);
array_new<felt252>() -> ([41]);
array_new<felt252>() -> ([42]);
dup<ClassHash>([4]) -> ([4], [43]);
struct_construct<cairo_level_tests::components::upgradable::upgradable::ContractUpgraded>([38], [43]) -> ([44]);
enum_init<cairo_level_tests::components::upgradable::upgradable::Event, 0>([44]) -> ([45]);
enum_init<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event, 2>([45]) -> ([46]);
snapshot_take<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>([46]) -> ([47], [48]);
drop<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>([47]) -> ();
store_temp<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>([48]) -> ([48]);
store_temp<Array<felt252>>([41]) -> ([41]);
store_temp<Array<felt252>>([42]) -> ([42]);
function_call<user@cairo_level_tests::contracts::upgradable_counter::counter_contract::EventIsEvent::append_keys_and_data>([48], [41], [42]) -> ([49], [50]);
snapshot_take<Array<felt252>>([49]) -> ([51], [52]);
drop<Array<felt252>>([51]) -> ();
snapshot_take<Array<felt252>>([50]) -> ([53], [54]);
drop<Array<felt252>>([53]) -> ();
struct_construct<core::array::Span::<core::felt252>>([52]) -> ([55]);
struct_construct<core::array::Span::<core::felt252>>([54]) -> ([56]);
store_temp<GasBuiltin>([40]) -> ([40]);
store_temp<RangeCheck>([37]) -> ([37]);
emit_event_syscall([40], [31], [55], [56]) { fallthrough([57], [58]) F7_B1([59], [60], [61]) };
branch_align() -> ();
store_temp<GasBuiltin>([57]) -> ([57]);
redeposit_gas([57]) -> ([62]);
storage_base_address_const<122428454986788377403067048277966546957631643527964214274804601770769789817>() -> ([63]);
class_hash_to_felt252([4]) -> ([64]);
storage_address_from_base([63]) -> ([65]);
const_as_immediate<Const<u32, 0>>() -> ([66]);
store_temp<GasBuiltin>([62]) -> ([62]);
store_temp<u32>([66]) -> ([66]);
store_temp<StorageAddress>([65]) -> ([65]);
storage_write_syscall([62], [58], [66], [65], [64]) { fallthrough([67], [68]) F7_B0([69], [70], [71]) };
branch_align() -> ();
store_temp<GasBuiltin>([67]) -> ([67]);
redeposit_gas([67]) -> ([72]);
struct_construct<Unit>() -> ([73]);
struct_construct<Tuple<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, Unit>>([3], [73]) -> ([74]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>, 0>([74]) -> ([75]);
store_temp<RangeCheck>([37]) -> ([37]);
store_temp<GasBuiltin>([72]) -> ([72]);
store_temp<System>([68]) -> ([68]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>>([75]) -> ([75]);
return([37], [72], [68], [75]);
F7_B0:
branch_align() -> ();
drop<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>([3]) -> ();
store_temp<GasBuiltin>([69]) -> ([69]);
redeposit_gas([69]) -> ([76]);
struct_construct<core::panics::Panic>() -> ([77]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([77], [71]) -> ([78]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>, 1>([78]) -> ([79]);
store_temp<RangeCheck>([37]) -> ([37]);
store_temp<GasBuiltin>([76]) -> ([76]);
store_temp<System>([70]) -> ([70]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>>([79]) -> ([79]);
return([37], [76], [70], [79]);
F7_B1:
branch_align() -> ();
drop<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>([3]) -> ();
drop<ClassHash>([4]) -> ();
store_temp<GasBuiltin>([59]) -> ([59]);
redeposit_gas([59]) -> ([80]);
struct_construct<core::panics::Panic>() -> ([81]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([81], [61]) -> ([82]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>, 1>([82]) -> ([83]);
store_temp<RangeCheck>([37]) -> ([37]);
store_temp<GasBuiltin>([80]) -> ([80]);
store_temp<System>([60]) -> ([60]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>>([83]) -> ([83]);
return([37], [80], [60], [83]);
F7_B2:
branch_align() -> ();
drop<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>([3]) -> ();
drop<ClassHash>([4]) -> ();
array_new<felt252>() -> ([84]);
const_as_immediate<Const<felt252, 6214282646402414199069093229416>>() -> ([85]);
store_temp<felt252>([85]) -> ([85]);
array_append<felt252>([84], [85]) -> ([86]);
store_temp<RangeCheck>([39]) -> ([87]);
store_temp<GasBuiltin>([36]) -> ([88]);
store_temp<System>([31]) -> ([89]);
store_temp<Array<felt252>>([86]) -> ([90]);
jump() { F7_B4() };
F7_B3:
branch_align() -> ();
drop<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>([3]) -> ();
drop<ClassHash>([4]) -> ();
store_temp<RangeCheck>([8]) -> ([87]);
store_temp<GasBuiltin>([33]) -> ([88]);
store_temp<System>([34]) -> ([89]);
store_temp<Array<felt252>>([35]) -> ([90]);
F7_B4:
redeposit_gas([88]) -> ([91]);
struct_construct<core::panics::Panic>() -> ([92]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([92], [90]) -> ([93]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>, 1>([93]) -> ([94]);
store_temp<RangeCheck>([87]) -> ([87]);
store_temp<GasBuiltin>([91]) -> ([91]);
store_temp<System>([89]) -> ([89]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>>([94]) -> ([94]);
return([87], [91], [89], [94]);
F7_B5:
branch_align() -> ();
drop<Array<felt252>>([20]) -> ();
drop<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>([3]) -> ();
drop<ClassHash>([4]) -> ();
store_temp<GasBuiltin>([18]) -> ([18]);
redeposit_gas([18]) -> ([95]);
array_new<felt252>() -> ([96]);
const_as_immediate<Const<felt252, 30828113188794245257250221355944970489240709081949230>>() -> ([97]);
store_temp<felt252>([97]) -> ([97]);
array_append<felt252>([96], [97]) -> ([98]);
struct_construct<core::panics::Panic>() -> ([99]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([99], [98]) -> ([100]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>, 1>([100]) -> ([101]);
store_temp<RangeCheck>([8]) -> ([8]);
store_temp<GasBuiltin>([95]) -> ([95]);
store_temp<System>([19]) -> ([19]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>>([101]) -> ([101]);
return([8], [95], [19], [101]);
F7_B6:
branch_align() -> ();
drop<cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>([3]) -> ();
drop<ClassHash>([4]) -> ();
redeposit_gas([9]) -> ([102]);
enum_init<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>, 1>([13]) -> ([103]);
store_temp<RangeCheck>([8]) -> ([8]);
store_temp<GasBuiltin>([102]) -> ([102]);
store_temp<System>([10]) -> ([10]);
store_temp<core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>>([103]) -> ([103]);
return([8], [102], [10], [103]);
F8:
enum_match<cairo_level_tests::contracts::upgradable_counter::counter_contract::Event>([0]) { fallthrough([3]) F8_B0([4]) F8_B1([5]) F8_B2([6]) };
branch_align() -> ();
const_as_immediate<Const<felt252, 373502242078911797297509776863854163679541038429883461174855360031674187824>>() -> ([7]);
store_temp<felt252>([7]) -> ([7]);
array_append<felt252>([1], [7]) -> ([8]);
struct_deconstruct<cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterIncreased>([3]) -> ([9]);
rename<u128>([9]) -> ([10]);
u128_to_felt252([10]) -> ([11]);
array_append<felt252>([2], [11]) -> ([12]);
store_temp<Array<felt252>>([8]) -> ([8]);
store_temp<Array<felt252>>([12]) -> ([12]);
return([8], [12]);
F8_B0:
branch_align() -> ();
const_as_immediate<Const<felt252, 364451368385661037075321874576483508309644891427381190745986300576661518140>>() -> ([13]);
store_temp<felt252>([13]) -> ([13]);
array_append<felt252>([1], [13]) -> ([14]);
struct_deconstruct<cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterDecreased>([4]) -> ([15]);
rename<u128>([15]) -> ([16]);
u128_to_felt252([16]) -> ([17]);
array_append<felt252>([2], [17]) -> ([18]);
store_temp<Array<felt252>>([14]) -> ([14]);
store_temp<Array<felt252>>([18]) -> ([18]);
return([14], [18]);
F8_B1:
branch_align() -> ();
const_as_immediate<Const<felt252, 20679572143145055578227390170220963587562133719472661821696905634408685712>>() -> ([19]);
store_temp<felt252>([19]) -> ([19]);
array_append<felt252>([1], [19]) -> ([20]);
enum_match<cairo_level_tests::components::upgradable::upgradable::Event>([5]) -> ([21]);
branch_align() -> ();
const_as_immediate<Const<felt252, 230192814789850291994621760810535338129013919481720626953423731987611497567>>() -> ([22]);
store_temp<felt252>([22]) -> ([22]);
array_append<felt252>([20], [22]) -> ([23]);
dup<cairo_level_tests::components::upgradable::upgradable::ContractUpgraded>([21]) -> ([21], [24]);
struct_deconstruct<cairo_level_tests::components::upgradable::upgradable::ContractUpgraded>([24]) -> ([25], [26]);
drop<ClassHash>([26]) -> ();
rename<ClassHash>([25]) -> ([27]);
class_hash_to_felt252([27]) -> ([28]);
array_append<felt252>([2], [28]) -> ([29]);
struct_deconstruct<cairo_level_tests::components::upgradable::upgradable::ContractUpgraded>([21]) -> ([30], [31]);
drop<ClassHash>([30]) -> ();
rename<ClassHash>([31]) -> ([32]);
class_hash_to_felt252([32]) -> ([33]);
array_append<felt252>([29], [33]) -> ([34]);
store_temp<Array<felt252>>([23]) -> ([23]);
store_temp<Array<felt252>>([34]) -> ([34]);
return([23], [34]);
F8_B2:
branch_align() -> ();
const_as_immediate<Const<felt252, 609027926996394448897110979893076510243972918373374893656125704091767682544>>() -> ([35]);
store_temp<felt252>([35]) -> ([35]);
array_append<felt252>([1], [35]) -> ([36]);
enum_match<cairo_level_tests::components::ownable::ownable::Event>([6]) { };
F9:
drop<cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>>([3]) -> ();
storage_base_address_const<907111799109225873672206001743429201758838553092777504370151546632448000192>() -> ([4]);
struct_construct<core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress>>([4]) -> ([5]);
snapshot_take<core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress>>([5]) -> ([6], [7]);
drop<core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress>>([6]) -> ();
struct_deconstruct<core::starknet::storage::StoragePointer0Offset::<core::starknet::contract_address::ContractAddress>>([7]) -> ([8]);
rename<StorageBaseAddress>([8]) -> ([9]);
storage_address_from_base([9]) -> ([10]);
const_as_immediate<Const<u32, 0>>() -> ([11]);
store_temp<u32>([11]) -> ([11]);
store_temp<StorageAddress>([10]) -> ([10]);
storage_read_syscall([1], [2], [11], [10]) { fallthrough([12], [13], [14]) F9_B3([15], [16], [17]) };
branch_align() -> ();
store_temp<GasBuiltin>([12]) -> ([12]);
redeposit_gas([12]) -> ([18]);
store_temp<felt252>([14]) -> ([14]);
store_temp<System>([13]) -> ([13]);
store_temp<GasBuiltin>([18]) -> ([18]);
contract_address_try_from_felt252([0], [14]) { fallthrough([19], [20]) F9_B2([21]) };
branch_align() -> ();
redeposit_gas([18]) -> ([22]);
store_temp<GasBuiltin>([22]) -> ([22]);
store_temp<RangeCheck>([19]) -> ([19]);
get_execution_info_v2_syscall([22], [13]) { fallthrough([23], [24], [25]) F9_B1([26], [27], [28]) };
branch_align() -> ();
store_temp<GasBuiltin>([23]) -> ([23]);
redeposit_gas([23]) -> ([29]);
store_temp<Box<core::starknet::info::v2::ExecutionInfo>>([25]) -> ([25]);
unbox<core::starknet::info::v2::ExecutionInfo>([25]) -> ([30]);
contract_address_to_felt252([20]) -> ([31]);
struct_deconstruct<core::starknet::info::v2::ExecutionInfo>([30]) -> ([32], [33], [34], [35], [36]);
drop<Box<core::starknet::info::BlockInfo>>([32]) -> ();
drop<Box<core::starknet::info::v2::TxInfo>>([33]) -> ();
drop<ContractAddress>([35]) -> ();
drop<felt252>([36]) -> ();
contract_address_to_felt252([34]) -> ([37]);
store_temp<felt252>([37]) -> ([37]);
felt252_sub([31], [37]) -> ([38]);
store_temp<felt252>([38]) -> ([38]);
store_temp<System>([24]) -> ([24]);
store_temp<GasBuiltin>([29]) -> ([29]);
felt252_is_zero([38]) { fallthrough() F9_B0([39]) };
branch_align() -> ();
redeposit_gas([29]) -> ([40]);
struct_construct<Unit>() -> ([41]);
struct_construct<Tuple<Unit>>([41]) -> ([42]);
enum_init<core::panics::PanicResult::<((),)>, 0>([42]) -> ([43]);
store_temp<RangeCheck>([19]) -> ([19]);
store_temp<GasBuiltin>([40]) -> ([40]);
store_temp<System>([24]) -> ([24]);
store_temp<core::panics::PanicResult::<((),)>>([43]) -> ([43]);
return([19], [40], [24], [43]);
F9_B0:
branch_align() -> ();
drop<NonZero<felt252>>([39]) -> ();
redeposit_gas([29]) -> ([44]);
array_new<felt252>() -> ([45]);
const_as_immediate<Const<felt252, 27063539617145597287547105838>>() -> ([46]);
store_temp<felt252>([46]) -> ([46]);
array_append<felt252>([45], [46]) -> ([47]);
struct_construct<core::panics::Panic>() -> ([48]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([48], [47]) -> ([49]);
enum_init<core::panics::PanicResult::<((),)>, 1>([49]) -> ([50]);
store_temp<RangeCheck>([19]) -> ([19]);
store_temp<GasBuiltin>([44]) -> ([44]);
store_temp<System>([24]) -> ([24]);
store_temp<core::panics::PanicResult::<((),)>>([50]) -> ([50]);
return([19], [44], [24], [50]);
F9_B1:
branch_align() -> ();
drop<ContractAddress>([20]) -> ();
store_temp<GasBuiltin>([26]) -> ([26]);
redeposit_gas([26]) -> ([51]);
struct_construct<core::panics::Panic>() -> ([52]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([52], [28]) -> ([53]);
enum_init<core::panics::PanicResult::<((),)>, 1>([53]) -> ([54]);
store_temp<RangeCheck>([19]) -> ([19]);
store_temp<GasBuiltin>([51]) -> ([51]);
store_temp<System>([27]) -> ([27]);
store_temp<core::panics::PanicResult::<((),)>>([54]) -> ([54]);
return([19], [51], [27], [54]);
F9_B2:
branch_align() -> ();
array_new<felt252>() -> ([55]);
const_as_immediate<Const<felt252, 1749165063169615148890104124711417950509560691>>() -> ([56]);
store_temp<felt252>([56]) -> ([56]);
array_append<felt252>([55], [56]) -> ([57]);
store_temp<RangeCheck>([21]) -> ([58]);
store_temp<GasBuiltin>([18]) -> ([59]);
store_temp<System>([13]) -> ([60]);
store_temp<Array<felt252>>([57]) -> ([61]);
jump() { F9_B4() };
F9_B3:
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([58]);
store_temp<GasBuiltin>([15]) -> ([59]);
store_temp<System>([16]) -> ([60]);
store_temp<Array<felt252>>([17]) -> ([61]);
F9_B4:
redeposit_gas([59]) -> ([62]);
struct_construct<core::panics::Panic>() -> ([63]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([63], [61]) -> ([64]);
enum_init<core::panics::PanicResult::<((),)>, 1>([64]) -> ([65]);
store_temp<RangeCheck>([58]) -> ([58]);
store_temp<GasBuiltin>([62]) -> ([62]);
store_temp<System>([60]) -> ([60]);
store_temp<core::panics::PanicResult::<((),)>>([65]) -> ([65]);
return([58], [62], [60], [65]);

cairo_level_tests::contracts::upgradable_counter::counter_contract::__wrapper__CounterContract__get_counter@F0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
cairo_level_tests::contracts::upgradable_counter::counter_contract::__wrapper__CounterContract__increase_counter@F1([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
cairo_level_tests::contracts::upgradable_counter::counter_contract::__wrapper__CounterContract__decrease_counter@F2([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
cairo_level_tests::components::upgradable::upgradable::__wrapper__UpgradableImpl__upgrade::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_upgradable_comp, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_ownable_comp, cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractStateDrop, cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractStateUpgradableImpl>@F3([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
cairo_level_tests::contracts::upgradable_counter::counter_contract::__wrapper__constructor@F4([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterContract::increase_counter@F5([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, [4]: u128) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>);
cairo_level_tests::contracts::upgradable_counter::counter_contract::CounterContract::decrease_counter@F6([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, [4]: u128) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, ())>);
cairo_level_tests::components::upgradable::upgradable::Upgradable::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_upgradable_comp, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_ownable_comp>::upgrade@F7([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, [4]: ClassHash) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(cairo_level_tests::components::upgradable::upgradable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>, ())>);
cairo_level_tests::contracts::upgradable_counter::counter_contract::EventIsEvent::append_keys_and_data@F8([0]: cairo_level_tests::contracts::upgradable_counter::counter_contract::Event, [1]: Array<felt252>, [2]: Array<felt252>) -> (Array<felt252>, Array<felt252>);
cairo_level_tests::components::ownable::ownable::OwnableHelperImpl::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState, cairo_level_tests::contracts::upgradable_counter::counter_contract::HasComponentImpl_ownable_comp>::validate_ownership@F9([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: cairo_level_tests::components::ownable::ownable::ComponentState::<cairo_level_tests::contracts::upgradable_counter::counter_contract::ContractState>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<((),)>);
