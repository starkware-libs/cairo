type RangeCheck = RangeCheck [storable: true, drop: false, dup: false, zero_sized: false];
type Array<felt252> = Array<felt252> [storable: true, drop: true, dup: false, zero_sized: false];
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type core::array::Span::<core::felt252> = Struct<ut@[782572820229152792105145177694740816763001980856532159945905090893343825762], Snapshot<Array<felt252>>> [storable: true, drop: true, dup: true, zero_sized: false];
type Tuple<core::array::Span::<core::felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::array::Span::<core::felt252>> [storable: true, drop: true, dup: true, zero_sized: false];
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]> [storable: true, drop: true, dup: true, zero_sized: true];
type cairo_level_tests::contracts::minimal_contract::minimal_contract::ContractState = Struct<ut@[1223120574780935717470737749329807619549781166213122588752729638981143389984]> [storable: true, drop: true, dup: true, zero_sized: true];
type BuiltinCosts = BuiltinCosts [storable: true, drop: true, dup: true, zero_sized: false];
type System = System [storable: true, drop: false, dup: false, zero_sized: false];
type core::panics::Panic = Struct<ut@[640126984585624630990013944782631102820301644699864366139839615702772668018]> [storable: true, drop: true, dup: true, zero_sized: true];
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::panics::Panic, Array<felt252>> [storable: true, drop: true, dup: false, zero_sized: false];
type core::panics::PanicResult::<(core::array::Span::<core::felt252>,)> = Enum<ut@[270671131472959732993844072583327084608513343873724697777364695367457417702], Tuple<core::array::Span::<core::felt252>>, Tuple<core::panics::Panic, Array<felt252>>> [storable: true, drop: true, dup: false, zero_sized: false];
type felt252 = felt252 [storable: true, drop: true, dup: true, zero_sized: false];
type u32 = u32 [storable: true, drop: true, dup: true, zero_sized: false];
type GasBuiltin = GasBuiltin [storable: true, drop: false, dup: false, zero_sized: false];

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc branch_align = branch_align;
libfunc struct_deconstruct<core::array::Span::<core::felt252>> = struct_deconstruct<core::array::Span::<core::felt252>>;
libfunc array_len<felt252> = array_len<felt252>;
libfunc snapshot_take<u32> = snapshot_take<u32>;
libfunc drop<u32> = drop<u32>;
libfunc u32_const<0> = u32_const<0>;
libfunc rename<u32> = rename<u32>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc u32_eq = u32_eq;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>> = store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc struct_construct<cairo_level_tests::contracts::minimal_contract::minimal_contract::ContractState> = struct_construct<cairo_level_tests::contracts::minimal_contract::minimal_contract::ContractState>;
libfunc function_call<user@cairo_level_tests::contracts::minimal_contract::minimal_contract::empty> = function_call<user@cairo_level_tests::contracts::minimal_contract::minimal_contract::empty>;
libfunc drop<cairo_level_tests::contracts::minimal_contract::minimal_contract::ContractState> = drop<cairo_level_tests::contracts::minimal_contract::minimal_contract::ContractState>;
libfunc drop<Unit> = drop<Unit>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc struct_construct<core::array::Span::<core::felt252>> = struct_construct<core::array::Span::<core::felt252>>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>>> = struct_construct<Tuple<core::array::Span::<core::felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc drop<core::array::Span::<core::felt252>> = drop<core::array::Span::<core::felt252>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc store_temp<cairo_level_tests::contracts::minimal_contract::minimal_contract::ContractState> = store_temp<cairo_level_tests::contracts::minimal_contract::minimal_contract::ContractState>;
libfunc store_temp<Unit> = store_temp<Unit>;

revoke_ap_tracking() -> (); // 0
withdraw_gas([0], [1]) { fallthrough([4], [5]) 61([6], [7]) }; // 1
branch_align() -> (); // 2
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]); // 3
array_len<felt252>([8]) -> ([9]); // 4
snapshot_take<u32>([9]) -> ([10], [11]); // 5
drop<u32>([10]) -> (); // 6
u32_const<0>() -> ([12]); // 7
snapshot_take<u32>([12]) -> ([13], [14]); // 8
drop<u32>([13]) -> (); // 9
rename<u32>([11]) -> ([15]); // 10
rename<u32>([14]) -> ([16]); // 11
store_temp<u32>([15]) -> ([15]); // 12
store_temp<RangeCheck>([4]) -> ([4]); // 13
u32_eq([15], [16]) { fallthrough() 28() }; // 14
branch_align() -> (); // 15
array_new<felt252>() -> ([17]); // 16
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([18]); // 17
store_temp<felt252>([18]) -> ([18]); // 18
array_append<felt252>([17], [18]) -> ([19]); // 19
struct_construct<core::panics::Panic>() -> ([20]); // 20
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([20], [19]) -> ([21]); // 21
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([21]) -> ([22]); // 22
store_temp<RangeCheck>([4]) -> ([23]); // 23
store_temp<GasBuiltin>([5]) -> ([24]); // 24
store_temp<System>([2]) -> ([25]); // 25
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([22]) -> ([26]); // 26
return([23], [24], [25], [26]); // 27
branch_align() -> (); // 28
get_builtin_costs() -> ([27]); // 29
store_temp<BuiltinCosts>([27]) -> ([27]); // 30
withdraw_gas_all([4], [5], [27]) { fallthrough([28], [29]) 48([30], [31]) }; // 31
branch_align() -> (); // 32
struct_construct<cairo_level_tests::contracts::minimal_contract::minimal_contract::ContractState>() -> ([32]); // 33
function_call<user@cairo_level_tests::contracts::minimal_contract::minimal_contract::empty>([32]) -> ([33], [34]); // 34
drop<cairo_level_tests::contracts::minimal_contract::minimal_contract::ContractState>([33]) -> (); // 35
drop<Unit>([34]) -> (); // 36
array_new<felt252>() -> ([35]); // 37
snapshot_take<Array<felt252>>([35]) -> ([36], [37]); // 38
drop<Array<felt252>>([36]) -> (); // 39
struct_construct<core::array::Span::<core::felt252>>([37]) -> ([38]); // 40
struct_construct<Tuple<core::array::Span::<core::felt252>>>([38]) -> ([39]); // 41
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([39]) -> ([40]); // 42
store_temp<RangeCheck>([28]) -> ([41]); // 43
store_temp<GasBuiltin>([29]) -> ([42]); // 44
store_temp<System>([2]) -> ([43]); // 45
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([40]) -> ([44]); // 46
return([41], [42], [43], [44]); // 47
branch_align() -> (); // 48
array_new<felt252>() -> ([45]); // 49
felt252_const<375233589013918064796019>() -> ([46]); // 50
store_temp<felt252>([46]) -> ([46]); // 51
array_append<felt252>([45], [46]) -> ([47]); // 52
struct_construct<core::panics::Panic>() -> ([48]); // 53
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([48], [47]) -> ([49]); // 54
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([49]) -> ([50]); // 55
store_temp<RangeCheck>([30]) -> ([51]); // 56
store_temp<GasBuiltin>([31]) -> ([52]); // 57
store_temp<System>([2]) -> ([53]); // 58
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([50]) -> ([54]); // 59
return([51], [52], [53], [54]); // 60
branch_align() -> (); // 61
drop<core::array::Span::<core::felt252>>([3]) -> (); // 62
array_new<felt252>() -> ([55]); // 63
felt252_const<375233589013918064796019>() -> ([56]); // 64
store_temp<felt252>([56]) -> ([56]); // 65
array_append<felt252>([55], [56]) -> ([57]); // 66
struct_construct<core::panics::Panic>() -> ([58]); // 67
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([58], [57]) -> ([59]); // 68
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([59]) -> ([60]); // 69
store_temp<RangeCheck>([6]) -> ([61]); // 70
store_temp<GasBuiltin>([7]) -> ([62]); // 71
store_temp<System>([2]) -> ([63]); // 72
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([60]) -> ([64]); // 73
return([61], [62], [63], [64]); // 74
struct_construct<Unit>() -> ([1]); // 75
store_temp<cairo_level_tests::contracts::minimal_contract::minimal_contract::ContractState>([0]) -> ([2]); // 76
store_temp<Unit>([1]) -> ([3]); // 77
return([2], [3]); // 78

cairo_level_tests::contracts::minimal_contract::minimal_contract::__wrapper__empty@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
cairo_level_tests::contracts::minimal_contract::minimal_contract::empty@75([0]: cairo_level_tests::contracts::minimal_contract::minimal_contract::ContractState) -> (cairo_level_tests::contracts::minimal_contract::minimal_contract::ContractState, Unit);
