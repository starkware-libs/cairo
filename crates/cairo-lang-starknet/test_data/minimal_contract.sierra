type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>>;
type core::array::Span::<core::felt252> = Struct<ut@[782572820229152792105145177694740816763001980856532159945905090893343825762], Snapshot<Array<felt252>>>;
type u32 = u32;
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]>;
type core::bool = Enum<ut@[1428587981972971377690703480718106917688158670535227238524565791273937320306], Unit, Unit>;
type BuiltinCosts = BuiltinCosts;
type minimal_contract::minimal_contract::MinimalContract::Storage = Struct<ut@[1257121628458914955367301525652822070144003766954415208395445391314771117565]>;
type Tuple<core::array::Span::<core::felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::array::Span::<core::felt252>>;
type core::Panic = Struct<ut@[589936597947325945158462427232849468230833491189683515153318698610876564977]>;
type Tuple<core::Panic, Array<felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::Panic, Array<felt252>>;
type core::PanicResult::<(core::array::Span::<core::felt252>,)> = Enum<ut@[726583323764111849207710747544627107765659270979625874228729705596766268119], Tuple<core::array::Span::<core::felt252>>, Tuple<core::Panic, Array<felt252>>>;
type System = System;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc enable_ap_tracking = enable_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc branch_align = branch_align;
libfunc struct_deconstruct<core::array::Span::<core::felt252>> = struct_deconstruct<core::array::Span::<core::felt252>>;
libfunc array_len<felt252> = array_len<felt252>;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc u32_eq = u32_eq;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc drop<Unit> = drop<Unit>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc struct_construct<minimal_contract::minimal_contract::MinimalContract::Storage> = struct_construct<minimal_contract::minimal_contract::MinimalContract::Storage>;
libfunc store_temp<minimal_contract::minimal_contract::MinimalContract::Storage> = store_temp<minimal_contract::minimal_contract::MinimalContract::Storage>;
libfunc function_call<user@minimal_contract::minimal_contract::MinimalContract::empty> = function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>;
libfunc drop<minimal_contract::minimal_contract::MinimalContract::Storage> = drop<minimal_contract::minimal_contract::MinimalContract::Storage>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc struct_construct<core::array::Span::<core::felt252>> = struct_construct<core::array::Span::<core::felt252>>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>>> = struct_construct<Tuple<core::array::Span::<core::felt252>>>;
libfunc enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0> = enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>> = store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::Panic> = struct_construct<core::Panic>;
libfunc struct_construct<Tuple<core::Panic, Array<felt252>>> = struct_construct<Tuple<core::Panic, Array<felt252>>>;
libfunc enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1> = enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc felt252_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc drop<core::array::Span::<core::felt252>> = drop<core::array::Span::<core::felt252>>;
libfunc store_temp<Unit> = store_temp<Unit>;

revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 76([6], [7]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]);
array_len<felt252>([8]) -> ([9]);
u32_const<0>() -> ([10]);
store_temp<u32>([9]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([9], [10]) { fallthrough() 15() };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<core::bool>([12]) -> ([13]);
jump() { 19() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([13]);
bool_not_impl([13]) -> ([16]);
store_temp<core::bool>([16]) -> ([16]);
enum_match<core::bool>([16]) { fallthrough([17]) 58([18]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([17]) -> ();
get_builtin_costs() -> ([19]);
store_temp<BuiltinCosts>([19]) -> ([19]);
withdraw_gas_all([4], [5], [19]) { fallthrough([20], [21]) 45([22], [23]) };
branch_align() -> ();
struct_construct<minimal_contract::minimal_contract::MinimalContract::Storage>() -> ([24]);
store_temp<minimal_contract::minimal_contract::MinimalContract::Storage>([24]) -> ([27]);
function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>([27]) -> ([25], [26]);
drop<minimal_contract::minimal_contract::MinimalContract::Storage>([25]) -> ();
drop<Unit>([26]) -> ();
array_new<felt252>() -> ([28]);
snapshot_take<Array<felt252>>([28]) -> ([29], [30]);
drop<Array<felt252>>([29]) -> ();
struct_construct<core::array::Span::<core::felt252>>([30]) -> ([31]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([31]) -> ([32]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([32]) -> ([33]);
store_temp<RangeCheck>([20]) -> ([34]);
store_temp<GasBuiltin>([21]) -> ([35]);
store_temp<System>([2]) -> ([36]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([33]) -> ([37]);
return([34], [35], [36], [37]);
branch_align() -> ();
array_new<felt252>() -> ([38]);
felt252_const<375233589013918064796019>() -> ([39]);
store_temp<felt252>([39]) -> ([39]);
array_append<felt252>([38], [39]) -> ([40]);
struct_construct<core::Panic>() -> ([41]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([41], [40]) -> ([42]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([42]) -> ([43]);
store_temp<RangeCheck>([22]) -> ([44]);
store_temp<GasBuiltin>([23]) -> ([45]);
store_temp<System>([2]) -> ([46]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([43]) -> ([47]);
return([44], [45], [46], [47]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([18]) -> ();
store_temp<System>([2]) -> ([50]);
function_call<user@core::starknet::use_system_implicit>([50]) -> ([48], [49]);
drop<Unit>([49]) -> ();
array_new<felt252>() -> ([51]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([52]);
store_temp<felt252>([52]) -> ([52]);
array_append<felt252>([51], [52]) -> ([53]);
struct_construct<core::Panic>() -> ([54]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([54], [53]) -> ([55]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([55]) -> ([56]);
store_temp<RangeCheck>([4]) -> ([57]);
store_temp<GasBuiltin>([5]) -> ([58]);
store_temp<System>([48]) -> ([59]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([56]) -> ([60]);
return([57], [58], [59], [60]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([61]);
felt252_const<375233589013918064796019>() -> ([62]);
store_temp<felt252>([62]) -> ([62]);
array_append<felt252>([61], [62]) -> ([63]);
struct_construct<core::Panic>() -> ([64]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([64], [63]) -> ([65]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([65]) -> ([66]);
store_temp<RangeCheck>([6]) -> ([67]);
store_temp<GasBuiltin>([7]) -> ([68]);
store_temp<System>([2]) -> ([69]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([66]) -> ([70]);
return([67], [68], [69], [70]);
struct_construct<Unit>() -> ([1]);
store_temp<minimal_contract::minimal_contract::MinimalContract::Storage>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);

minimal_contract::minimal_contract::MinimalContract::__external::empty@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
minimal_contract::minimal_contract::MinimalContract::empty@91([0]: minimal_contract::minimal_contract::MinimalContract::Storage) -> (minimal_contract::minimal_contract::MinimalContract::Storage, Unit);
core::starknet::use_system_implicit@95([0]: System) -> (System, Unit);
