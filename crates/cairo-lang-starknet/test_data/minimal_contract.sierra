type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type felt = felt;
type Array<felt> = Array<felt>;
type Snapshot<Array<felt>> = Snapshot<Array<felt>>;
type u32 = u32;
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]>;
type core::bool = Enum<ut@[1428587981972971377690703480718106917688158670535227238524565791273937320306], Unit, Unit>;
type System = System;
type BuiltinCosts = BuiltinCosts;
type Tuple<Array<felt>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], Array<felt>>;
type core::PanicResult::<(core::array::Array::<core::felt>,)> = Enum<ut@[1039708868484410585646769549514331451885782840162913354010845720389909568309], Tuple<Array<felt>>, Array<felt>>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc try_fetch_gas = try_fetch_gas;
libfunc branch_align = branch_align;
libfunc snapshot_take<Array<felt>> = snapshot_take<Array<felt>>;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc array_len<felt> = array_len<felt>;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc u32_eq = u32_eq;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc try_fetch_gas_all = try_fetch_gas_all;
libfunc function_call<user@minimal_contract::minimal_contract::MinimalContract::empty> = function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>;
libfunc array_new<felt> = array_new<felt>;
libfunc struct_construct<Tuple<Array<felt>>> = struct_construct<Tuple<Array<felt>>>;
libfunc enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 0> = enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>> = store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>;
libfunc felt_const<375233589013918064796019> = felt_const<375233589013918064796019>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1> = enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc felt_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc store_temp<Unit> = store_temp<Unit>;

revoke_ap_tracking() -> ();
try_fetch_gas([0], [1]) { fallthrough([4], [5]) 70([6], [7]) };
branch_align() -> ();
snapshot_take<Array<felt>>([3]) -> ([8], [9]);
drop<Array<felt>>([8]) -> ();
array_len<felt>([9]) -> ([10]);
u32_const<0>() -> ([11]);
store_temp<u32>([10]) -> ([10]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([10], [11]) { fallthrough() 18() };
branch_align() -> ();
struct_construct<Unit>() -> ([12]);
enum_init<core::bool, 0>([12]) -> ([13]);
store_temp<RangeCheck>([4]) -> ([14]);
store_temp<GasBuiltin>([5]) -> ([15]);
store_temp<System>([2]) -> ([16]);
store_temp<core::bool>([13]) -> ([17]);
jump() { 25() };
branch_align() -> ();
struct_construct<Unit>() -> ([18]);
enum_init<core::bool, 1>([18]) -> ([19]);
store_temp<RangeCheck>([4]) -> ([14]);
store_temp<GasBuiltin>([5]) -> ([15]);
store_temp<System>([2]) -> ([16]);
store_temp<core::bool>([19]) -> ([17]);
bool_not_impl([17]) -> ([20]);
store_temp<core::bool>([20]) -> ([20]);
enum_match<core::bool>([20]) { fallthrough([21]) 55([22]) };
branch_align() -> ();
drop<Unit>([21]) -> ();
get_builtin_costs() -> ([23]);
store_temp<BuiltinCosts>([23]) -> ([23]);
try_fetch_gas_all([14], [15], [23]) { fallthrough([24], [25]) 44([26], [27]) };
branch_align() -> ();
function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>() -> ([28]);
drop<Unit>([28]) -> ();
array_new<felt>() -> ([29]);
struct_construct<Tuple<Array<felt>>>([29]) -> ([30]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 0>([30]) -> ([31]);
store_temp<RangeCheck>([24]) -> ([32]);
store_temp<GasBuiltin>([25]) -> ([33]);
store_temp<System>([16]) -> ([34]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([31]) -> ([35]);
return([32], [33], [34], [35]);
branch_align() -> ();
array_new<felt>() -> ([36]);
felt_const<375233589013918064796019>() -> ([37]);
store_temp<felt>([37]) -> ([37]);
array_append<felt>([36], [37]) -> ([38]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>([38]) -> ([39]);
store_temp<RangeCheck>([26]) -> ([40]);
store_temp<GasBuiltin>([27]) -> ([41]);
store_temp<System>([16]) -> ([42]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([39]) -> ([43]);
return([40], [41], [42], [43]);
branch_align() -> ();
drop<Unit>([22]) -> ();
store_temp<System>([16]) -> ([46]);
function_call<user@core::starknet::use_system_implicit>([46]) -> ([44], [45]);
drop<Unit>([45]) -> ();
array_new<felt>() -> ([47]);
felt_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([48]);
store_temp<felt>([48]) -> ([48]);
array_append<felt>([47], [48]) -> ([49]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>([49]) -> ([50]);
store_temp<RangeCheck>([14]) -> ([51]);
store_temp<GasBuiltin>([15]) -> ([52]);
store_temp<System>([44]) -> ([53]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([50]) -> ([54]);
return([51], [52], [53], [54]);
branch_align() -> ();
drop<Array<felt>>([3]) -> ();
array_new<felt>() -> ([55]);
felt_const<375233589013918064796019>() -> ([56]);
store_temp<felt>([56]) -> ([56]);
array_append<felt>([55], [56]) -> ([57]);
enum_init<core::PanicResult::<(core::array::Array::<core::felt>,)>, 1>([57]) -> ([58]);
store_temp<RangeCheck>([6]) -> ([59]);
store_temp<GasBuiltin>([7]) -> ([60]);
store_temp<System>([2]) -> ([61]);
store_temp<core::PanicResult::<(core::array::Array::<core::felt>,)>>([58]) -> ([62]);
return([59], [60], [61], [62]);
struct_construct<Unit>() -> ([0]);
store_temp<Unit>([0]) -> ([1]);
return([1]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);

minimal_contract::minimal_contract::MinimalContract::__external::empty@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: Array<felt>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Array::<core::felt>,)>);
minimal_contract::minimal_contract::MinimalContract::empty@82() -> (Unit);
core::starknet::use_system_implicit@85([0]: System) -> (System, Unit);
