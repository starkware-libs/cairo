type RangeCheck = RangeCheck;
type Uninitialized<RangeCheck> = Uninitialized<RangeCheck>;
type GasBuiltin = GasBuiltin;
type Uninitialized<GasBuiltin> = Uninitialized<GasBuiltin>;
type felt = felt;
type Array<felt> = Array<felt>;
type Snapshot<Array<felt>> = Snapshot<Array<felt>>;
type u32 = u32;
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]>;
type core::bool = Enum<ut@[1428587981972971377690703480718106917688158670535227238524565791273937320306], Unit, Unit>;
type BuiltinCosts = BuiltinCosts;
type core::PanicResult::<core::array::Array::<core::felt>> = Enum<ut@[1629869585859386708777359278359478328649467785770005626186298023837162394309], Array<felt>, Array<felt>>;
type System = System;

libfunc alloc_local<RangeCheck> = alloc_local<RangeCheck>;
libfunc alloc_local<GasBuiltin> = alloc_local<GasBuiltin>;
libfunc finalize_locals = finalize_locals;
libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc try_fetch_gas = try_fetch_gas;
libfunc branch_align = branch_align;
libfunc snapshot_take<Array<felt>> = snapshot_take<Array<felt>>;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc array_len<felt> = array_len<felt>;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_local<GasBuiltin> = store_local<GasBuiltin>;
libfunc store_local<RangeCheck> = store_local<RangeCheck>;
libfunc u32_eq = u32_eq;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc try_fetch_gas_all = try_fetch_gas_all;
libfunc function_call<user@minimal_contract::minimal_contract::MinimalContract::empty> = function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>;
libfunc array_new<felt> = array_new<felt>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::PanicResult::<core::array::Array::<core::felt>>> = store_temp<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc felt_const<375233589013918064796019> = felt_const<375233589013918064796019>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc felt_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc drop<Uninitialized<RangeCheck>> = drop<Uninitialized<RangeCheck>>;
libfunc drop<Uninitialized<GasBuiltin>> = drop<Uninitialized<GasBuiltin>>;
libfunc store_temp<Unit> = store_temp<Unit>;

alloc_local<RangeCheck>() -> ([5]);
alloc_local<GasBuiltin>() -> ([7]);
finalize_locals() -> ();
revoke_ap_tracking() -> ();
try_fetch_gas([0], [1]) { fallthrough([4], [6]) 68([8], [9]) };
branch_align() -> ();
snapshot_take<Array<felt>>([3]) -> ([10], [11]);
drop<Array<felt>>([10]) -> ();
array_len<felt>([11]) -> ([12]);
u32_const<0>() -> ([13]);
store_temp<u32>([12]) -> ([12]);
store_temp<RangeCheck>([4]) -> ([4]);
store_local<GasBuiltin>([7], [6]) -> ([6]);
store_local<RangeCheck>([5], [4]) -> ([4]);
u32_eq([12], [13]) { fallthrough() 20() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 0>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([16]);
jump() { 24() };
branch_align() -> ();
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 1>([17]) -> ([18]);
store_temp<core::bool>([18]) -> ([16]);
bool_not_impl([16]) -> ([19]);
store_temp<core::bool>([19]) -> ([19]);
enum_match<core::bool>([19]) { fallthrough([20]) 53([21]) };
branch_align() -> ();
drop<Unit>([20]) -> ();
get_builtin_costs() -> ([22]);
store_temp<BuiltinCosts>([22]) -> ([22]);
try_fetch_gas_all([4], [6], [22]) { fallthrough([23], [24]) 42([25], [26]) };
branch_align() -> ();
function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>() -> ([27]);
drop<Unit>([27]) -> ();
array_new<felt>() -> ([28]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([28]) -> ([29]);
store_temp<RangeCheck>([23]) -> ([30]);
store_temp<GasBuiltin>([24]) -> ([31]);
store_temp<System>([2]) -> ([32]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([29]) -> ([33]);
return([30], [31], [32], [33]);
branch_align() -> ();
array_new<felt>() -> ([34]);
felt_const<375233589013918064796019>() -> ([35]);
store_temp<felt>([35]) -> ([35]);
array_append<felt>([34], [35]) -> ([36]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([36]) -> ([37]);
store_temp<RangeCheck>([25]) -> ([38]);
store_temp<GasBuiltin>([26]) -> ([39]);
store_temp<System>([2]) -> ([40]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([37]) -> ([41]);
return([38], [39], [40], [41]);
branch_align() -> ();
drop<Unit>([21]) -> ();
store_temp<System>([2]) -> ([44]);
function_call<user@core::starknet::use_system_implicit>([44]) -> ([42], [43]);
drop<Unit>([43]) -> ();
array_new<felt>() -> ([45]);
felt_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([46]);
store_temp<felt>([46]) -> ([46]);
array_append<felt>([45], [46]) -> ([47]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([47]) -> ([48]);
store_temp<RangeCheck>([4]) -> ([49]);
store_temp<GasBuiltin>([6]) -> ([50]);
store_temp<System>([42]) -> ([51]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([48]) -> ([52]);
return([49], [50], [51], [52]);
branch_align() -> ();
drop<Array<felt>>([3]) -> ();
drop<Uninitialized<RangeCheck>>([5]) -> ();
drop<Uninitialized<GasBuiltin>>([7]) -> ();
array_new<felt>() -> ([53]);
felt_const<375233589013918064796019>() -> ([54]);
store_temp<felt>([54]) -> ([54]);
array_append<felt>([53], [54]) -> ([55]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([55]) -> ([56]);
store_temp<RangeCheck>([8]) -> ([57]);
store_temp<GasBuiltin>([9]) -> ([58]);
store_temp<System>([2]) -> ([59]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([56]) -> ([60]);
return([57], [58], [59], [60]);
struct_construct<Unit>() -> ([0]);
store_temp<Unit>([0]) -> ([1]);
return([1]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);

minimal_contract::minimal_contract::MinimalContract::__external::empty@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: Array<felt>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<core::array::Array::<core::felt>>);
minimal_contract::minimal_contract::MinimalContract::empty@82() -> (Unit);
core::starknet::use_system_implicit@85([0]: System) -> (System, Unit);
