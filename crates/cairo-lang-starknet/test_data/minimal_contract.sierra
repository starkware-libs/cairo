type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type felt252 = felt252;
type Span<felt252> = Span<felt252>;
type u32 = u32;
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]>;
type core::bool = Enum<ut@[1428587981972971377690703480718106917688158670535227238524565791273937320306], Unit, Unit>;
type BuiltinCosts = BuiltinCosts;
type Array<felt252> = Array<felt252>;
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>>;
type Tuple<Span<felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], Span<felt252>>;
type core::PanicResult::<(core::span::Span::<@core::felt252>,)> = Enum<ut@[482376909489873347350913428581492821657664655930471032590148504005397532120], Tuple<Span<felt252>>, Array<felt252>>;
type System = System;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc enable_ap_tracking = enable_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc branch_align = branch_align;
libfunc snapshot_take<Span<felt252>> = snapshot_take<Span<felt252>>;
libfunc drop<Span<felt252>> = drop<Span<felt252>>;
libfunc span_len<felt252> = span_len<felt252>;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc u32_eq = u32_eq;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc drop<Unit> = drop<Unit>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc function_call<user@minimal_contract::minimal_contract::MinimalContract::empty> = function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc snapshot_array_as_span<felt252> = snapshot_array_as_span<felt252>;
libfunc struct_construct<Tuple<Span<felt252>>> = struct_construct<Tuple<Span<felt252>>>;
libfunc enum_init<core::PanicResult::<(core::span::Span::<@core::felt252>,)>, 0> = enum_init<core::PanicResult::<(core::span::Span::<@core::felt252>,)>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::PanicResult::<(core::span::Span::<@core::felt252>,)>> = store_temp<core::PanicResult::<(core::span::Span::<@core::felt252>,)>>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc enum_init<core::PanicResult::<(core::span::Span::<@core::felt252>,)>, 1> = enum_init<core::PanicResult::<(core::span::Span::<@core::felt252>,)>, 1>;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc felt252_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc store_temp<Unit> = store_temp<Unit>;

revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 70([6], [7]) };
branch_align() -> ();
snapshot_take<Span<felt252>>([3]) -> ([8], [9]);
drop<Span<felt252>>([8]) -> ();
span_len<felt252>([9]) -> ([10]);
u32_const<0>() -> ([11]);
store_temp<u32>([10]) -> ([10]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([10], [11]) { fallthrough() 16() };
branch_align() -> ();
struct_construct<Unit>() -> ([12]);
enum_init<core::bool, 0>([12]) -> ([13]);
store_temp<core::bool>([13]) -> ([14]);
jump() { 20() };
branch_align() -> ();
struct_construct<Unit>() -> ([15]);
enum_init<core::bool, 1>([15]) -> ([16]);
store_temp<core::bool>([16]) -> ([14]);
bool_not_impl([14]) -> ([17]);
store_temp<core::bool>([17]) -> ([17]);
enum_match<core::bool>([17]) { fallthrough([18]) 54([19]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([18]) -> ();
get_builtin_costs() -> ([20]);
store_temp<BuiltinCosts>([20]) -> ([20]);
withdraw_gas_all([4], [5], [20]) { fallthrough([21], [22]) 43([23], [24]) };
branch_align() -> ();
function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>() -> ([25]);
drop<Unit>([25]) -> ();
array_new<felt252>() -> ([26]);
snapshot_take<Array<felt252>>([26]) -> ([27], [28]);
drop<Array<felt252>>([27]) -> ();
snapshot_array_as_span<felt252>([28]) -> ([29]);
struct_construct<Tuple<Span<felt252>>>([29]) -> ([30]);
enum_init<core::PanicResult::<(core::span::Span::<@core::felt252>,)>, 0>([30]) -> ([31]);
store_temp<RangeCheck>([21]) -> ([32]);
store_temp<GasBuiltin>([22]) -> ([33]);
store_temp<System>([2]) -> ([34]);
store_temp<core::PanicResult::<(core::span::Span::<@core::felt252>,)>>([31]) -> ([35]);
return([32], [33], [34], [35]);
branch_align() -> ();
array_new<felt252>() -> ([36]);
felt252_const<375233589013918064796019>() -> ([37]);
store_temp<felt252>([37]) -> ([37]);
array_append<felt252>([36], [37]) -> ([38]);
enum_init<core::PanicResult::<(core::span::Span::<@core::felt252>,)>, 1>([38]) -> ([39]);
store_temp<RangeCheck>([23]) -> ([40]);
store_temp<GasBuiltin>([24]) -> ([41]);
store_temp<System>([2]) -> ([42]);
store_temp<core::PanicResult::<(core::span::Span::<@core::felt252>,)>>([39]) -> ([43]);
return([40], [41], [42], [43]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([19]) -> ();
store_temp<System>([2]) -> ([46]);
function_call<user@core::starknet::use_system_implicit>([46]) -> ([44], [45]);
drop<Unit>([45]) -> ();
array_new<felt252>() -> ([47]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([48]);
store_temp<felt252>([48]) -> ([48]);
array_append<felt252>([47], [48]) -> ([49]);
enum_init<core::PanicResult::<(core::span::Span::<@core::felt252>,)>, 1>([49]) -> ([50]);
store_temp<RangeCheck>([4]) -> ([51]);
store_temp<GasBuiltin>([5]) -> ([52]);
store_temp<System>([44]) -> ([53]);
store_temp<core::PanicResult::<(core::span::Span::<@core::felt252>,)>>([50]) -> ([54]);
return([51], [52], [53], [54]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Span<felt252>>([3]) -> ();
array_new<felt252>() -> ([55]);
felt252_const<375233589013918064796019>() -> ([56]);
store_temp<felt252>([56]) -> ([56]);
array_append<felt252>([55], [56]) -> ([57]);
enum_init<core::PanicResult::<(core::span::Span::<@core::felt252>,)>, 1>([57]) -> ([58]);
store_temp<RangeCheck>([6]) -> ([59]);
store_temp<GasBuiltin>([7]) -> ([60]);
store_temp<System>([2]) -> ([61]);
store_temp<core::PanicResult::<(core::span::Span::<@core::felt252>,)>>([58]) -> ([62]);
return([59], [60], [61], [62]);
struct_construct<Unit>() -> ([0]);
store_temp<Unit>([0]) -> ([1]);
return([1]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);

minimal_contract::minimal_contract::MinimalContract::__external::empty@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: Span<felt252>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::span::Span::<@core::felt252>,)>);
minimal_contract::minimal_contract::MinimalContract::empty@83() -> (Unit);
core::starknet::use_system_implicit@86([0]: System) -> (System, Unit);
