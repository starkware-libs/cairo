type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]>;
type Tuple<Unit> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], Unit>;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>>;
type core::array::Span::<core::felt252> = Struct<ut@[782572820229152792105145177694740816763001980856532159945905090893343825762], Snapshot<Array<felt252>>>;
type u32 = u32;
type core::bool = Enum<ut@[1428587981972971377690703480718106917688158670535227238524565791273937320306], Unit, Unit>;
type BuiltinCosts = BuiltinCosts;
type Tuple<core::array::Span::<core::felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::array::Span::<core::felt252>>;
type core::PanicResult::<(core::array::Span::<core::felt252>,)> = Enum<ut@[726583323764111849207710747544627107765659270979625874228729705596766268119], Tuple<core::array::Span::<core::felt252>>, Array<felt252>>;
type System = System;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc enable_ap_tracking = enable_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc branch_align = branch_align;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc struct_deconstruct<Tuple<Unit>> = struct_deconstruct<Tuple<Unit>>;
libfunc drop<Unit> = drop<Unit>;
libfunc struct_deconstruct<core::array::Span::<core::felt252>> = struct_deconstruct<core::array::Span::<core::felt252>>;
libfunc array_len<felt252> = array_len<felt252>;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc u32_eq = u32_eq;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc function_call<user@minimal_contract::minimal_contract::MinimalContract::empty> = function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc struct_construct<core::array::Span::<core::felt252>> = struct_construct<core::array::Span::<core::felt252>>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>>> = struct_construct<Tuple<core::array::Span::<core::felt252>>>;
libfunc enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0> = enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>> = store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1> = enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc felt252_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc drop<core::array::Span::<core::felt252>> = drop<core::array::Span::<core::felt252>>;
libfunc store_temp<Unit> = store_temp<Unit>;

revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 77([6], [7]) };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
struct_construct<Tuple<Unit>>([8]) -> ([9]);
struct_deconstruct<Tuple<Unit>>([9]) -> ([10]);
drop<Unit>([10]) -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([11]);
array_len<felt252>([11]) -> ([12]);
u32_const<0>() -> ([13]);
store_temp<u32>([12]) -> ([12]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([12], [13]) { fallthrough() 19() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 0>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([16]);
jump() { 23() };
branch_align() -> ();
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 1>([17]) -> ([18]);
store_temp<core::bool>([18]) -> ([16]);
bool_not_impl([16]) -> ([19]);
store_temp<core::bool>([19]) -> ([19]);
enum_match<core::bool>([19]) { fallthrough([20]) 61([21]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([20]) -> ();
get_builtin_costs() -> ([22]);
store_temp<BuiltinCosts>([22]) -> ([22]);
withdraw_gas_all([4], [5], [22]) { fallthrough([23], [24]) 50([25], [26]) };
branch_align() -> ();
struct_construct<Unit>() -> ([27]);
struct_construct<Tuple<Unit>>([27]) -> ([28]);
struct_deconstruct<Tuple<Unit>>([28]) -> ([29]);
drop<Unit>([29]) -> ();
function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>() -> ([30]);
drop<Unit>([30]) -> ();
array_new<felt252>() -> ([31]);
snapshot_take<Array<felt252>>([31]) -> ([32], [33]);
drop<Array<felt252>>([32]) -> ();
struct_construct<core::array::Span::<core::felt252>>([33]) -> ([34]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([34]) -> ([35]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([35]) -> ([36]);
store_temp<RangeCheck>([23]) -> ([37]);
store_temp<GasBuiltin>([24]) -> ([38]);
store_temp<System>([2]) -> ([39]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([36]) -> ([40]);
return([37], [38], [39], [40]);
branch_align() -> ();
array_new<felt252>() -> ([41]);
felt252_const<375233589013918064796019>() -> ([42]);
store_temp<felt252>([42]) -> ([42]);
array_append<felt252>([41], [42]) -> ([43]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([43]) -> ([44]);
store_temp<RangeCheck>([25]) -> ([45]);
store_temp<GasBuiltin>([26]) -> ([46]);
store_temp<System>([2]) -> ([47]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([44]) -> ([48]);
return([45], [46], [47], [48]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([21]) -> ();
store_temp<System>([2]) -> ([51]);
function_call<user@core::starknet::use_system_implicit>([51]) -> ([49], [50]);
drop<Unit>([50]) -> ();
array_new<felt252>() -> ([52]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([53]);
store_temp<felt252>([53]) -> ([53]);
array_append<felt252>([52], [53]) -> ([54]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([54]) -> ([55]);
store_temp<RangeCheck>([4]) -> ([56]);
store_temp<GasBuiltin>([5]) -> ([57]);
store_temp<System>([49]) -> ([58]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([55]) -> ([59]);
return([56], [57], [58], [59]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([60]);
felt252_const<375233589013918064796019>() -> ([61]);
store_temp<felt252>([61]) -> ([61]);
array_append<felt252>([60], [61]) -> ([62]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([62]) -> ([63]);
store_temp<RangeCheck>([6]) -> ([64]);
store_temp<GasBuiltin>([7]) -> ([65]);
store_temp<System>([2]) -> ([66]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([63]) -> ([67]);
return([64], [65], [66], [67]);
struct_construct<Unit>() -> ([0]);
store_temp<Unit>([0]) -> ([1]);
return([1]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);

minimal_contract::minimal_contract::MinimalContract::__external::empty@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
minimal_contract::minimal_contract::MinimalContract::empty@90() -> (Unit);
core::starknet::use_system_implicit@93([0]: System) -> (System, Unit);
