type RangeCheck = RangeCheck;
type Uninitialized<RangeCheck> = Uninitialized<RangeCheck>;
type GasBuiltin = GasBuiltin;
type Uninitialized<GasBuiltin> = Uninitialized<GasBuiltin>;
type felt = felt;
type Array<felt> = Array<felt>;
type core::PanicResult::<core::array::Array::<core::felt>> = Enum<ut@[1629869585859386708777359278359478328649467785770005626186298023837162394309], Array<felt>, Array<felt>>;
type System = System;
type Snapshot<Array<felt>> = Snapshot<Array<felt>>;
type u32 = u32;
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]>;
type core::bool = Enum<ut@[1428587981972971377690703480718106917688158670535227238524565791273937320306], Unit, Unit>;
type BuiltinCosts = BuiltinCosts;

libfunc alloc_local<RangeCheck> = alloc_local<RangeCheck>;
libfunc alloc_local<GasBuiltin> = alloc_local<GasBuiltin>;
libfunc finalize_locals = finalize_locals;
libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc try_fetch_gas = try_fetch_gas;
libfunc branch_align = branch_align;
libfunc jump = jump;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc drop<Uninitialized<RangeCheck>> = drop<Uninitialized<RangeCheck>>;
libfunc drop<Uninitialized<GasBuiltin>> = drop<Uninitialized<GasBuiltin>>;
libfunc array_new<felt> = array_new<felt>;
libfunc felt_const<375233589013918064796019> = felt_const<375233589013918064796019>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::PanicResult::<core::array::Array::<core::felt>>> = store_temp<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc snapshot_take<Array<felt>> = snapshot_take<Array<felt>>;
libfunc array_len<felt> = array_len<felt>;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_local<GasBuiltin> = store_local<GasBuiltin>;
libfunc store_local<RangeCheck> = store_local<RangeCheck>;
libfunc u32_eq = u32_eq;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc felt_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc try_fetch_gas_all = try_fetch_gas_all;
libfunc function_call<user@minimal_contract::minimal_contract::MinimalContract::empty> = function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>;
libfunc store_temp<Unit> = store_temp<Unit>;

alloc_local<RangeCheck>() -> ([5]);
alloc_local<GasBuiltin>() -> ([7]);
finalize_locals() -> ();
revoke_ap_tracking() -> ();
try_fetch_gas([0], [1]) { fallthrough([4], [6]) 7([8], [9]) };
branch_align() -> ();
jump() { 21() };
branch_align() -> ();
drop<Array<felt>>([3]) -> ();
drop<Uninitialized<RangeCheck>>([5]) -> ();
drop<Uninitialized<GasBuiltin>>([7]) -> ();
array_new<felt>() -> ([10]);
felt_const<375233589013918064796019>() -> ([11]);
store_temp<felt>([11]) -> ([11]);
array_append<felt>([10], [11]) -> ([12]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([12]) -> ([13]);
store_temp<RangeCheck>([8]) -> ([14]);
store_temp<GasBuiltin>([9]) -> ([15]);
store_temp<System>([2]) -> ([16]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([13]) -> ([17]);
return([14], [15], [16], [17]);
snapshot_take<Array<felt>>([3]) -> ([18], [19]);
drop<Array<felt>>([18]) -> ();
array_len<felt>([19]) -> ([20]);
u32_const<0>() -> ([21]);
store_temp<u32>([20]) -> ([20]);
store_temp<RangeCheck>([4]) -> ([4]);
store_local<GasBuiltin>([7], [6]) -> ([6]);
store_local<RangeCheck>([5], [4]) -> ([4]);
u32_eq([20], [21]) { fallthrough() 35() };
branch_align() -> ();
struct_construct<Unit>() -> ([22]);
enum_init<core::bool, 0>([22]) -> ([23]);
store_temp<core::bool>([23]) -> ([24]);
jump() { 40() };
branch_align() -> ();
struct_construct<Unit>() -> ([25]);
enum_init<core::bool, 1>([25]) -> ([26]);
store_temp<core::bool>([26]) -> ([24]);
jump() { 40() };
bool_not_impl([24]) -> ([27]);
store_temp<core::bool>([27]) -> ([27]);
enum_match<core::bool>([27]) { fallthrough([28]) 46([29]) };
branch_align() -> ();
drop<Unit>([28]) -> ();
jump() { 61() };
branch_align() -> ();
drop<Unit>([29]) -> ();
store_temp<System>([2]) -> ([32]);
function_call<user@core::starknet::use_system_implicit>([32]) -> ([30], [31]);
drop<Unit>([31]) -> ();
array_new<felt>() -> ([33]);
felt_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([34]);
store_temp<felt>([34]) -> ([34]);
array_append<felt>([33], [34]) -> ([35]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([35]) -> ([36]);
store_temp<RangeCheck>([4]) -> ([37]);
store_temp<GasBuiltin>([6]) -> ([38]);
store_temp<System>([30]) -> ([39]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([36]) -> ([40]);
return([37], [38], [39], [40]);
get_builtin_costs() -> ([41]);
store_temp<BuiltinCosts>([41]) -> ([41]);
try_fetch_gas_all([4], [6], [41]) { fallthrough([42], [43]) 66([44], [45]) };
branch_align() -> ();
jump() { 77() };
branch_align() -> ();
array_new<felt>() -> ([46]);
felt_const<375233589013918064796019>() -> ([47]);
store_temp<felt>([47]) -> ([47]);
array_append<felt>([46], [47]) -> ([48]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([48]) -> ([49]);
store_temp<RangeCheck>([44]) -> ([50]);
store_temp<GasBuiltin>([45]) -> ([51]);
store_temp<System>([2]) -> ([52]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([49]) -> ([53]);
return([50], [51], [52], [53]);
function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>() -> ([54]);
drop<Unit>([54]) -> ();
array_new<felt>() -> ([55]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([55]) -> ([56]);
store_temp<RangeCheck>([42]) -> ([57]);
store_temp<GasBuiltin>([43]) -> ([58]);
store_temp<System>([2]) -> ([59]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([56]) -> ([60]);
return([57], [58], [59], [60]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);
struct_construct<Unit>() -> ([0]);
store_temp<Unit>([0]) -> ([1]);
return([1]);

minimal_contract::minimal_contract::MinimalContract::__external::empty@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: Array<felt>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<core::array::Array::<core::felt>>);
core::starknet::use_system_implicit@86([0]: System) -> (System, Unit);
minimal_contract::minimal_contract::MinimalContract::empty@90() -> (Unit);
