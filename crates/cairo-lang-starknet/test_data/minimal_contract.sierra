type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>>;
type core::array::Span::<core::felt252> = Struct<ut@[782572820229152792105145177694740816763001980856532159945905090893343825762], Snapshot<Array<felt252>>>;
type u32 = u32;
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]>;
type core::bool = Enum<ut@[1428587981972971377690703480718106917688158670535227238524565791273937320306], Unit, Unit>;
type BuiltinCosts = BuiltinCosts;
type minimal_contract::minimal_contract::MinimalContract::ContractState = Struct<ut@[1202797759509451794263299900326845891044869109969608621063410884920708291909]>;
type Tuple<core::array::Span::<core::felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::array::Span::<core::felt252>>;
type core::Panic = Struct<ut@[589936597947325945158462427232849468230833491189683515153318698610876564977]>;
type Tuple<core::Panic, Array<felt252>> = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643], core::Panic, Array<felt252>>;
type core::PanicResult::<(core::array::Span::<core::felt252>,)> = Enum<ut@[726583323764111849207710747544627107765659270979625874228729705596766268119], Tuple<core::array::Span::<core::felt252>>, Tuple<core::Panic, Array<felt252>>>;
type System = System;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc enable_ap_tracking = enable_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc branch_align = branch_align;
libfunc snapshot_take<core::array::Span::<core::felt252>> = snapshot_take<core::array::Span::<core::felt252>>;
libfunc drop<core::array::Span::<core::felt252>> = drop<core::array::Span::<core::felt252>>;
libfunc struct_deconstruct<core::array::Span::<core::felt252>> = struct_deconstruct<core::array::Span::<core::felt252>>;
libfunc rename<Snapshot<Array<felt252>>> = rename<Snapshot<Array<felt252>>>;
libfunc array_len<felt252> = array_len<felt252>;
libfunc snapshot_take<u32> = snapshot_take<u32>;
libfunc drop<u32> = drop<u32>;
libfunc u32_const<0> = u32_const<0>;
libfunc rename<u32> = rename<u32>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc u32_eq = u32_eq;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc drop<Unit> = drop<Unit>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc struct_construct<minimal_contract::minimal_contract::MinimalContract::ContractState> = struct_construct<minimal_contract::minimal_contract::MinimalContract::ContractState>;
libfunc store_temp<minimal_contract::minimal_contract::MinimalContract::ContractState> = store_temp<minimal_contract::minimal_contract::MinimalContract::ContractState>;
libfunc function_call<user@minimal_contract::minimal_contract::MinimalContract::empty> = function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>;
libfunc drop<minimal_contract::minimal_contract::MinimalContract::ContractState> = drop<minimal_contract::minimal_contract::MinimalContract::ContractState>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc struct_construct<core::array::Span::<core::felt252>> = struct_construct<core::array::Span::<core::felt252>>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>>> = struct_construct<Tuple<core::array::Span::<core::felt252>>>;
libfunc enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0> = enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>> = store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::Panic> = struct_construct<core::Panic>;
libfunc struct_construct<Tuple<core::Panic, Array<felt252>>> = struct_construct<Tuple<core::Panic, Array<felt252>>>;
libfunc enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1> = enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc felt252_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc store_temp<Unit> = store_temp<Unit>;

revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 85([6], [7]) };
branch_align() -> ();
snapshot_take<core::array::Span::<core::felt252>>([3]) -> ([8], [9]);
drop<core::array::Span::<core::felt252>>([8]) -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([9]) -> ([10]);
rename<Snapshot<Array<felt252>>>([10]) -> ([11]);
array_len<felt252>([11]) -> ([12]);
snapshot_take<u32>([12]) -> ([13], [14]);
drop<u32>([13]) -> ();
u32_const<0>() -> ([15]);
snapshot_take<u32>([15]) -> ([16], [17]);
drop<u32>([16]) -> ();
rename<u32>([14]) -> ([18]);
rename<u32>([17]) -> ([19]);
store_temp<u32>([18]) -> ([18]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([18], [19]) { fallthrough() 24() };
branch_align() -> ();
struct_construct<Unit>() -> ([20]);
enum_init<core::bool, 0>([20]) -> ([21]);
store_temp<core::bool>([21]) -> ([22]);
jump() { 28() };
branch_align() -> ();
struct_construct<Unit>() -> ([23]);
enum_init<core::bool, 1>([23]) -> ([24]);
store_temp<core::bool>([24]) -> ([22]);
bool_not_impl([22]) -> ([25]);
store_temp<core::bool>([25]) -> ([25]);
enum_match<core::bool>([25]) { fallthrough([26]) 67([27]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([26]) -> ();
get_builtin_costs() -> ([28]);
store_temp<BuiltinCosts>([28]) -> ([28]);
withdraw_gas_all([4], [5], [28]) { fallthrough([29], [30]) 54([31], [32]) };
branch_align() -> ();
struct_construct<minimal_contract::minimal_contract::MinimalContract::ContractState>() -> ([33]);
store_temp<minimal_contract::minimal_contract::MinimalContract::ContractState>([33]) -> ([36]);
function_call<user@minimal_contract::minimal_contract::MinimalContract::empty>([36]) -> ([34], [35]);
drop<minimal_contract::minimal_contract::MinimalContract::ContractState>([34]) -> ();
drop<Unit>([35]) -> ();
array_new<felt252>() -> ([37]);
snapshot_take<Array<felt252>>([37]) -> ([38], [39]);
drop<Array<felt252>>([38]) -> ();
struct_construct<core::array::Span::<core::felt252>>([39]) -> ([40]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([40]) -> ([41]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([41]) -> ([42]);
store_temp<RangeCheck>([29]) -> ([43]);
store_temp<GasBuiltin>([30]) -> ([44]);
store_temp<System>([2]) -> ([45]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([42]) -> ([46]);
return([43], [44], [45], [46]);
branch_align() -> ();
array_new<felt252>() -> ([47]);
felt252_const<375233589013918064796019>() -> ([48]);
store_temp<felt252>([48]) -> ([48]);
array_append<felt252>([47], [48]) -> ([49]);
struct_construct<core::Panic>() -> ([50]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([50], [49]) -> ([51]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([51]) -> ([52]);
store_temp<RangeCheck>([31]) -> ([53]);
store_temp<GasBuiltin>([32]) -> ([54]);
store_temp<System>([2]) -> ([55]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([52]) -> ([56]);
return([53], [54], [55], [56]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([27]) -> ();
store_temp<System>([2]) -> ([59]);
function_call<user@core::starknet::use_system_implicit>([59]) -> ([57], [58]);
drop<Unit>([58]) -> ();
array_new<felt252>() -> ([60]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([61]);
store_temp<felt252>([61]) -> ([61]);
array_append<felt252>([60], [61]) -> ([62]);
struct_construct<core::Panic>() -> ([63]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([63], [62]) -> ([64]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([64]) -> ([65]);
store_temp<RangeCheck>([4]) -> ([66]);
store_temp<GasBuiltin>([5]) -> ([67]);
store_temp<System>([57]) -> ([68]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([65]) -> ([69]);
return([66], [67], [68], [69]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([70]);
felt252_const<375233589013918064796019>() -> ([71]);
store_temp<felt252>([71]) -> ([71]);
array_append<felt252>([70], [71]) -> ([72]);
struct_construct<core::Panic>() -> ([73]);
struct_construct<Tuple<core::Panic, Array<felt252>>>([73], [72]) -> ([74]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([74]) -> ([75]);
store_temp<RangeCheck>([6]) -> ([76]);
store_temp<GasBuiltin>([7]) -> ([77]);
store_temp<System>([2]) -> ([78]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([75]) -> ([79]);
return([76], [77], [78], [79]);
struct_construct<Unit>() -> ([1]);
store_temp<minimal_contract::minimal_contract::MinimalContract::ContractState>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);

minimal_contract::minimal_contract::MinimalContract::__external::empty@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
minimal_contract::minimal_contract::MinimalContract::empty@100([0]: minimal_contract::minimal_contract::MinimalContract::ContractState) -> (minimal_contract::minimal_contract::MinimalContract::ContractState, Unit);
core::starknet::use_system_implicit@104([0]: System) -> (System, Unit);
