{
  "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
  "compiler_version": "2.4.1",
  "bytecode": [
    "0xa0680017fff8000",
    "0x7",
    "0x482680017ffa8000",
    "0x100000000000000000000000000000000",
    "0x400280007ff97fff",
    "0x10780017fff7fff",
    "0x86",
    "0x4825800180007ffa",
    "0x0",
    "0x400280007ff97fff",
    "0x482680017ff98000",
    "0x1",
    "0x48297ffc80007ffd",
    "0x20680017fff7fff",
    "0x4",
    "0x10780017fff7fff",
    "0xa",
    "0x482680017ffc8000",
    "0x1",
    "0x480a7ffd7fff8000",
    "0x480680017fff8000",
    "0x0",
    "0x480a7ffc7fff8000",
    "0x10780017fff7fff",
    "0x8",
    "0x480a7ffc7fff8000",
    "0x480a7ffd7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x480680017fff8000",
    "0x0",
    "0x20680017fff7ffe",
    "0x5b",
    "0x48127ffa7fff8000",
    "0x480080007ffe8000",
    "0x1104800180018000",
<<<<<<< HEAD
    "0xe3",
||||||| 3205b8a81
    "0xe5",
=======
    "0xe1",
>>>>>>> origin/main
    "0x20680017fff7ffe",
<<<<<<< HEAD
    "0x52",
    "0x48307fee80007fef",
    "0x4824800180007fff",
    "0x0",
||||||| 3205b8a81
    "0x54",
    "0x48127fee7fff8000",
    "0x48127fee7fff8000",
    "0x48307ffe80007fff",
    "0x4824800180007fff",
    "0x0",
=======
    "0x52",
    "0x48127fee7fff8000",
    "0x48127fee7fff8000",
    "0x48307ffe80007fff",
>>>>>>> origin/main
    "0x20680017fff7fff",
    "0x4",
    "0x10780017fff7fff",
    "0x10",
    "0x40780017fff7fff",
    "0x1",
    "0x480680017fff8000",
    "0x496e70757420746f6f206c6f6e6720666f7220617267756d656e7473",
    "0x400080007ffe7fff",
<<<<<<< HEAD
    "0x48127ff97fff8000",
    "0x48127fe67fff8000",
||||||| 3205b8a81
    "0x48127ff77fff8000",
    "0x48127fe47fff8000",
=======
    "0x48127ff87fff8000",
    "0x48127fe57fff8000",
>>>>>>> origin/main
    "0x480a7ffb7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x482480017ff98000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x1104800180018000",
    "0x1f4",
    "0x482480017fff8000",
    "0x1f3",
    "0x480080007fff8000",
    "0xa0680017fff8000",
    "0x9",
<<<<<<< HEAD
    "0x4824800180007fe4",
    "0x6f0e",
||||||| 3205b8a81
    "0x4824800180007fe2",
    "0x6fd6",
=======
    "0x4824800180007fe3",
    "0x6eaa",
>>>>>>> origin/main
    "0x482480017fff8000",
    "0x100000000000000000000000000000000",
<<<<<<< HEAD
    "0x400080007ff47fff",
||||||| 3205b8a81
    "0x400080007ff27fff",
=======
    "0x400080007ff37fff",
>>>>>>> origin/main
    "0x10780017fff7fff",
    "0x20",
<<<<<<< HEAD
    "0x4824800180007fe4",
    "0x6f0e",
    "0x400080007ff57fff",
    "0x482480017ff58000",
||||||| 3205b8a81
    "0x4824800180007fe2",
    "0x6fd6",
    "0x400080007ff37fff",
    "0x482480017ff38000",
=======
    "0x4824800180007fe3",
    "0x6eaa",
    "0x400080007ff47fff",
    "0x482480017ff48000",
>>>>>>> origin/main
    "0x1",
    "0x48127ffe7fff8000",
    "0x480a7ffb7fff8000",
<<<<<<< HEAD
    "0x48127ff47fff8000",
||||||| 3205b8a81
    "0x48127ff27fff8000",
=======
    "0x48127ff37fff8000",
>>>>>>> origin/main
    "0x1104800180018000",
    "0xd7",
    "0x20680017fff7ffd",
    "0xc",
    "0x40780017fff7fff",
    "0x1",
    "0x48127ff97fff8000",
    "0x48127ff97fff8000",
    "0x48127ff97fff8000",
    "0x480680017fff8000",
    "0x0",
    "0x48127ffb7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x40780017fff7fff",
    "0x1",
    "0x480680017fff8000",
    "0x4f7574206f6620676173",
    "0x400080007ffe7fff",
<<<<<<< HEAD
    "0x482480017ff28000",
||||||| 3205b8a81
    "0x482480017ff08000",
=======
    "0x482480017ff18000",
>>>>>>> origin/main
    "0x1",
<<<<<<< HEAD
    "0x48127fdf7fff8000",
||||||| 3205b8a81
    "0x48127fdd7fff8000",
=======
    "0x48127fde7fff8000",
>>>>>>> origin/main
    "0x480a7ffb7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x482480017ff98000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x48127ffd7fff8000",
    "0x10780017fff7fff",
    "0x5",
    "0x40780017fff7fff",
    "0xe",
    "0x48127fec7fff8000",
    "0x40780017fff7fff",
    "0x1",
    "0x480680017fff8000",
    "0x4661696c656420746f20646573657269616c697a6520706172616d202331",
    "0x400080007ffe7fff",
    "0x48127ffd7fff8000",
    "0x48127fe77fff8000",
    "0x480a7ffb7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x482480017ff98000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x40780017fff7fff",
    "0x1",
    "0x480680017fff8000",
    "0x4f7574206f6620676173",
    "0x400080007ffe7fff",
    "0x482680017ff98000",
    "0x1",
    "0x480a7ffa7fff8000",
    "0x480a7ffb7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x482480017ff98000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0xa0680017fff8000",
    "0x7",
    "0x482680017ffa8000",
    "0x100000000000000000000000000000000",
    "0x400280007ff97fff",
    "0x10780017fff7fff",
    "0x56",
    "0x4825800180007ffa",
    "0x0",
    "0x400280007ff97fff",
    "0x482680017ff98000",
    "0x1",
    "0x48297ffc80007ffd",
    "0x20680017fff7fff",
    "0x4",
    "0x10780017fff7fff",
    "0x10",
    "0x40780017fff7fff",
    "0x1",
    "0x480680017fff8000",
    "0x496e70757420746f6f206c6f6e6720666f7220617267756d656e7473",
    "0x400080007ffe7fff",
    "0x48127ffc7fff8000",
    "0x48127ffa7fff8000",
    "0x480a7ffb7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x482480017ff98000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x1104800180018000",
    "0x177",
    "0x482480017fff8000",
    "0x176",
    "0x480080007fff8000",
    "0xa0680017fff8000",
    "0x9",
    "0x4824800180007ff8",
    "0x2102",
    "0x482480017fff8000",
    "0x100000000000000000000000000000000",
    "0x400080007ff77fff",
    "0x10780017fff7fff",
    "0x21",
    "0x4824800180007ff8",
    "0x2102",
    "0x400080007ff87fff",
    "0x482480017ff88000",
    "0x1",
    "0x48127ffe7fff8000",
    "0x480a7ffb7fff8000",
    "0x1104800180018000",
    "0x96",
    "0x20680017fff7ffd",
    "0xe",
    "0x40780017fff7fff",
    "0x1",
    "0x400080007fff7ffe",
    "0x48127ff97fff8000",
    "0x48127ff97fff8000",
    "0x48127ff97fff8000",
    "0x480680017fff8000",
    "0x0",
    "0x48127ffb7fff8000",
    "0x482480017ffa8000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x40780017fff7fff",
    "0x1",
    "0x480680017fff8000",
    "0x4f7574206f6620676173",
    "0x400080007ffe7fff",
    "0x482480017ff58000",
    "0x1",
    "0x48127ff37fff8000",
    "0x480a7ffb7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x482480017ff98000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x40780017fff7fff",
    "0x1",
    "0x480680017fff8000",
    "0x4f7574206f6620676173",
    "0x400080007ffe7fff",
    "0x482680017ff98000",
    "0x1",
    "0x480a7ffa7fff8000",
    "0x480a7ffb7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x482480017ff98000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0xa0680017fff8000",
    "0x12",
    "0x4825800180007ffd",
    "0x100000000",
    "0x4844800180008002",
    "0x8000000000000110000000000000000",
    "0x4830800080017ffe",
    "0x480280007ffc7fff",
    "0x482480017ffe8000",
    "0xefffffffffffffde00000000ffffffff",
    "0x480280017ffc7fff",
    "0x400280027ffc7ffb",
    "0x402480017fff7ffb",
    "0xffffffffffffffffffffffffffffffff",
    "0x20680017fff7fff",
    "0x10",
    "0x402780017fff7fff",
    "0x1",
    "0x400380007ffc7ffd",
    "0x482680017ffd8000",
    "0xffffffffffffffffffffffff00000000",
    "0x400280017ffc7fff",
    "0x40780017fff7fff",
    "0x5",
    "0x482680017ffc8000",
    "0x2",
    "0x480680017fff8000",
    "0x0",
    "0x480a7ffd7fff8000",
    "0x208b7fff7fff7ffe",
    "0x482680017ffc8000",
    "0x3",
    "0x480680017fff8000",
    "0x1",
    "0x480680017fff8000",
    "0x0",
    "0x208b7fff7fff7ffe",
    "0x480a7ffa7fff8000",
    "0x480a7ffb7fff8000",
    "0x480a7ffc7fff8000",
    "0x1104800180018000",
    "0x3e",
    "0x20680017fff7ffd",
    "0x2c",
    "0x48127ffa7fff8000",
    "0x48127ffe7fff8000",
    "0x480a7ffd7fff8000",
    "0x1104800180018000",
    "0x7a",
    "0x20680017fff7ffd",
    "0x1b",
    "0x48127fe57fff8000",
    "0x48127fe57fff8000",
    "0x48127ffd7fff8000",
    "0x1104800180018000",
    "0x94",
    "0x20680017fff7ffd",
    "0xc",
    "0x48127fe47fff8000",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x208b7fff7fff7ffe",
    "0x48127fe47fff8000",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x40780017fff7fff",
    "0x18",
    "0x48127fe47fff8000",
    "0x48127fcc7fff8000",
    "0x48127fcc7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127fe27fff8000",
    "0x48127fe27fff8000",
    "0x208b7fff7fff7ffe",
    "0x40780017fff7fff",
    "0x2e",
    "0x48127fcc7fff8000",
    "0x48127fcc7fff8000",
    "0x48127fcc7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127fcc7fff8000",
    "0x48127fcc7fff8000",
    "0x208b7fff7fff7ffe",
    "0x480a7ffb7fff8000",
    "0x480a7ffc7fff8000",
    "0x480a7ffd7fff8000",
    "0x1104800180018000",
    "0x3",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x206f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
    "0x480680017fff8000",
    "0x53746f7261676552656164",
    "0x400280007ffd7fff",
    "0x400380017ffd7ffc",
    "0x400280027ffd7ffd",
    "0x400280037ffd7ffe",
    "0x480280057ffd8000",
    "0x20680017fff7fff",
    "0x25",
    "0x480a7ffb7fff8000",
    "0x480280067ffd8000",
    "0x1104800180018000",
    "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8c",
    "0x480280047ffd8000",
    "0x482680017ffd8000",
    "0x7",
    "0x20680017fff7ffc",
    "0xc",
    "0x48127ffb7fff8000",
    "0x48127ffd7fff8000",
    "0x48127ffd7fff8000",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x48127ff87fff8000",
    "0x10780017fff7fff",
    "0x1c",
    "0x40780017fff7fff",
    "0x9",
    "0x40780017fff7fff",
    "0x1",
    "0x480680017fff8000",
    "0x53746f7265553332202d206e6f6e20753332",
    "0x400080007ffe7fff",
    "0x48127ff07fff8000",
    "0x48127ff27fff8000",
    "0x48127ff27fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x482480017ff98000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x40780017fff7fff",
    "0x10",
    "0x480a7ffb7fff8000",
    "0x480280047ffd8000",
    "0x482680017ffd8000",
    "0x8",
    "0x480680017fff8000",
    "0x1",
    "0x480280067ffd8000",
    "0x480280077ffd8000",
    "0x1104800180018000",
    "0x5e",
    "0x48127ff57fff8000",
    "0x48127ff57fff8000",
    "0x48127ff57fff8000",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0xa0680017fff8000",
    "0x8",
    "0x482a7ffd7ffc8000",
    "0x4824800180007fff",
    "0x100000000",
    "0x400280007ffb7fff",
    "0x10780017fff7fff",
    "0xd",
    "0x482a7ffd7ffc8001",
    "0x4824800180007fff",
    "0xffffffffffffffffffffffff00000000",
    "0x400280007ffb7ffe",
    "0x482680017ffb8000",
    "0x1",
    "0x480680017fff8000",
    "0x0",
    "0x48127ffd7fff8000",
    "0x10780017fff7fff",
    "0x7",
    "0x482680017ffb8000",
    "0x1",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffd7fff8000",
    "0x480680017fff8000",
    "0x7533325f616464204f766572666c6f77",
    "0x1104800180018000",
    "0x48",
    "0x48127ff67fff8000",
    "0x48127ffc7fff8000",
    "0x48127ffc7fff8000",
    "0x48127ffc7fff8000",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x206f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
    "0x480680017fff8000",
    "0x53746f726167655772697465",
    "0x400280007ffc7fff",
    "0x400380017ffc7ffb",
    "0x400280027ffc7ffd",
    "0x400280037ffc7ffe",
    "0x400380047ffc7ffd",
    "0x480280067ffc8000",
    "0x20680017fff7fff",
    "0xd",
    "0x480280057ffc8000",
    "0x482680017ffc8000",
    "0x7",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x10780017fff7fff",
    "0x9",
    "0x480280057ffc8000",
    "0x482680017ffc8000",
    "0x9",
    "0x480680017fff8000",
    "0x1",
    "0x480280077ffc8000",
    "0x480280087ffc8000",
    "0x1104800180018000",
    "0x34",
    "0x20680017fff7ffd",
    "0xb",
    "0x48127ff67fff8000",
    "0x48127ff67fff8000",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x208b7fff7fff7ffe",
    "0x48127ff67fff8000",
    "0x48127ff67fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffb7fff8000",
    "0x48127ffb7fff8000",
    "0x208b7fff7fff7ffe",
    "0x20780017fff7ffb",
    "0x8",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480a7ffd7fff8000",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x1",
    "0x480a7ffc7fff8000",
    "0x480a7ffd7fff8000",
    "0x208b7fff7fff7ffe",
    "0x20780017fff7ffb",
    "0xa",
    "0x40780017fff7fff",
    "0x1",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480a7ffc7fff8000",
    "0x208b7fff7fff7ffe",
    "0x40780017fff7fff",
    "0x1",
    "0x400180007fff7ffd",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffe7fff8000",
    "0x482480017ffd8000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x20780017fff7ffb",
    "0x9",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x1",
    "0x480a7ffc7fff8000",
    "0x480a7ffd7fff8000",
    "0x208b7fff7fff7ffe"
  ],
  "bytecode_segment_lengths": [
    154,
    108,
    38,
    59,
    24,
    79,
    43,
    52,
    13,
    19,
    14
  ],
  "hints": [
    [
      0,
      [
        {
          "TestLessThanOrEqual": {
            "lhs": {
              "Immediate": "0x0"
            },
            "rhs": {
              "Deref": {
                "register": "FP",
                "offset": -6
              }
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      46,
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      65,
      [
        {
          "TestLessThanOrEqual": {
            "lhs": {
<<<<<<< HEAD
              "Immediate": "0x6f0e"
||||||| 3205b8a81
              "Immediate": "0x6fd6"
=======
              "Immediate": "0x6eaa"
>>>>>>> origin/main
            },
            "rhs": {
              "Deref": {
                "register": "AP",
<<<<<<< HEAD
                "offset": -27
||||||| 3205b8a81
                "offset": -29
=======
                "offset": -28
>>>>>>> origin/main
              }
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      86,
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      104,
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      125,
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      139,
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      154,
      [
        {
          "TestLessThanOrEqual": {
            "lhs": {
              "Immediate": "0x0"
            },
            "rhs": {
              "Deref": {
                "register": "FP",
                "offset": -6
              }
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
<<<<<<< HEAD
      173,
||||||| 3205b8a81
      175,
=======
      171,
>>>>>>> origin/main
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
<<<<<<< HEAD
      192,
||||||| 3205b8a81
      194,
=======
      190,
>>>>>>> origin/main
      [
        {
          "TestLessThanOrEqual": {
            "lhs": {
              "Immediate": "0x2102"
            },
            "rhs": {
              "Deref": {
                "register": "AP",
                "offset": -7
              }
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
<<<<<<< HEAD
      212,
||||||| 3205b8a81
      214,
=======
      210,
>>>>>>> origin/main
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
<<<<<<< HEAD
      232,
||||||| 3205b8a81
      234,
=======
      230,
>>>>>>> origin/main
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
<<<<<<< HEAD
      247,
||||||| 3205b8a81
      249,
=======
      245,
>>>>>>> origin/main
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
<<<<<<< HEAD
      262,
||||||| 3205b8a81
      264,
=======
      260,
>>>>>>> origin/main
      [
        {
          "TestLessThan": {
            "lhs": {
              "Deref": {
                "register": "FP",
                "offset": -3
              }
            },
            "rhs": {
              "Immediate": "0x100000000"
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
<<<<<<< HEAD
      266,
||||||| 3205b8a81
      268,
=======
      264,
>>>>>>> origin/main
      [
        {
          "LinearSplit": {
            "value": {
              "Deref": {
                "register": "AP",
                "offset": -1
              }
            },
            "scalar": {
              "Immediate": "0x8000000000000110000000000000000"
            },
            "max_x": {
              "Immediate": "0xfffffffffffffffffffffffffffffffe"
            },
            "x": {
              "register": "AP",
              "offset": 0
            },
            "y": {
              "register": "AP",
              "offset": 1
            }
          }
        }
      ]
    ],
    [
<<<<<<< HEAD
      393,
||||||| 3205b8a81
      395,
=======
      372,
>>>>>>> origin/main
      [
        {
          "SystemCall": {
            "system": {
              "Deref": {
                "register": "FP",
                "offset": -3
              }
            }
          }
        }
      ]
    ],
    [
<<<<<<< HEAD
      417,
||||||| 3205b8a81
      419,
=======
      396,
>>>>>>> origin/main
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
<<<<<<< HEAD
      462,
||||||| 3205b8a81
      464,
=======
      429,
>>>>>>> origin/main
      [
        {
          "TestLessThan": {
            "lhs": {
              "BinOp": {
                "op": "Add",
                "a": {
                  "register": "FP",
                  "offset": -4
                },
                "b": {
                  "Deref": {
                    "register": "FP",
                    "offset": -3
                  }
                }
              }
            },
            "rhs": {
              "Immediate": "0x100000000"
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
<<<<<<< HEAD
      516,
||||||| 3205b8a81
      518,
=======
      473,
>>>>>>> origin/main
      [
        {
          "SystemCall": {
            "system": {
              "Deref": {
                "register": "FP",
                "offset": -4
              }
            }
          }
        }
      ]
    ],
    [
<<<<<<< HEAD
      580,
||||||| 3205b8a81
      582,
=======
      537,
>>>>>>> origin/main
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ]
  ],
  "pythonic_hints": [
    [
      0,
      [
        "memory[ap + 0] = 0 <= memory[fp + -6]"
      ]
    ],
    [
      46,
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
      65,
      [
<<<<<<< HEAD
        "memory[ap + 0] = 28430 <= memory[ap + -27]"
||||||| 3205b8a81
        "memory[ap + 0] = 28630 <= memory[ap + -29]"
=======
        "memory[ap + 0] = 28330 <= memory[ap + -28]"
>>>>>>> origin/main
      ]
    ],
    [
      86,
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
      104,
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
      125,
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
      139,
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
      154,
      [
        "memory[ap + 0] = 0 <= memory[fp + -6]"
      ]
    ],
    [
<<<<<<< HEAD
      173,
||||||| 3205b8a81
      175,
=======
      171,
>>>>>>> origin/main
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
<<<<<<< HEAD
      192,
||||||| 3205b8a81
      194,
=======
      190,
>>>>>>> origin/main
      [
        "memory[ap + 0] = 8450 <= memory[ap + -7]"
      ]
    ],
    [
<<<<<<< HEAD
      212,
||||||| 3205b8a81
      214,
=======
      210,
>>>>>>> origin/main
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
<<<<<<< HEAD
      232,
||||||| 3205b8a81
      234,
=======
      230,
>>>>>>> origin/main
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
<<<<<<< HEAD
      247,
||||||| 3205b8a81
      249,
=======
      245,
>>>>>>> origin/main
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
<<<<<<< HEAD
      262,
||||||| 3205b8a81
      264,
=======
      260,
>>>>>>> origin/main
      [
        "memory[ap + 0] = memory[fp + -3] < 4294967296"
      ]
    ],
    [
<<<<<<< HEAD
      266,
||||||| 3205b8a81
      268,
=======
      264,
>>>>>>> origin/main
      [
        "\n(value, scalar) = (memory[ap + -1], 10633823966279327296825105735305134080)\nx = min(value // scalar, 340282366920938463463374607431768211454)\ny = value - x * scalar\nmemory[ap + 0] = x\nmemory[ap + 1] = y\n"
      ]
    ],
    [
<<<<<<< HEAD
      393,
||||||| 3205b8a81
      395,
=======
      372,
>>>>>>> origin/main
      [
        "syscall_handler.syscall(syscall_ptr=memory[fp + -3])"
      ]
    ],
    [
<<<<<<< HEAD
      417,
||||||| 3205b8a81
      419,
=======
      396,
>>>>>>> origin/main
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
<<<<<<< HEAD
      462,
||||||| 3205b8a81
      464,
=======
      429,
>>>>>>> origin/main
      [
        "memory[ap + 0] = (memory[fp + -4] + memory[fp + -3]) % PRIME < 4294967296"
      ]
    ],
    [
<<<<<<< HEAD
      516,
||||||| 3205b8a81
      518,
=======
      473,
>>>>>>> origin/main
      [
        "syscall_handler.syscall(syscall_ptr=memory[fp + -4])"
      ]
    ],
    [
<<<<<<< HEAD
      580,
||||||| 3205b8a81
      582,
=======
      537,
>>>>>>> origin/main
      [
        "memory[ap + 0] = segments.add()"
      ]
    ]
  ],
  "entry_points_by_type": {
    "EXTERNAL": [
      {
        "selector": "0x362398bec32bc0ebb411203221a35a0301193a96f317ebe5e40be9f60d15320",
        "offset": 0,
        "builtins": [
          "range_check"
        ]
      },
      {
        "selector": "0x39e11d48192e4333233c7eb19d10ad67c362bb28580c604d67884c85da39695",
        "offset": 154,
        "builtins": [
          "range_check"
        ]
      }
    ],
    "L1_HANDLER": [],
    "CONSTRUCTOR": []
  }
}
