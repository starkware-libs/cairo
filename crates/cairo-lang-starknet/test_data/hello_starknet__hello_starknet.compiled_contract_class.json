{
  "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
  "compiler_version": "2.13.0",
  "bytecode": [
    "0xa0680017fff8000",
    "0x7",
    "0x482680017ffa8000",
    "0x100000000000000000000000000000000",
    "0x400280007ff97fff",
    "0x10780017fff7fff",
    "0x7a",
    "0x4825800180007ffa",
    "0x0",
    "0x400280007ff97fff",
    "0x48297ffc80007ffd",
    "0x20680017fff7fff",
    "0x4",
    "0x10780017fff7fff",
    "0x64",
    "0x480280007ffc8000",
    "0xa0680017fff8000",
    "0x12",
    "0x4824800180007ffe",
    "0x100000000",
    "0x4844800180008002",
    "0x8000000000000110000000000000000",
    "0x4830800080017ffe",
    "0x480280017ff97fff",
    "0x482480017ffe8000",
    "0xefffffffffffffde00000000ffffffff",
    "0x480280027ff97fff",
    "0x400280037ff97ffb",
    "0x402480017fff7ffb",
    "0xffffffffffffffffffffffffffffffff",
    "0x20680017fff7fff",
    "0x4d",
    "0x402780017fff7fff",
    "0x1",
    "0x400280017ff97ffe",
    "0x482480017ffe8000",
    "0xffffffffffffffffffffffff00000000",
    "0x400280027ff97fff",
    "0x482680017ffc8000",
    "0x1",
    "0x480a7ffd7fff8000",
    "0x48307ffe80007fff",
    "0x20680017fff7fff",
    "0x4",
    "0x10780017fff7fff",
    "0xd",
    "0x1104800180018000",
    "0xe8",
    "0x482680017ff98000",
    "0x3",
    "0x48127fef7fff8000",
    "0x480a7ffb7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x1104800180018000",
    "0x17d",
    "0x482480017fff8000",
    "0x17c",
    "0x480080007fff8000",
    "0xa0680017fff8000",
    "0x9",
    "0x4824800180007ff3",
    "0x4614",
    "0x482480017fff8000",
    "0x100000000000000000000000000000000",
    "0x400280037ff97fff",
    "0x10780017fff7fff",
    "0x20",
    "0x4824800180007ff3",
    "0x4614",
    "0x400280037ff97fff",
    "0x482680017ff98000",
    "0x4",
    "0x48127ffe7fff8000",
    "0x480a7ffb7fff8000",
    "0x48127ff17fff8000",
    "0x1104800180018000",
    "0xcc",
    "0x20680017fff7ffd",
    "0xc",
    "0x40780017fff7fff",
    "0x1",
    "0x48127ff97fff8000",
    "0x48127ff97fff8000",
    "0x48127ff97fff8000",
    "0x480680017fff8000",
    "0x0",
    "0x48127ffb7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x482680017ff98000",
    "0x4",
    "0x482480017ff08000",
    "0x1590",
    "0x10780017fff7fff",
    "0x1a",
    "0x482680017ff98000",
    "0x4",
    "0x482480017ff58000",
    "0x18b0",
    "0x10780017fff7fff",
    "0x6",
    "0x482680017ff98000",
    "0x1",
    "0x482480017ffd8000",
    "0x1dce",
    "0x1104800180018000",
    "0x126",
    "0x48127ff67fff8000",
    "0x48127ff67fff8000",
    "0x480a7ffb7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x482680017ff98000",
    "0x1",
    "0x482680017ffa8000",
    "0x1e96",
    "0x1104800180018000",
    "0x11d",
    "0x48127ff67fff8000",
    "0x48127ff67fff8000",
    "0x480a7ffb7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0xa0680017fff8000",
    "0x7",
    "0x482680017ffa8000",
    "0x100000000000000000000000000000000",
    "0x400280007ff97fff",
    "0x10780017fff7fff",
    "0x76",
    "0x4825800180007ffa",
    "0x0",
    "0x400280007ff97fff",
    "0x48297ffc80007ffd",
    "0x20680017fff7fff",
    "0x4",
    "0x10780017fff7fff",
    "0xd",
    "0x1104800180018000",
    "0x7a",
    "0x482680017ff98000",
    "0x1",
    "0x48127ff57fff8000",
    "0x480a7ffb7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x1104800180018000",
    "0x10f",
    "0x482480017fff8000",
    "0x10e",
    "0x480080007fff8000",
    "0xa0680017fff8000",
    "0x9",
    "0x4824800180007ff9",
    "0x141e",
    "0x482480017fff8000",
    "0x100000000000000000000000000000000",
    "0x400280017ff97fff",
    "0x10780017fff7fff",
    "0x4f",
    "0x4824800180007ff9",
    "0x141e",
    "0x400280017ff97fff",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x206f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
    "0x480680017fff8000",
    "0x53746f7261676552656164",
    "0x400280007ffb7fff",
    "0x400280017ffb7ffc",
    "0x400280027ffb7ffd",
    "0x400280037ffb7ffe",
    "0x480280057ffb8000",
    "0x20680017fff7fff",
    "0x35",
    "0x480280067ffb8000",
    "0xa0680017fff8000",
    "0x12",
    "0x4824800180007ffe",
    "0x100000000",
    "0x4844800180008002",
    "0x8000000000000110000000000000000",
    "0x4830800080017ffe",
    "0x480280027ff97fff",
    "0x482480017ffe8000",
    "0xefffffffffffffde00000000ffffffff",
    "0x480280037ff97fff",
    "0x400280047ff97ffb",
    "0x402480017fff7ffb",
    "0xffffffffffffffffffffffffffffffff",
    "0x20680017fff7fff",
    "0x18",
    "0x402780017fff7fff",
    "0x1",
    "0x400280027ff97ffe",
    "0x482480017ffe8000",
    "0xffffffffffffffffffffffff00000000",
    "0x400280037ff97fff",
    "0x480280047ffb8000",
    "0x40780017fff7fff",
    "0x1",
    "0x400080007fff7ffb",
    "0x482680017ff98000",
    "0x4",
    "0x482480017ffd8000",
    "0x4f6",
    "0x482680017ffb8000",
    "0x7",
    "0x480680017fff8000",
    "0x0",
    "0x48127ffb7fff8000",
    "0x482480017ffa8000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x1104800180018000",
    "0xb9",
    "0x482680017ff98000",
    "0x5",
    "0x480280047ffb8000",
    "0x482680017ffb8000",
    "0x7",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x482680017ff98000",
    "0x2",
    "0x480280047ffb8000",
    "0x482680017ffb8000",
    "0x8",
    "0x480680017fff8000",
    "0x1",
    "0x480280067ffb8000",
    "0x480280077ffb8000",
    "0x208b7fff7fff7ffe",
    "0x482680017ff98000",
    "0x2",
    "0x482480017ff68000",
    "0x19a0",
    "0x10780017fff7fff",
    "0x6",
    "0x482680017ff98000",
    "0x1",
    "0x482680017ffa8000",
    "0x1e96",
    "0x1104800180018000",
    "0x94",
    "0x48127ff67fff8000",
    "0x48127ff67fff8000",
    "0x480a7ffb7fff8000",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x496e70757420746f6f206c6f6e6720666f7220617267756d656e7473",
    "0x1104800180018000",
    "0x92",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x206f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
    "0x480680017fff8000",
    "0x53746f7261676552656164",
    "0x400280007ffc7fff",
    "0x400380017ffc7ffb",
    "0x400280027ffc7ffd",
    "0x400280037ffc7ffe",
    "0x480280057ffc8000",
    "0x20680017fff7fff",
    "0x6a",
    "0x480280067ffc8000",
    "0xa0680017fff8000",
    "0x12",
    "0x4824800180007ffe",
    "0x100000000",
    "0x4844800180008002",
    "0x8000000000000110000000000000000",
    "0x4830800080017ffe",
    "0x480280007ffa7fff",
    "0x482480017ffe8000",
    "0xefffffffffffffde00000000ffffffff",
    "0x480280017ffa7fff",
    "0x400280027ffa7ffb",
    "0x402480017fff7ffb",
    "0xffffffffffffffffffffffffffffffff",
    "0x20680017fff7fff",
    "0x4d",
    "0x402780017fff7fff",
    "0x1",
    "0x400280007ffa7ffe",
    "0x482480017ffe8000",
    "0xffffffffffffffffffffffff00000000",
    "0x400280017ffa7fff",
    "0x40780017fff7fff",
    "0x2",
    "0xa0680017fff8000",
    "0x8",
    "0x48287ffd7ffa8000",
    "0x4824800180007fff",
    "0x100000000",
    "0x400280027ffa7fff",
    "0x10780017fff7fff",
    "0x31",
    "0x48287ffd7ffa8001",
    "0x4824800180007fff",
    "0xffffffffffffffffffffffff00000000",
    "0x400280027ffa7ffe",
    "0x40780017fff7fff",
    "0x2",
    "0x480280047ffc8000",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x206f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
    "0x480680017fff8000",
    "0x53746f726167655772697465",
    "0x400280077ffc7fff",
    "0x400280087ffc7ffc",
    "0x400280097ffc7ffd",
    "0x4002800a7ffc7ffe",
    "0x4002800b7ffc7ff9",
    "0x4802800d7ffc8000",
    "0x20680017fff7fff",
    "0x10",
    "0x4802800c7ffc8000",
    "0x482680017ffa8000",
    "0x3",
    "0x482480017ffe8000",
    "0xa",
    "0x482680017ffc8000",
    "0xe",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x480680017fff8000",
    "0x0",
    "0x208b7fff7fff7ffe",
    "0x40780017fff7fff",
    "0x1",
    "0x482680017ffa8000",
    "0x3",
    "0x4802800c7ffc8000",
    "0x482680017ffc8000",
    "0x10",
    "0x480680017fff8000",
    "0x1",
    "0x4802800e7ffc8000",
    "0x4802800f7ffc8000",
    "0x208b7fff7fff7ffe",
    "0x1104800180018000",
    "0x39",
    "0x482680017ffa8000",
    "0x3",
    "0x480280047ffc8000",
    "0x482680017ffc8000",
    "0x7",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x1104800180018000",
    "0x21",
    "0x482680017ffa8000",
    "0x3",
    "0x480280047ffc8000",
    "0x482680017ffc8000",
    "0x7",
    "0x480680017fff8000",
    "0x1",
    "0x48127ffa7fff8000",
    "0x48127ffa7fff8000",
    "0x208b7fff7fff7ffe",
    "0x40780017fff7fff",
    "0x10",
    "0x480a7ffa7fff8000",
    "0x480280047ffc8000",
    "0x482680017ffc8000",
    "0x8",
    "0x480680017fff8000",
    "0x1",
    "0x480280067ffc8000",
    "0x480280077ffc8000",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x4661696c656420746f20646573657269616c697a6520706172616d202331",
    "0x1104800180018000",
    "0xd",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x4f7574206f6620676173",
    "0x1104800180018000",
    "0x8",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x53746f7265553332202d206e6f6e20753332",
    "0x1104800180018000",
    "0x3",
    "0x208b7fff7fff7ffe",
    "0x40780017fff7fff",
    "0x1",
    "0x400180007fff7ffd",
    "0x48127fff7fff8000",
    "0x482480017ffe8000",
    "0x1",
    "0x208b7fff7fff7ffe",
    "0x480680017fff8000",
    "0x7533325f616464204f766572666c6f77",
    "0x1104800180018000",
    "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
    "0x208b7fff7fff7ffe"
  ],
  "bytecode_segment_lengths": [
    141,
    137,
    5,
    128,
    5,
    5,
    5,
    7,
    5
  ],
  "hints": [
    [
      0,
      [
        {
          "TestLessThanOrEqual": {
            "lhs": {
              "Immediate": "0x0"
            },
            "rhs": {
              "Deref": {
                "register": "FP",
                "offset": -6
              }
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      16,
      [
        {
          "TestLessThan": {
            "lhs": {
              "BinOp": {
                "op": "Add",
                "a": {
                  "register": "AP",
                  "offset": -1
                },
                "b": {
                  "Immediate": "0x0"
                }
              }
            },
            "rhs": {
              "Immediate": "0x100000000"
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      20,
      [
        {
          "LinearSplit": {
            "value": {
              "Deref": {
                "register": "AP",
                "offset": -1
              }
            },
            "scalar": {
              "Immediate": "0x8000000000000110000000000000000"
            },
            "max_x": {
              "Immediate": "0xfffffffffffffffffffffffffffffffe"
            },
            "x": {
              "register": "AP",
              "offset": 0
            },
            "y": {
              "register": "AP",
              "offset": 1
            }
          }
        }
      ]
    ],
    [
      62,
      [
        {
          "TestLessThanOrEqual": {
            "lhs": {
              "Immediate": "0x4614"
            },
            "rhs": {
              "Deref": {
                "register": "AP",
                "offset": -12
              }
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      83,
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      141,
      [
        {
          "TestLessThanOrEqual": {
            "lhs": {
              "Immediate": "0x0"
            },
            "rhs": {
              "Deref": {
                "register": "FP",
                "offset": -6
              }
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      172,
      [
        {
          "TestLessThanOrEqual": {
            "lhs": {
              "Immediate": "0x141e"
            },
            "rhs": {
              "Deref": {
                "register": "AP",
                "offset": -6
              }
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      194,
      [
        {
          "SystemCall": {
            "system": {
              "Deref": {
                "register": "FP",
                "offset": -5
              }
            }
          }
        }
      ]
    ],
    [
      198,
      [
        {
          "TestLessThan": {
            "lhs": {
              "BinOp": {
                "op": "Add",
                "a": {
                  "register": "AP",
                  "offset": -1
                },
                "b": {
                  "Immediate": "0x0"
                }
              }
            },
            "rhs": {
              "Immediate": "0x100000000"
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      202,
      [
        {
          "LinearSplit": {
            "value": {
              "Deref": {
                "register": "AP",
                "offset": -1
              }
            },
            "scalar": {
              "Immediate": "0x8000000000000110000000000000000"
            },
            "max_x": {
              "Immediate": "0xfffffffffffffffffffffffffffffffe"
            },
            "x": {
              "register": "AP",
              "offset": 0
            },
            "y": {
              "register": "AP",
              "offset": 1
            }
          }
        }
      ]
    ],
    [
      221,
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      293,
      [
        {
          "SystemCall": {
            "system": {
              "Deref": {
                "register": "FP",
                "offset": -4
              }
            }
          }
        }
      ]
    ],
    [
      297,
      [
        {
          "TestLessThan": {
            "lhs": {
              "BinOp": {
                "op": "Add",
                "a": {
                  "register": "AP",
                  "offset": -1
                },
                "b": {
                  "Immediate": "0x0"
                }
              }
            },
            "rhs": {
              "Immediate": "0x100000000"
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      301,
      [
        {
          "LinearSplit": {
            "value": {
              "Deref": {
                "register": "AP",
                "offset": -1
              }
            },
            "scalar": {
              "Immediate": "0x8000000000000110000000000000000"
            },
            "max_x": {
              "Immediate": "0xfffffffffffffffffffffffffffffffe"
            },
            "x": {
              "register": "AP",
              "offset": 0
            },
            "y": {
              "register": "AP",
              "offset": 1
            }
          }
        }
      ]
    ],
    [
      321,
      [
        {
          "TestLessThan": {
            "lhs": {
              "BinOp": {
                "op": "Add",
                "a": {
                  "register": "AP",
                  "offset": -5
                },
                "b": {
                  "Deref": {
                    "register": "FP",
                    "offset": -3
                  }
                }
              }
            },
            "rhs": {
              "Immediate": "0x100000000"
            },
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ],
    [
      347,
      [
        {
          "SystemCall": {
            "system": {
              "BinOp": {
                "op": "Add",
                "a": {
                  "register": "FP",
                  "offset": -4
                },
                "b": {
                  "Immediate": "0x7"
                }
              }
            }
          }
        }
      ]
    ],
    [
      426,
      [
        {
          "AllocSegment": {
            "dst": {
              "register": "AP",
              "offset": 0
            }
          }
        }
      ]
    ]
  ],
  "pythonic_hints": [
    [
      0,
      [
        "memory[ap + 0] = 0 <= memory[fp + -6]"
      ]
    ],
    [
      16,
      [
        "memory[ap + 0] = (memory[ap + -1] + 0) % PRIME < 4294967296"
      ]
    ],
    [
      20,
      [
        "\n(value, scalar) = (memory[ap + -1], 10633823966279327296825105735305134080)\nx = min(value // scalar, 340282366920938463463374607431768211454)\ny = value - x * scalar\nmemory[ap + 0] = x\nmemory[ap + 1] = y\n"
      ]
    ],
    [
      62,
      [
        "memory[ap + 0] = 17940 <= memory[ap + -12]"
      ]
    ],
    [
      83,
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
      141,
      [
        "memory[ap + 0] = 0 <= memory[fp + -6]"
      ]
    ],
    [
      172,
      [
        "memory[ap + 0] = 5150 <= memory[ap + -6]"
      ]
    ],
    [
      194,
      [
        "syscall_handler.syscall(syscall_ptr=memory[fp + -5])"
      ]
    ],
    [
      198,
      [
        "memory[ap + 0] = (memory[ap + -1] + 0) % PRIME < 4294967296"
      ]
    ],
    [
      202,
      [
        "\n(value, scalar) = (memory[ap + -1], 10633823966279327296825105735305134080)\nx = min(value // scalar, 340282366920938463463374607431768211454)\ny = value - x * scalar\nmemory[ap + 0] = x\nmemory[ap + 1] = y\n"
      ]
    ],
    [
      221,
      [
        "memory[ap + 0] = segments.add()"
      ]
    ],
    [
      293,
      [
        "syscall_handler.syscall(syscall_ptr=memory[fp + -4])"
      ]
    ],
    [
      297,
      [
        "memory[ap + 0] = (memory[ap + -1] + 0) % PRIME < 4294967296"
      ]
    ],
    [
      301,
      [
        "\n(value, scalar) = (memory[ap + -1], 10633823966279327296825105735305134080)\nx = min(value // scalar, 340282366920938463463374607431768211454)\ny = value - x * scalar\nmemory[ap + 0] = x\nmemory[ap + 1] = y\n"
      ]
    ],
    [
      321,
      [
        "memory[ap + 0] = (memory[ap + -5] + memory[fp + -3]) % PRIME < 4294967296"
      ]
    ],
    [
      347,
      [
        "syscall_handler.syscall(syscall_ptr=memory[fp + -4] + 7)"
      ]
    ],
    [
      426,
      [
        "memory[ap + 0] = segments.add()"
      ]
    ]
  ],
  "entry_points_by_type": {
    "EXTERNAL": [
      {
        "selector": "0x362398bec32bc0ebb411203221a35a0301193a96f317ebe5e40be9f60d15320",
        "offset": 0,
        "builtins": [
          "range_check"
        ]
      },
      {
        "selector": "0x39e11d48192e4333233c7eb19d10ad67c362bb28580c604d67884c85da39695",
        "offset": 141,
        "builtins": [
          "range_check"
        ]
      }
    ],
    "L1_HANDLER": [],
    "CONSTRUCTOR": []
  }
}
