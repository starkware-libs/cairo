//! > Test expansion of a simple starknet contract.

//! > test_runner_name
ExpandContractTestRunner

//! > cairo_code
#[contract]
mod TestContract {
    #[external]
    #[raw_output]
    fn test_raw_output() -> Array::<felt252> {
        array_new()
    }

    #[external]
    #[raw_output]
    fn test_raw_output_with_spaces() -> Array     ::   < felt252  > {
        array_new()
    }
}

//! > generated_cairo_code
mod TestContract {
    use starknet::SyscallResultTrait;
    use starknet::SyscallResultTraitImpl;

    #[external]
    #[raw_output]
    fn test_raw_output() -> Array::<felt252> {
        array_new()
    }

    #[external]
    #[raw_output]
    fn test_raw_output_with_spaces() -> Array     ::   < felt252  > {
        array_new()
    }

    

    

    trait __abi {
        #[external]
        fn test_raw_output() -> Array::<felt252>;
        #[external]
        fn test_raw_output_with_spaces() -> Array     ::   < felt252  >;
        
        
    }

    mod __external {
        use starknet::contract_address::ContractAddressSerde;

        
    }

    mod __l1_handler {
        use starknet::contract_address::ContractAddressSerde;

        
    }

    mod __constructor {
        use starknet::contract_address::ContractAddressSerde;

        
    }
}

//! > expected_diagnostics
error: Plugin diagnostic: `raw_output` functions must return `Span::<felt252>`.
 --> lib.cairo:5:29
    fn test_raw_output() -> Array::<felt252> {
                            ^**************^

error: Plugin diagnostic: `raw_output` functions must return `Span::<felt252>`.
 --> lib.cairo:11:41
    fn test_raw_output_with_spaces() -> Array     ::   < felt252  > {
                                        ^*************************^
