//! > Test expansion of a simple starknet contract.

//! > test_function_name
test_expand_contract

//! > cairo_code
#[contract]
mod TestContract {
    func internal_func(ref system: System) -> felt {
        1
    }

    #[external]
    func test(ref system: System, ref arg: felt, num: felt) -> felt {
        1
    }
}

//! > generated_cairo_code
mod __external { use super::TestContract;
func test(ref system: System, mut data: Array::<felt>) -> Array::<felt> {
    if array::array_len::<felt>(data) != 3_u128 {
        panic(array::array_new::<felt>());
    }
    let mut __arg_arg: felt = match array::array_at::<felt>(data, 0_u128) {
        Option::Some(x) => x,
        Option::None(()) => panic(array::array_new::<felt>()),
    };
    let __arg_num: felt = match array::array_at::<felt>(data, 1_u128) {
        Option::Some(x) => x,
        Option::None(()) => panic(array::array_new::<felt>()),
    };
    let res = TestContract::test(system, __arg_arg, __arg_num);
    let mut arr = array::array_new::<felt>();
    array::array_append::<felt>(arr, __arg_arg);
    array::array_append::<felt>(arr, res);
    arr
}
}

//! > expected_diagnostics
