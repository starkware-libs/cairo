{
  "sierra_program": "type felt = felt;\ntype SyscallPtr = SyscallPtr;\ntype uint128 = uint128;\ntype Uninitialized<uint128> = Uninitialized<uint128>;\ntype RangeCheck = RangeCheck;\ntype Uninitialized<RangeCheck> = Uninitialized<RangeCheck>;\ntype Array<felt> = Array<felt>;\ntype core::PanicResult::<core::integer::uint128> = Enum<ut@core::PanicResult::<core::integer::uint128>, uint128, Array<felt>>;\ntype core::PanicResult::<core::array::Array::<core::felt>> = Enum<ut@core::PanicResult::<core::array::Array::<core::felt>>, Array<felt>, Array<felt>>;\ntype Unit = Struct<ut@Tuple>;\ntype core::bool = Enum<ut@core::bool, Unit, Unit>;\ntype core::option::Option::<core::integer::uint128> = Enum<ut@core::option::Option::<core::integer::uint128>, uint128, Unit>;\ntype Tuple<uint128, uint128> = Struct<ut@Tuple, uint128, uint128>;\ntype NonZero<felt> = NonZero<felt>;\n\nlibfunc revoke_ap_tracking = revoke_ap_tracking;\nlibfunc felt_const<1> = felt_const<1>;\nlibfunc store_temp<SyscallPtr> = store_temp<SyscallPtr>;\nlibfunc store_temp<felt> = store_temp<felt>;\nlibfunc alloc_local<uint128> = alloc_local<uint128>;\nlibfunc alloc_local<RangeCheck> = alloc_local<RangeCheck>;\nlibfunc finalize_locals = finalize_locals;\nlibfunc array_len<felt> = array_len<felt>;\nlibfunc drop<Array<felt>> = drop<Array<felt>>;\nlibfunc store_temp<RangeCheck> = store_temp<RangeCheck>;\nlibfunc store_local<uint128> = store_local<uint128>;\nlibfunc function_call<user@core::integer::uint128_from_felt> = function_call<user@core::integer::uint128_from_felt>;\nlibfunc store_local<RangeCheck> = store_local<RangeCheck>;\nlibfunc enum_match<core::PanicResult::<core::integer::uint128>> = enum_match<core::PanicResult::<core::integer::uint128>>;\nlibfunc branch_align = branch_align;\nlibfunc store_temp<uint128> = store_temp<uint128>;\nlibfunc jump = jump;\nlibfunc drop<uint128> = drop<uint128>;\nlibfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>;\nlibfunc store_temp<core::PanicResult::<core::array::Array::<core::felt>>> = store_temp<core::PanicResult::<core::array::Array::<core::felt>>>;\nlibfunc rename<core::PanicResult::<core::array::Array::<core::felt>>> = rename<core::PanicResult::<core::array::Array::<core::felt>>>;\nlibfunc function_call<user@core::integer::uint128_ne> = function_call<user@core::integer::uint128_ne>;\nlibfunc enum_match<core::bool> = enum_match<core::bool>;\nlibfunc drop<Unit> = drop<Unit>;\nlibfunc array_new<felt> = array_new<felt>;\nlibfunc function_call<user@test_contract::test_contract::test> = function_call<user@test_contract::test_contract::test>;\nlibfunc store_temp<Array<felt>> = store_temp<Array<felt>>;\nlibfunc array_append<felt> = array_append<felt>;\nlibfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>;\nlibfunc function_call<user@core::integer::uint128_try_from_felt> = function_call<user@core::integer::uint128_try_from_felt>;\nlibfunc enum_match<core::option::Option::<core::integer::uint128>> = enum_match<core::option::Option::<core::integer::uint128>>;\nlibfunc rename<uint128> = rename<uint128>;\nlibfunc enum_init<core::PanicResult::<core::integer::uint128>, 1> = enum_init<core::PanicResult::<core::integer::uint128>, 1>;\nlibfunc store_temp<core::PanicResult::<core::integer::uint128>> = store_temp<core::PanicResult::<core::integer::uint128>>;\nlibfunc rename<core::PanicResult::<core::integer::uint128>> = rename<core::PanicResult::<core::integer::uint128>>;\nlibfunc enum_init<core::PanicResult::<core::integer::uint128>, 0> = enum_init<core::PanicResult::<core::integer::uint128>, 0>;\nlibfunc function_call<user@core::integer::uint128_eq> = function_call<user@core::integer::uint128_eq>;\nlibfunc rename<core::bool> = rename<core::bool>;\nlibfunc function_call<user@core::bool_not> = function_call<user@core::bool_not>;\nlibfunc uint128s_from_felt = uint128s_from_felt;\nlibfunc enum_init<core::option::Option::<core::integer::uint128>, 0> = enum_init<core::option::Option::<core::integer::uint128>, 0>;\nlibfunc rename<RangeCheck> = rename<RangeCheck>;\nlibfunc store_temp<core::option::Option::<core::integer::uint128>> = store_temp<core::option::Option::<core::integer::uint128>>;\nlibfunc rename<core::option::Option::<core::integer::uint128>> = rename<core::option::Option::<core::integer::uint128>>;\nlibfunc struct_construct<Tuple<uint128, uint128>> = struct_construct<Tuple<uint128, uint128>>;\nlibfunc drop<Tuple<uint128, uint128>> = drop<Tuple<uint128, uint128>>;\nlibfunc struct_construct<Unit> = struct_construct<Unit>;\nlibfunc enum_init<core::option::Option::<core::integer::uint128>, 1> = enum_init<core::option::Option::<core::integer::uint128>, 1>;\nlibfunc uint128_to_felt = uint128_to_felt;\nlibfunc function_call<user@core::felt_eq> = function_call<user@core::felt_eq>;\nlibfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;\nlibfunc store_temp<core::bool> = store_temp<core::bool>;\nlibfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;\nlibfunc felt_sub = felt_sub;\nlibfunc felt_jump_nz = felt_jump_nz;\nlibfunc drop<NonZero<felt>> = drop<NonZero<felt>>;\n\nrevoke_ap_tracking() -> ();\nfelt_const<1>() -> ([1]);\nstore_temp<SyscallPtr>([0]) -> ([2]);\nstore_temp<felt>([1]) -> ([3]);\nreturn([2], [3]);\nalloc_local<uint128>() -> ([4]);\nalloc_local<RangeCheck>() -> ([6]);\nfinalize_locals() -> ();\nrevoke_ap_tracking() -> ();\narray_len<felt>([2]) -> ([7], [3]);\ndrop<Array<felt>>([7]) -> ();\nfelt_const<1>() -> ([8]);\nstore_temp<RangeCheck>([0]) -> ([10]);\nstore_temp<felt>([8]) -> ([11]);\nstore_local<uint128>([4], [3]) -> ([3]);\nfunction_call<user@core::integer::uint128_from_felt>([10], [11]) -> ([5], [9]);\nstore_local<RangeCheck>([6], [5]) -> ([5]);\nenum_match<core::PanicResult::<core::integer::uint128>>([9]) { 18([12]) 21([13]) };\nbranch_align() -> ();\nstore_temp<uint128>([12]) -> ([14]);\njump() { 29() };\ndrop<uint128>([3]) -> ();\nbranch_align() -> ();\nenum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([13]) -> ([15]);\nstore_temp<RangeCheck>([5]) -> ([16]);\nstore_temp<SyscallPtr>([1]) -> ([17]);\nstore_temp<core::PanicResult::<core::array::Array::<core::felt>>>([15]) -> ([15]);\nrename<core::PanicResult::<core::array::Array::<core::felt>>>([15]) -> ([18]);\nreturn([16], [17], [18]);\nstore_temp<uint128>([3]) -> ([20]);\nstore_temp<uint128>([14]) -> ([21]);\nfunction_call<user@core::integer::uint128_ne>([20], [21]) -> ([19]);\nenum_match<core::bool>([19]) { 33([22]) 36([23]) };\ndrop<Unit>([22]) -> ();\nbranch_align() -> ();\njump() { 45() };\ndrop<Unit>([23]) -> ();\nbranch_align() -> ();\narray_new<felt>() -> ([24]);\nenum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([24]) -> ([25]);\nstore_temp<RangeCheck>([5]) -> ([26]);\nstore_temp<SyscallPtr>([1]) -> ([27]);\nstore_temp<core::PanicResult::<core::array::Array::<core::felt>>>([25]) -> ([25]);\nrename<core::PanicResult::<core::array::Array::<core::felt>>>([25]) -> ([28]);\nreturn([26], [27], [28]);\nstore_temp<SyscallPtr>([1]) -> ([31]);\nfunction_call<user@test_contract::test_contract::test>([31]) -> ([29], [30]);\narray_new<felt>() -> ([32]);\nstore_temp<Array<felt>>([32]) -> ([32]);\narray_append<felt>([32], [30]) -> ([33]);\nenum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([33]) -> ([34]);\nstore_temp<RangeCheck>([5]) -> ([35]);\nstore_temp<SyscallPtr>([29]) -> ([36]);\nstore_temp<core::PanicResult::<core::array::Array::<core::felt>>>([34]) -> ([34]);\nrename<core::PanicResult::<core::array::Array::<core::felt>>>([34]) -> ([37]);\nreturn([35], [36], [37]);\nrevoke_ap_tracking() -> ();\nstore_temp<RangeCheck>([0]) -> ([4]);\nstore_temp<felt>([1]) -> ([5]);\nfunction_call<user@core::integer::uint128_try_from_felt>([4], [5]) -> ([2], [3]);\nenum_match<core::option::Option::<core::integer::uint128>>([3]) { 61([6]) 65([7]) };\nbranch_align() -> ();\nstore_temp<uint128>([6]) -> ([8]);\nrename<uint128>([8]) -> ([9]);\njump() { 77() };\ndrop<Unit>([7]) -> ();\nbranch_align() -> ();\narray_new<felt>() -> ([10]);\nfelt_const<1>() -> ([11]);\nstore_temp<Array<felt>>([10]) -> ([10]);\nstore_temp<felt>([11]) -> ([11]);\narray_append<felt>([10], [11]) -> ([12]);\nenum_init<core::PanicResult::<core::integer::uint128>, 1>([12]) -> ([13]);\nstore_temp<RangeCheck>([2]) -> ([14]);\nstore_temp<core::PanicResult::<core::integer::uint128>>([13]) -> ([13]);\nrename<core::PanicResult::<core::integer::uint128>>([13]) -> ([15]);\nreturn([14], [15]);\nenum_init<core::PanicResult::<core::integer::uint128>, 0>([9]) -> ([16]);\nstore_temp<RangeCheck>([2]) -> ([17]);\nstore_temp<core::PanicResult::<core::integer::uint128>>([16]) -> ([16]);\nrename<core::PanicResult::<core::integer::uint128>>([16]) -> ([18]);\nreturn([17], [18]);\nrevoke_ap_tracking() -> ();\nstore_temp<uint128>([0]) -> ([3]);\nstore_temp<uint128>([1]) -> ([4]);\nfunction_call<user@core::integer::uint128_eq>([3], [4]) -> ([2]);\nrename<core::bool>([2]) -> ([6]);\nfunction_call<user@core::bool_not>([6]) -> ([5]);\nrename<core::bool>([5]) -> ([7]);\nreturn([7]);\nrevoke_ap_tracking() -> ();\nuint128s_from_felt([0], [1]) { fallthrough([2], [3]) 99([4], [5], [6]) };\nbranch_align() -> ();\nenum_init<core::option::Option::<core::integer::uint128>, 0>([3]) -> ([7]);\nstore_temp<RangeCheck>([2]) -> ([2]);\nrename<RangeCheck>([2]) -> ([8]);\nstore_temp<core::option::Option::<core::integer::uint128>>([7]) -> ([7]);\nrename<core::option::Option::<core::integer::uint128>>([7]) -> ([9]);\njump() { 108() };\nbranch_align() -> ();\nstruct_construct<Tuple<uint128, uint128>>([5], [6]) -> ([10]);\ndrop<Tuple<uint128, uint128>>([10]) -> ();\nstruct_construct<Unit>() -> ([11]);\nenum_init<core::option::Option::<core::integer::uint128>, 1>([11]) -> ([12]);\nstore_temp<RangeCheck>([4]) -> ([4]);\nrename<RangeCheck>([4]) -> ([8]);\nstore_temp<core::option::Option::<core::integer::uint128>>([12]) -> ([12]);\nrename<core::option::Option::<core::integer::uint128>>([12]) -> ([9]);\nrename<RangeCheck>([8]) -> ([13]);\nrename<core::option::Option::<core::integer::uint128>>([9]) -> ([14]);\nreturn([13], [14]);\nrevoke_ap_tracking() -> ();\nuint128_to_felt([0]) -> ([2]);\nuint128_to_felt([1]) -> ([3]);\nstore_temp<felt>([2]) -> ([5]);\nstore_temp<felt>([3]) -> ([6]);\nfunction_call<user@core::felt_eq>([5], [6]) -> ([4]);\nrename<core::bool>([4]) -> ([7]);\nreturn([7]);\nrevoke_ap_tracking() -> ();\nenum_match<core::bool>([0]) { 121([1]) 128([2]) };\ndrop<Unit>([1]) -> ();\nbranch_align() -> ();\nstruct_construct<Unit>() -> ([3]);\nenum_init<core::bool, 1>([3]) -> ([4]);\nstore_temp<core::bool>([4]) -> ([4]);\nrename<core::bool>([4]) -> ([5]);\njump() { 134() };\ndrop<Unit>([2]) -> ();\nbranch_align() -> ();\nstruct_construct<Unit>() -> ([6]);\nenum_init<core::bool, 0>([6]) -> ([7]);\nstore_temp<core::bool>([7]) -> ([7]);\nrename<core::bool>([7]) -> ([5]);\nrename<core::bool>([5]) -> ([8]);\nreturn([8]);\nrevoke_ap_tracking() -> ();\nfelt_sub([0], [1]) -> ([2]);\nstore_temp<felt>([2]) -> ([2]);\nfelt_jump_nz([2]) { fallthrough() 146([3]) };\nbranch_align() -> ();\nstruct_construct<Unit>() -> ([4]);\nenum_init<core::bool, 1>([4]) -> ([5]);\nstore_temp<core::bool>([5]) -> ([5]);\nrename<core::bool>([5]) -> ([6]);\njump() { 152() };\ndrop<NonZero<felt>>([3]) -> ();\nbranch_align() -> ();\nstruct_construct<Unit>() -> ([7]);\nenum_init<core::bool, 0>([7]) -> ([8]);\nstore_temp<core::bool>([8]) -> ([8]);\nrename<core::bool>([8]) -> ([6]);\nrename<core::bool>([6]) -> ([9]);\nreturn([9]);\n\ntest_contract::test_contract::test@0([0]: SyscallPtr) -> (SyscallPtr, felt);\ntest_contract::test_contract::__wrapper_test@5([0]: RangeCheck, [1]: SyscallPtr, [2]: Array<felt>) -> (RangeCheck, SyscallPtr, core::PanicResult::<core::array::Array::<core::felt>>);\ncore::integer::uint128_from_felt@56([0]: RangeCheck, [1]: felt) -> (RangeCheck, core::PanicResult::<core::integer::uint128>);\ncore::integer::uint128_ne@82([0]: uint128, [1]: uint128) -> (core::bool);\ncore::integer::uint128_try_from_felt@90([0]: RangeCheck, [1]: felt) -> (RangeCheck, core::option::Option::<core::integer::uint128>);\ncore::integer::uint128_eq@111([0]: uint128, [1]: uint128) -> (core::bool);\ncore::bool_not@119([0]: core::bool) -> (core::bool);\ncore::felt_eq@136([0]: felt, [1]: felt) -> (core::bool);\n",
  "entry_points_by_type": {
    "EXTERNAL": [
      {
        "selector": "0x22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
        "function_idx": 1
      }
    ],
    "L1_HANDLER": [],
    "CONSTRUCTOR": []
  },
  "abi": [
    {
      "type": "function",
      "name": "test",
      "inputs": [
        {
          "name": "syscall_ptr",
          "ty": "core::SyscallPtr"
        }
      ],
      "output_ty": "core::felt"
    }
  ]
}
