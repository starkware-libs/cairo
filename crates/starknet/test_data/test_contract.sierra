type felt = felt;
type Uninitialized<felt> = Uninitialized<felt>;
type Array<felt> = Array<felt>;
type u128 = u128;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type core::PanicResult::<core::array::Array::<core::felt>> = Enum<ut@core::PanicResult::<core::array::Array::<core::felt>>, Array<felt>, Array<felt>>;
type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type System = System;
type core::option::Option::<core::felt> = Enum<ut@core::option::Option::<core::felt>, felt, Unit>;
type core::result::Result::<(), core::felt> = Enum<ut@core::result::Result::<(), core::felt>, Unit, felt>;
type StorageAddress = StorageAddress;

libfunc alloc_local<felt> = alloc_local<felt>;
libfunc finalize_locals = finalize_locals;
libfunc array_len<felt> = array_len<felt>;
libfunc u128_const<4> = u128_const<4>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc rename<u128> = rename<u128>;
libfunc function_call<user@core::integer::u128_ne> = function_call<user@core::integer::u128_ne>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc branch_align = branch_align;
libfunc jump = jump;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc drop<Uninitialized<felt>> = drop<Uninitialized<felt>>;
libfunc array_new<felt> = array_new<felt>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::PanicResult::<core::array::Array::<core::felt>>> = store_temp<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc rename<core::PanicResult::<core::array::Array::<core::felt>>> = rename<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc u128_const<0> = u128_const<0>;
libfunc array_at<felt> = array_at<felt>;
libfunc enum_init<core::option::Option::<core::felt>, 0> = enum_init<core::option::Option::<core::felt>, 0>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc store_temp<core::option::Option::<core::felt>> = store_temp<core::option::Option::<core::felt>>;
libfunc rename<core::option::Option::<core::felt>> = rename<core::option::Option::<core::felt>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::felt>, 1> = enum_init<core::option::Option::<core::felt>, 1>;
libfunc enum_match<core::option::Option::<core::felt>> = enum_match<core::option::Option::<core::felt>>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc struct_deconstruct<Unit> = struct_deconstruct<Unit>;
libfunc u128_const<1> = u128_const<1>;
libfunc store_local<felt> = store_local<felt>;
libfunc drop<felt> = drop<felt>;
libfunc u128_const<2> = u128_const<2>;
libfunc function_call<user@test_contract::test_contract::TestContract::test> = function_call<user@test_contract::test_contract::TestContract::test>;
libfunc array_append<felt> = array_append<felt>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>;
libfunc u128_eq = u128_eq;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc rename<core::bool> = rename<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc function_call<user@core::bool_not> = function_call<user@core::bool_not>;
libfunc function_call<user@test_contract::test_contract::my_storage_var::read> = function_call<user@test_contract::test_contract::my_storage_var::read>;
libfunc felt_const<1> = felt_const<1>;
libfunc dup<felt> = dup<felt>;
libfunc felt_add = felt_add;
libfunc rename<felt> = rename<felt>;
libfunc function_call<user@test_contract::test_contract::my_storage_var::write> = function_call<user@test_contract::test_contract::my_storage_var::write>;
libfunc drop<core::result::Result::<(), core::felt>> = drop<core::result::Result::<(), core::felt>>;
libfunc function_call<user@test_contract::test_contract::TestContract::internal_func> = function_call<user@test_contract::test_contract::TestContract::internal_func>;
libfunc bool_not_impl = bool_not_impl;
libfunc storage_address_const<521780245902522698637863835114646400086704280925471510886115468919502353704> = storage_address_const<521780245902522698637863835114646400086704280925471510886115468919502353704>;
libfunc store_temp<StorageAddress> = store_temp<StorageAddress>;
libfunc storage_read_syscall = storage_read_syscall;
libfunc rename<System> = rename<System>;
libfunc storage_write_syscall = storage_write_syscall;
libfunc enum_init<core::result::Result::<(), core::felt>, 0> = enum_init<core::result::Result::<(), core::felt>, 0>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc store_temp<core::result::Result::<(), core::felt>> = store_temp<core::result::Result::<(), core::felt>>;
libfunc rename<core::result::Result::<(), core::felt>> = rename<core::result::Result::<(), core::felt>>;
libfunc enum_init<core::result::Result::<(), core::felt>, 1> = enum_init<core::result::Result::<(), core::felt>, 1>;

alloc_local<felt>() -> ([5]);
alloc_local<felt>() -> ([7]);
finalize_locals() -> ();
array_len<felt>([3]) -> ([8], [9]);
u128_const<4>() -> ([10]);
store_temp<u128>([9]) -> ([9]);
rename<u128>([9]) -> ([12]);
store_temp<u128>([10]) -> ([13]);
function_call<user@core::integer::u128_ne>([12], [13]) -> ([11]);
enum_match<core::bool>([11]) { 10([14]) 13([15]) };
drop<Unit>([14]) -> ();
branch_align() -> ();
jump() { 26() };
drop<Array<felt>>([8]) -> ();
drop<Uninitialized<felt>>([5]) -> ();
drop<Uninitialized<felt>>([7]) -> ();
drop<Unit>([15]) -> ();
branch_align() -> ();
array_new<felt>() -> ([16]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([16]) -> ([17]);
store_temp<RangeCheck>([0]) -> ([18]);
store_temp<GasBuiltin>([1]) -> ([19]);
store_temp<System>([2]) -> ([20]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([17]) -> ([17]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([17]) -> ([21]);
return([18], [19], [20], [21]);
u128_const<0>() -> ([22]);
store_temp<u128>([22]) -> ([22]);
array_at<felt>([0], [8], [22]) { fallthrough([23], [24], [25]) 37([26], [27]) };
branch_align() -> ();
enum_init<core::option::Option::<core::felt>, 0>([25]) -> ([28]);
store_temp<RangeCheck>([23]) -> ([23]);
rename<RangeCheck>([23]) -> ([29]);
store_temp<Array<felt>>([24]) -> ([30]);
store_temp<core::option::Option::<core::felt>>([28]) -> ([28]);
rename<core::option::Option::<core::felt>>([28]) -> ([31]);
jump() { 45() };
branch_align() -> ();
struct_construct<Unit>() -> ([32]);
enum_init<core::option::Option::<core::felt>, 1>([32]) -> ([33]);
store_temp<RangeCheck>([26]) -> ([26]);
rename<RangeCheck>([26]) -> ([29]);
store_temp<Array<felt>>([27]) -> ([30]);
store_temp<core::option::Option::<core::felt>>([33]) -> ([33]);
rename<core::option::Option::<core::felt>>([33]) -> ([31]);
enum_match<core::option::Option::<core::felt>>([31]) { 46([34]) 49([35]) };
branch_align() -> ();
store_temp<felt>([34]) -> ([4]);
jump() { 62() };
drop<Uninitialized<felt>>([5]) -> ();
drop<Array<felt>>([30]) -> ();
drop<Uninitialized<felt>>([7]) -> ();
branch_align() -> ();
struct_deconstruct<Unit>([35]) -> ();
array_new<felt>() -> ([36]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([36]) -> ([37]);
store_temp<RangeCheck>([29]) -> ([38]);
store_temp<GasBuiltin>([1]) -> ([39]);
store_temp<System>([2]) -> ([40]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([37]) -> ([37]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([37]) -> ([41]);
return([38], [39], [40], [41]);
u128_const<1>() -> ([42]);
store_temp<u128>([42]) -> ([42]);
store_local<felt>([5], [4]) -> ([4]);
array_at<felt>([29], [30], [42]) { fallthrough([43], [44], [45]) 74([46], [47]) };
branch_align() -> ();
enum_init<core::option::Option::<core::felt>, 0>([45]) -> ([48]);
store_temp<RangeCheck>([43]) -> ([43]);
rename<RangeCheck>([43]) -> ([49]);
store_temp<Array<felt>>([44]) -> ([50]);
store_temp<core::option::Option::<core::felt>>([48]) -> ([48]);
rename<core::option::Option::<core::felt>>([48]) -> ([51]);
jump() { 82() };
branch_align() -> ();
struct_construct<Unit>() -> ([52]);
enum_init<core::option::Option::<core::felt>, 1>([52]) -> ([53]);
store_temp<RangeCheck>([46]) -> ([46]);
rename<RangeCheck>([46]) -> ([49]);
store_temp<Array<felt>>([47]) -> ([50]);
store_temp<core::option::Option::<core::felt>>([53]) -> ([53]);
rename<core::option::Option::<core::felt>>([53]) -> ([51]);
enum_match<core::option::Option::<core::felt>>([51]) { 83([54]) 86([55]) };
branch_align() -> ();
store_temp<felt>([54]) -> ([6]);
jump() { 99() };
drop<Uninitialized<felt>>([7]) -> ();
drop<Array<felt>>([50]) -> ();
drop<felt>([4]) -> ();
branch_align() -> ();
struct_deconstruct<Unit>([55]) -> ();
array_new<felt>() -> ([56]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([56]) -> ([57]);
store_temp<RangeCheck>([49]) -> ([58]);
store_temp<GasBuiltin>([1]) -> ([59]);
store_temp<System>([2]) -> ([60]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([57]) -> ([57]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([57]) -> ([61]);
return([58], [59], [60], [61]);
u128_const<2>() -> ([62]);
store_temp<u128>([62]) -> ([62]);
store_local<felt>([7], [6]) -> ([6]);
array_at<felt>([49], [50], [62]) { fallthrough([63], [64], [65]) 112([66], [67]) };
branch_align() -> ();
enum_init<core::option::Option::<core::felt>, 0>([65]) -> ([68]);
store_temp<RangeCheck>([63]) -> ([63]);
rename<RangeCheck>([63]) -> ([69]);
store_temp<Array<felt>>([64]) -> ([70]);
drop<Array<felt>>([70]) -> ();
store_temp<core::option::Option::<core::felt>>([68]) -> ([68]);
rename<core::option::Option::<core::felt>>([68]) -> ([71]);
jump() { 121() };
branch_align() -> ();
struct_construct<Unit>() -> ([72]);
enum_init<core::option::Option::<core::felt>, 1>([72]) -> ([73]);
store_temp<RangeCheck>([66]) -> ([66]);
rename<RangeCheck>([66]) -> ([69]);
store_temp<Array<felt>>([67]) -> ([70]);
drop<Array<felt>>([70]) -> ();
store_temp<core::option::Option::<core::felt>>([73]) -> ([73]);
rename<core::option::Option::<core::felt>>([73]) -> ([71]);
enum_match<core::option::Option::<core::felt>>([71]) { 122([74]) 125([75]) };
branch_align() -> ();
store_temp<felt>([74]) -> ([76]);
jump() { 137() };
drop<felt>([4]) -> ();
drop<felt>([6]) -> ();
branch_align() -> ();
struct_deconstruct<Unit>([75]) -> ();
array_new<felt>() -> ([77]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([77]) -> ([78]);
store_temp<RangeCheck>([69]) -> ([79]);
store_temp<GasBuiltin>([1]) -> ([80]);
store_temp<System>([2]) -> ([81]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([78]) -> ([78]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([78]) -> ([82]);
return([79], [80], [81], [82]);
store_temp<GasBuiltin>([1]) -> ([87]);
store_temp<System>([2]) -> ([88]);
store_temp<felt>([4]) -> ([89]);
store_temp<felt>([6]) -> ([90]);
store_temp<felt>([76]) -> ([91]);
function_call<user@test_contract::test_contract::TestContract::test>([87], [88], [89], [90], [91]) -> ([83], [84], [85], [86]);
array_new<felt>() -> ([92]);
array_append<felt>([92], [85]) -> ([93]);
array_append<felt>([93], [86]) -> ([94]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([94]) -> ([95]);
store_temp<RangeCheck>([69]) -> ([96]);
store_temp<GasBuiltin>([83]) -> ([97]);
store_temp<System>([84]) -> ([98]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([95]) -> ([95]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([95]) -> ([99]);
return([96], [97], [98], [99]);
u128_eq([0], [1]) { fallthrough() 160() };
branch_align() -> ();
struct_construct<Unit>() -> ([2]);
enum_init<core::bool, 0>([2]) -> ([3]);
store_temp<core::bool>([3]) -> ([3]);
rename<core::bool>([3]) -> ([4]);
jump() { 165() };
branch_align() -> ();
struct_construct<Unit>() -> ([5]);
enum_init<core::bool, 1>([5]) -> ([6]);
store_temp<core::bool>([6]) -> ([6]);
rename<core::bool>([6]) -> ([4]);
rename<core::bool>([4]) -> ([8]);
function_call<user@core::bool_not>([8]) -> ([7]);
rename<core::bool>([7]) -> ([9]);
return([9]);
drop<felt>([3]) -> ();
drop<felt>([4]) -> ();
store_temp<System>([1]) -> ([7]);
function_call<user@test_contract::test_contract::my_storage_var::read>([7]) -> ([5], [6]);
felt_const<1>() -> ([8]);
dup<felt>([6]) -> ([6], [24]);
felt_add([24], [8]) -> ([9]);
store_temp<GasBuiltin>([0]) -> ([13]);
store_temp<System>([5]) -> ([14]);
store_temp<felt>([9]) -> ([9]);
rename<felt>([9]) -> ([15]);
function_call<user@test_contract::test_contract::my_storage_var::write>([13], [14], [15]) -> ([10], [11], [12]);
drop<core::result::Result::<(), core::felt>>([12]) -> ();
store_temp<System>([11]) -> ([18]);
function_call<user@test_contract::test_contract::TestContract::internal_func>([18]) -> ([16], [17]);
felt_add([6], [17]) -> ([19]);
store_temp<GasBuiltin>([10]) -> ([20]);
store_temp<System>([16]) -> ([21]);
store_temp<felt>([2]) -> ([22]);
store_temp<felt>([19]) -> ([19]);
rename<felt>([19]) -> ([23]);
return([20], [21], [22], [23]);
bool_not_impl([0]) -> ([1]);
store_temp<core::bool>([1]) -> ([1]);
rename<core::bool>([1]) -> ([2]);
return([2]);
storage_address_const<521780245902522698637863835114646400086704280925471510886115468919502353704>() -> ([1]);
store_temp<StorageAddress>([1]) -> ([1]);
storage_read_syscall([0], [1]) -> ([2], [3]);
store_temp<System>([2]) -> ([2]);
rename<System>([2]) -> ([4]);
store_temp<felt>([3]) -> ([5]);
return([4], [5]);
storage_address_const<521780245902522698637863835114646400086704280925471510886115468919502353704>() -> ([3]);
store_temp<StorageAddress>([3]) -> ([3]);
storage_write_syscall([0], [1], [3], [2]) { fallthrough([4], [5]) 215([6], [7], [8]) };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::result::Result::<(), core::felt>, 0>([9]) -> ([10]);
store_temp<GasBuiltin>([4]) -> ([4]);
rename<GasBuiltin>([4]) -> ([11]);
store_temp<System>([5]) -> ([5]);
rename<System>([5]) -> ([12]);
store_temp<core::result::Result::<(), core::felt>>([10]) -> ([10]);
rename<core::result::Result::<(), core::felt>>([10]) -> ([13]);
jump() { 223() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::felt>, 1>([8]) -> ([14]);
store_temp<GasBuiltin>([6]) -> ([6]);
rename<GasBuiltin>([6]) -> ([11]);
store_temp<System>([7]) -> ([7]);
rename<System>([7]) -> ([12]);
store_temp<core::result::Result::<(), core::felt>>([14]) -> ([14]);
rename<core::result::Result::<(), core::felt>>([14]) -> ([13]);
rename<GasBuiltin>([11]) -> ([15]);
rename<System>([12]) -> ([16]);
rename<core::result::Result::<(), core::felt>>([13]) -> ([17]);
return([15], [16], [17]);
felt_const<1>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<felt>([1]) -> ([3]);
return([2], [3]);

test_contract::test_contract::__external::test@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: Array<felt>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<core::array::Array::<core::felt>>);
core::integer::u128_ne@153([0]: u128, [1]: u128) -> (core::bool);
test_contract::test_contract::TestContract::test@169([0]: GasBuiltin, [1]: System, [2]: felt, [3]: felt, [4]: felt) -> (GasBuiltin, System, felt, felt);
core::bool_not@191([0]: core::bool) -> (core::bool);
test_contract::test_contract::my_storage_var::read@195([0]: System) -> (System, felt);
test_contract::test_contract::my_storage_var::write@202([0]: GasBuiltin, [1]: System, [2]: felt) -> (GasBuiltin, System, core::result::Result::<(), core::felt>);
test_contract::test_contract::TestContract::internal_func@227([0]: System) -> (System, felt);
