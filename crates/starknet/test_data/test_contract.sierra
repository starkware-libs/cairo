type felt = felt;
type GasBuiltin = GasBuiltin;
type Unit = Struct<ut@Tuple>;
type core::result::Result::<(), core::felt> = Enum<ut@core::result::Result::<(), core::felt>, Unit, felt>;
type Array<felt> = Array<felt>;
type uint128 = uint128;
type RangeCheck = RangeCheck;
type core::PanicResult::<core::integer::uint128> = Enum<ut@core::PanicResult::<core::integer::uint128>, uint128, Array<felt>>;
type core::PanicResult::<core::array::Array::<core::felt>> = Enum<ut@core::PanicResult::<core::array::Array::<core::felt>>, Array<felt>, Array<felt>>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type core::PanicResult::<core::array::Array::<core::felt>> = Enum<ut@core::PanicResult::<core::array::Array::<core::felt>>, Array<felt>, Array<felt>>;
type RangeCheck = RangeCheck;
type core::option::Option::<core::felt> = Enum<ut@core::option::Option::<core::felt>, felt, Unit>;
type StorageAddress = StorageAddress;

libfunc drop<felt> = drop<felt>;
libfunc store_temp<System> = store_temp<System>;
libfunc function_call<user@test_contract::test_contract::my_storage_var::read> = function_call<user@test_contract::test_contract::my_storage_var::read>;
libfunc felt_const<1> = felt_const<1>;
libfunc dup<felt> = dup<felt>;
libfunc felt_add = felt_add;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc rename<felt> = rename<felt>;
libfunc function_call<user@test_contract::test_contract::my_storage_var::write> = function_call<user@test_contract::test_contract::my_storage_var::write>;
libfunc drop<core::result::Result::<(), core::felt>> = drop<core::result::Result::<(), core::felt>>;
libfunc array_len<felt> = array_len<felt>;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc function_call<user@core::integer::uint128_from_felt> = function_call<user@core::integer::uint128_from_felt>;
libfunc store_temp<uint128> = store_temp<uint128>;
libfunc rename<uint128> = rename<uint128>;
libfunc function_call<user@core::integer::uint128_ne> = function_call<user@core::integer::uint128_ne>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc branch_align = branch_align;
libfunc jump = jump;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc drop<Uninitialized<felt>> = drop<Uninitialized<felt>>;
libfunc array_new<felt> = array_new<felt>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<core::PanicResult::<core::array::Array::<core::felt>>> = store_temp<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc rename<core::PanicResult::<core::array::Array::<core::felt>>> = rename<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc uint128_const<0> = uint128_const<0>;
libfunc array_at<felt> = array_at<felt>;
libfunc enum_init<core::option::Option::<core::felt>, 0> = enum_init<core::option::Option::<core::felt>, 0>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc store_temp<core::option::Option::<core::felt>> = store_temp<core::option::Option::<core::felt>>;
libfunc rename<core::option::Option::<core::felt>> = rename<core::option::Option::<core::felt>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::felt>, 1> = enum_init<core::option::Option::<core::felt>, 1>;
libfunc enum_match<core::option::Option::<core::felt>> = enum_match<core::option::Option::<core::felt>>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc struct_deconstruct<Unit> = struct_deconstruct<Unit>;
libfunc uint128_const<1> = uint128_const<1>;
libfunc store_local<felt> = store_local<felt>;
libfunc function_call<user@test_contract::test_contract::test> = function_call<user@test_contract::test_contract::test>;
libfunc array_append<felt> = array_append<felt>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>;
libfunc storage_address_const<521780245902522698637863835114646400086704280925471510886115468919502353704> = storage_address_const<521780245902522698637863835114646400086704280925471510886115468919502353704>;
libfunc store_temp<StorageAddress> = store_temp<StorageAddress>;
libfunc storage_read_syscall = storage_read_syscall;
libfunc rename<System> = rename<System>;
libfunc storage_write_syscall = storage_write_syscall;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::result::Result::<(), core::felt>, 0> = enum_init<core::result::Result::<(), core::felt>, 0>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc store_temp<core::result::Result::<(), core::felt>> = store_temp<core::result::Result::<(), core::felt>>;
libfunc rename<core::result::Result::<(), core::felt>> = rename<core::result::Result::<(), core::felt>>;
libfunc enum_init<core::result::Result::<(), core::felt>, 1> = enum_init<core::result::Result::<(), core::felt>, 1>;
libfunc function_call<user@core::integer::uint128_try_from_felt> = function_call<user@core::integer::uint128_try_from_felt>;
libfunc enum_match<core::option::Option::<core::integer::uint128>> = enum_match<core::option::Option::<core::integer::uint128>>;
libfunc rename<uint128> = rename<uint128>;
libfunc enum_init<core::PanicResult::<core::integer::uint128>, 1> = enum_init<core::PanicResult::<core::integer::uint128>, 1>;
libfunc store_temp<core::PanicResult::<core::integer::uint128>> = store_temp<core::PanicResult::<core::integer::uint128>>;
libfunc rename<core::PanicResult::<core::integer::uint128>> = rename<core::PanicResult::<core::integer::uint128>>;
libfunc enum_init<core::PanicResult::<core::integer::uint128>, 0> = enum_init<core::PanicResult::<core::integer::uint128>, 0>;
libfunc function_call<user@core::integer::uint128_eq> = function_call<user@core::integer::uint128_eq>;
libfunc rename<core::bool> = rename<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc function_call<user@core::bool_not> = function_call<user@core::bool_not>;
libfunc uint128s_from_felt = uint128s_from_felt;
libfunc enum_init<core::option::Option::<core::integer::uint128>, 0> = enum_init<core::option::Option::<core::integer::uint128>, 0>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc store_temp<core::option::Option::<core::integer::uint128>> = store_temp<core::option::Option::<core::integer::uint128>>;
libfunc rename<core::option::Option::<core::integer::uint128>> = rename<core::option::Option::<core::integer::uint128>>;
libfunc struct_construct<Tuple<uint128, uint128>> = struct_construct<Tuple<uint128, uint128>>;
libfunc drop<Tuple<uint128, uint128>> = drop<Tuple<uint128, uint128>>;
libfunc enum_init<core::option::Option::<core::integer::uint128>, 1> = enum_init<core::option::Option::<core::integer::uint128>, 1>;
libfunc uint128_to_felt = uint128_to_felt;
libfunc function_call<user@core::felt_eq> = function_call<user@core::felt_eq>;
libfunc bool_not_impl = bool_not_impl;

store_temp<System>([1]) -> ([4]);
function_call<user@test_contract::test_contract::my_storage_var::read>([4]) -> ([2], [3]);
felt_const<1>() -> ([5]);
dup<felt>([3]) -> ([3], [16]);
felt_add([16], [5]) -> ([6]);
store_temp<GasBuiltin>([0]) -> ([10]);
store_temp<System>([2]) -> ([11]);
store_temp<felt>([6]) -> ([6]);
rename<felt>([6]) -> ([12]);
function_call<user@test_contract::test_contract::my_storage_var::write>([10], [11], [12]) -> ([7], [8], [9]);
drop<core::result::Result::<(), core::felt>>([9]) -> ();
store_temp<GasBuiltin>([7]) -> ([13]);
store_temp<System>([8]) -> ([14]);
store_temp<felt>([3]) -> ([15]);
return([13], [14], [15]);
array_len<felt>([3]) -> ([4], [5]);
drop<Array<felt>>([4]) -> ();
felt_const<1>() -> ([6]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<felt>([6]) -> ([10]);
function_call<user@core::integer::uint128_from_felt>([9], [10]) -> ([7], [8]);
store_temp<uint128>([5]) -> ([5]);
enum_match<core::PanicResult::<core::integer::uint128>>([8]) { 23([11]) 26([12]) };
branch_align() -> ();
store_temp<uint128>([11]) -> ([13]);
jump() { 35() };
drop<uint128>([5]) -> ();
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([12]) -> ([14]);
store_temp<RangeCheck>([7]) -> ([15]);
store_temp<GasBuiltin>([1]) -> ([16]);
store_temp<System>([2]) -> ([17]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([14]) -> ([14]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([14]) -> ([18]);
return([15], [16], [17], [18]);
store_temp<uint128>([5]) -> ([20]);
store_temp<uint128>([13]) -> ([21]);
function_call<user@core::integer::uint128_ne>([20], [21]) -> ([19]);
enum_match<core::bool>([19]) { 39([22]) 42([23]) };
drop<Unit>([22]) -> ();
branch_align() -> ();
jump() { 52() };
drop<Unit>([23]) -> ();
branch_align() -> ();
array_new<felt>() -> ([24]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([24]) -> ([25]);
store_temp<RangeCheck>([7]) -> ([26]);
store_temp<GasBuiltin>([1]) -> ([27]);
store_temp<System>([2]) -> ([28]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([25]) -> ([25]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([25]) -> ([29]);
return([26], [27], [28], [29]);
store_temp<GasBuiltin>([1]) -> ([33]);
store_temp<System>([2]) -> ([34]);
function_call<user@test_contract::test_contract::test>([33], [34]) -> ([30], [31], [32]);
array_new<felt>() -> ([35]);
store_temp<Array<felt>>([35]) -> ([35]);
array_append<felt>([35], [32]) -> ([36]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([36]) -> ([37]);
store_temp<RangeCheck>([7]) -> ([38]);
store_temp<GasBuiltin>([30]) -> ([39]);
store_temp<System>([31]) -> ([40]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([37]) -> ([37]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([37]) -> ([41]);
return([38], [39], [40], [41]);
storage_address_const<521780245902522698637863835114646400086704280925471510886115468919502353704>() -> ([1]);
store_temp<StorageAddress>([1]) -> ([1]);
storage_read_syscall([0], [1]) -> ([2], [3]);
store_temp<System>([2]) -> ([2]);
rename<System>([2]) -> ([4]);
store_temp<felt>([3]) -> ([5]);
return([4], [5]);
storage_address_const<521780245902522698637863835114646400086704280925471510886115468919502353704>() -> ([3]);
store_temp<StorageAddress>([3]) -> ([3]);
storage_write_syscall([0], [1], [3], [2]) { fallthrough([4], [5]) 85([6], [7], [8]) };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::result::Result::<(), core::felt>, 0>([9]) -> ([10]);
store_temp<GasBuiltin>([4]) -> ([4]);
rename<GasBuiltin>([4]) -> ([11]);
store_temp<System>([5]) -> ([5]);
rename<System>([5]) -> ([12]);
store_temp<core::result::Result::<(), core::felt>>([10]) -> ([10]);
rename<core::result::Result::<(), core::felt>>([10]) -> ([13]);
jump() { 93() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::felt>, 1>([8]) -> ([14]);
store_temp<GasBuiltin>([6]) -> ([6]);
rename<GasBuiltin>([6]) -> ([11]);
store_temp<System>([7]) -> ([7]);
rename<System>([7]) -> ([12]);
store_temp<core::result::Result::<(), core::felt>>([14]) -> ([14]);
rename<core::result::Result::<(), core::felt>>([14]) -> ([13]);
rename<GasBuiltin>([11]) -> ([15]);
rename<System>([12]) -> ([16]);
rename<core::result::Result::<(), core::felt>>([13]) -> ([17]);
return([15], [16], [17]);
store_temp<RangeCheck>([0]) -> ([4]);
store_temp<felt>([1]) -> ([5]);
function_call<user@core::integer::uint128_try_from_felt>([4], [5]) -> ([2], [3]);
enum_match<core::option::Option::<core::integer::uint128>>([3]) { 101([6]) 105([7]) };
branch_align() -> ();
store_temp<uint128>([6]) -> ([8]);
rename<uint128>([8]) -> ([9]);
jump() { 117() };
drop<Unit>([7]) -> ();
branch_align() -> ();
array_new<felt>() -> ([10]);
felt_const<1>() -> ([11]);
store_temp<Array<felt>>([10]) -> ([10]);
store_temp<felt>([11]) -> ([11]);
array_append<felt>([10], [11]) -> ([12]);
enum_init<core::PanicResult::<core::integer::uint128>, 1>([12]) -> ([13]);
store_temp<RangeCheck>([2]) -> ([14]);
store_temp<core::PanicResult::<core::integer::uint128>>([13]) -> ([13]);
rename<core::PanicResult::<core::integer::uint128>>([13]) -> ([15]);
return([14], [15]);
enum_init<core::PanicResult::<core::integer::uint128>, 0>([9]) -> ([16]);
store_temp<RangeCheck>([2]) -> ([17]);
store_temp<core::PanicResult::<core::integer::uint128>>([16]) -> ([16]);
rename<core::PanicResult::<core::integer::uint128>>([16]) -> ([18]);
return([17], [18]);
store_temp<uint128>([0]) -> ([3]);
store_temp<uint128>([1]) -> ([4]);
function_call<user@core::integer::uint128_eq>([3], [4]) -> ([2]);
rename<core::bool>([2]) -> ([6]);
function_call<user@core::bool_not>([6]) -> ([5]);
rename<core::bool>([5]) -> ([7]);
return([7]);
uint128s_from_felt([0], [1]) { fallthrough([2], [3]) 137([4], [5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::uint128>, 0>([3]) -> ([7]);
store_temp<RangeCheck>([2]) -> ([2]);
rename<RangeCheck>([2]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([7]) -> ([7]);
rename<core::option::Option::<core::integer::uint128>>([7]) -> ([9]);
jump() { 146() };
branch_align() -> ();
struct_construct<Tuple<uint128, uint128>>([5], [6]) -> ([10]);
drop<Tuple<uint128, uint128>>([10]) -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::option::Option::<core::integer::uint128>, 1>([11]) -> ([12]);
store_temp<RangeCheck>([4]) -> ([4]);
rename<RangeCheck>([4]) -> ([8]);
store_temp<core::option::Option::<core::integer::uint128>>([12]) -> ([12]);
rename<core::option::Option::<core::integer::uint128>>([12]) -> ([9]);
rename<RangeCheck>([8]) -> ([13]);
rename<core::option::Option::<core::integer::uint128>>([9]) -> ([14]);
return([13], [14]);
uint128_to_felt([0]) -> ([2]);
uint128_to_felt([1]) -> ([3]);
store_temp<felt>([2]) -> ([5]);
store_temp<felt>([3]) -> ([6]);
function_call<user@core::felt_eq>([5], [6]) -> ([4]);
rename<core::bool>([4]) -> ([7]);
return([7]);
bool_not_impl([0]) -> ([1]);
store_temp<core::bool>([1]) -> ([1]);
rename<core::bool>([1]) -> ([2]);
return([2]);
felt_sub([0], [1]) -> ([2]);
store_temp<felt>([2]) -> ([2]);
felt_jump_nz([2]) { fallthrough() 169([3]) };
branch_align() -> ();
struct_construct<Unit>() -> ([4]);
enum_init<core::bool, 1>([4]) -> ([5]);
store_temp<core::bool>([5]) -> ([5]);
rename<core::bool>([5]) -> ([6]);
jump() { 175() };
drop<NonZero<felt>>([3]) -> ();
branch_align() -> ();
struct_construct<Unit>() -> ([7]);
enum_init<core::bool, 0>([7]) -> ([8]);
store_temp<core::bool>([8]) -> ([8]);
rename<core::bool>([8]) -> ([6]);
rename<core::bool>([6]) -> ([9]);
return([9]);

test_contract::test_contract::test@0([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, felt);
test_contract::test_contract::__wrapper_test@15([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: Array<felt>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<core::array::Array::<core::felt>>);
test_contract::test_contract::my_storage_var::read@65([0]: System) -> (System, felt);
test_contract::test_contract::my_storage_var::write@72([0]: GasBuiltin, [1]: System, [2]: felt) -> (GasBuiltin, System, core::result::Result::<(), core::felt>);
core::integer::uint128_from_felt@97([0]: RangeCheck, [1]: felt) -> (RangeCheck, core::PanicResult::<core::integer::uint128>);
core::integer::uint128_ne@122([0]: uint128, [1]: uint128) -> (core::bool);
core::integer::uint128_try_from_felt@129([0]: RangeCheck, [1]: felt) -> (RangeCheck, core::option::Option::<core::integer::uint128>);
core::integer::uint128_eq@149([0]: uint128, [1]: uint128) -> (core::bool);
core::bool_not@156([0]: core::bool) -> (core::bool);
core::felt_eq@160([0]: felt, [1]: felt) -> (core::bool);
