type felt = felt;
type Array<felt> = Array<felt>;
type u128 = u128;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type core::PanicResult::<core::array::Array::<core::felt>> = Enum<ut@core::PanicResult::<core::array::Array::<core::felt>>, Array<felt>, Array<felt>>;
type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type System = System;
type core::option::Option::<core::felt> = Enum<ut@core::option::Option::<core::felt>, felt, Unit>;
type core::result::Result::<(), core::felt> = Enum<ut@core::result::Result::<(), core::felt>, Unit, felt>;
type StorageAddress = StorageAddress;

libfunc array_len<felt> = array_len<felt>;
libfunc u128_const<2> = u128_const<2>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc rename<u128> = rename<u128>;
libfunc function_call<user@core::integer::u128_ne> = function_call<user@core::integer::u128_ne>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc branch_align = branch_align;
libfunc jump = jump;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc array_new<felt> = array_new<felt>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::PanicResult::<core::array::Array::<core::felt>>> = store_temp<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc rename<core::PanicResult::<core::array::Array::<core::felt>>> = rename<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc u128_const<0> = u128_const<0>;
libfunc array_at<felt> = array_at<felt>;
libfunc enum_init<core::option::Option::<core::felt>, 0> = enum_init<core::option::Option::<core::felt>, 0>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc store_temp<core::option::Option::<core::felt>> = store_temp<core::option::Option::<core::felt>>;
libfunc rename<core::option::Option::<core::felt>> = rename<core::option::Option::<core::felt>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::felt>, 1> = enum_init<core::option::Option::<core::felt>, 1>;
libfunc enum_match<core::option::Option::<core::felt>> = enum_match<core::option::Option::<core::felt>>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc struct_deconstruct<Unit> = struct_deconstruct<Unit>;
libfunc function_call<user@hello_starknet::hello_starknet::__generated__HelloStarknet::increase_balance> = function_call<user@hello_starknet::hello_starknet::__generated__HelloStarknet::increase_balance>;
libfunc array_append<felt> = array_append<felt>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@hello_starknet::hello_starknet::__generated__HelloStarknet::get_balance> = function_call<user@hello_starknet::hello_starknet::__generated__HelloStarknet::get_balance>;
libfunc u128_eq = u128_eq;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc rename<core::bool> = rename<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc function_call<user@core::bool_not> = function_call<user@core::bool_not>;
libfunc function_call<user@hello_starknet::hello_starknet::balance::read> = function_call<user@hello_starknet::hello_starknet::balance::read>;
libfunc felt_add = felt_add;
libfunc rename<felt> = rename<felt>;
libfunc function_call<user@hello_starknet::hello_starknet::balance::write> = function_call<user@hello_starknet::hello_starknet::balance::write>;
libfunc drop<core::result::Result::<(), core::felt>> = drop<core::result::Result::<(), core::felt>>;
libfunc felt_const<0> = felt_const<0>;
libfunc rename<System> = rename<System>;
libfunc bool_not_impl = bool_not_impl;
libfunc storage_address_const<916907772491729262376534102982219947830828984996257231353398618781993312401> = storage_address_const<916907772491729262376534102982219947830828984996257231353398618781993312401>;
libfunc store_temp<StorageAddress> = store_temp<StorageAddress>;
libfunc storage_read_syscall = storage_read_syscall;
libfunc storage_write_syscall = storage_write_syscall;
libfunc enum_init<core::result::Result::<(), core::felt>, 0> = enum_init<core::result::Result::<(), core::felt>, 0>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc store_temp<core::result::Result::<(), core::felt>> = store_temp<core::result::Result::<(), core::felt>>;
libfunc rename<core::result::Result::<(), core::felt>> = rename<core::result::Result::<(), core::felt>>;
libfunc enum_init<core::result::Result::<(), core::felt>, 1> = enum_init<core::result::Result::<(), core::felt>, 1>;

array_len<felt>([3]) -> ([4], [5]);
u128_const<2>() -> ([6]);
store_temp<u128>([5]) -> ([5]);
rename<u128>([5]) -> ([8]);
store_temp<u128>([6]) -> ([9]);
function_call<user@core::integer::u128_ne>([8], [9]) -> ([7]);
enum_match<core::bool>([7]) { 7([10]) 10([11]) };
drop<Unit>([10]) -> ();
branch_align() -> ();
jump() { 21() };
drop<Array<felt>>([4]) -> ();
drop<Unit>([11]) -> ();
branch_align() -> ();
array_new<felt>() -> ([12]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([12]) -> ([13]);
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<GasBuiltin>([1]) -> ([15]);
store_temp<System>([2]) -> ([16]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([13]) -> ([13]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([13]) -> ([17]);
return([14], [15], [16], [17]);
u128_const<0>() -> ([18]);
store_temp<u128>([18]) -> ([18]);
array_at<felt>([0], [4], [18]) { fallthrough([19], [20], [21]) 33([22], [23]) };
branch_align() -> ();
enum_init<core::option::Option::<core::felt>, 0>([21]) -> ([24]);
store_temp<RangeCheck>([19]) -> ([19]);
rename<RangeCheck>([19]) -> ([25]);
store_temp<Array<felt>>([20]) -> ([26]);
drop<Array<felt>>([26]) -> ();
store_temp<core::option::Option::<core::felt>>([24]) -> ([24]);
rename<core::option::Option::<core::felt>>([24]) -> ([27]);
jump() { 42() };
branch_align() -> ();
struct_construct<Unit>() -> ([28]);
enum_init<core::option::Option::<core::felt>, 1>([28]) -> ([29]);
store_temp<RangeCheck>([22]) -> ([22]);
rename<RangeCheck>([22]) -> ([25]);
store_temp<Array<felt>>([23]) -> ([26]);
drop<Array<felt>>([26]) -> ();
store_temp<core::option::Option::<core::felt>>([29]) -> ([29]);
rename<core::option::Option::<core::felt>>([29]) -> ([27]);
enum_match<core::option::Option::<core::felt>>([27]) { 43([30]) 46([31]) };
branch_align() -> ();
store_temp<felt>([30]) -> ([32]);
jump() { 56() };
branch_align() -> ();
struct_deconstruct<Unit>([31]) -> ();
array_new<felt>() -> ([33]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([33]) -> ([34]);
store_temp<RangeCheck>([25]) -> ([35]);
store_temp<GasBuiltin>([1]) -> ([36]);
store_temp<System>([2]) -> ([37]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([34]) -> ([34]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([34]) -> ([38]);
return([35], [36], [37], [38]);
store_temp<GasBuiltin>([1]) -> ([42]);
store_temp<System>([2]) -> ([43]);
store_temp<felt>([32]) -> ([44]);
function_call<user@hello_starknet::hello_starknet::__generated__HelloStarknet::increase_balance>([42], [43], [44]) -> ([39], [40], [41]);
array_new<felt>() -> ([45]);
array_append<felt>([45], [41]) -> ([46]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([46]) -> ([47]);
store_temp<RangeCheck>([25]) -> ([48]);
store_temp<GasBuiltin>([39]) -> ([49]);
store_temp<System>([40]) -> ([50]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([47]) -> ([47]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([47]) -> ([51]);
return([48], [49], [50], [51]);
array_len<felt>([1]) -> ([2], [3]);
drop<Array<felt>>([2]) -> ();
u128_const<1>() -> ([4]);
store_temp<u128>([3]) -> ([3]);
rename<u128>([3]) -> ([6]);
store_temp<u128>([4]) -> ([7]);
function_call<user@core::integer::u128_ne>([6], [7]) -> ([5]);
enum_match<core::bool>([5]) { 77([8]) 80([9]) };
drop<Unit>([8]) -> ();
branch_align() -> ();
jump() { 88() };
drop<Unit>([9]) -> ();
branch_align() -> ();
array_new<felt>() -> ([10]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([10]) -> ([11]);
store_temp<System>([0]) -> ([12]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([11]) -> ([11]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([11]) -> ([13]);
return([12], [13]);
store_temp<System>([0]) -> ([16]);
function_call<user@hello_starknet::hello_starknet::__generated__HelloStarknet::get_balance>([16]) -> ([14], [15]);
array_new<felt>() -> ([17]);
array_append<felt>([17], [15]) -> ([18]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([18]) -> ([19]);
store_temp<System>([14]) -> ([20]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([19]) -> ([19]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([19]) -> ([21]);
return([20], [21]);
u128_eq([0], [1]) { fallthrough() 104() };
branch_align() -> ();
struct_construct<Unit>() -> ([2]);
enum_init<core::bool, 0>([2]) -> ([3]);
store_temp<core::bool>([3]) -> ([3]);
rename<core::bool>([3]) -> ([4]);
jump() { 109() };
branch_align() -> ();
struct_construct<Unit>() -> ([5]);
enum_init<core::bool, 1>([5]) -> ([6]);
store_temp<core::bool>([6]) -> ([6]);
rename<core::bool>([6]) -> ([4]);
rename<core::bool>([4]) -> ([8]);
function_call<user@core::bool_not>([8]) -> ([7]);
rename<core::bool>([7]) -> ([9]);
return([9]);
store_temp<System>([1]) -> ([5]);
function_call<user@hello_starknet::hello_starknet::balance::read>([5]) -> ([3], [4]);
felt_add([4], [2]) -> ([6]);
store_temp<GasBuiltin>([0]) -> ([10]);
store_temp<System>([3]) -> ([11]);
store_temp<felt>([6]) -> ([6]);
rename<felt>([6]) -> ([12]);
function_call<user@hello_starknet::hello_starknet::balance::write>([10], [11], [12]) -> ([7], [8], [9]);
drop<core::result::Result::<(), core::felt>>([9]) -> ();
felt_const<0>() -> ([13]);
store_temp<GasBuiltin>([7]) -> ([14]);
store_temp<System>([8]) -> ([15]);
store_temp<felt>([13]) -> ([16]);
return([14], [15], [16]);
store_temp<System>([0]) -> ([3]);
function_call<user@hello_starknet::hello_starknet::balance::read>([3]) -> ([1], [2]);
rename<System>([1]) -> ([4]);
rename<felt>([2]) -> ([5]);
return([4], [5]);
bool_not_impl([0]) -> ([1]);
store_temp<core::bool>([1]) -> ([1]);
rename<core::bool>([1]) -> ([2]);
return([2]);
storage_address_const<916907772491729262376534102982219947830828984996257231353398618781993312401>() -> ([1]);
store_temp<StorageAddress>([1]) -> ([1]);
storage_read_syscall([0], [1]) -> ([2], [3]);
store_temp<System>([2]) -> ([2]);
rename<System>([2]) -> ([4]);
store_temp<felt>([3]) -> ([5]);
return([4], [5]);
storage_address_const<916907772491729262376534102982219947830828984996257231353398618781993312401>() -> ([3]);
store_temp<StorageAddress>([3]) -> ([3]);
storage_write_syscall([0], [1], [3], [2]) { fallthrough([4], [5]) 156([6], [7], [8]) };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::result::Result::<(), core::felt>, 0>([9]) -> ([10]);
store_temp<GasBuiltin>([4]) -> ([4]);
rename<GasBuiltin>([4]) -> ([11]);
store_temp<System>([5]) -> ([5]);
rename<System>([5]) -> ([12]);
store_temp<core::result::Result::<(), core::felt>>([10]) -> ([10]);
rename<core::result::Result::<(), core::felt>>([10]) -> ([13]);
jump() { 164() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::felt>, 1>([8]) -> ([14]);
store_temp<GasBuiltin>([6]) -> ([6]);
rename<GasBuiltin>([6]) -> ([11]);
store_temp<System>([7]) -> ([7]);
rename<System>([7]) -> ([12]);
store_temp<core::result::Result::<(), core::felt>>([14]) -> ([14]);
rename<core::result::Result::<(), core::felt>>([14]) -> ([13]);
rename<GasBuiltin>([11]) -> ([15]);
rename<System>([12]) -> ([16]);
rename<core::result::Result::<(), core::felt>>([13]) -> ([17]);
return([15], [16], [17]);

hello_starknet::hello_starknet::__generated__HelloStarknet::__external::increase_balance@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: Array<felt>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<core::array::Array::<core::felt>>);
hello_starknet::hello_starknet::__generated__HelloStarknet::__external::get_balance@69([0]: System, [1]: Array<felt>) -> (System, core::PanicResult::<core::array::Array::<core::felt>>);
core::integer::u128_ne@97([0]: u128, [1]: u128) -> (core::bool);
hello_starknet::hello_starknet::__generated__HelloStarknet::increase_balance@113([0]: GasBuiltin, [1]: System, [2]: felt) -> (GasBuiltin, System, felt);
hello_starknet::hello_starknet::__generated__HelloStarknet::get_balance@127([0]: System) -> (System, felt);
core::bool_not@132([0]: core::bool) -> (core::bool);
hello_starknet::hello_starknet::balance::read@136([0]: System) -> (System, felt);
hello_starknet::hello_starknet::balance::write@143([0]: GasBuiltin, [1]: System, [2]: felt) -> (GasBuiltin, System, core::result::Result::<(), core::felt>);
