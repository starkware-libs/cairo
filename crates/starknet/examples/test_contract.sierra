type felt = felt;
type SyscallPtr = SyscallPtr;
type uint128 = uint128;
type Uninitialized<uint128> = Uninitialized<uint128>;
type RangeCheck = RangeCheck;
type Uninitialized<RangeCheck> = Uninitialized<RangeCheck>;
type Array<felt> = Array<felt>;
type core::PanicResult::<core::integer::uint128> = Enum<ut@core::PanicResult::<core::integer::uint128>, uint128, Array<felt>>;
type core::PanicResult::<core::array::Array::<core::felt>> = Enum<ut@core::PanicResult::<core::array::Array::<core::felt>>, Array<felt>, Array<felt>>;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type NonZero<felt> = NonZero<felt>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc felt_const<1> = felt_const<1>;
libfunc store_temp<SyscallPtr> = store_temp<SyscallPtr>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc burn_gas = burn_gas;
libfunc alloc_local<uint128> = alloc_local<uint128>;
libfunc alloc_local<RangeCheck> = alloc_local<RangeCheck>;
libfunc finalize_locals = finalize_locals;
libfunc array_len<felt> = array_len<felt>;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_local<uint128> = store_local<uint128>;
libfunc function_call<user@core::integer::uint128_from_felt> = function_call<user@core::integer::uint128_from_felt>;
libfunc enum_match<core::PanicResult::<core::integer::uint128>> = enum_match<core::PanicResult::<core::integer::uint128>>;
libfunc store_temp<uint128> = store_temp<uint128>;
libfunc jump = jump;
libfunc drop<uint128> = drop<uint128>;
libfunc drop<Uninitialized<RangeCheck>> = drop<Uninitialized<RangeCheck>>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>;
libfunc store_temp<core::PanicResult::<core::array::Array::<core::felt>>> = store_temp<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc rename<core::PanicResult::<core::array::Array::<core::felt>>> = rename<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc function_call<user@core::integer::uint128_eq> = function_call<user@core::integer::uint128_eq>;
libfunc store_local<RangeCheck> = store_local<RangeCheck>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc array_new<felt> = array_new<felt>;
libfunc function_call<user@test_contract::test_contract::test> = function_call<user@test_contract::test_contract::test>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc array_append<felt> = array_append<felt>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>;
libfunc uint128_try_from_felt = uint128_try_from_felt;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::PanicResult::<core::integer::uint128>, 1> = enum_init<core::PanicResult::<core::integer::uint128>, 1>;
libfunc store_temp<core::PanicResult::<core::integer::uint128>> = store_temp<core::PanicResult::<core::integer::uint128>>;
libfunc rename<core::PanicResult::<core::integer::uint128>> = rename<core::PanicResult::<core::integer::uint128>>;
libfunc enum_init<core::PanicResult::<core::integer::uint128>, 0> = enum_init<core::PanicResult::<core::integer::uint128>, 0>;
libfunc uint128_to_felt = uint128_to_felt;
libfunc function_call<user@core::felt_eq> = function_call<user@core::felt_eq>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc felt_sub = felt_sub;
libfunc felt_jump_nz = felt_jump_nz;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc rename<core::bool> = rename<core::bool>;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;

revoke_ap_tracking() -> ();
felt_const<1>() -> ([1]);
store_temp<SyscallPtr>([0]) -> ([2]);
store_temp<felt>([1]) -> ([3]);
burn_gas() -> ();
return([2], [3]);
alloc_local<uint128>() -> ([4]);
alloc_local<RangeCheck>() -> ([6]);
finalize_locals() -> ();
revoke_ap_tracking() -> ();
array_len<felt>([2]) -> ([7], [3]);
drop<Array<felt>>([7]) -> ();
felt_const<1>() -> ([8]);
store_temp<RangeCheck>([0]) -> ([11]);
store_temp<felt>([8]) -> ([12]);
store_local<uint128>([4], [3]) -> ([3]);
function_call<user@core::integer::uint128_from_felt>([11], [12]) -> ([9], [10]);
enum_match<core::PanicResult::<core::integer::uint128>>([10]) { 18([13]) 21([14]) };
store_temp<uint128>([13]) -> ([15]);
burn_gas() -> ();
jump() { 30() };
drop<uint128>([3]) -> ();
drop<Uninitialized<RangeCheck>>([6]) -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([14]) -> ([16]);
store_temp<RangeCheck>([9]) -> ([17]);
store_temp<SyscallPtr>([1]) -> ([18]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([16]) -> ([16]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([16]) -> ([19]);
burn_gas() -> ();
return([17], [18], [19]);
store_temp<RangeCheck>([9]) -> ([21]);
store_temp<uint128>([3]) -> ([22]);
store_temp<uint128>([15]) -> ([23]);
function_call<user@core::integer::uint128_eq>([21], [22], [23]) -> ([5], [20]);
store_local<RangeCheck>([6], [5]) -> ([5]);
enum_match<core::bool>([20]) { 36([24]) 45([25]) };
drop<Unit>([24]) -> ();
array_new<felt>() -> ([26]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([26]) -> ([27]);
store_temp<RangeCheck>([5]) -> ([28]);
store_temp<SyscallPtr>([1]) -> ([29]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([27]) -> ([27]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([27]) -> ([30]);
burn_gas() -> ();
return([28], [29], [30]);
drop<Unit>([25]) -> ();
burn_gas() -> ();
store_temp<SyscallPtr>([1]) -> ([33]);
function_call<user@test_contract::test_contract::test>([33]) -> ([31], [32]);
array_new<felt>() -> ([34]);
store_temp<Array<felt>>([34]) -> ([34]);
array_append<felt>([34], [32]) -> ([35]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([35]) -> ([36]);
store_temp<RangeCheck>([5]) -> ([37]);
store_temp<SyscallPtr>([31]) -> ([38]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([36]) -> ([36]);
rename<core::PanicResult::<core::array::Array::<core::felt>>>([36]) -> ([39]);
burn_gas() -> ();
return([37], [38], [39]);
revoke_ap_tracking() -> ();
uint128_try_from_felt([0], [1]) { fallthrough([2], [3]) 67([4]) };
store_temp<uint128>([3]) -> ([5]);
store_temp<RangeCheck>([2]) -> ([2]);
rename<RangeCheck>([2]) -> ([6]);
store_temp<uint128>([5]) -> ([7]);
burn_gas() -> ();
jump() { 81() };
struct_construct<Unit>() -> ([8]);
drop<Unit>([8]) -> ();
array_new<felt>() -> ([9]);
felt_const<1>() -> ([10]);
store_temp<Array<felt>>([9]) -> ([9]);
store_temp<felt>([10]) -> ([10]);
array_append<felt>([9], [10]) -> ([11]);
enum_init<core::PanicResult::<core::integer::uint128>, 1>([11]) -> ([12]);
store_temp<RangeCheck>([4]) -> ([4]);
rename<RangeCheck>([4]) -> ([13]);
store_temp<core::PanicResult::<core::integer::uint128>>([12]) -> ([12]);
rename<core::PanicResult::<core::integer::uint128>>([12]) -> ([14]);
burn_gas() -> ();
return([13], [14]);
enum_init<core::PanicResult::<core::integer::uint128>, 0>([7]) -> ([15]);
store_temp<RangeCheck>([6]) -> ([16]);
store_temp<core::PanicResult::<core::integer::uint128>>([15]) -> ([15]);
rename<core::PanicResult::<core::integer::uint128>>([15]) -> ([17]);
burn_gas() -> ();
return([16], [17]);
revoke_ap_tracking() -> ();
uint128_to_felt([1]) -> ([3]);
uint128_to_felt([2]) -> ([4]);
store_temp<felt>([3]) -> ([6]);
store_temp<felt>([4]) -> ([7]);
function_call<user@core::felt_eq>([6], [7]) -> ([5]);
store_temp<RangeCheck>([0]) -> ([8]);
store_temp<core::bool>([5]) -> ([9]);
burn_gas() -> ();
return([8], [9]);
revoke_ap_tracking() -> ();
felt_sub([0], [1]) -> ([2]);
store_temp<felt>([2]) -> ([2]);
felt_jump_nz([2]) { fallthrough() 107([3]) };
struct_construct<Unit>() -> ([4]);
enum_init<core::bool, 1>([4]) -> ([5]);
store_temp<core::bool>([5]) -> ([5]);
rename<core::bool>([5]) -> ([6]);
burn_gas() -> ();
jump() { 113() };
drop<NonZero<felt>>([3]) -> ();
struct_construct<Unit>() -> ([7]);
enum_init<core::bool, 0>([7]) -> ([8]);
store_temp<core::bool>([8]) -> ([8]);
rename<core::bool>([8]) -> ([6]);
burn_gas() -> ();
rename<core::bool>([6]) -> ([9]);
burn_gas() -> ();
return([9]);

test_contract::test_contract::test@0([0]: SyscallPtr) -> (SyscallPtr, felt);
test_contract::test_contract::__wrapper_test@6([0]: RangeCheck, [1]: SyscallPtr, [2]: Array<felt>) -> (RangeCheck, SyscallPtr, core::PanicResult::<core::array::Array::<core::felt>>);
core::integer::uint128_from_felt@59([0]: RangeCheck, [1]: felt) -> (RangeCheck, core::PanicResult::<core::integer::uint128>);
core::integer::uint128_eq@87([0]: RangeCheck, [1]: uint128, [2]: uint128) -> (RangeCheck, core::bool);
core::felt_eq@97([0]: felt, [1]: felt) -> (core::bool);
