//! > Documentation with a lot of trivia

//! > test_runner_name
documentation_test_runner

//! > cairo_project.toml
[crate_roots]
hello = "src"

//! > cairo_code
/// Const comment
const a: u32 = 123;

/// Test Pair
#[derive(Drop)]
#[derive(Clone)]
pub struct Pair<T, U> //     T: Display + Debug,
//     U: Display + Debug,
{
    /// first field
    first: T,
    /// second field
    second: U,
}
#[derive(Clone)] // Some comment3.
/// A second struct defining a pair.
#[derive(Drop)] // Some comment2.
/// As above.
struct Pair2<T, U> //     T: Display + Debug,
//     U: Display + Debug,
{
    // This one is a little useless comment.
    /// First field
    pub first: T,
    // Don't use the struct. The code is bad.
    /// Second field
    second: U,
}

pub enum TestEnum {
    /// First variant
    Var1,
    /// Second variant
    Var2
}

/// extern type comment
// yup
pub extern type S<T>;

//! > Item #1

//! > Item #2
const a: u32 = 123;
Const comment

//! > Item #3
#[derive(Drop)]
#[derive(Clone)]
pub struct Pair<T, U> {
    first: T,
    second: U,
}
Test Pair

//! > Item #4
first: T
first field

//! > Item #5
second: U
second field

//! > Item #6
#[derive(Clone)]
#[derive(Drop)]
struct Pair2<T, U> {
    pub first: T,
    second: U,
}

//! > Item #7
pub first: T
First field

//! > Item #8
second: U
Second field

//! > Item #9
pub enum TestEnum {
    Var1,
    Var2
}

//! > Item #10
Var1
First variant

//! > Item #11
Var2
Second variant

//! > Item #12
pub extern type S<T>
extern type comment
