[package]
name = "cairo-lang-sierra-to-casm"
version.workspace = true
edition.workspace = true
repository.workspace = true
license-file.workspace = true
description = "Emitting of CASM instructions from Sierra code."

[dependencies]
assert_matches.workspace = true
<<<<<<< HEAD
cairo-lang-casm = { path = "../cairo-lang-casm", version = "~2.8.4" }
cairo-lang-sierra = { path = "../cairo-lang-sierra", version = "~2.8.4" }
cairo-lang-sierra-ap-change = { path = "../cairo-lang-sierra-ap-change", version = "~2.8.4" }
cairo-lang-sierra-gas = { path = "../cairo-lang-sierra-gas", version = "~2.8.4" }
cairo-lang-sierra-type-size = { path = "../cairo-lang-sierra-type-size", version = "~2.8.4" }
cairo-lang-utils = { path = "../cairo-lang-utils", version = "~2.8.4", features = ["serde"] }
||||||| 14b1d8c15
cairo-lang-casm = { path = "../cairo-lang-casm", version = "~2.8.2" }
cairo-lang-sierra = { path = "../cairo-lang-sierra", version = "~2.8.2" }
cairo-lang-sierra-ap-change = { path = "../cairo-lang-sierra-ap-change", version = "~2.8.2" }
cairo-lang-sierra-gas = { path = "../cairo-lang-sierra-gas", version = "~2.8.2" }
cairo-lang-sierra-type-size = { path = "../cairo-lang-sierra-type-size", version = "~2.8.2" }
cairo-lang-utils = { path = "../cairo-lang-utils", version = "~2.8.2", features = ["serde"] }
=======
cairo-lang-casm = { path = "../cairo-lang-casm", version = "~2.8.5" }
cairo-lang-sierra = { path = "../cairo-lang-sierra", version = "~2.8.5" }
cairo-lang-sierra-ap-change = { path = "../cairo-lang-sierra-ap-change", version = "~2.8.5" }
cairo-lang-sierra-gas = { path = "../cairo-lang-sierra-gas", version = "~2.8.5" }
cairo-lang-sierra-type-size = { path = "../cairo-lang-sierra-type-size", version = "~2.8.5" }
cairo-lang-utils = { path = "../cairo-lang-utils", version = "~2.8.5", features = ["serde"] }
>>>>>>> origin/dev-v2.8.5
indoc.workspace = true
itertools = { workspace = true, default-features = true }
starknet-types-core.workspace = true
num-bigint = { workspace = true, default-features = true }
num-traits = { workspace = true, default-features = true }
thiserror.workspace = true

[dev-dependencies]
env_logger.workspace = true
indoc.workspace = true
pretty_assertions.workspace = true
test-case.workspace = true
test-log.workspace = true
cairo-lang-test-utils = { path = "../cairo-lang-test-utils", features = ["testing"] }

[features]
testing = []
