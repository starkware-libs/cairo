//! > Test a FunctionSignature syntax tree

//! > test_function_name
test_partial_parser_tree

//! > test_params
cairo_code
top_level_kind
ignored_kinds

//! > test_output_params
expected_tree

//! > cairo_code
func foo(a: int) -> felt {
    return a;
}

//! > top_level_kind
FunctionSignature

//! > ignored_kinds

//! > expected_tree
└── Top level kind: FunctionSignature
    ├── lparen (kind: TokenLParen): '('
    ├── parameters (kind: ParamList)
    │   └── item #0 (kind: Param)
    │       ├── modifiers (kind: ModifierList) []
    │       ├── name (kind: TokenIdentifier): 'a'
    │       └── type_clause (kind: TypeClause)
    │           ├── colon (kind: TokenColon): ':'
    │           └── ty (kind: ExprPath)
    │               └── item #0 (kind: PathSegmentSimple)
    │                   └── ident (kind: TokenIdentifier): 'int'
    ├── rparen (kind: TokenRParen): ')'
    └── ret_ty (kind: ReturnTypeClause)
        ├── arrow (kind: TokenArrow): '->'
        └── ty (kind: ExprPath)
            └── item #0 (kind: PathSegmentSimple)
                └── ident (kind: TokenIdentifier): 'felt'
