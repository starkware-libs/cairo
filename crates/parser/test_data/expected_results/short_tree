└── root (kind: SyntaxFile)
    ├── items (kind: ItemList)
    │   ├── child #0 (kind: ItemUse)
    │   │   ├── usekw (kind: Use): 'use'
    │   │   ├── name (kind: ExprPath)
    │   │   │   ├── item #0 (kind: PathSegmentIdent)
    │   │   │   │   └── ident (kind: Identifier): 'std'
    │   │   │   ├── separator #0 (kind: ColonColon): '::'
    │   │   │   └── item #1 (kind: PathSegmentIdent)
    │   │   │       └── ident (kind: Identifier): 'format'
    │   │   └── semicolon (kind: Semicolon): ';'
    │   └── child #1 (kind: ItemFreeFunction)
    │       ├── funckw (kind: Function): 'func'
    │       ├── name (kind: Identifier): 'foo'
    │       ├── generic_args (kind: OptionGenericArgsEmpty) []
    │       ├── signature (kind: FunctionSignature)
    │       │   ├── lparen (kind: LParen): '('
    │       │   ├── parameters (kind: ParamList)
    │       │   │   └── item #0 (kind: Param)
    │       │   │       ├── name (kind: Identifier): 'a'
    │       │   │       └── type_clause (kind: TypeClause)
    │       │   │           ├── colon (kind: Colon): ':'
    │       │   │           └── ty (kind: ExprPath)
    │       │   │               └── item #0 (kind: PathSegmentIdent)
    │       │   │                   └── ident (kind: Identifier): 'int'
    │       │   ├── rparen (kind: RParen): ')'
    │       │   └── ret_ty (kind: ReturnTypeClause)
    │       │       ├── arrow (kind: Arrow): '->'
    │       │       └── ty (kind: ExprPath)
    │       │           └── item #0 (kind: PathSegmentIdent)
    │       │               └── ident (kind: Identifier): 'felt'
    │       └── body (kind: ExprBlock)
    │           ├── lbrace (kind: LBrace): '{'
    │           ├── statements (kind: StatementList)
    │           │   └── child #0 (kind: StatementReturn)
    │           │       ├── returnkw (kind: Return): 'return'
    │           │       ├── expr (kind: ExprPath)
    │           │       │   └── item #0 (kind: PathSegmentIdent)
    │           │       │       └── ident (kind: Identifier): 'a'
    │           │       └── semicolon (kind: Semicolon): ';'
    │           └── rbrace (kind: RBrace): '}'
    └── eof (kind: EndOfFile).
--------------------
