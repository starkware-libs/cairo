//! > Test comment types

//! > test_runner_name
test_partial_parser_tree_with_trivia(expect_diagnostics: false)

//! > cairo_code
// Regular comment
/// Documentation comment
//! Inner documentation comment
fn foo() {}

//! > top_level_kind

//! > ignored_kinds

//! > expected_diagnostics

//! > expected_tree
└── root (kind: SyntaxFile)
    ├── items (kind: ModuleItemList)
    │   └── child #0 (kind: FunctionWithBody)
    │       ├── attributes (kind: AttributeList) []
    │       ├── visibility (kind: VisibilityDefault) []
    │       ├── declaration (kind: FunctionDeclaration)
    │       │   ├── function_kw (kind: TerminalFunction)
    │       │   │   ├── leading_trivia (kind: Trivia)
    │       │   │   │   ├── child #0 (kind: TokenSingleLineComment): '// Regular comment'
    │       │   │   │   ├── child #1 (kind: TokenNewline).
    │       │   │   │   ├── child #2 (kind: TokenSingleLineDocComment): '/// Documentation comment'
    │       │   │   │   ├── child #3 (kind: TokenNewline).
    │       │   │   │   ├── child #4 (kind: TokenSingleLineInnerComment): '//! Inner documentation comment'
    │       │   │   │   └── child #5 (kind: TokenNewline).
    │       │   │   ├── token (kind: TokenFunction): 'fn'
    │       │   │   └── trailing_trivia (kind: Trivia)
    │       │   │       └── child #0 (kind: TokenWhitespace).
    │       │   ├── name (kind: TerminalIdentifier)
    │       │   │   ├── leading_trivia (kind: Trivia) []
    │       │   │   ├── token (kind: TokenIdentifier): 'foo'
    │       │   │   └── trailing_trivia (kind: Trivia) []
    │       │   ├── generic_params (kind: OptionWrappedGenericParamListEmpty) []
    │       │   └── signature (kind: FunctionSignature)
    │       │       ├── lparen (kind: TerminalLParen)
    │       │       │   ├── leading_trivia (kind: Trivia) []
    │       │       │   ├── token (kind: TokenLParen): '('
    │       │       │   └── trailing_trivia (kind: Trivia) []
    │       │       ├── parameters (kind: ParamList) []
    │       │       ├── rparen (kind: TerminalRParen)
    │       │       │   ├── leading_trivia (kind: Trivia) []
    │       │       │   ├── token (kind: TokenRParen): ')'
    │       │       │   └── trailing_trivia (kind: Trivia)
    │       │       │       └── child #0 (kind: TokenWhitespace).
    │       │       ├── ret_ty (kind: OptionReturnTypeClauseEmpty) []
    │       │       ├── implicits_clause (kind: OptionImplicitsClauseEmpty) []
    │       │       └── optional_no_panic (kind: OptionTerminalNoPanicEmpty) []
    │       └── body (kind: ExprBlock)
    │           ├── lbrace (kind: TerminalLBrace)
    │           │   ├── leading_trivia (kind: Trivia) []
    │           │   ├── token (kind: TokenLBrace): '{'
    │           │   └── trailing_trivia (kind: Trivia) []
    │           ├── statements (kind: StatementList) []
    │           └── rbrace (kind: TerminalRBrace)
    │               ├── leading_trivia (kind: Trivia) []
    │               ├── token (kind: TokenRBrace): '}'
    │               └── trailing_trivia (kind: Trivia) []
    └── eof (kind: TerminalEndOfFile)
        ├── leading_trivia (kind: Trivia) []
        ├── token (kind: TokenEndOfFile).
        └── trailing_trivia (kind: Trivia) []
