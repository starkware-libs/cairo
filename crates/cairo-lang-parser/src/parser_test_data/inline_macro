//! > Test a syntax tree with literals

//! > test_runner_name
test_partial_parser_tree(allow_diagnostics: false)

//! > cairo_code
fn test() {
    println!('foo');
}

//! > top_level_kind
ExprInlineMacro

//! > ignored_kinds

//! > expected_diagnostics

//! > expected_tree
└── Top level kind: ExprInlineMacro
    ├── path (kind: ExprPath)
    │   └── item #0 (kind: PathSegmentSimple)
    │       └── ident (kind: TokenIdentifier): 'println'
    ├── bang (kind: TokenNot): '!'
    └── arguments (kind: ArgListParenthesized)
        ├── lparen (kind: TokenLParen): '('
        ├── args (kind: ArgList)
        │   └── item #0 (kind: Arg)
        │       ├── modifiers (kind: ModifierList) []
        │       └── arg_clause (kind: ArgClauseUnnamed)
        │           └── value (kind: TokenShortString): ''foo''
        └── rparen (kind: TokenRParen): ')'
