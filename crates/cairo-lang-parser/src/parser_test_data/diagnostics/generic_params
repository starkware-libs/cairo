//! > Test modifier followed by path.

//! > test_runner_name
get_diagnostics

//! > cairo_code
fn f<+I[a : b], impl C: G<A, B>[c],T[a:b]>() {}

//! > expected_diagnostics
error: Missing token TerminalColon.
 --> dummy_file.cairo:1:34
fn f<+I[a : b], impl C: G<A, B>[c],T[a:b]>() {}
                                 ^

error: Missing tokens. Expected a type expression.
 --> dummy_file.cairo:1:34
fn f<+I[a : b], impl C: G<A, B>[c],T[a:b]>() {}
                                 ^

error: Missing token TerminalComma.
 --> dummy_file.cairo:1:37
fn f<+I[a : b], impl C: G<A, B>[c],T[a:b]>() {}
                                    ^

error: Skipped tokens. Expected: generic param.
 --> dummy_file.cairo:1:37
fn f<+I[a : b], impl C: G<A, B>[c],T[a:b]>() {}
                                    ^

error: Missing token TerminalComma.
 --> dummy_file.cairo:1:39
fn f<+I[a : b], impl C: G<A, B>[c],T[a:b]>() {}
                                      ^

error: Skipped tokens. Expected: generic param.
 --> dummy_file.cairo:1:39
fn f<+I[a : b], impl C: G<A, B>[c],T[a:b]>() {}
                                      ^

error: Missing token TerminalComma.
 --> dummy_file.cairo:1:41
fn f<+I[a : b], impl C: G<A, B>[c],T[a:b]>() {}
                                        ^

error: Skipped tokens. Expected: generic param.
 --> dummy_file.cairo:1:41
fn f<+I[a : b], impl C: G<A, B>[c],T[a:b]>() {}
                                        ^
