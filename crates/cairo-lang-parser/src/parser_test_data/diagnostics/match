//! > Test lbrace in match

//! > test_comments
// TODO(spapini): Improve diagnostics.

//! > test_runner_name
get_diagnostics

//! > cairo_code
fn f() {
    match MyStruct{a: 1} {
    }
    match x {
      1 => {},
      Struct{a, b: _, .., a: A::Variant(4)} => {},
      x => {},
      bool::False() => {}
    }
}

//! > expected_diagnostics
error: Missing token TerminalOr.
 --> dummy_file.cairo:2:21
    match MyStruct{a: 1} {
                    ^

error: Skipped tokens. Expected: pattern.
 --> dummy_file.cairo:2:21
    match MyStruct{a: 1} {
                    ^

error: Missing token TerminalMatchArrow.
 --> dummy_file.cairo:2:24
    match MyStruct{a: 1} {
                       ^

error: Missing tokens. Expected an expression.
 --> dummy_file.cairo:2:24
    match MyStruct{a: 1} {
                       ^

error: Missing token TerminalUnderscore.
 --> dummy_file.cairo:8:19
      bool::False() => {}
                  ^

//! > ==========================================================================

//! > Test or in match

//! > test_comments
// TODO(spapini): Improve diagnostics.

//! > test_runner_name
get_diagnostics

//! > cairo_code
#[derive(Drop)]
enum MyEnumLong {
   a,
   b,
   c
}
fn f() -> felt252 {
   let e = MyEnumLong::a;
   match e {
       MyEnumLong::a | MyEnumLong::b=> {
           3
       },
       MyEnumLong::c => {
           1
       },
   }
   5
}

//! > expected_diagnostics
