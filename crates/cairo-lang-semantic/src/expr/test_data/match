//! > Test match

//! > test_function_name
test_function_diagnostics

//! > function
fn foo(b: A) -> felt {
    match (b, 4) {
        (A::a(x), _) => { 1 },
        (A::b(x), 1) => { x },
        (7, 1) => { x },
        (A::b(x), 1, _) => { x },
    }
    let x = (5,true);
    let (y,_) = x;
    y
}

//! > function_name
foo

//! > module_code
enum A {
    a: (),
    b: felt,
}

//! > expected_diagnostics
error: Unexpected type for literal pattern. Expected: felt. Got: "test::A"
 --> lib.cairo:9:10
        (7, 1) => { x },
         ^

error: Wrong number of generic arguments. Expected 2, found: 3
 --> lib.cairo:10:9
        (A::b(x), 1, _) => { x },
        ^*************^

//! > ==========================================================================

//! > Match with missing type

//! > test_function_name
test_function_diagnostics

//! > function
fn foo(a: bool) -> felt {
    match a + 1 {
        A::a(_) => 0,
        A::b(_) => 1,
    }
}

//! > function_name
foo

//! > module_code
enum A {
    a: (),
    b: felt,
}

//! > expected_diagnostics
error: Unexpected argument type. Expected: "core::bool", found: "core::felt".
 --> lib.cairo:6:15
    match a + 1 {
              ^

error: Wrong enum in pattern. Expected: "core::bool". Got: "test::A".
 --> lib.cairo:7:9
        A::a(_) => 0,
        ^**^

error: Wrong enum in pattern. Expected: "core::bool". Got: "test::A".
 --> lib.cairo:8:9
        A::b(_) => 1,
        ^**^
