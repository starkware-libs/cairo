//! > Repeated modifiers for a local variable (first modifier is `mut`).

//! > test_function_name
test_function_diagnostics

//! > function
fn foo() {
    let mut ref mut ref ref a = 3;
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: `ref` modifier was specified after another modifier (`mut`). Only a single modifier is allowed.
 --> lib.cairo:2:13
    let mut ref mut ref ref a = 3;
            ^*^

error: `mut` modifier was specified after another modifier (`mut`). Only a single modifier is allowed.
 --> lib.cairo:2:17
    let mut ref mut ref ref a = 3;
                ^*^

error: `ref` modifier was specified after another modifier (`mut`). Only a single modifier is allowed.
 --> lib.cairo:2:21
    let mut ref mut ref ref a = 3;
                    ^*^

error: `ref` modifier was specified after another modifier (`mut`). Only a single modifier is allowed.
 --> lib.cairo:2:25
    let mut ref mut ref ref a = 3;
                        ^*^

//! > ==========================================================================

//! > Repeated modifiers for a local variable (first modifier is `ref`).

//! > test_function_name
test_function_diagnostics

//! > function
fn foo() {
    let ref mut a = 3;
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: `mut` modifier was specified after another modifier (`ref`). Only a single modifier is allowed.
 --> lib.cairo:2:13
    let ref mut a = 3;
            ^*^

error: `ref` is only allowed for function parameters, not for local variables.
 --> lib.cairo:2:17
    let ref mut a = 3;
                ^

//! > ==========================================================================

//! > Unsupported ref modifier for a local variable.

//! > test_function_name
test_function_diagnostics

//! > function
fn foo() {
    let ref a = 3;
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: `ref` is only allowed for function parameters, not for local variables.
 --> lib.cairo:2:13
    let ref a = 3;
            ^

//! > ==========================================================================

//! > Variable not found diagnostics

//! > test_function_name
test_function_diagnostics

//! > function
fn foo() {
    let x = not_found;
    let x = foo;
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Identifier not found.
 --> lib.cairo:2:13
    let x = not_found;
            ^*******^

error: Expected variable or constant, found function.
 --> lib.cairo:3:13
    let x = foo;
            ^*^
