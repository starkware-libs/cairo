//! > pattern type for a param.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: false)

//! > function
fn foo(x: (felt252, felt252)) {
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics

//! > ==========================================================================

//! > Valid destructures of a struct.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: false)

//! > function
fn foo(s2: Struct2) {
    let Struct2{member1: _, member2: _, member3: _} = s2;
    let Struct2{member1: _, member2: _, ..} = s2;
    let Struct2{member1: _, member2: _, member3: Struct1{member1: _a,..}} = s2;
}

//! > function_name
foo

//! > module_code
struct Struct1 {
    member1: felt252,
    member2: (),
}
struct Struct2 {
    member1: felt252,
    member2: (),
    member3: Struct1,
}

//! > expected_diagnostics

//! > ==========================================================================

//! > Test struct pattern with missing members.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo(s: MyStruct) {
    let MyStruct { a: _ } = s;
}

//! > function_name
foo

//! > module_code
struct MyStruct {
    a: usize,
    b: usize,
}

//! > expected_diagnostics
error: Missing member "b".
 --> lib.cairo:6:9
    let MyStruct { a: _ } = s;
        ^***************^

//! > ==========================================================================

//! > Test struct pattern with non existing members.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo(s: MyStruct) {
    let MyStruct { a, b } = s;
}

//! > function_name
foo

//! > module_code
struct MyStruct {
}

//! > expected_diagnostics
error: Struct "test::MyStruct" has no member "a"
 --> lib.cairo:4:20
    let MyStruct { a, b } = s;
                   ^

error: Struct "test::MyStruct" has no member "b"
 --> lib.cairo:4:23
    let MyStruct { a, b } = s;
                      ^

//! > ==========================================================================

//! > Test struct pattern with members redefinition.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo(s: MyStruct) {
    let MyStruct { a: _, b: _, a: _, b: _ } = s;
}

//! > function_name
foo

//! > module_code
struct MyStruct {
    a: usize,
    b: usize,
}

//! > expected_diagnostics
error: Redefinition of member "a" on struct "test::MyStruct".
 --> lib.cairo:6:32
    let MyStruct { a: _, b: _, a: _, b: _ } = s;
                               ^

error: Redefinition of member "b" on struct "test::MyStruct".
 --> lib.cairo:6:38
    let MyStruct { a: _, b: _, a: _, b: _ } = s;
                                     ^

//! > ==========================================================================

//! > Test struct pattern with non existing members, members redefinition and missing members.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo(s: MyStruct) {
    let MyStruct { a: _, c: _, a: _ } = s;
}

//! > function_name
foo

//! > module_code
struct MyStruct {
    a: usize,
    b: usize,
}

//! > expected_diagnostics
error: Struct "test::MyStruct" has no member "c"
 --> lib.cairo:6:26
    let MyStruct { a: _, c: _, a: _ } = s;
                         ^

error: Redefinition of member "a" on struct "test::MyStruct".
 --> lib.cairo:6:32
    let MyStruct { a: _, c: _, a: _ } = s;
                               ^

error: Missing member "b".
 --> lib.cairo:6:9
    let MyStruct { a: _, c: _, a: _ } = s;
        ^***************************^
