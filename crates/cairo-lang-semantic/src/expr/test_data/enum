//! > Test enum

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
enum A {
    a: (),
    b: felt252,
}

fn foo() {
    let _a : A = A::a(());
    let _a : A = A::b(5);
    let _b : bool = bool::True(());
    let _b : bool = true;

    // Failures.
    let _a : A = A::a();
    let _a : A = A::b(1,2);
    let _a : A = A::a::a(());
    let _a : A = A::c();
    let _a : A = A::d;
    let _a : A = A;
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Wrong number of arguments. Expected 1, found: 0
 --> lib.cairo:13:22
    let _a : A = A::a();
                     ^^

error: Wrong number of arguments. Expected 1, found: 2
 --> lib.cairo:14:22
    let _a : A = A::b(1,2);
                     ^***^

error: Invalid path.
 --> lib.cairo:15:24
    let _a : A = A::a::a(());
                       ^

error: Enum "test::A" has no variant "c"
 --> lib.cairo:16:21
    let _a : A = A::c();
                    ^

error: Enum "test::A" has no variant "d"
 --> lib.cairo:17:21
    let _a : A = A::d;
                    ^

error: Expected variable or constant, found type.
 --> lib.cairo:18:18
    let _a : A = A;
                 ^
