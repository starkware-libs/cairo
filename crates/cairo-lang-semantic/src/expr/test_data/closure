//! > Test closure wrong return type.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() {
    || -> i32 {
        let d: u32 = 3;
        d
    };
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Unexpected return type. Expected: "core::integer::i32", found: "core::integer::u32".
 --> lib.cairo:2:15
\   || -> i32 {
|       let d: u32 = 3;
|       d
|   }
|___^

//! > ==========================================================================

//! > Test closure inferred param type.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: false)

//! > function
fn foo() {
    |a| -> i32 {
        let d: i32 = a;
        d
    };
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics

//! > ==========================================================================

//! > Test closure typed param type.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() {
    |a: u32| -> i32 {
        let d: i32 = a;
        d
    };
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Unexpected argument type. Expected: "core::integer::i32", found: "core::integer::u32".
 --> lib.cairo:3:22
        let d: i32 = a;
                     ^

//! > ==========================================================================

//! > Test assignment wrong type.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() {
    let _x: i32 =  || {
        let d: u32 = 3;
        d
    };
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Unexpected argument type. Expected: "core::integer::i32", found: "{closure@lib.cairo:2:20: 2:22}".
 --> lib.cairo:2:20
\   let _x: i32 =  || {
|       let d: u32 = 3;
|       d
|   }
|___^

//! > ==========================================================================

//! > Test closure in global context.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() {}

//! > function_name
foo

//! > module_code
const _x: i32 =  || {
    let d: u32 = 3;
    d
};

//! > expected_diagnostics
error: Closures are not allowed in this context.
 --> lib.cairo:1:18
\   const _x: i32 =  || {
|       let d: u32 = 3;
|       d
|   }
|___^

error: Type mismatch: `{closure@lib.cairo:1:18: 1:20}` and `core::integer::i32`.
 --> lib.cairo:1:1
\   const _x: i32 =  || {
|       let d: u32 = 3;
|       d
|   };
|____^

//! > ==========================================================================

//! > Test closure in generic const context.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() {
    bar::<{  || -> u32 {
        2
    } }>();
}

//! > function_name
foo

//! > module_code
fn bar<const N: u32>() {}

//! > expected_diagnostics
error: Closures are not allowed in this context.
 --> lib.cairo:3:14
\   bar::<{  || -> u32 {
|       2
|   }
|___^

error: Type mismatch: `{closure@lib.cairo:3:14: 3:16}` and `core::integer::u32`.
 --> lib.cairo:3:11
\   bar::<{  || -> u32 {
|       2
|   } }
|_____^

//! > ==========================================================================

//! > Test closure params need type annotations.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() {
    |a| {
        let d = a;
        d
    };
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Type annotations needed. Failed to infer ?0.
 --> lib.cairo:2:7
    |a| {
      ^
