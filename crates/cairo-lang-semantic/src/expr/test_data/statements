//! > Missing semicolon in let statement (parsing error).

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() {
    let mut x = 3
    x = 2;
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Missing token TerminalSemicolon.
 --> lib.cairo:2:18
    let mut x = 3
                 ^

//! > ==========================================================================

//! > Missing semicolon in "tail" let statement (parsing error).

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() {
    let mut _x = 3
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Missing token TerminalSemicolon.
 --> lib.cairo:2:19
    let mut _x = 3
                  ^

//! > ==========================================================================

//! > Missing semicolon in return statement (parsing error).

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() -> felt252 {
    if true {
        return 1
    }
    2
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Missing token TerminalSemicolon.
 --> lib.cairo:3:17
        return 1
                ^

//! > ==========================================================================

//! > Missing semicolon in "tail" return statement (parsing error).

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() -> felt252 {
    return 1
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Missing token TerminalSemicolon.
 --> lib.cairo:2:13
    return 1
            ^

//! > ==========================================================================

//! > Missing semicolon in expression statement.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() {
    bar()
    bar();
}

//! > function_name
foo

//! > module_code
fn bar() {}

//! > expected_diagnostics
error: Missing semicolon
 --> lib.cairo:3:10
    bar()
         ^

//! > ==========================================================================

//! > "Missing" semicolon in tail expression is OK

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: false)

//! > function
fn foo() -> felt252 {
    2
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics

//! > ==========================================================================

//! > Blocks, `if`s, and `match`s, don't require semicolon, even not in tail expressions.

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() {
    // `if` without ';' in the end
    if true {}
    let opt = Option::Some(3);
    // `match` without ';' in the end
    match opt {
        Some(_) => {},
        None(_) => {},
    }
    // Block without ';' in the end
    {}
    // Another statement to make the previous ones non-tail.
    let _x = 3;
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Identifier not found.
 --> lib.cairo:7:9
        Some(_) => {},
        ^**^

error: Identifier not found.
 --> lib.cairo:8:9
        None(_) => {},
        ^**^

//! > ==========================================================================

//! > Test a statement with an unknown attribute

//! > test_runner_name
test_function_diagnostics(expect_diagnostics: true)

//! > function
fn foo() {
    #[unknown_attr1]
    #[unknown_attr2]
    #[cairofmt::skip]
    let _x = 3;
}

//! > function_name
foo

//! > module_code

//! > expected_diagnostics
error: Unknown statement attribute.
 --> lib.cairo:2:5
    #[unknown_attr1]
    ^**************^

error: Unknown statement attribute.
 --> lib.cairo:3:5
    #[unknown_attr2]
    ^**************^
