//! > Named arguments

//! > test_function_name
test_function_diagnostics

//! > function
fn foo(d: bool) {
    // Valid names (one wrong type).
    bar(0, 1, 2, :d, e: 0);
    // Invalid name.
    // Note that a diagnostic is not reported for the wrong type when the name is wrong.
    bar(x: 0, 1, y: 2, 3, false);
    MyEnum::A(x: 0);
}

//! > function_name
foo

//! > module_code
fn bar(a: felt, b: felt, c: felt, d: felt, e: felt) {
}

enum MyEnum {
    A: felt
}

//! > expected_diagnostics
error: Unexpected argument type. Expected: "core::felt", found: "core::bool".
 --> lib.cairo:9:19
    bar(0, 1, 2, :d, e: 0);
                  ^

error: Unexpected argument name. Expected: 'a', found 'x'.
 --> lib.cairo:12:9
    bar(x: 0, 1, y: 2, 3, false);
        ^

error: Unnamed arguments cannot follow named arguments.
 --> lib.cairo:12:15
    bar(x: 0, 1, y: 2, 3, false);
              ^

error: Unexpected argument name. Expected: 'c', found 'y'.
 --> lib.cairo:12:18
    bar(x: 0, 1, y: 2, 3, false);
                 ^

error: Named arguments are not supported in this context.
 --> lib.cairo:13:15
    MyEnum::A(x: 0);
              ^

//! > ==========================================================================

//! > Ref arguments

//! > test_function_name
test_function_diagnostics

//! > function
fn foo(ref a: felt) {
    let b = 1;
    let mut c = 2;
    bar(a, a);
    bar(b, b);
    bar(c, c);
    bar(ref a, ref a);
    bar(ref b, ref b);
    bar(ref c, ref c);
}

//! > function_name
foo

//! > module_code
fn bar(a: felt, ref b: felt) {
}

//! > expected_diagnostics
error: ref argument must be a passed with a preceding 'ref'.
 --> lib.cairo:6:12
    bar(a, a);
           ^

error: ref argument must be a mutable variable.
 --> lib.cairo:7:12
    bar(b, b);
           ^

error: ref argument must be a passed with a preceding 'ref'.
 --> lib.cairo:7:12
    bar(b, b);
           ^

error: ref argument must be a passed with a preceding 'ref'.
 --> lib.cairo:8:12
    bar(c, c);
           ^

error: Argument cannot have modifiers.
 --> lib.cairo:9:13
    bar(ref a, ref a);
            ^

error: Argument cannot have modifiers.
 --> lib.cairo:10:13
    bar(ref b, ref b);
            ^

error: ref argument must be a mutable variable.
 --> lib.cairo:10:20
    bar(ref b, ref b);
                   ^

error: Argument cannot have modifiers.
 --> lib.cairo:11:13
    bar(ref c, ref c);
            ^

//! > ==========================================================================

//! > Unknown function

//! > test_function_name
test_function_diagnostics

//! > function
fn foo(d: MyStruct) {
    bar(0);
    d + 0;
    - d;
    d.bar();
}

//! > function_name
foo

//! > module_code
struct MyStruct {
}

//! > expected_diagnostics
error: Function not found.
 --> lib.cairo:4:5
    bar(0);
    ^*^

error: Unexpected argument type. Expected: "test::MyStruct", found: "core::felt".
 --> lib.cairo:5:9
    d + 0;
        ^

error: Unary operator '-' is not supported for type 'test::MyStruct'.
 --> lib.cairo:6:5
    - d;
    ^

error: Unknown function.
 --> lib.cairo:7:7
    d.bar();
      ^*^

error: Trait `core::traits::Add::<?0>` has no implementation in the context.
 --> lib.cairo:5:5
    d + 0;
    ^***^
