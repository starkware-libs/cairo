//! > Test use usage

//! > test_runner_name
test_expr_semantics(expect_diagnostics: true)

//! > module_code
mod X {
    pub const Y: u8 = 2;
}

//! > function_body

//! > expr_code
{ use X::Y; }

//! > expected_semantics
Block(
    ExprBlock {
        statements: [
            Item(
                StatementItem,
            ),
        ],
        tail: None,
        ty: (),
    },
)

//! > expected_diagnostics
warning: Unused use.
 --> lib.cairo:5:10
{ use X::Y; }
         ^

//! > ==========================================================================

//! > Test several uses

//! > test_runner_name
test_expr_semantics(expect_diagnostics: true)

//! > module_code
mod X {
    const X: u8 = 2;
    const Y: u8 = X;
    const Z: u8 = Y;
}

//! > function_body

//! > expr_code
{ use X::{X, Y, Z}; 
X + Y
}

//! > expected_semantics
Block(
    ExprBlock {
        statements: [
            Item(
                StatementItem,
            ),
        ],
        tail: Some(
            FunctionCall(
                ExprFunctionCall {
                    function: core::integer::U8Add::add,
                    args: [
                        Value(
                            Constant(
                                ExprConstant {
                                    const_value_id: 2,
                                    ty: core::integer::u8,
                                },
                            ),
                        ),
                        Value(
                            Constant(
                                ExprConstant {
                                    const_value_id: 2,
                                    ty: core::integer::u8,
                                },
                            ),
                        ),
                    ],
                    coupon_arg: None,
                    ty: core::integer::u8,
                },
            ),
        ),
        ty: core::integer::u8,
    },
)

//! > expected_diagnostics
warning: Unused use.
 --> lib.cairo:7:17
{ use X::{X, Y, Z}; 
                ^

//! > ==========================================================================

//! > Test use not allowed shadowing

//! > test_runner_name
test_expr_semantics(expect_diagnostics: true)

//! > module_code
mod X {
    const A: u8 = 1;
}

//! > function_body
use X::A;
const A: u8 = 4;

//! > expr_code
A

//! > expected_semantics
Constant(
    ExprConstant {
        const_value_id: 4,
        ty: core::integer::u8,
    },
)

//! > expected_diagnostics
error: Multiple definitions of constant "A".
 --> lib.cairo:5:7
const A: u8 = 4; {
      ^
