//! > Test match

//! > test_runner_name
test_expr_semantics

//! > function_body
let a: felt252 = 3;

//! > expr_code
match a {
    0 => 0,
    _ => 1,
}

//! > expected
Match(
    ExprMatch {
        matched_expr: Var(
            LocalVarId(test::a),
        ),
        arms: [
            MatchArm {
                pattern: Literal(
                    PatternLiteral {
                        literal: ExprLiteral {
                            value: 0,
                            ty: core::felt252,
                        },
                    },
                ),
                expression: Literal(
                    ExprLiteral {
                        value: 0,
                        ty: core::felt252,
                    },
                ),
            },
            MatchArm {
                pattern: Otherwise(
                    PatternOtherwise {
                        ty: core::felt252,
                    },
                ),
                expression: Literal(
                    ExprLiteral {
                        value: 1,
                        ty: core::felt252,
                    },
                ),
            },
        ],
        ty: core::felt252,
    },
)

//! > semantic_diagnostics
