//! > Test +=

//! > test_runner_name
test_expr_diagnostics

//! > expr_code
foo()

//! > module_code
fn foo() {
    let mut x:felt252 = 3;
    x += 4;
}

//! > function_body

//! > expected_diagnostics

//! > ==========================================================================

//! > Test += for non-variable

//! > test_runner_name
test_expr_diagnostics

//! > expr_code
foo()

//! > module_code
fn foo() {
    4 += 4;
}

//! > function_body

//! > expected_diagnostics
error: ref argument must be a variable.
 --> lib.cairo:2:5
    4 += 4;
    ^

//! > ==========================================================================

//! > Test += for non-mutable variable

//! > test_runner_name
test_expr_diagnostics

//! > expr_code
foo()

//! > module_code
fn foo() {
    let x = 3;
    x += 4;
}

//! > function_body

//! > expected_diagnostics
error: ref argument must be a mutable variable.
 --> lib.cairo:3:5
    x += 4;
    ^

//! > ==========================================================================

//! > Test += for unsupported pair of types.

//! > test_runner_name
test_expr_diagnostics

//! > expr_code
foo()

//! > module_code
fn foo() {
    let mut x = 3;
    x += true;
}

//! > function_body

//! > expected_diagnostics
error: Mismatched types. The type core::bool cannot be created from a numeric literal.
 --> lib.cairo:2:17
    let mut x = 3;
                ^

//! > ==========================================================================

//! > Test /= for an unsupported type.

//! > test_runner_name
test_expr_diagnostics

//! > expr_code
foo()

//! > module_code
fn foo() {
    let mut x = true;
    x /= false;
}

//! > function_body

//! > expected_diagnostics
error: Trait has no implementation in context: core::traits::DivEq::<core::bool>
 --> lib.cairo:3:5
    x /= false;
    ^********^
