//! > Test PathNotFound.

//! > test_runner_name
test_expr_diagnostics(expect_diagnostics: true)

//! > expr_code
{
}

//! > module_code
fn foo() -> UnknownType {
    bar();
}

//! > function_body

//! > expected_diagnostics
error: Type not found.
 --> lib.cairo:1:13
fn foo() -> UnknownType {
            ^^^^^^^^^^^

error: Function not found.
 --> lib.cairo:2:5
    bar();
    ^^^

//! > ==========================================================================

//! > Test trying to access a function from a module whose file is missing.

//! > test_runner_name
test_expr_diagnostics(expect_diagnostics: true)

//! > expr_code
module_does_not_exist::bar()

//! > module_code
mod module_does_not_exist;

//! > function_body

//! > expected_diagnostics
error[E0005]: Module file not found. Expected path: module_does_not_exist.cairo
 --> lib.cairo:1:1
mod module_does_not_exist;
^^^^^^^^^^^^^^^^^^^^^^^^^^

//! > ==========================================================================

//! > Test missing implicit in implicit_precedence

//! > test_runner_name
test_expr_diagnostics(expect_diagnostics: true)

//! > expr_code
{}

//! > module_code
#[implicit_precedence(MissingBuiltin1, MissingBuiltin2)]
fn foo() {}

//! > function_body

//! > expected_diagnostics
error: Type not found.
 --> lib.cairo:1:23
#[implicit_precedence(MissingBuiltin1, MissingBuiltin2)]
                      ^^^^^^^^^^^^^^^

//! > ==========================================================================

//! > Test suggesting import for missing method.

//! > test_runner_name
test_expr_diagnostics(expect_diagnostics: true)

//! > expr_code
{
// TODO: Ensure the diagnostic matches the expected output- add the tests' crate to the db.
    let x: a_struct = A {a: 0};
    x.foo()
}

//! > module_code
struct A {
    a: felt252,
}
mod some_module {
    use super::A;
    pub trait Trt1 {
        fn foo(self: A) -> felt252;
    }
    impl Imp1 of Trt1 {
        fn foo(self: A) -> felt252 {
            0
        }
    }
}

//! > function_body

//! > expected_diagnostics
error: Type not found.
 --> lib.cairo:18:12
    let x: a_struct = A {a: 0};
           ^^^^^^^^

error[E0002]: Method `foo` not found on type `<missing>`. Did you import the correct trait and impl?
 --> lib.cairo:19:7
    x.foo()
      ^^^
