//! > Test match optimizer simple scenario.

//! > test_runner_name
test_match_optimizer

//! > function
fn foo() -> Option<u16> {
   let v = get_option();
   match v {
        Option::Some(_) => Option::Some(1_u16),
        Option::None => Option::None,
   }
}

//! > function_name
foo

//! > module_code
extern fn get_option() -> Option<u16> nopanic;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > before
Parameters:
blk0 (root):
Statements:
End:
  Match(match test::get_option() {
    Option::Some(v0) => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
  (v1: core::option::Option::<core::integer::u16>) <- Option::Some(v0)
End:
  Goto(blk3, {v1 -> v4})

blk2:
Statements:
  (v2: ()) <- struct_construct()
  (v3: core::option::Option::<core::integer::u16>) <- Option::None(v2)
End:
  Goto(blk3, {v3 -> v4})

blk3:
Statements:
End:
  Match(match_enum(v4) {
    Option::Some(v5) => blk4,
    Option::None(v6) => blk5,
  })

blk4:
Statements:
  (v7: core::integer::u16) <- 1
  (v8: core::option::Option::<core::integer::u16>) <- Option::Some(v7)
End:
  Goto(blk6, {v8 -> v11})

blk5:
Statements:
  (v9: ()) <- struct_construct()
  (v10: core::option::Option::<core::integer::u16>) <- Option::None(v9)
End:
  Goto(blk6, {v10 -> v11})

blk6:
Statements:
End:
  Return(v11)

//! > after
Parameters:
blk0 (root):
Statements:
End:
  Match(match test::get_option() {
    Option::Some(v0) => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
End:
  Goto(blk4, {v0 -> v5})

blk2:
Statements:
  (v2: ()) <- struct_construct()
End:
  Goto(blk5, {v2 -> v6})

blk3:
Statements:
End:
  Match(match_enum(v4) {
    Option::Some(v12) => blk7,
    Option::None(v13) => blk8,
  })

blk4:
Statements:
  (v7: core::integer::u16) <- 1
  (v8: core::option::Option::<core::integer::u16>) <- Option::Some(v7)
End:
  Goto(blk6, {v8 -> v11})

blk5:
Statements:
  (v9: ()) <- struct_construct()
  (v10: core::option::Option::<core::integer::u16>) <- Option::None(v9)
End:
  Goto(blk6, {v10 -> v11})

blk6:
Statements:
End:
  Return(v11)

blk7:
Statements:
End:
  Goto(blk4, {v12 -> v5})

blk8:
Statements:
End:
  Goto(blk5, {v13 -> v6})

//! > ==========================================================================

//! > Test skipping of match optimization.

//! > test_runner_name
test_match_optimizer

//! > function
fn foo(a: felt252) -> Option<u16> {
   let v = get_option();

   // The following instruction should block the optimization.
   core::internal::revoke_ap_tracking();
   let v1 = match v {
        Option::Some(_) => Option::Some(1_u16),
        Option::None => Option::None,
   };
   match v1 {
        // v1 is used after the match.
        Option::Some(_) => v1,
        Option::None => Option::Some(2_u16),
   }
}

//! > function_name
foo

//! > module_code
extern fn get_option() -> Option<u16> nopanic;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > before
Parameters: v0: core::felt252
blk0 (root):
Statements:
End:
  Match(match test::get_option() {
    Option::Some(v1) => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
  (v2: core::option::Option::<core::integer::u16>) <- Option::Some(v1)
End:
  Goto(blk3, {v2 -> v5})

blk2:
Statements:
  (v3: ()) <- struct_construct()
  (v4: core::option::Option::<core::integer::u16>) <- Option::None(v3)
End:
  Goto(blk3, {v4 -> v5})

blk3:
Statements:
  () <- core::internal::revoke_ap_tracking()
End:
  Match(match_enum(v5) {
    Option::Some(v6) => blk4,
    Option::None(v7) => blk5,
  })

blk4:
Statements:
  (v8: core::integer::u16) <- 1
  (v9: core::option::Option::<core::integer::u16>) <- Option::Some(v8)
End:
  Goto(blk6, {v9 -> v12})

blk5:
Statements:
  (v10: ()) <- struct_construct()
  (v11: core::option::Option::<core::integer::u16>) <- Option::None(v10)
End:
  Goto(blk6, {v11 -> v12})

blk6:
Statements:
End:
  Match(match_enum(v12) {
    Option::Some(v13) => blk7,
    Option::None(v14) => blk8,
  })

blk7:
Statements:
End:
  Goto(blk9, {v12 -> v17})

blk8:
Statements:
  (v15: core::integer::u16) <- 2
  (v16: core::option::Option::<core::integer::u16>) <- Option::Some(v15)
End:
  Goto(blk9, {v16 -> v17})

blk9:
Statements:
End:
  Return(v17)

//! > after
Parameters: v0: core::felt252
blk0 (root):
Statements:
End:
  Match(match test::get_option() {
    Option::Some(v1) => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
  (v2: core::option::Option::<core::integer::u16>) <- Option::Some(v1)
End:
  Goto(blk3, {v2 -> v5})

blk2:
Statements:
  (v3: ()) <- struct_construct()
  (v4: core::option::Option::<core::integer::u16>) <- Option::None(v3)
End:
  Goto(blk3, {v4 -> v5})

blk3:
Statements:
  () <- core::internal::revoke_ap_tracking()
End:
  Match(match_enum(v5) {
    Option::Some(v6) => blk4,
    Option::None(v7) => blk5,
  })

blk4:
Statements:
  (v8: core::integer::u16) <- 1
  (v9: core::option::Option::<core::integer::u16>) <- Option::Some(v8)
End:
  Goto(blk6, {v9 -> v12})

blk5:
Statements:
  (v10: ()) <- struct_construct()
  (v11: core::option::Option::<core::integer::u16>) <- Option::None(v10)
End:
  Goto(blk6, {v11 -> v12})

blk6:
Statements:
End:
  Match(match_enum(v12) {
    Option::Some(v13) => blk7,
    Option::None(v14) => blk8,
  })

blk7:
Statements:
End:
  Goto(blk9, {v12 -> v17})

blk8:
Statements:
  (v15: core::integer::u16) <- 2
  (v16: core::option::Option::<core::integer::u16>) <- Option::Some(v15)
End:
  Goto(blk9, {v16 -> v17})

blk9:
Statements:
End:
  Return(v17)

//! > ==========================================================================

//! > Test two matches.

//! > test_runner_name
test_match_optimizer

//! > function
fn foo() -> felt252 {
   let opt = get_option();
   match opt {
      Option::Some(x) => Option::Some(x + 3),
      Option::None => Option::None
   }.unwrap()
}

//! > function_name
foo

//! > module_code
extern fn get_option() -> Option<felt252> nopanic;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > before
Parameters:
blk0 (root):
Statements:
End:
  Match(match test::get_option() {
    Option::Some(v0) => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
  (v1: core::option::Option::<core::felt252>) <- Option::Some(v0)
End:
  Goto(blk3, {v1 -> v4})

blk2:
Statements:
  (v2: ()) <- struct_construct()
  (v3: core::option::Option::<core::felt252>) <- Option::None(v2)
End:
  Goto(blk3, {v3 -> v4})

blk3:
Statements:
End:
  Match(match_enum(v4) {
    Option::Some(v5) => blk4,
    Option::None(v6) => blk5,
  })

blk4:
Statements:
  (v7: core::felt252) <- 3
  (v14: core::felt252) <- core::felt252_add(v5, v7)
  (v9: core::option::Option::<core::felt252>) <- Option::Some(v14)
End:
  Goto(blk6, {v9 -> v12})

blk5:
Statements:
  (v10: ()) <- struct_construct()
  (v11: core::option::Option::<core::felt252>) <- Option::None(v10)
End:
  Goto(blk6, {v11 -> v12})

blk6:
Statements:
End:
  Match(match_enum(v12) {
    Option::Some(v24) => blk7,
    Option::None(v25) => blk8,
  })

blk7:
Statements:
  (v30: (core::felt252,)) <- struct_construct(v24)
  (v31: core::panics::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v30)
End:
  Goto(blk11, {v31 -> v16})

blk8:
Statements:
  (v41: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
  (v15: core::felt252) <- 29721761890975875353235833581453094220424382983267374
  (v42: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v41, v15)
  (v38: core::panics::Panic) <- struct_construct()
  (v39: (core::panics::Panic, core::array::Array::<core::felt252>)) <- struct_construct(v38, v42)
  (v40: core::panics::PanicResult::<(core::never,)>) <- PanicResult::Err(v39)
End:
  Match(match_enum(v40) {
    PanicResult::Ok(v28) => blk9,
    PanicResult::Err(v29) => blk10,
  })

blk9:
Statements:
  (v33: core::never) <- struct_destructure(v28)
End:
  Match(match_enum(v33) {
  })

blk10:
Statements:
  (v34: core::panics::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v29)
End:
  Goto(blk11, {v34 -> v16})

blk11:
Statements:
End:
  Match(match_enum(v16) {
    PanicResult::Ok(v17) => blk12,
    PanicResult::Err(v18) => blk13,
  })

blk12:
Statements:
  (v22: core::felt252) <- struct_destructure(v17)
  (v20: (core::felt252,)) <- struct_construct(v22)
  (v21: core::panics::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v20)
End:
  Goto(blk14, {v21 -> v13})

blk13:
Statements:
  (v23: core::panics::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v18)
End:
  Goto(blk14, {v23 -> v13})

blk14:
Statements:
  (v44: (core::felt252,)) <- struct_construct(v13)
  (v45: core::panics::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v44)
End:
  Return(v45)

//! > after
Parameters:
blk0 (root):
Statements:
End:
  Match(match test::get_option() {
    Option::Some(v0) => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
End:
  Goto(blk4, {v0 -> v5})

blk2:
Statements:
  (v2: ()) <- struct_construct()
End:
  Goto(blk5, {v2 -> v6})

blk3:
Statements:
End:
  Match(match_enum(v4) {
    Option::Some(v46) => blk15,
    Option::None(v47) => blk16,
  })

blk4:
Statements:
  (v7: core::felt252) <- 3
  (v14: core::felt252) <- core::felt252_add(v5, v7)
End:
  Goto(blk7, {v14 -> v24})

blk5:
Statements:
  (v10: ()) <- struct_construct()
End:
  Goto(blk8, {v10 -> v25})

blk6:
Statements:
End:
  Match(match_enum(v12) {
    Option::Some(v48) => blk17,
    Option::None(v49) => blk18,
  })

blk7:
Statements:
  (v30: (core::felt252,)) <- struct_construct(v24)
End:
  Goto(blk12, {v30 -> v17})

blk8:
Statements:
  (v41: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
  (v15: core::felt252) <- 29721761890975875353235833581453094220424382983267374
  (v42: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v41, v15)
  (v38: core::panics::Panic) <- struct_construct()
  (v39: (core::panics::Panic, core::array::Array::<core::felt252>)) <- struct_construct(v38, v42)
End:
  Goto(blk10, {v39 -> v29})

blk9:
Statements:
  (v33: core::never) <- struct_destructure(v28)
End:
  Match(match_enum(v33) {
  })

blk10:
Statements:
End:
  Goto(blk13, {v29 -> v18})

blk11:
Statements:
End:
  Match(match_enum(v16) {
    PanicResult::Ok(v50) => blk19,
    PanicResult::Err(v51) => blk20,
  })

blk12:
Statements:
  (v22: core::felt252) <- struct_destructure(v17)
  (v20: (core::felt252,)) <- struct_construct(v22)
  (v21: core::panics::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v20)
End:
  Goto(blk14, {v21 -> v13})

blk13:
Statements:
  (v23: core::panics::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v18)
End:
  Goto(blk14, {v23 -> v13})

blk14:
Statements:
  (v44: (core::felt252,)) <- struct_construct(v13)
  (v45: core::panics::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v44)
End:
  Return(v45)

blk15:
Statements:
End:
  Goto(blk4, {v46 -> v5})

blk16:
Statements:
End:
  Goto(blk5, {v47 -> v6})

blk17:
Statements:
End:
  Goto(blk7, {v48 -> v24})

blk18:
Statements:
End:
  Goto(blk8, {v49 -> v25})

blk19:
Statements:
End:
  Goto(blk12, {v50 -> v17})

blk20:
Statements:
End:
  Goto(blk13, {v51 -> v18})

//! > ==========================================================================

//! > withdraw_gas

//! > test_runner_name
test_match_optimizer

//! > function
fn foo() {
    gas::withdraw_gas().expect('Out of gas');
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > before
Parameters:
blk0 (root):
Statements:
End:
  Match(match core::gas::withdraw_gas() {
    Option::Some => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
  (v0: ()) <- struct_construct()
  (v1: core::option::Option::<()>) <- Option::Some(v0)
End:
  Goto(blk3, {v1 -> v4})

blk2:
Statements:
  (v2: ()) <- struct_construct()
  (v3: core::option::Option::<()>) <- Option::None(v2)
End:
  Goto(blk3, {v3 -> v4})

blk3:
Statements:
End:
  Match(match_enum(v4) {
    Option::Some(v8) => blk4,
    Option::None(v9) => blk5,
  })

blk4:
Statements:
End:
  Goto(blk8, {})

blk5:
Statements:
  (v25: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
  (v5: core::felt252) <- 375233589013918064796019
  (v26: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v25, v5)
  (v22: core::panics::Panic) <- struct_construct()
  (v23: (core::panics::Panic, core::array::Array::<core::felt252>)) <- struct_construct(v22, v26)
  (v24: core::panics::PanicResult::<(core::never,)>) <- PanicResult::Err(v23)
End:
  Match(match_enum(v24) {
    PanicResult::Ok(v12) => blk6,
    PanicResult::Err(v13) => blk7,
  })

blk6:
Statements:
  (v17: core::never) <- struct_destructure(v12)
End:
  Match(match_enum(v17) {
  })

blk7:
Statements:
  (v18: core::panics::PanicResult::<((),)>) <- PanicResult::Err(v13)
End:
  Goto(blk8, {})

blk8:
Statements:
  (v7: ()) <- struct_construct()
  (v28: ((),)) <- struct_construct(v7)
  (v29: core::panics::PanicResult::<((),)>) <- PanicResult::Ok(v28)
End:
  Return(v29)

//! > after
Parameters:
blk0 (root):
Statements:
End:
  Match(match core::gas::withdraw_gas() {
    Option::Some => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
  (v0: ()) <- struct_construct()
End:
  Goto(blk4, {v0 -> v8})

blk2:
Statements:
  (v2: ()) <- struct_construct()
End:
  Goto(blk5, {v2 -> v9})

blk3:
Statements:
End:
  Match(match_enum(v4) {
    Option::Some(v30) => blk9,
    Option::None(v31) => blk10,
  })

blk4:
Statements:
End:
  Goto(blk8, {})

blk5:
Statements:
  (v25: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
  (v5: core::felt252) <- 375233589013918064796019
  (v26: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v25, v5)
  (v22: core::panics::Panic) <- struct_construct()
  (v23: (core::panics::Panic, core::array::Array::<core::felt252>)) <- struct_construct(v22, v26)
End:
  Goto(blk7, {v23 -> v13})

blk6:
Statements:
  (v17: core::never) <- struct_destructure(v12)
End:
  Match(match_enum(v17) {
  })

blk7:
Statements:
  (v18: core::panics::PanicResult::<((),)>) <- PanicResult::Err(v13)
End:
  Goto(blk8, {})

blk8:
Statements:
  (v7: ()) <- struct_construct()
  (v28: ((),)) <- struct_construct(v7)
  (v29: core::panics::PanicResult::<((),)>) <- PanicResult::Ok(v28)
End:
  Return(v29)

blk9:
Statements:
End:
  Goto(blk4, {v30 -> v8})

blk10:
Statements:
End:
  Goto(blk5, {v31 -> v9})

//! > ==========================================================================

//! > Convergence after the optimization is applied to one arm.

//! > test_runner_name
test_match_optimizer

//! > function
fn foo(a: MyEnum) -> u32 {
    let b = match a {
       MyEnum::A(_) => MyEnum::A(5),
       MyEnum::B(_) => a,
    };

    match b {
       MyEnum::A(x) => x,
       MyEnum::B(x) => x,
    }
}

//! > function_name
foo

//! > module_code
#[derive(Copy, Drop)]
enum MyEnum {
    A: u32,
    B: u32,
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > before
Parameters: v0: test::MyEnum
blk0 (root):
Statements:
End:
  Match(match_enum(v0) {
    MyEnum::A(v1) => blk1,
    MyEnum::B(v2) => blk2,
  })

blk1:
Statements:
  (v3: core::integer::u32) <- 5
  (v4: test::MyEnum) <- MyEnum::A(v3)
End:
  Goto(blk3, {v4 -> v5})

blk2:
Statements:
End:
  Goto(blk3, {v0 -> v5})

blk3:
Statements:
End:
  Match(match_enum(v5) {
    MyEnum::A(v6) => blk4,
    MyEnum::B(v7) => blk5,
  })

blk4:
Statements:
End:
  Goto(blk6, {v6 -> v8})

blk5:
Statements:
End:
  Goto(blk6, {v7 -> v8})

blk6:
Statements:
End:
  Return(v8)

//! > after
Parameters: v0: test::MyEnum
blk0 (root):
Statements:
End:
  Match(match_enum(v0) {
    MyEnum::A(v1) => blk1,
    MyEnum::B(v2) => blk2,
  })

blk1:
Statements:
  (v3: core::integer::u32) <- 5
End:
  Goto(blk4, {v3 -> v6})

blk2:
Statements:
End:
  Goto(blk3, {v0 -> v5})

blk3:
Statements:
End:
  Match(match_enum(v5) {
    MyEnum::A(v9) => blk7,
    MyEnum::B(v7) => blk5,
  })

blk4:
Statements:
End:
  Goto(blk6, {v6 -> v8})

blk5:
Statements:
End:
  Goto(blk6, {v7 -> v8})

blk6:
Statements:
End:
  Return(v8)

blk7:
Statements:
End:
  Goto(blk4, {v9 -> v6})
