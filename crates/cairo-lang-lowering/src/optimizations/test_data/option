//! > Test match optimizer simple scenario.

//! > test_runner_name
test_match_optimizer

//! > function
fn foo() -> Option<u16> {
   let v = get_option();
   match v {
        Option::Some(_) => Option::Some(1_u16),
        Option::None(_) => Option::None(()),
   }
}

//! > function_name
foo

//! > module_code
extern fn get_option() -> Option<u16> nopanic;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > before
Parameters:
blk0 (root):
Statements:
End:
  Match(match test::get_option() {
    Option::Some(v0) => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
  (v1: core::option::Option::<core::integer::u16>) <- Option::Some(v0)
End:
  Goto(blk3, {v1 -> v4})

blk2:
Statements:
  (v2: ()) <- struct_construct()
  (v3: core::option::Option::<core::integer::u16>) <- Option::None(v2)
End:
  Goto(blk3, {v3 -> v4})

blk3:
Statements:
End:
  Match(match_enum(v4) {
    Option::Some(v5) => blk4,
    Option::None(v8) => blk5,
  })

blk4:
Statements:
  (v6: core::integer::u16) <- 1u
  (v7: core::option::Option::<core::integer::u16>) <- Option::Some(v6)
End:
  Goto(blk6, {v7 -> v11})

blk5:
Statements:
  (v9: ()) <- struct_construct()
  (v10: core::option::Option::<core::integer::u16>) <- Option::None(v9)
End:
  Goto(blk6, {v10 -> v11})

blk6:
Statements:
End:
  Return(v11)

//! > after
Parameters:
blk0 (root):
Statements:
End:
  Match(match test::get_option() {
    Option::Some(v0) => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
End:
  Goto(blk4, {})

blk2:
Statements:
  (v2: ()) <- struct_construct()
End:
  Goto(blk5, {})

blk3:
Statements:
End:
  Match(match_enum(v4) {
    Option::Some(v5) => blk4,
    Option::None(v8) => blk5,
  })

blk4:
Statements:
  (v6: core::integer::u16) <- 1u
  (v7: core::option::Option::<core::integer::u16>) <- Option::Some(v6)
End:
  Goto(blk6, {v7 -> v11})

blk5:
Statements:
  (v9: ()) <- struct_construct()
  (v10: core::option::Option::<core::integer::u16>) <- Option::None(v9)
End:
  Goto(blk6, {v10 -> v11})

blk6:
Statements:
End:
  Return(v11)

//! > ==========================================================================

//! > Test skipping of match optimization.

//! > test_runner_name
test_match_optimizer

//! > function
fn foo(a: felt252) -> Option<u16> {
   let v = get_option();

   // The following instruction should block the optimization.
   let a = a + a;
   let v1 = match v {
        Option::Some(_) => Option::Some(1_u16),
        Option::None(_) => Option::None(()),
   };
   match v1 {
        // v1 is used after the match.
        Option::Some(_) => v1,
        Option::None(_) => Option::Some(2_u16),
   }
}

//! > function_name
foo

//! > module_code
use integer::u16Copy;
use integer::u16Drop;
use option::OptionCopy;
use option::OptionDrop;
extern fn get_option() -> Option<u16> nopanic;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > before
Parameters: v0: core::felt252
blk0 (root):
Statements:
End:
  Match(match test::get_option() {
    Option::Some(v1) => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
  (v2: core::option::Option::<core::integer::u16>) <- Option::Some(v1)
End:
  Goto(blk3, {v2 -> v5})

blk2:
Statements:
  (v3: ()) <- struct_construct()
  (v4: core::option::Option::<core::integer::u16>) <- Option::None(v3)
End:
  Goto(blk3, {v4 -> v5})

blk3:
Statements:
  (v19: core::felt252) <- core::felt252_add(v0, v0)
End:
  Goto(blk4, {})

blk4:
Statements:
End:
  Match(match_enum(v5) {
    Option::Some(v7) => blk5,
    Option::None(v10) => blk6,
  })

blk5:
Statements:
  (v8: core::integer::u16) <- 1u
  (v9: core::option::Option::<core::integer::u16>) <- Option::Some(v8)
End:
  Goto(blk7, {v9 -> v13})

blk6:
Statements:
  (v11: ()) <- struct_construct()
  (v12: core::option::Option::<core::integer::u16>) <- Option::None(v11)
End:
  Goto(blk7, {v12 -> v13})

blk7:
Statements:
End:
  Match(match_enum(v13) {
    Option::Some(v14) => blk8,
    Option::None(v15) => blk9,
  })

blk8:
Statements:
End:
  Goto(blk10, {v13 -> v18})

blk9:
Statements:
  (v16: core::integer::u16) <- 2u
  (v17: core::option::Option::<core::integer::u16>) <- Option::Some(v16)
End:
  Goto(blk10, {v17 -> v18})

blk10:
Statements:
End:
  Return(v18)

//! > after
Parameters: v0: core::felt252
blk0 (root):
Statements:
End:
  Match(match test::get_option() {
    Option::Some(v1) => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
  (v2: core::option::Option::<core::integer::u16>) <- Option::Some(v1)
End:
  Goto(blk3, {v2 -> v5})

blk2:
Statements:
  (v3: ()) <- struct_construct()
  (v4: core::option::Option::<core::integer::u16>) <- Option::None(v3)
End:
  Goto(blk3, {v4 -> v5})

blk3:
Statements:
  (v19: core::felt252) <- core::felt252_add(v0, v0)
End:
  Goto(blk4, {})

blk4:
Statements:
End:
  Match(match_enum(v5) {
    Option::Some(v7) => blk5,
    Option::None(v10) => blk6,
  })

blk5:
Statements:
  (v8: core::integer::u16) <- 1u
  (v9: core::option::Option::<core::integer::u16>) <- Option::Some(v8)
End:
  Goto(blk7, {v9 -> v13})

blk6:
Statements:
  (v11: ()) <- struct_construct()
  (v12: core::option::Option::<core::integer::u16>) <- Option::None(v11)
End:
  Goto(blk7, {v12 -> v13})

blk7:
Statements:
End:
  Match(match_enum(v13) {
    Option::Some(v14) => blk8,
    Option::None(v15) => blk9,
  })

blk8:
Statements:
End:
  Goto(blk10, {v13 -> v18})

blk9:
Statements:
  (v16: core::integer::u16) <- 2u
  (v17: core::option::Option::<core::integer::u16>) <- Option::Some(v16)
End:
  Goto(blk10, {v17 -> v18})

blk10:
Statements:
End:
  Return(v18)

//! > ==========================================================================

//! > Test two matches.

//! > test_runner_name
test_match_optimizer

//! > function
fn foo() -> felt252 {
   let opt = get_option();
   match opt {
      Option::Some(x) => Option::Some(x + 3),
      Option::None(()) => Option::None(())
   }.unwrap()
}

//! > function_name
foo

//! > module_code
use option::OptionTrait;
extern fn get_option() -> Option<felt252> nopanic;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > before
Parameters:
blk0 (root):
Statements:
End:
  Match(match test::get_option() {
    Option::Some(v0) => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
  (v1: core::option::Option::<core::felt252>) <- Option::Some(v0)
End:
  Goto(blk3, {v1 -> v4})

blk2:
Statements:
  (v2: ()) <- struct_construct()
  (v3: core::option::Option::<core::felt252>) <- Option::None(v2)
End:
  Goto(blk3, {v3 -> v4})

blk3:
Statements:
End:
  Match(match_enum(v4) {
    Option::Some(v5) => blk4,
    Option::None(v9) => blk6,
  })

blk4:
Statements:
  (v6: core::felt252) <- 3u
  (v21: core::felt252) <- core::felt252_add(v5, v6)
End:
  Goto(blk5, {})

blk5:
Statements:
  (v8: core::option::Option::<core::felt252>) <- Option::Some(v21)
End:
  Goto(blk7, {v8 -> v12})

blk6:
Statements:
  () <- struct_destructure(v9)
  (v10: ()) <- struct_construct()
  (v11: core::option::Option::<core::felt252>) <- Option::None(v10)
End:
  Goto(blk7, {v11 -> v12})

blk7:
Statements:
End:
  Match(match_enum(v12) {
    Option::Some(v31) => blk8,
    Option::None(v32) => blk10,
  })

blk8:
Statements:
End:
  Goto(blk9, {})

blk9:
Statements:
  (v37: (core::felt252,)) <- struct_construct(v31)
  (v38: core::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v37)
End:
  Goto(blk17, {v38 -> v23})

blk10:
Statements:
  (v46: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
End:
  Goto(blk11, {})

blk11:
Statements:
  (v22: core::felt252) <- 29721761890975875353235833581453094220424382983267374u
  (v47: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v46, v22)
End:
  Goto(blk12, {})

blk12:
Statements:
  (v45: core::PanicResult::<(core::never,)>) <- PanicResult::Err(v47)
End:
  Goto(blk13, {})

blk13:
Statements:
End:
  Match(match_enum(v45) {
    PanicResult::Ok(v35) => blk14,
    PanicResult::Err(v36) => blk16,
  })

blk14:
Statements:
  (v40: core::never) <- struct_destructure(v35)
End:
  Goto(blk15, {})

blk15:
Statements:
End:
  Match(match_enum(v40) {
  })

blk16:
Statements:
  (v41: core::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v36)
End:
  Goto(blk17, {v41 -> v23})

blk17:
Statements:
End:
  Match(match_enum(v23) {
    PanicResult::Ok(v24) => blk18,
    PanicResult::Err(v25) => blk20,
  })

blk18:
Statements:
  (v29: core::felt252) <- struct_destructure(v24)
End:
  Goto(blk19, {})

blk19:
Statements:
  (v27: (core::felt252,)) <- struct_construct(v29)
  (v28: core::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v27)
End:
  Goto(blk21, {v28 -> v14})

blk20:
Statements:
  (v30: core::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v25)
End:
  Goto(blk21, {v30 -> v14})

blk21:
Statements:
End:
  Match(match_enum(v14) {
    PanicResult::Ok(v15) => blk22,
    PanicResult::Err(v17) => blk24,
  })

blk22:
Statements:
  (v16: core::felt252) <- struct_destructure(v15)
End:
  Goto(blk23, {})

blk23:
Statements:
  (v18: (core::felt252,)) <- struct_construct(v16)
  (v19: core::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v18)
End:
  Return(v19)

blk24:
Statements:
  (v20: core::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v17)
End:
  Return(v20)

//! > after
Parameters:
blk0 (root):
Statements:
End:
  Match(match test::get_option() {
    Option::Some(v0) => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
End:
  Goto(blk4, {v0 -> v5})

blk2:
Statements:
  (v2: ()) <- struct_construct()
End:
  Goto(blk6, {v2 -> v9})

blk3:
Statements:
End:
  Match(match_enum(v4) {
    Option::Some(v5) => blk4,
    Option::None(v9) => blk6,
  })

blk4:
Statements:
  (v6: core::felt252) <- 3u
  (v21: core::felt252) <- core::felt252_add(v5, v6)
End:
  Goto(blk5, {})

blk5:
Statements:
End:
  Goto(blk8, {v21 -> v31})

blk6:
Statements:
  () <- struct_destructure(v9)
  (v10: ()) <- struct_construct()
End:
  Goto(blk10, {})

blk7:
Statements:
End:
  Match(match_enum(v12) {
    Option::Some(v31) => blk8,
    Option::None(v32) => blk10,
  })

blk8:
Statements:
End:
  Goto(blk9, {})

blk9:
Statements:
  (v37: (core::felt252,)) <- struct_construct(v31)
End:
  Goto(blk18, {v37 -> v24})

blk10:
Statements:
  (v46: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
End:
  Goto(blk11, {})

blk11:
Statements:
  (v22: core::felt252) <- 29721761890975875353235833581453094220424382983267374u
  (v47: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v46, v22)
End:
  Goto(blk12, {})

blk12:
Statements:
End:
  Goto(blk16, {v47 -> v36})

blk13:
Statements:
End:
  Match(match_enum(v45) {
    PanicResult::Ok(v35) => blk14,
    PanicResult::Err(v36) => blk16,
  })

blk14:
Statements:
  (v40: core::never) <- struct_destructure(v35)
End:
  Goto(blk15, {})

blk15:
Statements:
End:
  Match(match_enum(v40) {
  })

blk16:
Statements:
End:
  Goto(blk20, {v36 -> v25})

blk17:
Statements:
End:
  Match(match_enum(v23) {
    PanicResult::Ok(v24) => blk18,
    PanicResult::Err(v25) => blk20,
  })

blk18:
Statements:
  (v29: core::felt252) <- struct_destructure(v24)
End:
  Goto(blk19, {})

blk19:
Statements:
  (v27: (core::felt252,)) <- struct_construct(v29)
End:
  Goto(blk22, {v27 -> v15})

blk20:
Statements:
End:
  Goto(blk24, {v25 -> v17})

blk21:
Statements:
End:
  Match(match_enum(v14) {
    PanicResult::Ok(v15) => blk22,
    PanicResult::Err(v17) => blk24,
  })

blk22:
Statements:
  (v16: core::felt252) <- struct_destructure(v15)
End:
  Goto(blk23, {})

blk23:
Statements:
  (v18: (core::felt252,)) <- struct_construct(v16)
  (v19: core::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v18)
End:
  Return(v19)

blk24:
Statements:
  (v20: core::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v17)
End:
  Return(v20)

//! > ==========================================================================

//! > withdraw_gas

//! > test_runner_name
test_match_optimizer

//! > function
fn foo() {
    gas::withdraw_gas().expect('Out of gas');
}

//! > function_name
foo

//! > module_code
use option::OptionTrait;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > before
Parameters:
blk0 (root):
Statements:
End:
  Match(match core::gas::withdraw_gas() {
    Option::Some => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
  (v0: ()) <- struct_construct()
  (v1: core::option::Option::<()>) <- Option::Some(v0)
End:
  Goto(blk3, {v1 -> v4})

blk2:
Statements:
  (v2: ()) <- struct_construct()
  (v3: core::option::Option::<()>) <- Option::None(v2)
End:
  Goto(blk3, {v3 -> v4})

blk3:
Statements:
End:
  Match(match_enum(v4) {
    Option::Some(v15) => blk4,
    Option::None(v16) => blk6,
  })

blk4:
Statements:
End:
  Goto(blk5, {})

blk5:
Statements:
  (v21: ((),)) <- struct_construct(v15)
  (v22: core::PanicResult::<((),)>) <- PanicResult::Ok(v21)
End:
  Goto(blk13, {v22 -> v8})

blk6:
Statements:
  (v30: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
End:
  Goto(blk7, {})

blk7:
Statements:
  (v5: core::felt252) <- 375233589013918064796019u
  (v31: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v30, v5)
End:
  Goto(blk8, {})

blk8:
Statements:
  (v29: core::PanicResult::<(core::never,)>) <- PanicResult::Err(v31)
End:
  Goto(blk9, {})

blk9:
Statements:
End:
  Match(match_enum(v29) {
    PanicResult::Ok(v19) => blk10,
    PanicResult::Err(v20) => blk12,
  })

blk10:
Statements:
  (v24: core::never) <- struct_destructure(v19)
End:
  Goto(blk11, {})

blk11:
Statements:
End:
  Match(match_enum(v24) {
  })

blk12:
Statements:
  (v25: core::PanicResult::<((),)>) <- PanicResult::Err(v20)
End:
  Goto(blk13, {v25 -> v8})

blk13:
Statements:
End:
  Match(match_enum(v8) {
    PanicResult::Ok(v9) => blk14,
    PanicResult::Err(v11) => blk16,
  })

blk14:
Statements:
  (v10: ()) <- struct_destructure(v9)
End:
  Goto(blk15, {})

blk15:
Statements:
  (v7: ()) <- struct_construct()
  (v12: ((),)) <- struct_construct(v7)
  (v13: core::PanicResult::<((),)>) <- PanicResult::Ok(v12)
End:
  Return(v13)

blk16:
Statements:
  (v14: core::PanicResult::<((),)>) <- PanicResult::Err(v11)
End:
  Return(v14)

//! > after
Parameters:
blk0 (root):
Statements:
End:
  Match(match core::gas::withdraw_gas() {
    Option::Some => blk1,
    Option::None => blk2,
  })

blk1:
Statements:
  (v0: ()) <- struct_construct()
End:
  Goto(blk4, {v0 -> v15})

blk2:
Statements:
  (v2: ()) <- struct_construct()
End:
  Goto(blk6, {})

blk3:
Statements:
End:
  Match(match_enum(v4) {
    Option::Some(v15) => blk4,
    Option::None(v16) => blk6,
  })

blk4:
Statements:
End:
  Goto(blk5, {})

blk5:
Statements:
  (v21: ((),)) <- struct_construct(v15)
End:
  Goto(blk14, {v21 -> v9})

blk6:
Statements:
  (v30: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
End:
  Goto(blk7, {})

blk7:
Statements:
  (v5: core::felt252) <- 375233589013918064796019u
  (v31: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v30, v5)
End:
  Goto(blk8, {})

blk8:
Statements:
End:
  Goto(blk12, {v31 -> v20})

blk9:
Statements:
End:
  Match(match_enum(v29) {
    PanicResult::Ok(v19) => blk10,
    PanicResult::Err(v20) => blk12,
  })

blk10:
Statements:
  (v24: core::never) <- struct_destructure(v19)
End:
  Goto(blk11, {})

blk11:
Statements:
End:
  Match(match_enum(v24) {
  })

blk12:
Statements:
End:
  Goto(blk16, {v20 -> v11})

blk13:
Statements:
End:
  Match(match_enum(v8) {
    PanicResult::Ok(v9) => blk14,
    PanicResult::Err(v11) => blk16,
  })

blk14:
Statements:
  (v10: ()) <- struct_destructure(v9)
End:
  Goto(blk15, {})

blk15:
Statements:
  (v7: ()) <- struct_construct()
  (v12: ((),)) <- struct_construct(v7)
  (v13: core::PanicResult::<((),)>) <- PanicResult::Ok(v12)
End:
  Return(v13)

blk16:
Statements:
  (v14: core::PanicResult::<((),)>) <- PanicResult::Err(v11)
End:
  Return(v14)
