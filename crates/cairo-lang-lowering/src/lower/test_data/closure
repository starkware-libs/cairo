//! > Test closure with Destruct.

//! > test_runner_name
test_generated_function

//! > function
fn foo(a: Felt252Dict<felt252>) {
    || {
        let _ = a;
    };
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering
Main:
Parameters: v0: core::dict::Felt252Dict::<core::felt252>
blk0 (root):
Statements:
  (v1: {closure@lib.cairo:2:5: 2:7}) <- struct_construct(v0)
  (v2: ()) <- struct_construct()
End:
  Return(v2)


Final lowering:
Parameters: v0: core::RangeCheck, v1: core::SegmentArena, v2: core::gas::GasBuiltin, v3: core::dict::Felt252Dict::<core::felt252>
blk0 (root):
Statements:
  (v4: core::RangeCheck, v5: core::SegmentArena, v6: core::gas::GasBuiltin, v7: core::dict::SquashedFelt252Dict::<core::felt252>) <- core::dict::Felt252DictImpl::<core::felt252, core::Felt252Felt252DictValue>::squash(v0, v1, v2, v3)
End:
  Return(v4, v5, v6)


Generated core::traits::Destruct::destruct lowering for source location:
    || {
    ^^

Parameters: v0: {closure@lib.cairo:2:5: 2:7}
blk0 (root):
Statements:
  (v1: core::dict::Felt252Dict::<core::felt252>) <- struct_destructure(v0)
  (v2: ()) <- struct_construct()
End:
  Return(v2)


Final lowering:
Parameters: v0: core::RangeCheck, v1: core::SegmentArena, v2: core::gas::GasBuiltin, v3: {closure@lib.cairo:2:5: 2:7}
blk0 (root):
Statements:
  (v4: core::dict::Felt252Dict::<core::felt252>) <- struct_destructure(v3)
  (v5: core::RangeCheck, v6: core::SegmentArena, v7: core::gas::GasBuiltin, v8: core::dict::SquashedFelt252Dict::<core::felt252>) <- core::dict::Felt252DictImpl::<core::felt252, core::Felt252Felt252DictValue>::squash(v0, v1, v2, v4)
End:
  Return(v5, v6, v7)


Generated core::ops::function::FnOnce::call lowering for source location:
    || {
    ^^

Parameters: v0: {closure@lib.cairo:2:5: 2:7}, v1: ()
blk0 (root):
Statements:
  (v2: core::dict::Felt252Dict::<core::felt252>) <- struct_destructure(v0)
  () <- struct_destructure(v1)
  (v3: ()) <- struct_construct()
End:
  Return(v3)


Final lowering:
Parameters: v0: core::RangeCheck, v1: core::SegmentArena, v2: core::gas::GasBuiltin, v3: {closure@lib.cairo:2:5: 2:7}, v4: ()
blk0 (root):
Statements:
  (v5: core::dict::Felt252Dict::<core::felt252>) <- struct_destructure(v3)
  (v6: core::RangeCheck, v7: core::SegmentArena, v8: core::gas::GasBuiltin, v9: core::dict::SquashedFelt252Dict::<core::felt252>) <- core::dict::Felt252DictImpl::<core::felt252, core::Felt252Felt252DictValue>::squash(v0, v1, v2, v5)
End:
  Return(v6, v7, v8)

//! > ==========================================================================

//! > Test closure with PanicDestruct.

//! > test_runner_name
test_generated_function

//! > function
fn foo(a: PanicDestructable) {
    || {
        let PanicDestructable { } = a;
    };
    panic!("Panic");
}

//! > function_name
foo

//! > module_code
struct PanicDestructable {}

impl MyPanicDesruct of PanicDestruct<PanicDestructable> {
    // Disable inlining to see the panic_destruct call in the lowering output.
    #[inline(never)]
    fn panic_destruct(self: PanicDestructable, ref panic: Panic) nopanic {
        let PanicDestructable { } = self;
    }
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering
Main:
Parameters: v0: test::PanicDestructable
blk0 (root):
Statements:
  (v1: {closure@lib.cairo:11:5: 11:7}) <- struct_construct(v0)
  (v2: core::array::Array::<core::felt252>) <- core::array::ArrayImpl::<core::felt252>::new()
  (v3: core::felt252) <- 1997209042069643135709344952807065910992472029923670688473712229447419591075
  (v5: core::array::Array::<core::felt252>, v4: ()) <- core::array::ArrayImpl::<core::felt252>::append(v2, v3)
  (v6: core::felt252) <- 0
  (v8: core::array::Array::<core::felt252>, v7: ()) <- core::array::ArrayImpl::<core::felt252>::append(v5, v6)
  (v9: core::felt252) <- 345232009571
  (v11: core::array::Array::<core::felt252>, v10: ()) <- core::array::ArrayImpl::<core::felt252>::append(v8, v9)
  (v12: core::felt252) <- 5
  (v14: core::array::Array::<core::felt252>, v13: ()) <- core::array::ArrayImpl::<core::felt252>::append(v11, v12)
  (v15: core::panics::Panic) <- struct_construct()
  (v16: (core::panics::Panic, core::array::Array::<core::felt252>)) <- struct_construct(v15, v14)
End:
  Panic(v16)


Final lowering:
Parameters: v0: test::PanicDestructable
blk0 (root):
Statements:
  (v1: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
  (v2: core::felt252) <- 1997209042069643135709344952807065910992472029923670688473712229447419591075
  (v3: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v1, v2)
  (v4: core::felt252) <- 0
  (v5: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v3, v4)
  (v6: core::felt252) <- 345232009571
  (v7: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v5, v6)
  (v8: core::felt252) <- 5
  (v9: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v7, v8)
  (v10: core::panics::Panic) <- struct_construct()
  (v11: core::panics::Panic) <- test::MyPanicDesruct::panic_destruct(v0, v10)
  (v12: (core::panics::Panic, core::array::Array::<core::felt252>)) <- struct_construct(v11, v9)
  (v13: core::panics::PanicResult::<((),)>) <- PanicResult::Err(v12)
End:
  Return(v13)


Generated core::traits::PanicDestruct::panic_destruct lowering for source location:
    || {
    ^^

Parameters: v0: {closure@lib.cairo:11:5: 11:7}, v1: core::panics::Panic
blk0 (root):
Statements:
  (v2: test::PanicDestructable) <- struct_destructure(v0)
  (v3: ()) <- struct_construct()
End:
  Return(v1, v3)


Final lowering:
Parameters: v0: {closure@lib.cairo:11:5: 11:7}, v1: core::panics::Panic
blk0 (root):
Statements:
  (v2: test::PanicDestructable) <- struct_destructure(v0)
  (v3: core::panics::Panic) <- test::MyPanicDesruct::panic_destruct(v2, v1)
End:
  Return(v3)


Generated core::ops::function::FnOnce::call lowering for source location:
    || {
    ^^

Parameters: v0: {closure@lib.cairo:11:5: 11:7}, v1: ()
blk0 (root):
Statements:
  (v2: test::PanicDestructable) <- struct_destructure(v0)
  () <- struct_destructure(v1)
  () <- struct_destructure(v2)
  (v3: ()) <- struct_construct()
End:
  Return(v3)


Final lowering:
Parameters: v0: {closure@lib.cairo:11:5: 11:7}, v1: ()
blk0 (root):
Statements:
End:
  Return()

//! > ==========================================================================

//! > Test closure with copy.

//! > test_runner_name
test_generated_function

//! > function
fn foo(a: u32) {
    let c = || a;
    identity(c);
    identity(c);
}

//! > function_name
foo

//! > module_code
#[inline(never)]
fn identity<T>(t: T) -> T {
    t
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering
Main:
Parameters: v0: core::integer::u32
blk0 (root):
Statements:
  (v1: {closure@lib.cairo:6:13: 6:15}) <- struct_construct(v0)
  (v2: {closure@lib.cairo:6:13: 6:15}) <- test::identity::<{closure@lib.cairo:6:13: 6:15}>(v1)
  (v3: {closure@lib.cairo:6:13: 6:15}) <- test::identity::<{closure@lib.cairo:6:13: 6:15}>(v1)
  (v4: ()) <- struct_construct()
End:
  Return(v4)


Final lowering:
Parameters: v0: core::integer::u32
blk0 (root):
Statements:
  (v1: {closure@lib.cairo:6:13: 6:15}) <- struct_construct(v0)
  (v2: {closure@lib.cairo:6:13: 6:15}) <- test::identity::<{closure@lib.cairo:6:13: 6:15}>(v1)
  (v3: {closure@lib.cairo:6:13: 6:15}) <- test::identity::<{closure@lib.cairo:6:13: 6:15}>(v1)
End:
  Return()


Generated core::traits::Destruct::destruct lowering for source location:
    let c = || a;
            ^^

Parameters: v0: {closure@lib.cairo:6:13: 6:15}
blk0 (root):
Statements:
  (v1: core::integer::u32) <- struct_destructure(v0)
  (v2: ()) <- struct_construct()
End:
  Return(v2)


Final lowering:
Parameters: v0: {closure@lib.cairo:6:13: 6:15}
blk0 (root):
Statements:
End:
  Return()


Generated core::ops::function::Fn::call lowering for source location:
    let c = || a;
            ^^

Parameters: v0: @{closure@lib.cairo:6:13: 6:15}, v2: ()
blk0 (root):
Statements:
  (v1: {closure@lib.cairo:6:13: 6:15}) <- desnap(v0)
  (v3: core::integer::u32) <- struct_destructure(v1)
  () <- struct_destructure(v2)
End:
  Return(v3)


Final lowering:
Parameters: v0: @{closure@lib.cairo:6:13: 6:15}, v1: ()
blk0 (root):
Statements:
  (v2: {closure@lib.cairo:6:13: 6:15}) <- desnap(v0)
  (v3: core::integer::u32) <- struct_destructure(v2)
End:
  Return(v3)

//! > ==========================================================================

//! > Test closure with branching.

//! > test_runner_name
test_generated_function

//! > function
fn foo(a: u32) {
    let f = |a: felt252| {
        let mut b = @0;
        if 1 == 2 {
            b = @a;
        } else {
            b = @a;
        }
    };
    let _ = f(0);
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering
Main:
Parameters: v0: core::integer::u32
blk0 (root):
Statements:
  (v1: {closure@lib.cairo:2:13: 2:25}) <- struct_construct()
  (v2: {closure@lib.cairo:2:13: 2:25}, v3: @{closure@lib.cairo:2:13: 2:25}) <- snapshot(v1)
  (v4: core::felt252) <- 0
  (v5: (core::felt252,)) <- struct_construct(v4)
  (v6: ()) <- Generated `core::ops::function::Fn::call` for {closure@lib.cairo:2:13: 2:25}(v3, v5)
  (v7: ()) <- struct_construct()
End:
  Return(v7)


Final lowering:
Parameters: v0: core::integer::u32
blk0 (root):
Statements:
  (v1: core::felt252) <- 1
  (v2: core::felt252) <- 2
  (v3: core::felt252) <- core::felt252_sub(v1, v2)
End:
  Match(match core::felt252_is_zero(v3) {
    IsZeroResult::Zero => blk1,
    IsZeroResult::NonZero(v4) => blk2,
  })

blk1:
Statements:
End:
  Return()

blk2:
Statements:
End:
  Return()


Generated core::traits::Destruct::destruct lowering for source location:
    let f = |a: felt252| {
            ^^^^^^^^^^^^

Parameters: v0: {closure@lib.cairo:2:13: 2:25}
blk0 (root):
Statements:
  () <- struct_destructure(v0)
  (v1: ()) <- struct_construct()
End:
  Return(v1)


Final lowering:
Parameters: v0: {closure@lib.cairo:2:13: 2:25}
blk0 (root):
Statements:
End:
  Return()


Generated core::ops::function::Fn::call lowering for source location:
    let f = |a: felt252| {
            ^^^^^^^^^^^^

Parameters: v0: @{closure@lib.cairo:2:13: 2:25}, v2: (core::felt252,)
blk0 (root):
Statements:
  (v1: {closure@lib.cairo:2:13: 2:25}) <- desnap(v0)
  () <- struct_destructure(v1)
  (v3: core::felt252) <- struct_destructure(v2)
  (v4: core::felt252) <- 0
  (v5: core::felt252, v6: @core::felt252) <- snapshot(v4)
  (v7: core::felt252) <- 1
  (v8: core::felt252, v9: @core::felt252) <- snapshot(v7)
  (v10: core::felt252) <- 2
  (v11: core::felt252, v12: @core::felt252) <- snapshot(v10)
  (v13: core::bool) <- core::Felt252PartialEq::eq(v9, v12)
End:
  Match(match_enum(v13) {
    bool::False(v17) => blk2,
    bool::True(v14) => blk1,
  })

blk1:
Statements:
  (v15: core::felt252, v16: @core::felt252) <- snapshot(v3)
End:
  Goto(blk3, {v15 -> v20, v16 -> v21})

blk2:
Statements:
  (v18: core::felt252, v19: @core::felt252) <- snapshot(v3)
End:
  Goto(blk3, {v18 -> v20, v19 -> v21})

blk3:
Statements:
  (v22: ()) <- struct_construct()
End:
  Return(v22)


Final lowering:
Parameters: v0: @{closure@lib.cairo:2:13: 2:25}, v1: (core::felt252,)
blk0 (root):
Statements:
  (v2: core::felt252) <- 1
  (v3: core::felt252) <- 2
  (v4: core::felt252) <- core::felt252_sub(v2, v3)
End:
  Match(match core::felt252_is_zero(v4) {
    IsZeroResult::Zero => blk1,
    IsZeroResult::NonZero(v5) => blk2,
  })

blk1:
Statements:
End:
  Return()

blk2:
Statements:
End:
  Return()

//! > ==========================================================================

//! > Test passing non-inlined closure to a generic function.

//! > test_runner_name
test_generated_function

//! > function
fn foo() {
    let uninlined_closure = |mut a| {
        // Making sure the closure is long enough to not be inlined.
        a += a + a + a + a + a;
        a += a + a + a + a + a;
        a += a + a + a + a + a;
        a += a + a + a + a + a;
        a += a + a + a + a + a;
        return a;
    };

    // Call the function which applies the closure.
    apply(uninlined_closure);
}

//! > function_name
foo

//! > module_code
fn apply<F, +Drop<F>, impl func: core::ops::FnOnce<F, (felt252,)>, +Drop<func::Output>>(f: F) {
    f(2);
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering
Main:
Parameters:
blk0 (root):
Statements:
  (v0: {closure@lib.cairo:5:29: 5:36}) <- struct_construct()
  (v1: ()) <- test::apply::<{closure@lib.cairo:5:29: 5:36}, Generated core::traits::Drop::<{closure@lib.cairo:5:29: 5:36}>, core::ops::function::FnOnceImpl::<{closure@lib.cairo:5:29: 5:36}, (core::felt252,), core::traits::DestructFromDrop::<{closure@lib.cairo:5:29: 5:36}, Generated core::traits::Drop::<{closure@lib.cairo:5:29: 5:36}>>, Generated core::ops::function::Fn::<{closure@lib.cairo:5:29: 5:36}, (core::felt252,)>>, core::felt252Drop>(v0)
  (v2: ()) <- struct_construct()
End:
  Return(v2)


Final lowering:
Parameters:
blk0 (root):
Statements:
  (v0: core::felt252) <- 2
  (v1: {closure@lib.cairo:5:29: 5:36}) <- struct_construct()
  (v2: {closure@lib.cairo:5:29: 5:36}, v3: @{closure@lib.cairo:5:29: 5:36}) <- snapshot(v1)
  (v4: (core::felt252,)) <- struct_construct(v0)
  (v5: core::felt252) <- Generated `core::ops::function::Fn::call` for {closure@lib.cairo:5:29: 5:36}(v3, v4)
End:
  Return()


Generated core::traits::Destruct::destruct lowering for source location:
    let uninlined_closure = |mut a| {
                            ^^^^^^^

Parameters: v0: {closure@lib.cairo:5:29: 5:36}
blk0 (root):
Statements:
  () <- struct_destructure(v0)
  (v1: ()) <- struct_construct()
End:
  Return(v1)


Final lowering:
Parameters: v0: {closure@lib.cairo:5:29: 5:36}
blk0 (root):
Statements:
End:
  Return()


Generated core::ops::function::Fn::call lowering for source location:
    let uninlined_closure = |mut a| {
                            ^^^^^^^

Parameters: v0: @{closure@lib.cairo:5:29: 5:36}, v2: (core::felt252,)
blk0 (root):
Statements:
  (v1: {closure@lib.cairo:5:29: 5:36}) <- desnap(v0)
  () <- struct_destructure(v1)
  (v3: core::felt252) <- struct_destructure(v2)
  (v4: core::felt252) <- core::Felt252Add::add(v3, v3)
  (v5: core::felt252) <- core::Felt252Add::add(v4, v3)
  (v6: core::felt252) <- core::Felt252Add::add(v5, v3)
  (v7: core::felt252) <- core::Felt252Add::add(v6, v3)
  (v9: core::felt252, v8: ()) <- core::ops::arith::DeprecatedAddAssign::<core::felt252, core::Felt252AddEq>::add_assign(v3, v7)
  (v10: core::felt252) <- core::Felt252Add::add(v9, v9)
  (v11: core::felt252) <- core::Felt252Add::add(v10, v9)
  (v12: core::felt252) <- core::Felt252Add::add(v11, v9)
  (v13: core::felt252) <- core::Felt252Add::add(v12, v9)
  (v15: core::felt252, v14: ()) <- core::ops::arith::DeprecatedAddAssign::<core::felt252, core::Felt252AddEq>::add_assign(v9, v13)
  (v16: core::felt252) <- core::Felt252Add::add(v15, v15)
  (v17: core::felt252) <- core::Felt252Add::add(v16, v15)
  (v18: core::felt252) <- core::Felt252Add::add(v17, v15)
  (v19: core::felt252) <- core::Felt252Add::add(v18, v15)
  (v21: core::felt252, v20: ()) <- core::ops::arith::DeprecatedAddAssign::<core::felt252, core::Felt252AddEq>::add_assign(v15, v19)
  (v22: core::felt252) <- core::Felt252Add::add(v21, v21)
  (v23: core::felt252) <- core::Felt252Add::add(v22, v21)
  (v24: core::felt252) <- core::Felt252Add::add(v23, v21)
  (v25: core::felt252) <- core::Felt252Add::add(v24, v21)
  (v27: core::felt252, v26: ()) <- core::ops::arith::DeprecatedAddAssign::<core::felt252, core::Felt252AddEq>::add_assign(v21, v25)
  (v28: core::felt252) <- core::Felt252Add::add(v27, v27)
  (v29: core::felt252) <- core::Felt252Add::add(v28, v27)
  (v30: core::felt252) <- core::Felt252Add::add(v29, v27)
  (v31: core::felt252) <- core::Felt252Add::add(v30, v27)
  (v33: core::felt252, v32: ()) <- core::ops::arith::DeprecatedAddAssign::<core::felt252, core::Felt252AddEq>::add_assign(v27, v31)
End:
  Return(v33)


Final lowering:
Parameters: v0: @{closure@lib.cairo:5:29: 5:36}, v1: (core::felt252,)
blk0 (root):
Statements:
  (v2: core::felt252) <- struct_destructure(v1)
  (v3: core::felt252) <- core::felt252_add(v2, v2)
  (v4: core::felt252) <- core::felt252_add(v3, v2)
  (v5: core::felt252) <- core::felt252_add(v4, v2)
  (v6: core::felt252) <- core::felt252_add(v5, v2)
  (v7: core::felt252) <- core::felt252_add(v2, v6)
  (v8: core::felt252) <- core::felt252_add(v7, v7)
  (v9: core::felt252) <- core::felt252_add(v8, v7)
  (v10: core::felt252) <- core::felt252_add(v9, v7)
  (v11: core::felt252) <- core::felt252_add(v10, v7)
  (v12: core::felt252) <- core::felt252_add(v7, v11)
  (v13: core::felt252) <- core::felt252_add(v12, v12)
  (v14: core::felt252) <- core::felt252_add(v13, v12)
  (v15: core::felt252) <- core::felt252_add(v14, v12)
  (v16: core::felt252) <- core::felt252_add(v15, v12)
  (v17: core::felt252) <- core::felt252_add(v12, v16)
  (v18: core::felt252) <- core::felt252_add(v17, v17)
  (v19: core::felt252) <- core::felt252_add(v18, v17)
  (v20: core::felt252) <- core::felt252_add(v19, v17)
  (v21: core::felt252) <- core::felt252_add(v20, v17)
  (v22: core::felt252) <- core::felt252_add(v17, v21)
  (v23: core::felt252) <- core::felt252_add(v22, v22)
  (v24: core::felt252) <- core::felt252_add(v23, v22)
  (v25: core::felt252) <- core::felt252_add(v24, v22)
  (v26: core::felt252) <- core::felt252_add(v25, v22)
  (v27: core::felt252) <- core::felt252_add(v22, v26)
End:
  Return(v27)
