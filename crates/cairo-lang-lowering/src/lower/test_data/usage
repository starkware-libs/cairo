//! > Test simple usage.

//! > test_runner_name
test_function_usage

//! > function
fn foo(a: usize, b: usize) {
  a;
  {b;}
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > usage
Block Id { idx: 2 }:
  Usage: ParamId(test::b), 
  Changes: 
  Introductions: 
Block Id { idx: 3 }:
  Usage: ParamId(test::a), ParamId(test::b), 
  Changes: 
  Introductions:

//! > ==========================================================================

//! > Test loop usage

//! > test_runner_name
test_function_usage

//! > function
fn foo(mut a: A, ref b: A) {
  let c = 5_usize;
  loop {
    let mut h = 0;
    a.b.c = c;
    if true {
        h = 1;
        let mut x = 4;
        x = 5;
        b = A { b: a.b };
        break b;
    };
  };
}

//! > function_name
foo

//! > module_code
struct A {
    b: B
}
struct B {
    c: usize,
}

//! > semantic_diagnostics

//! > usage
Block Id { idx: 18 }:
  Usage: ParamId(test::a)::b, ParamId(test::b), 
  Changes: LocalVarId(test::h), ParamId(test::b), 
  Introductions: LocalVarId(test::x), 
Block Id { idx: 20 }:
  Usage: LocalVarId(test::c), ParamId(test::a)::b, ParamId(test::b), 
  Changes: ParamId(test::a)::b::c, ParamId(test::b), 
  Introductions: LocalVarId(test::h), 
Block Id { idx: 22 }:
  Usage: ParamId(test::b), ParamId(test::a)::b, 
  Changes: ParamId(test::a)::b::c, ParamId(test::b), 
  Introductions: LocalVarId(test::c),
