//! > Test loop.

//! > test_runner_name
test_generated_function

//! > function
fn foo() -> bool {
    let mut x = 5;
    loop {
        let y = x + 1;
        x = y;
        if y == 10 {
            break true;
        };
    }
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_flat
Parameters:

//! > lowering
Main:
Parameters:
blk0 (root):
Statements:
  (v0: core::felt252) <- 5u
  (v2: core::felt252, v1: core::bool) <- test::foo[expr17](v0)
End:
  Return(v1)


Final lowering:
Parameters: v11: core::RangeCheck, v12: core::gas::GasBuiltin
blk0 (root):
Statements:
  (v0: core::felt252) <- 5u
  (v13: core::RangeCheck, v14: core::gas::GasBuiltin, v3: core::panics::PanicResult::<(core::felt252, core::bool)>) <- test::foo[expr17](v11, v12, v0)
End:
  Match(match_enum(v3) {
    PanicResult::Ok(v4) => blk1,
    PanicResult::Err(v7) => blk2,
  })

blk1:
Statements:
  (v5: core::felt252, v6: core::bool) <- struct_destructure(v4)
  (v8: (core::bool,)) <- struct_construct(v6)
  (v9: core::panics::PanicResult::<(core::bool,)>) <- PanicResult::Ok(v8)
End:
  Return(v13, v14, v9)

blk2:
Statements:
  (v10: core::panics::PanicResult::<(core::bool,)>) <- PanicResult::Err(v7)
End:
  Return(v13, v14, v10)


Generated lowering for source location:
    loop {
    ^****^

Parameters: v0: core::felt252
blk0 (root):
Statements:
  (v1: core::felt252) <- 1u
  (v2: core::felt252) <- core::Felt252Add::add(v0, v1)
  (v3: core::felt252) <- 10u
  (v4: core::felt252) <- core::Felt252Sub::sub(v2, v3)
End:
  Match(match core::felt252_is_zero(v4) {
    IsZeroResult::Zero => blk1,
    IsZeroResult::NonZero(v7) => blk2,
  })

blk1:
Statements:
  (v5: ()) <- struct_construct()
  (v6: core::bool) <- bool::True(v5)
End:
  Return(v2, v6)

blk2:
Statements:
End:
  Goto(blk3, {})

blk3:
Statements:
  (v9: core::felt252, v8: core::bool) <- test::foo[expr17](v2)
End:
  Return(v9, v8)


Final lowering:
Parameters: v28: core::RangeCheck, v29: core::gas::GasBuiltin, v0: core::felt252
blk0 (root):
Statements:
End:
<<<<<<< HEAD
  Match(match core::gas::withdraw_gas(v28, v29) {
    Option::Some(v30, v31) => blk1,
    Option::None(v32, v33) => blk6,
||||||| 3205b8a81
  Match(match core::gas::withdraw_gas_all(v29, v30, v17) {
    Option::Some(v31, v32) => blk1,
    Option::None(v33, v34) => blk6,
=======
  Match(match core::gas::withdraw_gas_all(v29, v30, v17) {
    Option::Some(v31, v32) => blk1,
    Option::None(v33, v34) => blk4,
>>>>>>> origin/main
  })

blk1:
Statements:
  (v1: core::felt252) <- 1u
  (v10: core::felt252) <- core::felt252_add(v0, v1)
  (v3: core::felt252) <- 10u
  (v11: core::felt252) <- core::felt252_sub(v10, v3)
End:
  Match(match core::felt252_is_zero(v11) {
    IsZeroResult::Zero => blk2,
    IsZeroResult::NonZero(v7) => blk3,
  })

blk2:
Statements:
  (v5: ()) <- struct_construct()
  (v6: core::bool) <- bool::True(v5)
  (v17: (core::felt252, core::bool)) <- struct_construct(v10, v6)
  (v18: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Ok(v17)
End:
  Return(v30, v31, v18)

blk3:
Statements:
  (v44: core::RangeCheck, v45: core::gas::GasBuiltin, v19: core::panics::PanicResult::<(core::felt252, core::bool)>) <- test::foo[expr17](v30, v31, v10)
End:
<<<<<<< HEAD
  Match(match_enum(v19) {
    PanicResult::Ok(v20) => blk4,
    PanicResult::Err(v23) => blk5,
  })
||||||| 3205b8a81
  Match(match_enum(v20) {
    PanicResult::Ok(v21) => blk4,
    PanicResult::Err(v24) => blk5,
  })
=======
  Return(v45, v46, v20)
>>>>>>> origin/main

blk4:
Statements:
<<<<<<< HEAD
  (v21: core::felt252, v22: core::bool) <- struct_destructure(v20)
  (v25: (core::felt252, core::bool)) <- struct_construct(v21, v22)
  (v26: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Ok(v25)
End:
  Return(v44, v45, v26)

blk5:
Statements:
  (v27: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Err(v23)
End:
  Return(v44, v45, v27)

blk6:
Statements:
||||||| 3205b8a81
  (v22: core::felt252, v23: core::bool) <- struct_destructure(v21)
  (v26: (core::felt252, core::bool)) <- struct_construct(v22, v23)
  (v27: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Ok(v26)
End:
  Return(v45, v46, v27)

blk5:
Statements:
  (v28: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Err(v24)
End:
  Return(v45, v46, v28)

blk6:
Statements:
=======
>>>>>>> origin/main
  (v12: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
  (v13: core::felt252) <- 375233589013918064796019u
  (v15: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v12, v13)
  (v14: core::panics::Panic) <- struct_construct()
  (v16: (core::panics::Panic, core::array::Array::<core::felt252>)) <- struct_construct(v14, v15)
  (v24: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Err(v16)
End:
  Return(v32, v33, v24)

//! > ==========================================================================

//! > Test loop with duplicate member path.

//! > test_runner_name
test_generated_function

//! > function
fn foo() -> bool {
    let mut x = 5;
    loop {
        x = x + 1;
        if x == 10 {
            break true;
        };
    }
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_flat
Parameters:

//! > lowering
Main:
Parameters:
blk0 (root):
Statements:
  (v0: core::felt252) <- 5u
  (v2: core::felt252, v1: core::bool) <- test::foo[expr16](v0)
End:
  Return(v1)


Final lowering:
Parameters: v11: core::RangeCheck, v12: core::gas::GasBuiltin
blk0 (root):
Statements:
  (v0: core::felt252) <- 5u
  (v13: core::RangeCheck, v14: core::gas::GasBuiltin, v3: core::panics::PanicResult::<(core::felt252, core::bool)>) <- test::foo[expr16](v11, v12, v0)
End:
  Match(match_enum(v3) {
    PanicResult::Ok(v4) => blk1,
    PanicResult::Err(v7) => blk2,
  })

blk1:
Statements:
  (v5: core::felt252, v6: core::bool) <- struct_destructure(v4)
  (v8: (core::bool,)) <- struct_construct(v6)
  (v9: core::panics::PanicResult::<(core::bool,)>) <- PanicResult::Ok(v8)
End:
  Return(v13, v14, v9)

blk2:
Statements:
  (v10: core::panics::PanicResult::<(core::bool,)>) <- PanicResult::Err(v7)
End:
  Return(v13, v14, v10)


Generated lowering for source location:
    loop {
    ^****^

Parameters: v0: core::felt252
blk0 (root):
Statements:
  (v1: core::felt252) <- 1u
  (v2: core::felt252) <- core::Felt252Add::add(v0, v1)
  (v3: core::felt252) <- 10u
  (v4: core::felt252) <- core::Felt252Sub::sub(v2, v3)
End:
  Match(match core::felt252_is_zero(v4) {
    IsZeroResult::Zero => blk1,
    IsZeroResult::NonZero(v7) => blk2,
  })

blk1:
Statements:
  (v5: ()) <- struct_construct()
  (v6: core::bool) <- bool::True(v5)
End:
  Return(v2, v6)

blk2:
Statements:
End:
  Goto(blk3, {})

blk3:
Statements:
  (v9: core::felt252, v8: core::bool) <- test::foo[expr16](v2)
End:
  Return(v9, v8)


Final lowering:
Parameters: v28: core::RangeCheck, v29: core::gas::GasBuiltin, v0: core::felt252
blk0 (root):
Statements:
End:
<<<<<<< HEAD
  Match(match core::gas::withdraw_gas(v28, v29) {
    Option::Some(v30, v31) => blk1,
    Option::None(v32, v33) => blk6,
||||||| 3205b8a81
  Match(match core::gas::withdraw_gas_all(v29, v30, v17) {
    Option::Some(v31, v32) => blk1,
    Option::None(v33, v34) => blk6,
=======
  Match(match core::gas::withdraw_gas_all(v29, v30, v17) {
    Option::Some(v31, v32) => blk1,
    Option::None(v33, v34) => blk4,
>>>>>>> origin/main
  })

blk1:
Statements:
  (v1: core::felt252) <- 1u
  (v10: core::felt252) <- core::felt252_add(v0, v1)
  (v3: core::felt252) <- 10u
  (v11: core::felt252) <- core::felt252_sub(v10, v3)
End:
  Match(match core::felt252_is_zero(v11) {
    IsZeroResult::Zero => blk2,
    IsZeroResult::NonZero(v7) => blk3,
  })

blk2:
Statements:
  (v5: ()) <- struct_construct()
  (v6: core::bool) <- bool::True(v5)
  (v17: (core::felt252, core::bool)) <- struct_construct(v10, v6)
  (v18: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Ok(v17)
End:
  Return(v30, v31, v18)

blk3:
Statements:
  (v44: core::RangeCheck, v45: core::gas::GasBuiltin, v19: core::panics::PanicResult::<(core::felt252, core::bool)>) <- test::foo[expr16](v30, v31, v10)
End:
<<<<<<< HEAD
  Match(match_enum(v19) {
    PanicResult::Ok(v20) => blk4,
    PanicResult::Err(v23) => blk5,
  })
||||||| 3205b8a81
  Match(match_enum(v20) {
    PanicResult::Ok(v21) => blk4,
    PanicResult::Err(v24) => blk5,
  })
=======
  Return(v45, v46, v20)
>>>>>>> origin/main

blk4:
Statements:
<<<<<<< HEAD
  (v21: core::felt252, v22: core::bool) <- struct_destructure(v20)
  (v25: (core::felt252, core::bool)) <- struct_construct(v21, v22)
  (v26: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Ok(v25)
End:
  Return(v44, v45, v26)

blk5:
Statements:
  (v27: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Err(v23)
End:
  Return(v44, v45, v27)

blk6:
Statements:
||||||| 3205b8a81
  (v22: core::felt252, v23: core::bool) <- struct_destructure(v21)
  (v26: (core::felt252, core::bool)) <- struct_construct(v22, v23)
  (v27: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Ok(v26)
End:
  Return(v45, v46, v27)

blk5:
Statements:
  (v28: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Err(v24)
End:
  Return(v45, v46, v28)

blk6:
Statements:
=======
>>>>>>> origin/main
  (v12: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
  (v13: core::felt252) <- 375233589013918064796019u
  (v15: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v12, v13)
  (v14: core::panics::Panic) <- struct_construct()
  (v16: (core::panics::Panic, core::array::Array::<core::felt252>)) <- struct_construct(v14, v15)
  (v24: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Err(v16)
End:
  Return(v32, v33, v24)

//! > ==========================================================================

//! > Test loop with member path borrowing.

//! > test_runner_name
test_generated_function

//! > function
fn foo(mut a: A, ref b: A) {
  let c = 5_usize;
  loop {
    let mut h = 0;
    a.b.c = c;
    if true {
        h = 1;
        let mut x = 4;
        x = 5;
        b = A { b: a.b, x };
        break b;
    };
  };
}

//! > function_name
foo

//! > module_code
#[derive(Copy,Drop)]
struct A {
  b: B,
  x: felt252,
}
#[derive(Copy,Drop)]
struct B {
  c: usize,
  y: u128,
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_flat
Parameters:

//! > lowering
Main:
Parameters: v0: test::A, v1: test::A
blk0 (root):
Statements:
  (v2: core::integer::u32) <- 5u
  (v3: test::B, v4: core::felt252) <- struct_destructure(v0)
  (v6: core::integer::u32, v7: test::A, v5: test::A) <- test::foo[expr26](v2, v3, v1)
  (v8: core::integer::u32, v9: core::integer::u128) <- struct_destructure(v3)
  (v10: ()) <- struct_construct()
End:
  Return(v7, v10)


Final lowering:
Parameters: v20: core::RangeCheck, v21: core::gas::GasBuiltin, v0: test::A, v1: test::A
blk0 (root):
Statements:
  (v2: core::integer::u32) <- 5u
  (v3: test::B, v4: core::felt252) <- struct_destructure(v0)
  (v22: core::RangeCheck, v23: core::gas::GasBuiltin, v11: core::panics::PanicResult::<(core::integer::u32, test::A, test::A)>) <- test::foo[expr26](v20, v21, v2, v3, v1)
End:
  Match(match_enum(v11) {
    PanicResult::Ok(v12) => blk1,
    PanicResult::Err(v16) => blk2,
  })

blk1:
Statements:
  (v13: core::integer::u32, v14: test::A, v15: test::A) <- struct_destructure(v12)
  (v10: ()) <- struct_construct()
  (v17: (test::A, ())) <- struct_construct(v14, v10)
  (v18: core::panics::PanicResult::<(test::A, ())>) <- PanicResult::Ok(v17)
End:
  Return(v22, v23, v18)

blk2:
Statements:
  (v19: core::panics::PanicResult::<(test::A, ())>) <- PanicResult::Err(v16)
End:
  Return(v22, v23, v19)


Generated lowering for source location:
  loop {
  ^****^

Parameters: v0: core::integer::u32, v1: test::B, v2: test::A
blk0 (root):
Statements:
  (v3: core::felt252) <- 0u
  (v4: core::integer::u32, v5: core::integer::u128) <- struct_destructure(v1)
  (v6: ()) <- struct_construct()
  (v7: core::bool) <- bool::True(v6)
End:
  Match(match_enum(v7) {
    bool::False(v16) => blk2,
    bool::True(v8) => blk1,
  })

blk1:
Statements:
  (v9: core::felt252) <- 1u
  (v10: core::felt252) <- 4u
  (v11: core::felt252) <- 5u
  (v12: test::B) <- struct_construct(v0, v5)
  (v13: test::A) <- struct_construct(v12, v11)
  (v14: core::integer::u32, v15: core::integer::u128) <- struct_destructure(v12)
End:
  Return(v14, v13, v13)

blk2:
Statements:
End:
  Goto(blk3, {})

blk3:
Statements:
  (v17: test::B) <- struct_construct(v0, v5)
  (v19: core::integer::u32, v20: test::A, v18: test::A) <- test::foo[expr26](v0, v17, v2)
  (v21: core::integer::u32, v22: core::integer::u128) <- struct_destructure(v17)
End:
  Return(v19, v20, v18)


Final lowering:
Parameters: v40: core::RangeCheck, v41: core::gas::GasBuiltin, v0: core::integer::u32, v1: test::B, v2: test::A
blk0 (root):
Statements:
End:
  Match(match core::gas::withdraw_gas(v40, v41) {
    Option::Some(v42, v43) => blk1,
    Option::None(v44, v45) => blk2,
  })

blk1:
Statements:
  (v4: core::integer::u32, v5: core::integer::u128) <- struct_destructure(v1)
  (v12: test::B) <- struct_construct(v0, v5)
  (v11: core::felt252) <- 5u
  (v13: test::A) <- struct_construct(v12, v11)
  (v14: core::integer::u32, v15: core::integer::u128) <- struct_destructure(v12)
  (v28: (core::integer::u32, test::A, test::A)) <- struct_construct(v14, v13, v13)
  (v29: core::panics::PanicResult::<(core::integer::u32, test::A, test::A)>) <- PanicResult::Ok(v28)
End:
  Return(v42, v43, v29)

blk2:
Statements:
  (v23: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
  (v24: core::felt252) <- 375233589013918064796019u
  (v26: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v23, v24)
  (v25: core::panics::Panic) <- struct_construct()
  (v27: (core::panics::Panic, core::array::Array::<core::felt252>)) <- struct_construct(v25, v26)
  (v36: core::panics::PanicResult::<(core::integer::u32, test::A, test::A)>) <- PanicResult::Err(v27)
End:
  Return(v44, v45, v36)

//! > ==========================================================================

//! > Test loop with continue.

//! > test_runner_name
test_generated_function

//! > function
fn foo() -> bool {
    let mut x = 5;
    loop {
        let y = x + 1;
        x = y;
        if y == 7 {
            continue;
        }
        if y == 10 {
            break true;
        };
    }
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_flat
Parameters:

//! > lowering
Main:
Parameters:
blk0 (root):
Statements:
  (v0: core::felt252) <- 5u
  (v2: core::felt252, v1: core::bool) <- test::foo[expr24](v0)
End:
  Return(v1)


Final lowering:
Parameters: v11: core::RangeCheck, v12: core::gas::GasBuiltin
blk0 (root):
Statements:
  (v0: core::felt252) <- 5u
  (v13: core::RangeCheck, v14: core::gas::GasBuiltin, v3: core::panics::PanicResult::<(core::felt252, core::bool)>) <- test::foo[expr24](v11, v12, v0)
End:
  Match(match_enum(v3) {
    PanicResult::Ok(v4) => blk1,
    PanicResult::Err(v7) => blk2,
  })

blk1:
Statements:
  (v5: core::felt252, v6: core::bool) <- struct_destructure(v4)
  (v8: (core::bool,)) <- struct_construct(v6)
  (v9: core::panics::PanicResult::<(core::bool,)>) <- PanicResult::Ok(v8)
End:
  Return(v13, v14, v9)

blk2:
Statements:
  (v10: core::panics::PanicResult::<(core::bool,)>) <- PanicResult::Err(v7)
End:
  Return(v13, v14, v10)


Generated lowering for source location:
    loop {
    ^****^

Parameters: v0: core::felt252
blk0 (root):
Statements:
  (v1: core::felt252) <- 1u
  (v2: core::felt252) <- core::Felt252Add::add(v0, v1)
  (v3: core::felt252) <- 7u
  (v4: core::felt252) <- core::Felt252Sub::sub(v2, v3)
End:
  Match(match core::felt252_is_zero(v4) {
    IsZeroResult::Zero => blk1,
    IsZeroResult::NonZero(v7) => blk2,
  })

blk1:
Statements:
  (v6: core::felt252, v5: core::bool) <- test::foo[expr24](v2)
End:
  Return(v6, v5)

blk2:
Statements:
End:
  Goto(blk3, {})

blk3:
Statements:
  (v8: core::felt252) <- 10u
  (v9: core::felt252) <- core::Felt252Sub::sub(v2, v8)
End:
  Match(match core::felt252_is_zero(v9) {
    IsZeroResult::Zero => blk4,
    IsZeroResult::NonZero(v12) => blk5,
  })

blk4:
Statements:
  (v10: ()) <- struct_construct()
  (v11: core::bool) <- bool::True(v10)
End:
  Return(v2, v11)

blk5:
Statements:
End:
  Goto(blk6, {})

blk6:
Statements:
  (v14: core::felt252, v13: core::bool) <- test::foo[expr24](v2)
End:
  Return(v14, v13)


Final lowering:
Parameters: v42: core::RangeCheck, v43: core::gas::GasBuiltin, v0: core::felt252
blk0 (root):
Statements:
End:
<<<<<<< HEAD
  Match(match core::gas::withdraw_gas(v42, v43) {
    Option::Some(v44, v45) => blk1,
    Option::None(v46, v47) => blk10,
||||||| 3205b8a81
  Match(match core::gas::withdraw_gas_all(v43, v44, v23) {
    Option::Some(v45, v46) => blk1,
    Option::None(v47, v48) => blk10,
=======
  Match(match core::gas::withdraw_gas_all(v43, v44, v23) {
    Option::Some(v45, v46) => blk1,
    Option::None(v47, v48) => blk6,
>>>>>>> origin/main
  })

blk1:
Statements:
  (v1: core::felt252) <- 1u
  (v15: core::felt252) <- core::felt252_add(v0, v1)
  (v3: core::felt252) <- 7u
  (v17: core::felt252) <- core::felt252_sub(v15, v3)
End:
  Match(match core::felt252_is_zero(v17) {
    IsZeroResult::Zero => blk2,
    IsZeroResult::NonZero(v7) => blk3,
  })

blk2:
Statements:
  (v56: core::RangeCheck, v57: core::gas::GasBuiltin, v23: core::panics::PanicResult::<(core::felt252, core::bool)>) <- test::foo[expr24](v44, v45, v15)
End:
<<<<<<< HEAD
  Match(match_enum(v23) {
    PanicResult::Ok(v24) => blk3,
    PanicResult::Err(v27) => blk4,
  })
||||||| 3205b8a81
  Match(match_enum(v24) {
    PanicResult::Ok(v25) => blk3,
    PanicResult::Err(v28) => blk4,
  })
=======
  Return(v57, v58, v24)
>>>>>>> origin/main

blk3:
Statements:
<<<<<<< HEAD
  (v25: core::felt252, v26: core::bool) <- struct_destructure(v24)
  (v36: (core::felt252, core::bool)) <- struct_construct(v25, v26)
  (v37: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Ok(v36)
End:
  Return(v56, v57, v37)

blk4:
Statements:
  (v38: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Err(v27)
End:
  Return(v56, v57, v38)

blk5:
Statements:
||||||| 3205b8a81
  (v26: core::felt252, v27: core::bool) <- struct_destructure(v25)
  (v37: (core::felt252, core::bool)) <- struct_construct(v26, v27)
  (v38: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Ok(v37)
End:
  Return(v57, v58, v38)

blk4:
Statements:
  (v39: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Err(v28)
End:
  Return(v57, v58, v39)

blk5:
Statements:
=======
>>>>>>> origin/main
  (v8: core::felt252) <- 10u
  (v16: core::felt252) <- core::felt252_sub(v15, v8)
End:
  Match(match core::felt252_is_zero(v16) {
    IsZeroResult::Zero => blk4,
    IsZeroResult::NonZero(v12) => blk5,
  })

blk4:
Statements:
  (v10: ()) <- struct_construct()
  (v11: core::bool) <- bool::True(v10)
  (v28: (core::felt252, core::bool)) <- struct_construct(v15, v11)
  (v29: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Ok(v28)
End:
  Return(v44, v45, v29)

<<<<<<< HEAD
blk7:
Statements:
  (v68: core::RangeCheck, v69: core::gas::GasBuiltin, v30: core::panics::PanicResult::<(core::felt252, core::bool)>) <- test::foo[expr24](v44, v45, v15)
End:
  Match(match_enum(v30) {
    PanicResult::Ok(v31) => blk8,
    PanicResult::Err(v34) => blk9,
  })

blk8:
Statements:
  (v32: core::felt252, v33: core::bool) <- struct_destructure(v31)
  (v39: (core::felt252, core::bool)) <- struct_construct(v32, v33)
  (v40: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Ok(v39)
End:
  Return(v68, v69, v40)

blk9:
||||||| 3205b8a81
blk7:
Statements:
  (v69: core::RangeCheck, v70: core::gas::GasBuiltin, v31: core::panics::PanicResult::<(core::felt252, core::bool)>) <- test::foo[expr24](v45, v46, v15)
End:
  Match(match_enum(v31) {
    PanicResult::Ok(v32) => blk8,
    PanicResult::Err(v35) => blk9,
  })

blk8:
Statements:
  (v33: core::felt252, v34: core::bool) <- struct_destructure(v32)
  (v40: (core::felt252, core::bool)) <- struct_construct(v33, v34)
  (v41: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Ok(v40)
End:
  Return(v69, v70, v41)

blk9:
=======
blk5:
>>>>>>> origin/main
Statements:
<<<<<<< HEAD
  (v41: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Err(v34)
||||||| 3205b8a81
  (v42: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Err(v35)
=======
  (v67: core::RangeCheck, v68: core::gas::GasBuiltin, v31: core::panics::PanicResult::<(core::felt252, core::bool)>) <- test::foo[expr24](v45, v46, v15)
>>>>>>> origin/main
End:
<<<<<<< HEAD
  Return(v68, v69, v41)
||||||| 3205b8a81
  Return(v69, v70, v42)
=======
  Return(v67, v68, v31)
>>>>>>> origin/main

blk6:
Statements:
  (v18: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
  (v19: core::felt252) <- 375233589013918064796019u
  (v21: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v18, v19)
  (v20: core::panics::Panic) <- struct_construct()
  (v22: (core::panics::Panic, core::array::Array::<core::felt252>)) <- struct_construct(v20, v21)
  (v35: core::panics::PanicResult::<(core::felt252, core::bool)>) <- PanicResult::Err(v22)
End:
  Return(v46, v47, v35)

//! > ==========================================================================

//! > Test loop with break;

//! > test_runner_name
test_generated_function

//! > function
fn foo() {
  loop {
      break;
  }
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_flat
Parameters:

//! > lowering
Main:
Parameters:
blk0 (root):
Statements:
  (v0: ()) <- test::foo[expr1]()
End:
  Return(v0)


Final lowering:
Parameters:
blk0 (root):
Statements:
  (v0: ()) <- test::foo[expr1]()
End:
  Return(v0)


Generated lowering for source location:
  loop {
  ^****^

Parameters:
blk0 (root):
Statements:
  (v0: ()) <- struct_construct()
End:
  Return(v0)


Final lowering:
Parameters:
blk0 (root):
Statements:
  (v0: ()) <- struct_construct()
End:
  Return(v0)

//! > ==========================================================================

//! > Change in block merge in loop.

//! > test_runner_name
test_generated_function

//! > function
fn foo() {
  let mut x = A { a: 3, b: 4 };
  loop {
      if (true) {
        x.a = 0;
      } else {
        x.a = 0;
      }

      if x.a == 0 {
          break;
      };
  };
}

//! > function_name
foo

//! > module_code
#[derive(Copy, Drop, Debug)]
struct A {
  a: u8,
  b: u8,
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_flat
Parameters:

//! > lowering
Main:
Parameters:
blk0 (root):
Statements:
  (v0: core::integer::u8) <- 3u
  (v1: core::integer::u8) <- 4u
  (v2: test::A) <- struct_construct(v0, v1)
  (v3: core::integer::u8, v4: core::integer::u8) <- struct_destructure(v2)
  (v6: core::integer::u8, v5: ()) <- test::foo[expr25](v3)
  (v7: ()) <- struct_construct()
End:
  Return(v7)


Final lowering:
Parameters: v16: core::RangeCheck, v17: core::gas::GasBuiltin
blk0 (root):
Statements:
  (v0: core::integer::u8) <- 3u
  (v1: core::integer::u8) <- 4u
  (v2: test::A) <- struct_construct(v0, v1)
  (v3: core::integer::u8, v4: core::integer::u8) <- struct_destructure(v2)
  (v18: core::RangeCheck, v19: core::gas::GasBuiltin, v8: core::panics::PanicResult::<(core::integer::u8, ())>) <- test::foo[expr25](v16, v17, v3)
End:
  Match(match_enum(v8) {
    PanicResult::Ok(v9) => blk1,
    PanicResult::Err(v12) => blk2,
  })

blk1:
Statements:
  (v7: ()) <- struct_construct()
  (v13: ((),)) <- struct_construct(v7)
  (v14: core::panics::PanicResult::<((),)>) <- PanicResult::Ok(v13)
End:
  Return(v18, v19, v14)

blk2:
Statements:
  (v15: core::panics::PanicResult::<((),)>) <- PanicResult::Err(v12)
End:
  Return(v18, v19, v15)


Generated lowering for source location:
  loop {
  ^****^

Parameters: v0: core::integer::u8
blk0 (root):
Statements:
  (v1: ()) <- struct_construct()
  (v2: core::bool) <- bool::True(v1)
End:
  Match(match_enum(v2) {
    bool::False(v5) => blk2,
    bool::True(v3) => blk1,
  })

blk1:
Statements:
  (v4: core::integer::u8) <- 0u
End:
  Goto(blk3, {v4 -> v7})

blk2:
Statements:
  (v6: core::integer::u8) <- 0u
End:
  Goto(blk3, {v6 -> v7})

blk3:
Statements:
  (v8: core::integer::u8, v9: @core::integer::u8) <- snapshot(v7)
  (v10: core::integer::u8) <- 0u
  (v11: core::integer::u8, v12: @core::integer::u8) <- snapshot(v10)
  (v13: core::bool) <- core::integer::U8PartialEq::eq(v9, v12)
End:
  Match(match_enum(v13) {
    bool::False(v16) => blk5,
    bool::True(v14) => blk4,
  })

blk4:
Statements:
  (v15: ()) <- struct_construct()
End:
  Return(v8, v15)

blk5:
Statements:
End:
  Goto(blk6, {})

blk6:
Statements:
  (v18: core::integer::u8, v17: ()) <- test::foo[expr25](v8)
End:
  Return(v18, v17)


Final lowering:
Parameters: v42: core::RangeCheck, v43: core::gas::GasBuiltin, v0: core::integer::u8
blk0 (root):
Statements:
End:
<<<<<<< HEAD
  Match(match core::gas::withdraw_gas(v42, v43) {
    Option::Some(v44, v45) => blk1,
    Option::None(v46, v47) => blk6,
||||||| 3205b8a81
  Match(match core::gas::withdraw_gas_all(v43, v44, v31) {
    Option::Some(v45, v46) => blk1,
    Option::None(v47, v48) => blk6,
=======
  Match(match core::gas::withdraw_gas_all(v43, v44, v31) {
    Option::Some(v45, v46) => blk1,
    Option::None(v47, v48) => blk4,
>>>>>>> origin/main
  })

blk1:
Statements:
  (v4: core::integer::u8) <- 0u
  (v8: core::integer::u8, v9: @core::integer::u8) <- snapshot(v4)
  (v10: core::integer::u8) <- 0u
  (v11: core::integer::u8, v12: @core::integer::u8) <- snapshot(v10)
  (v19: core::integer::u8) <- desnap(v9)
  (v20: core::integer::u8) <- desnap(v12)
End:
  Match(match core::integer::u8_eq(v19, v20) {
    bool::False => blk2,
    bool::True => blk3,
  })

blk2:
Statements:
  (v58: core::RangeCheck, v59: core::gas::GasBuiltin, v33: core::panics::PanicResult::<(core::integer::u8, ())>) <- test::foo[expr25](v44, v45, v8)
End:
<<<<<<< HEAD
  Match(match_enum(v33) {
    PanicResult::Ok(v34) => blk3,
    PanicResult::Err(v37) => blk4,
  })
||||||| 3205b8a81
  Match(match_enum(v34) {
    PanicResult::Ok(v35) => blk3,
    PanicResult::Err(v38) => blk4,
  })
=======
  Return(v59, v60, v34)
>>>>>>> origin/main

blk3:
Statements:
<<<<<<< HEAD
  (v35: core::integer::u8, v36: ()) <- struct_destructure(v34)
  (v39: (core::integer::u8, ())) <- struct_construct(v35, v36)
  (v40: core::panics::PanicResult::<(core::integer::u8, ())>) <- PanicResult::Ok(v39)
End:
  Return(v58, v59, v40)

blk4:
Statements:
  (v41: core::panics::PanicResult::<(core::integer::u8, ())>) <- PanicResult::Err(v37)
End:
  Return(v58, v59, v41)

blk5:
Statements:
||||||| 3205b8a81
  (v36: core::integer::u8, v37: ()) <- struct_destructure(v35)
  (v40: (core::integer::u8, ())) <- struct_construct(v36, v37)
  (v41: core::panics::PanicResult::<(core::integer::u8, ())>) <- PanicResult::Ok(v40)
End:
  Return(v59, v60, v41)

blk4:
Statements:
  (v42: core::panics::PanicResult::<(core::integer::u8, ())>) <- PanicResult::Err(v38)
End:
  Return(v59, v60, v42)

blk5:
Statements:
=======
>>>>>>> origin/main
  (v15: ()) <- struct_construct()
  (v31: (core::integer::u8, ())) <- struct_construct(v8, v15)
  (v32: core::panics::PanicResult::<(core::integer::u8, ())>) <- PanicResult::Ok(v31)
End:
  Return(v44, v45, v32)

blk4:
Statements:
  (v26: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
  (v27: core::felt252) <- 375233589013918064796019u
  (v29: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v26, v27)
  (v28: core::panics::Panic) <- struct_construct()
  (v30: (core::panics::Panic, core::array::Array::<core::felt252>)) <- struct_construct(v28, v29)
  (v38: core::panics::PanicResult::<(core::integer::u8, ())>) <- PanicResult::Err(v30)
End:
  Return(v46, v47, v38)
