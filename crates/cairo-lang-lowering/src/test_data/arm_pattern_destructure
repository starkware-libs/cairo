//! > Test arm pattern destructure for match-enum param.

//! > test_function_name
test_function_lowering

//! > function
fn foo(e: MyEnum) {
    match e {
        MyEnum::a((x, (y, z))) => {},
        MyEnum::b((x, y)) => {},
        MyEnum::c(x) => {},
        MyEnum::d((x, y)) => {},
        MyEnum::e(x) => {},
        MyEnum::f((x,)) => {},
        MyEnum::g(x) => {},
        MyEnum::h(x) => {},
    }
}

//! > function_name
foo

//! > module_code
enum MyEnum {
    a: (felt, (felt, felt)),
    b: (felt, (felt, felt)),
    c: (felt, (felt, felt)),
    d: (felt, felt),
    e: (felt, felt),
    f: (felt,),
    g: (felt,),
    h: felt
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_structured
blk0:
Inputs: v1: (core::felt, (core::felt, core::felt))
Initial refs:
Statements:
  (v2: core::felt, v3: (core::felt, core::felt)) <- struct_destructure(v1)
  (v4: core::felt, v5: core::felt) <- struct_destructure(v3)
End:
  Callsite({})

blk1:
Inputs: v6: (core::felt, (core::felt, core::felt))
Initial refs:
Statements:
  (v7: core::felt, v8: (core::felt, core::felt)) <- struct_destructure(v6)
End:
  Callsite({})

blk2:
Inputs: v9: (core::felt, (core::felt, core::felt))
Initial refs:
Statements:
End:
  Callsite({})

blk3:
Inputs: v10: (core::felt, core::felt)
Initial refs:
Statements:
  (v11: core::felt, v12: core::felt) <- struct_destructure(v10)
End:
  Callsite({})

blk4:
Inputs: v13: (core::felt, core::felt)
Initial refs:
Statements:
End:
  Callsite({})

blk5:
Inputs: v14: (core::felt,)
Initial refs:
Statements:
  (v15: core::felt) <- struct_destructure(v14)
End:
  Callsite({})

blk6:
Inputs: v16: (core::felt,)
Initial refs:
Statements:
End:
  Callsite({})

blk7:
Inputs: v17: core::felt
Initial refs:
Statements:
End:
  Callsite({})

blk8 (root):
Inputs: v0: test::MyEnum
Initial refs:
Statements:
  () <- match_enum(v0) {
    MyEnum::a => blk0,
    MyEnum::b => blk1,
    MyEnum::c => blk2,
    MyEnum::d => blk3,
    MyEnum::e => blk4,
    MyEnum::f => blk5,
    MyEnum::g => blk6,
    MyEnum::h => blk7,
  }
  (v18: ()) <- struct_construct()
End:
  Return(v18)

//! > lowering_flat
blk0:
Inputs: v1: (core::felt, (core::felt, core::felt))
Statements:
  (v2: core::felt, v3: (core::felt, core::felt)) <- struct_destructure(v1)
  (v4: core::felt, v5: core::felt) <- struct_destructure(v3)
End:
  Callsite({})

blk1:
Inputs: v6: (core::felt, (core::felt, core::felt))
Statements:
  (v7: core::felt, v8: (core::felt, core::felt)) <- struct_destructure(v6)
End:
  Callsite({})

blk2:
Inputs: v9: (core::felt, (core::felt, core::felt))
Statements:
End:
  Callsite({})

blk3:
Inputs: v10: (core::felt, core::felt)
Statements:
  (v11: core::felt, v12: core::felt) <- struct_destructure(v10)
End:
  Callsite({})

blk4:
Inputs: v13: (core::felt, core::felt)
Statements:
End:
  Callsite({})

blk5:
Inputs: v14: (core::felt,)
Statements:
  (v15: core::felt) <- struct_destructure(v14)
End:
  Callsite({})

blk6:
Inputs: v16: (core::felt,)
Statements:
End:
  Callsite({})

blk7:
Inputs: v17: core::felt
Statements:
End:
  Callsite({})

blk8 (root):
Inputs: v0: test::MyEnum
Statements:
  () <- match_enum(v0) {
    MyEnum::a => blk0,
    MyEnum::b => blk1,
    MyEnum::c => blk2,
    MyEnum::d => blk3,
    MyEnum::e => blk4,
    MyEnum::f => blk5,
    MyEnum::g => blk6,
    MyEnum::h => blk7,
  }
  (v18: ()) <- struct_construct()
End:
  Return(v18)

//! > ==========================================================================

//! > Test arm pattern destructure for match-extern.

//! > test_function_name
test_function_lowering

//! > function
fn foo() {
    match bar() {
        MyEnum::a((x, (y, z))) => {},
        MyEnum::b((x, y)) => {},
        MyEnum::c(x) => {},
        MyEnum::d((x, y)) => {},
        MyEnum::e(x) => {},
        MyEnum::f((x,)) => {},
        MyEnum::g(x) => {},
        MyEnum::h(x) => {},
    }
}

//! > function_name
foo

//! > module_code
enum MyEnum {
  a: (felt, (felt, felt)),
  b: (felt, (felt, felt)),
  c: (felt, (felt, felt)),
  d: (felt, felt),
  e: (felt, felt),
  f: (felt,),
  g: (felt,),
  h: felt
}
extern fn bar() -> MyEnum nopanic;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_structured
blk0:
Inputs: v0: core::felt, v1: (core::felt, core::felt)
Initial refs:
Statements:
  (v2: core::felt, v3: core::felt) <- struct_destructure(v1)
End:
  Callsite({})

blk1:
Inputs: v4: core::felt, v5: (core::felt, core::felt)
Initial refs:
Statements:
End:
  Callsite({})

blk2:
Inputs: v6: core::felt, v7: (core::felt, core::felt)
Initial refs:
Statements:
  (v8: (core::felt, (core::felt, core::felt))) <- struct_construct(v6, v7)
End:
  Callsite({})

blk3:
Inputs: v9: core::felt, v10: core::felt
Initial refs:
Statements:
End:
  Callsite({})

blk4:
Inputs: v11: core::felt, v12: core::felt
Initial refs:
Statements:
  (v13: (core::felt, core::felt)) <- struct_construct(v11, v12)
End:
  Callsite({})

blk5:
Inputs: v14: core::felt
Initial refs:
Statements:
End:
  Callsite({})

blk6:
Inputs: v15: core::felt
Initial refs:
Statements:
  (v16: (core::felt,)) <- struct_construct(v15)
End:
  Callsite({})

blk7:
Inputs: v17: core::felt
Initial refs:
Statements:
End:
  Callsite({})

blk8 (root):
Inputs:
Initial refs:
Statements:
  () <- match test::bar() {
    MyEnum::a => blk0,
    MyEnum::b => blk1,
    MyEnum::c => blk2,
    MyEnum::d => blk3,
    MyEnum::e => blk4,
    MyEnum::f => blk5,
    MyEnum::g => blk6,
    MyEnum::h => blk7,
  }
  (v18: ()) <- struct_construct()
End:
  Return(v18)

//! > lowering_flat
blk0:
Inputs: v0: core::felt, v1: (core::felt, core::felt)
Statements:
  (v2: core::felt, v3: core::felt) <- struct_destructure(v1)
End:
  Callsite({})

blk1:
Inputs: v4: core::felt, v5: (core::felt, core::felt)
Statements:
End:
  Callsite({})

blk2:
Inputs: v6: core::felt, v7: (core::felt, core::felt)
Statements:
  (v8: (core::felt, (core::felt, core::felt))) <- struct_construct(v6, v7)
End:
  Callsite({})

blk3:
Inputs: v9: core::felt, v10: core::felt
Statements:
End:
  Callsite({})

blk4:
Inputs: v11: core::felt, v12: core::felt
Statements:
  (v13: (core::felt, core::felt)) <- struct_construct(v11, v12)
End:
  Callsite({})

blk5:
Inputs: v14: core::felt
Statements:
End:
  Callsite({})

blk6:
Inputs: v15: core::felt
Statements:
  (v16: (core::felt,)) <- struct_construct(v15)
End:
  Callsite({})

blk7:
Inputs: v17: core::felt
Statements:
End:
  Callsite({})

blk8 (root):
Inputs:
Statements:
  () <- match test::bar() {
    MyEnum::a => blk0,
    MyEnum::b => blk1,
    MyEnum::c => blk2,
    MyEnum::d => blk3,
    MyEnum::e => blk4,
    MyEnum::f => blk5,
    MyEnum::g => blk6,
    MyEnum::h => blk7,
  }
  (v18: ()) <- struct_construct()
End:
  Return(v18)

//! > ==========================================================================

//! > Test arm pattern destructure for match-enum variable.

//! > test_function_name
test_function_lowering

//! > function
fn foo() {
    let y = bar();
    match y {
        MyEnum::a((x, (y, z))) => {},
        MyEnum::b((x, y)) => {},
        MyEnum::c(x) => {},
        MyEnum::d((x, y)) => {},
        MyEnum::e(x) => {},
        MyEnum::f((x,)) => {},
        MyEnum::g(x) => {},
        MyEnum::h(x) => {},
    }
}

//! > function_name
foo

//! > module_code
enum MyEnum {
  a: (felt, (felt, felt)),
  b: (felt, (felt, felt)),
  c: (felt, (felt, felt)),
  d: (felt, felt),
  e: (felt, felt),
  f: (felt,),
  g: (felt,),
  h: felt
}
extern fn bar() -> MyEnum nopanic;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_structured
blk0:
Inputs: v0: core::felt, v1: (core::felt, core::felt)
Initial refs:
Statements:
  (v2: (core::felt, (core::felt, core::felt))) <- struct_construct(v0, v1)
  (v3: test::MyEnum) <- MyEnum::a(v2)
End:
  Callsite({v3 -> v28})

blk1:
Inputs: v4: core::felt, v5: (core::felt, core::felt)
Initial refs:
Statements:
  (v6: (core::felt, (core::felt, core::felt))) <- struct_construct(v4, v5)
  (v7: test::MyEnum) <- MyEnum::b(v6)
End:
  Callsite({v7 -> v28})

blk2:
Inputs: v8: core::felt, v9: (core::felt, core::felt)
Initial refs:
Statements:
  (v10: (core::felt, (core::felt, core::felt))) <- struct_construct(v8, v9)
  (v11: test::MyEnum) <- MyEnum::c(v10)
End:
  Callsite({v11 -> v28})

blk3:
Inputs: v12: core::felt, v13: core::felt
Initial refs:
Statements:
  (v14: (core::felt, core::felt)) <- struct_construct(v12, v13)
  (v15: test::MyEnum) <- MyEnum::d(v14)
End:
  Callsite({v15 -> v28})

blk4:
Inputs: v16: core::felt, v17: core::felt
Initial refs:
Statements:
  (v18: (core::felt, core::felt)) <- struct_construct(v16, v17)
  (v19: test::MyEnum) <- MyEnum::e(v18)
End:
  Callsite({v19 -> v28})

blk5:
Inputs: v20: core::felt
Initial refs:
Statements:
  (v21: (core::felt,)) <- struct_construct(v20)
  (v22: test::MyEnum) <- MyEnum::f(v21)
End:
  Callsite({v22 -> v28})

blk6:
Inputs: v23: core::felt
Initial refs:
Statements:
  (v24: (core::felt,)) <- struct_construct(v23)
  (v25: test::MyEnum) <- MyEnum::g(v24)
End:
  Callsite({v25 -> v28})

blk7:
Inputs: v26: core::felt
Initial refs:
Statements:
  (v27: test::MyEnum) <- MyEnum::h(v26)
End:
  Callsite({v27 -> v28})

blk8:
Inputs: v29: (core::felt, (core::felt, core::felt))
Initial refs:
Statements:
  (v30: core::felt, v31: (core::felt, core::felt)) <- struct_destructure(v29)
  (v32: core::felt, v33: core::felt) <- struct_destructure(v31)
End:
  Callsite({})

blk9:
Inputs: v34: (core::felt, (core::felt, core::felt))
Initial refs:
Statements:
  (v35: core::felt, v36: (core::felt, core::felt)) <- struct_destructure(v34)
End:
  Callsite({})

blk10:
Inputs: v37: (core::felt, (core::felt, core::felt))
Initial refs:
Statements:
End:
  Callsite({})

blk11:
Inputs: v38: (core::felt, core::felt)
Initial refs:
Statements:
  (v39: core::felt, v40: core::felt) <- struct_destructure(v38)
End:
  Callsite({})

blk12:
Inputs: v41: (core::felt, core::felt)
Initial refs:
Statements:
End:
  Callsite({})

blk13:
Inputs: v42: (core::felt,)
Initial refs:
Statements:
  (v43: core::felt) <- struct_destructure(v42)
End:
  Callsite({})

blk14:
Inputs: v44: (core::felt,)
Initial refs:
Statements:
End:
  Callsite({})

blk15:
Inputs: v45: core::felt
Initial refs:
Statements:
End:
  Callsite({})

blk16 (root):
Inputs:
Initial refs:
Statements:
  () <- match test::bar() {
    MyEnum::a => blk0,
    MyEnum::b => blk1,
    MyEnum::c => blk2,
    MyEnum::d => blk3,
    MyEnum::e => blk4,
    MyEnum::f => blk5,
    MyEnum::g => blk6,
    MyEnum::h => blk7,
  }
  () <- match_enum(v28) {
    MyEnum::a => blk8,
    MyEnum::b => blk9,
    MyEnum::c => blk10,
    MyEnum::d => blk11,
    MyEnum::e => blk12,
    MyEnum::f => blk13,
    MyEnum::g => blk14,
    MyEnum::h => blk15,
  }
  (v46: ()) <- struct_construct()
End:
  Return(v46)

//! > lowering_flat
blk0:
Inputs: v0: core::felt, v1: (core::felt, core::felt)
Statements:
  (v2: (core::felt, (core::felt, core::felt))) <- struct_construct(v0, v1)
  (v3: test::MyEnum) <- MyEnum::a(v2)
End:
  Callsite({v3 -> v28})

blk1:
Inputs: v4: core::felt, v5: (core::felt, core::felt)
Statements:
  (v6: (core::felt, (core::felt, core::felt))) <- struct_construct(v4, v5)
  (v7: test::MyEnum) <- MyEnum::b(v6)
End:
  Callsite({v7 -> v28})

blk2:
Inputs: v8: core::felt, v9: (core::felt, core::felt)
Statements:
  (v10: (core::felt, (core::felt, core::felt))) <- struct_construct(v8, v9)
  (v11: test::MyEnum) <- MyEnum::c(v10)
End:
  Callsite({v11 -> v28})

blk3:
Inputs: v12: core::felt, v13: core::felt
Statements:
  (v14: (core::felt, core::felt)) <- struct_construct(v12, v13)
  (v15: test::MyEnum) <- MyEnum::d(v14)
End:
  Callsite({v15 -> v28})

blk4:
Inputs: v16: core::felt, v17: core::felt
Statements:
  (v18: (core::felt, core::felt)) <- struct_construct(v16, v17)
  (v19: test::MyEnum) <- MyEnum::e(v18)
End:
  Callsite({v19 -> v28})

blk5:
Inputs: v20: core::felt
Statements:
  (v21: (core::felt,)) <- struct_construct(v20)
  (v22: test::MyEnum) <- MyEnum::f(v21)
End:
  Callsite({v22 -> v28})

blk6:
Inputs: v23: core::felt
Statements:
  (v24: (core::felt,)) <- struct_construct(v23)
  (v25: test::MyEnum) <- MyEnum::g(v24)
End:
  Callsite({v25 -> v28})

blk7:
Inputs: v26: core::felt
Statements:
  (v27: test::MyEnum) <- MyEnum::h(v26)
End:
  Callsite({v27 -> v28})

blk8:
Inputs: v29: (core::felt, (core::felt, core::felt))
Statements:
  (v30: core::felt, v31: (core::felt, core::felt)) <- struct_destructure(v29)
  (v32: core::felt, v33: core::felt) <- struct_destructure(v31)
End:
  Callsite({})

blk9:
Inputs: v34: (core::felt, (core::felt, core::felt))
Statements:
  (v35: core::felt, v36: (core::felt, core::felt)) <- struct_destructure(v34)
End:
  Callsite({})

blk10:
Inputs: v37: (core::felt, (core::felt, core::felt))
Statements:
End:
  Callsite({})

blk11:
Inputs: v38: (core::felt, core::felt)
Statements:
  (v39: core::felt, v40: core::felt) <- struct_destructure(v38)
End:
  Callsite({})

blk12:
Inputs: v41: (core::felt, core::felt)
Statements:
End:
  Callsite({})

blk13:
Inputs: v42: (core::felt,)
Statements:
  (v43: core::felt) <- struct_destructure(v42)
End:
  Callsite({})

blk14:
Inputs: v44: (core::felt,)
Statements:
End:
  Callsite({})

blk15:
Inputs: v45: core::felt
Statements:
End:
  Callsite({})

blk16 (root):
Inputs:
Statements:
  () <- match test::bar() {
    MyEnum::a => blk0,
    MyEnum::b => blk1,
    MyEnum::c => blk2,
    MyEnum::d => blk3,
    MyEnum::e => blk4,
    MyEnum::f => blk5,
    MyEnum::g => blk6,
    MyEnum::h => blk7,
  }
  () <- match_enum(v28) {
    MyEnum::a => blk8,
    MyEnum::b => blk9,
    MyEnum::c => blk10,
    MyEnum::d => blk11,
    MyEnum::e => blk12,
    MyEnum::f => blk13,
    MyEnum::g => blk14,
    MyEnum::h => blk15,
  }
  (v46: ()) <- struct_construct()
End:
  Return(v46)

//! > ==========================================================================

//! > Test arm pattern destructure for match-extern (with refs and implicits).

//! > test_function_name
test_function_lowering

//! > function
fn foo(mut z: felt) {
    match bar(ref z) {
        MyEnum::a((x, (y, z))) => {},
        MyEnum::b((x, y)) => {},
        MyEnum::c(x) => {},
        MyEnum::d((x, y)) => {},
        MyEnum::e(x) => {},
        MyEnum::f((x,)) => {},
        MyEnum::g(x) => {},
        MyEnum::h(x) => {},
    }
}

//! > function_name
foo

//! > module_code
enum MyEnum {
  a: (felt, (felt, felt)),
  b: (felt, (felt, felt)),
  c: (felt, (felt, felt)),
  d: (felt, felt),
  e: (felt, felt),
  f: (felt,),
  g: (felt,),
  h: felt
}
extern fn bar(ref r: felt) -> MyEnum implicits(RangeCheck) nopanic;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_structured
blk0:
Inputs: v2: core::RangeCheck, v3: core::felt, v4: core::felt, v5: (core::felt, core::felt)
Initial refs: v2: core::RangeCheck
Statements:
  (v6: core::felt, v7: core::felt) <- struct_destructure(v5)
    Ref changes: r0 <- v2
End:
  Callsite({v2 -> v37, v3 -> v36})

blk1:
Inputs: v8: core::RangeCheck, v9: core::felt, v10: core::felt, v11: (core::felt, core::felt)
Initial refs: v8: core::RangeCheck
Statements:
End:
  Callsite({v8 -> v37, v9 -> v36})

blk2:
Inputs: v12: core::RangeCheck, v13: core::felt, v14: core::felt, v15: (core::felt, core::felt)
Initial refs: v12: core::RangeCheck
Statements:
  (v16: (core::felt, (core::felt, core::felt))) <- struct_construct(v14, v15)
    Ref changes: r0 <- v12
End:
  Callsite({v12 -> v37, v13 -> v36})

blk3:
Inputs: v17: core::RangeCheck, v18: core::felt, v19: core::felt, v20: core::felt
Initial refs: v17: core::RangeCheck
Statements:
End:
  Callsite({v17 -> v37, v18 -> v36})

blk4:
Inputs: v21: core::RangeCheck, v22: core::felt, v23: core::felt, v24: core::felt
Initial refs: v21: core::RangeCheck
Statements:
  (v25: (core::felt, core::felt)) <- struct_construct(v23, v24)
    Ref changes: r0 <- v21
End:
  Callsite({v21 -> v37, v22 -> v36})

blk5:
Inputs: v26: core::RangeCheck, v27: core::felt, v28: core::felt
Initial refs: v26: core::RangeCheck
Statements:
End:
  Callsite({v26 -> v37, v27 -> v36})

blk6:
Inputs: v29: core::RangeCheck, v30: core::felt, v31: core::felt
Initial refs: v29: core::RangeCheck
Statements:
  (v32: (core::felt,)) <- struct_construct(v31)
    Ref changes: r0 <- v29
End:
  Callsite({v29 -> v37, v30 -> v36})

blk7:
Inputs: v33: core::RangeCheck, v34: core::felt, v35: core::felt
Initial refs: v33: core::RangeCheck
Statements:
End:
  Callsite({v33 -> v37, v34 -> v36})

blk8 (root):
Inputs: v0: core::RangeCheck, v1: core::felt
Initial refs: v0: core::RangeCheck
Statements:
  () <- match test::bar(v0, v1) {
    MyEnum::a => blk0,
    MyEnum::b => blk1,
    MyEnum::c => blk2,
    MyEnum::d => blk3,
    MyEnum::e => blk4,
    MyEnum::f => blk5,
    MyEnum::g => blk6,
    MyEnum::h => blk7,
  }
    Ref changes: r0 <- v37
  (v38: ()) <- struct_construct()
End:
  Return(v37, v38)

//! > lowering_flat
blk0:
Inputs: v2: core::RangeCheck, v3: core::felt, v4: core::felt, v5: (core::felt, core::felt)
Statements:
  (v6: core::felt, v7: core::felt) <- struct_destructure(v5)
End:
  Callsite({v2 -> v37})

blk1:
Inputs: v8: core::RangeCheck, v9: core::felt, v10: core::felt, v11: (core::felt, core::felt)
Statements:
End:
  Callsite({v8 -> v37})

blk2:
Inputs: v12: core::RangeCheck, v13: core::felt, v14: core::felt, v15: (core::felt, core::felt)
Statements:
  (v16: (core::felt, (core::felt, core::felt))) <- struct_construct(v14, v15)
End:
  Callsite({v12 -> v37})

blk3:
Inputs: v17: core::RangeCheck, v18: core::felt, v19: core::felt, v20: core::felt
Statements:
End:
  Callsite({v17 -> v37})

blk4:
Inputs: v21: core::RangeCheck, v22: core::felt, v23: core::felt, v24: core::felt
Statements:
  (v25: (core::felt, core::felt)) <- struct_construct(v23, v24)
End:
  Callsite({v21 -> v37})

blk5:
Inputs: v26: core::RangeCheck, v27: core::felt, v28: core::felt
Statements:
End:
  Callsite({v26 -> v37})

blk6:
Inputs: v29: core::RangeCheck, v30: core::felt, v31: core::felt
Statements:
  (v32: (core::felt,)) <- struct_construct(v31)
End:
  Callsite({v29 -> v37})

blk7:
Inputs: v33: core::RangeCheck, v34: core::felt, v35: core::felt
Statements:
End:
  Callsite({v33 -> v37})

blk8 (root):
Inputs: v0: core::RangeCheck, v1: core::felt
Statements:
  () <- match test::bar(v0, v1) {
    MyEnum::a => blk0,
    MyEnum::b => blk1,
    MyEnum::c => blk2,
    MyEnum::d => blk3,
    MyEnum::e => blk4,
    MyEnum::f => blk5,
    MyEnum::g => blk6,
    MyEnum::h => blk7,
  }
  (v38: ()) <- struct_construct()
End:
  Return(v37, v38)

//! > ==========================================================================

//! > Test arm pattern destructure for match-enum variable (with refs and implicits).

//! > test_function_name
test_function_lowering

//! > function
fn foo(mut z: felt) {
    let y = bar(ref z);
    match y {
        MyEnum::a((x, (y, z))) => {},
        MyEnum::b((x, y)) => {},
        MyEnum::c(x) => {},
        MyEnum::d((x, y)) => {},
        MyEnum::e(x) => {},
        MyEnum::f((x,)) => {},
        MyEnum::g(x) => {},
        MyEnum::h(x) => {},
    }
}

//! > function_name
foo

//! > module_code
enum MyEnum {
  a: (felt, (felt, felt)),
  b: (felt, (felt, felt)),
  c: (felt, (felt, felt)),
  d: (felt, felt),
  e: (felt, felt),
  f: (felt,),
  g: (felt,),
  h: felt
}
extern fn bar(ref r: felt) -> MyEnum implicits(RangeCheck) nopanic;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_structured
blk0:
Inputs: v2: core::RangeCheck, v3: core::felt, v4: core::felt, v5: (core::felt, core::felt)
Initial refs: v2: core::RangeCheck
Statements:
  (v6: (core::felt, (core::felt, core::felt))) <- struct_construct(v4, v5)
    Ref changes: r0 <- v2
  (v7: test::MyEnum) <- MyEnum::a(v6)
End:
  Callsite({v2 -> v48, v3 -> v47, v7 -> v46})

blk1:
Inputs: v8: core::RangeCheck, v9: core::felt, v10: core::felt, v11: (core::felt, core::felt)
Initial refs: v8: core::RangeCheck
Statements:
  (v12: (core::felt, (core::felt, core::felt))) <- struct_construct(v10, v11)
    Ref changes: r0 <- v8
  (v13: test::MyEnum) <- MyEnum::b(v12)
End:
  Callsite({v8 -> v48, v9 -> v47, v13 -> v46})

blk2:
Inputs: v14: core::RangeCheck, v15: core::felt, v16: core::felt, v17: (core::felt, core::felt)
Initial refs: v14: core::RangeCheck
Statements:
  (v18: (core::felt, (core::felt, core::felt))) <- struct_construct(v16, v17)
    Ref changes: r0 <- v14
  (v19: test::MyEnum) <- MyEnum::c(v18)
End:
  Callsite({v14 -> v48, v15 -> v47, v19 -> v46})

blk3:
Inputs: v20: core::RangeCheck, v21: core::felt, v22: core::felt, v23: core::felt
Initial refs: v20: core::RangeCheck
Statements:
  (v24: (core::felt, core::felt)) <- struct_construct(v22, v23)
    Ref changes: r0 <- v20
  (v25: test::MyEnum) <- MyEnum::d(v24)
End:
  Callsite({v20 -> v48, v21 -> v47, v25 -> v46})

blk4:
Inputs: v26: core::RangeCheck, v27: core::felt, v28: core::felt, v29: core::felt
Initial refs: v26: core::RangeCheck
Statements:
  (v30: (core::felt, core::felt)) <- struct_construct(v28, v29)
    Ref changes: r0 <- v26
  (v31: test::MyEnum) <- MyEnum::e(v30)
End:
  Callsite({v26 -> v48, v27 -> v47, v31 -> v46})

blk5:
Inputs: v32: core::RangeCheck, v33: core::felt, v34: core::felt
Initial refs: v32: core::RangeCheck
Statements:
  (v35: (core::felt,)) <- struct_construct(v34)
    Ref changes: r0 <- v32
  (v36: test::MyEnum) <- MyEnum::f(v35)
End:
  Callsite({v32 -> v48, v33 -> v47, v36 -> v46})

blk6:
Inputs: v37: core::RangeCheck, v38: core::felt, v39: core::felt
Initial refs: v37: core::RangeCheck
Statements:
  (v40: (core::felt,)) <- struct_construct(v39)
    Ref changes: r0 <- v37
  (v41: test::MyEnum) <- MyEnum::g(v40)
End:
  Callsite({v37 -> v48, v38 -> v47, v41 -> v46})

blk7:
Inputs: v42: core::RangeCheck, v43: core::felt, v44: core::felt
Initial refs: v42: core::RangeCheck
Statements:
  (v45: test::MyEnum) <- MyEnum::h(v44)
    Ref changes: r0 <- v42
End:
  Callsite({v42 -> v48, v43 -> v47, v45 -> v46})

blk8:
Inputs: v49: (core::felt, (core::felt, core::felt))
Initial refs: v48: core::RangeCheck
Statements:
  (v50: core::felt, v51: (core::felt, core::felt)) <- struct_destructure(v49)
  (v52: core::felt, v53: core::felt) <- struct_destructure(v51)
End:
  Callsite({})

blk9:
Inputs: v54: (core::felt, (core::felt, core::felt))
Initial refs: v48: core::RangeCheck
Statements:
  (v55: core::felt, v56: (core::felt, core::felt)) <- struct_destructure(v54)
End:
  Callsite({})

blk10:
Inputs: v57: (core::felt, (core::felt, core::felt))
Initial refs: v48: core::RangeCheck
Statements:
End:
  Callsite({})

blk11:
Inputs: v58: (core::felt, core::felt)
Initial refs: v48: core::RangeCheck
Statements:
  (v59: core::felt, v60: core::felt) <- struct_destructure(v58)
End:
  Callsite({})

blk12:
Inputs: v61: (core::felt, core::felt)
Initial refs: v48: core::RangeCheck
Statements:
End:
  Callsite({})

blk13:
Inputs: v62: (core::felt,)
Initial refs: v48: core::RangeCheck
Statements:
  (v63: core::felt) <- struct_destructure(v62)
End:
  Callsite({})

blk14:
Inputs: v64: (core::felt,)
Initial refs: v48: core::RangeCheck
Statements:
End:
  Callsite({})

blk15:
Inputs: v65: core::felt
Initial refs: v48: core::RangeCheck
Statements:
End:
  Callsite({})

blk16 (root):
Inputs: v0: core::RangeCheck, v1: core::felt
Initial refs: v0: core::RangeCheck
Statements:
  () <- match test::bar(v0, v1) {
    MyEnum::a => blk0,
    MyEnum::b => blk1,
    MyEnum::c => blk2,
    MyEnum::d => blk3,
    MyEnum::e => blk4,
    MyEnum::f => blk5,
    MyEnum::g => blk6,
    MyEnum::h => blk7,
  }
    Ref changes: r0 <- v48
  () <- match_enum(v46) {
    MyEnum::a => blk8,
    MyEnum::b => blk9,
    MyEnum::c => blk10,
    MyEnum::d => blk11,
    MyEnum::e => blk12,
    MyEnum::f => blk13,
    MyEnum::g => blk14,
    MyEnum::h => blk15,
  }
  (v66: ()) <- struct_construct()
End:
  Return(v48, v66)

//! > lowering_flat
blk0:
Inputs: v2: core::RangeCheck, v3: core::felt, v4: core::felt, v5: (core::felt, core::felt)
Statements:
  (v6: (core::felt, (core::felt, core::felt))) <- struct_construct(v4, v5)
  (v7: test::MyEnum) <- MyEnum::a(v6)
End:
  Callsite({v2 -> v48, v7 -> v46})

blk1:
Inputs: v8: core::RangeCheck, v9: core::felt, v10: core::felt, v11: (core::felt, core::felt)
Statements:
  (v12: (core::felt, (core::felt, core::felt))) <- struct_construct(v10, v11)
  (v13: test::MyEnum) <- MyEnum::b(v12)
End:
  Callsite({v8 -> v48, v13 -> v46})

blk2:
Inputs: v14: core::RangeCheck, v15: core::felt, v16: core::felt, v17: (core::felt, core::felt)
Statements:
  (v18: (core::felt, (core::felt, core::felt))) <- struct_construct(v16, v17)
  (v19: test::MyEnum) <- MyEnum::c(v18)
End:
  Callsite({v14 -> v48, v19 -> v46})

blk3:
Inputs: v20: core::RangeCheck, v21: core::felt, v22: core::felt, v23: core::felt
Statements:
  (v24: (core::felt, core::felt)) <- struct_construct(v22, v23)
  (v25: test::MyEnum) <- MyEnum::d(v24)
End:
  Callsite({v20 -> v48, v25 -> v46})

blk4:
Inputs: v26: core::RangeCheck, v27: core::felt, v28: core::felt, v29: core::felt
Statements:
  (v30: (core::felt, core::felt)) <- struct_construct(v28, v29)
  (v31: test::MyEnum) <- MyEnum::e(v30)
End:
  Callsite({v26 -> v48, v31 -> v46})

blk5:
Inputs: v32: core::RangeCheck, v33: core::felt, v34: core::felt
Statements:
  (v35: (core::felt,)) <- struct_construct(v34)
  (v36: test::MyEnum) <- MyEnum::f(v35)
End:
  Callsite({v32 -> v48, v36 -> v46})

blk6:
Inputs: v37: core::RangeCheck, v38: core::felt, v39: core::felt
Statements:
  (v40: (core::felt,)) <- struct_construct(v39)
  (v41: test::MyEnum) <- MyEnum::g(v40)
End:
  Callsite({v37 -> v48, v41 -> v46})

blk7:
Inputs: v42: core::RangeCheck, v43: core::felt, v44: core::felt
Statements:
  (v45: test::MyEnum) <- MyEnum::h(v44)
End:
  Callsite({v42 -> v48, v45 -> v46})

blk8:
Inputs: v49: (core::felt, (core::felt, core::felt))
Statements:
  (v50: core::felt, v51: (core::felt, core::felt)) <- struct_destructure(v49)
  (v52: core::felt, v53: core::felt) <- struct_destructure(v51)
End:
  Callsite({})

blk9:
Inputs: v54: (core::felt, (core::felt, core::felt))
Statements:
  (v55: core::felt, v56: (core::felt, core::felt)) <- struct_destructure(v54)
End:
  Callsite({})

blk10:
Inputs: v57: (core::felt, (core::felt, core::felt))
Statements:
End:
  Callsite({})

blk11:
Inputs: v58: (core::felt, core::felt)
Statements:
  (v59: core::felt, v60: core::felt) <- struct_destructure(v58)
End:
  Callsite({})

blk12:
Inputs: v61: (core::felt, core::felt)
Statements:
End:
  Callsite({})

blk13:
Inputs: v62: (core::felt,)
Statements:
  (v63: core::felt) <- struct_destructure(v62)
End:
  Callsite({})

blk14:
Inputs: v64: (core::felt,)
Statements:
End:
  Callsite({})

blk15:
Inputs: v65: core::felt
Statements:
End:
  Callsite({})

blk16 (root):
Inputs: v0: core::RangeCheck, v1: core::felt
Statements:
  () <- match test::bar(v0, v1) {
    MyEnum::a => blk0,
    MyEnum::b => blk1,
    MyEnum::c => blk2,
    MyEnum::d => blk3,
    MyEnum::e => blk4,
    MyEnum::f => blk5,
    MyEnum::g => blk6,
    MyEnum::h => blk7,
  }
  () <- match_enum(v46) {
    MyEnum::a => blk8,
    MyEnum::b => blk9,
    MyEnum::c => blk10,
    MyEnum::d => blk11,
    MyEnum::e => blk12,
    MyEnum::f => blk13,
    MyEnum::g => blk14,
    MyEnum::h => blk15,
  }
  (v66: ()) <- struct_construct()
End:
  Return(v48, v66)
