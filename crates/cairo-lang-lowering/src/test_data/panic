//! > Test panic.

//! > test_runner_name
test_function_lowering

//! > function
fn foo(ref x: felt, a: bool) -> felt {
  x = 7;
  let mut data = array_new::<felt>();
  array_append::<felt>(ref data, 1);
  let y = panic(data);
  5
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_structured
blk0 (root):
Inputs: v0: core::felt, v1: core::bool
Initial refs: v0: core::felt
Statements:
  (v2: core::felt) <- 7u
    Ref changes: r0 <- v0
  (v3: core::array::Array::<core::felt>) <- core::array::array_new::<core::felt>()
    Ref changes: r0 <- v2
  (v4: core::felt) <- 1u
  (v5: core::array::Array::<core::felt>) <- core::array::array_append::<core::felt>(v3, v4)
End:
  Panic(v2, v5)

//! > lowering_flat
blk0 (root):
Inputs: v0: core::felt, v1: core::bool
Statements:
  (v2: core::felt) <- 7u
  (v3: core::array::Array::<core::felt>) <- core::array::array_new::<core::felt>()
  (v4: core::felt) <- 1u
  (v5: core::array::Array::<core::felt>) <- core::array::array_append::<core::felt>(v3, v4)
  (v6: core::PanicResult::<core::felt>) <- PanicResult::Err(v5)
End:
  Return(v2, v6)

//! > ==========================================================================

//! > Test call panicable.

//! > test_runner_name
test_function_lowering

//! > function
fn foo(ref x: felt, ref a: bool) -> felt {
  if true { x = 7; } else { x = 6; };
  bar(ref a)
}

//! > function_name
foo

//! > module_code
fn bar(ref a: bool) -> felt {
  let mut data = array_new::<felt>();
  array_append::<felt>(ref data, 1);
  let y = panic(data);
  5
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_structured
blk0 (root):
Inputs: v0: core::felt, v1: core::bool
Initial refs: v0: core::felt, v1: core::bool
Statements:
  (v2: ()) <- struct_construct()
    Ref changes: r0 <- v0, r1 <- v1
  (v3: core::bool) <- bool::True(v2)
  () <- match_enum(v3) {
    bool::False => blk2,
    bool::True => blk1,
  }
    Ref changes: r0 <- v8
End:
  Fallthrough(3, {})

blk1:
Inputs: v4: ()
Initial refs: v0: core::felt, v1: core::bool
Statements:
  (v5: core::felt) <- 7u
End:
  Goto(3, {v5 -> v8})

blk2:
Inputs: v6: ()
Initial refs: v0: core::felt, v1: core::bool
Statements:
  (v7: core::felt) <- 6u
End:
  Goto(3, {v7 -> v8})

blk3:
Inputs:
Initial refs: v8: core::felt, v1: core::bool
Statements:
  (v10: core::bool, v9: core::felt) <- test::bar(v1)
    Ref changes: r1 <- v10
End:
  Return(v8, v10, v9)

//! > lowering_flat
blk0 (root):
Inputs: v0: core::felt, v1: core::bool
Statements:
  (v2: ()) <- struct_construct()
  (v3: core::bool) <- bool::True(v2)
  () <- match_enum(v3) {
    bool::False => blk2,
    bool::True => blk1,
  }
End:
  Fallthrough(blk3, {})

blk1:
Inputs: v4: ()
Statements:
  (v5: core::felt) <- 7u
End:
  Goto(blk3, {v5 -> v8})

blk2:
Inputs: v6: ()
Statements:
  (v7: core::felt) <- 6u
End:
  Goto(blk3, {v7 -> v8})

blk3:
Inputs:
Statements:
  (v10: core::bool, v11: core::PanicResult::<core::felt>) <- test::bar(v1)
  () <- match_enum(v11) {
    PanicResult::Ok => blk5,
    PanicResult::Err => blk6,
  }
End:
  Fallthrough(blk4, {})

blk4:
Inputs:
Statements:
  (v14: core::PanicResult::<core::felt>) <- PanicResult::Ok(v12)
End:
  Return(v8, v10, v14)

blk5:
Inputs: v12: core::felt
Statements:
End:
  Goto(blk4, {})

blk6:
Inputs: v13: core::array::Array::<core::felt>
Statements:
  (v15: core::PanicResult::<core::felt>) <- PanicResult::Err(v13)
End:
  Return(v8, v10, v15)
