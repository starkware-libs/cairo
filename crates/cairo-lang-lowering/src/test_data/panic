//! > Test panic.

//! > test_runner_name
test_function_lowering

//! > function
fn foo(ref x: felt252, a: bool) -> felt252 {
  x = 7;
  let mut data = ArrayTrait::new();
  data.append(1);
  let y = panic(data);
  5
}

//! > function_name
foo

//! > module_code
use array::ArrayTrait;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_flat
Parameters: v0: core::felt252, v1: core::bool
blk0 (root):
Statements:
  (v2: core::felt252) <- 7u
End:
  Goto(blk1, {})

blk1:
Statements:
  (v7: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
End:
  Goto(blk2, {})

blk2:
Statements:
  (v4: core::felt252) <- 1u
End:
  Goto(blk3, {})

blk3:
Statements:
  (v8: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v7, v4)
  (v9: ()) <- struct_construct()
End:
  Goto(blk4, {})

blk4:
Statements:
  (v10: core::PanicResult::<(core::felt252, core::felt252)>) <- PanicResult::Err(v8)
End:
  Return(v10)

//! > ==========================================================================

//! > Test call panicable.

//! > test_runner_name
test_function_lowering

//! > function
fn foo(ref x: felt252, ref a: bool) -> felt252 {
  if true { x = 7; } else { x = 6; };
  bar(ref a)
}

//! > function_name
foo

//! > module_code
use array::ArrayTrait;

fn bar(ref a: bool) -> felt252 {
  let mut data = ArrayTrait::new();
  data.append(1);
  let y = panic(data);
  5
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_flat
Parameters: v0: core::felt252, v1: core::bool
blk0 (root):
Statements:
  (v2: ()) <- struct_construct()
  (v3: core::bool) <- bool::True(v2)
End:
  Match(match_enum(v3) {
    bool::False(v6) => blk1,
    bool::True(v4) => blk2,
  })

blk1:
Statements:
  (v7: core::felt252) <- 6u
End:
  Goto(blk3, {v7 -> v8})

blk2:
Statements:
  (v5: core::felt252) <- 7u
End:
  Goto(blk3, {v5 -> v8})

blk3:
Statements:
  (v11: core::PanicResult::<(core::bool, core::felt252)>) <- test::bar(v1)
End:
  Match(match_enum(v11) {
    PanicResult::Ok(v12) => blk4,
    PanicResult::Err(v15) => blk6,
  })

blk4:
Statements:
  (v13: core::bool, v14: core::felt252) <- struct_destructure(v12)
End:
  Goto(blk5, {})

blk5:
Statements:
  (v16: (core::felt252, core::bool, core::felt252)) <- struct_construct(v8, v13, v14)
  (v17: core::PanicResult::<(core::felt252, core::bool, core::felt252)>) <- PanicResult::Ok(v16)
End:
  Return(v17)

blk6:
Statements:
  (v18: core::PanicResult::<(core::felt252, core::bool, core::felt252)>) <- PanicResult::Err(v15)
End:
  Return(v18)
