//! > Test negative impl.

//! > test_runner_name
test_function_lowering

//! > function
fn foo(m: Option<MyStruct>) {
   //foo2::<Option::<MyStruct>, DestructOption::<MyStruct, _, _>> (m)
   foo2(m)
}

//! > function_name
foo

//! > module_code
use core::option::DestructOption;

#[derive(Destruct)]
struct MyStruct {

}

fn foo2<T, +Destruct<T>, -Drop<T>>(t: T) {
    panic_with_felt252('panic')
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_flat
Parameters: v0: core::option::Option::<test::MyStruct>
blk0 (root):
Statements:
  (v2: core::panics::PanicResult::<((),)>) <- test::foo2::<core::option::Option::<test::MyStruct>, core::option::DestructOption::<test::MyStruct, test::MyStructDestruct>>(v0)
End:
  Match(match_enum(v2) {
    PanicResult::Ok(v3) => blk1,
    PanicResult::Err(v5) => blk2,
  })

blk1:
Statements:
  (v4: ()) <- struct_destructure(v3)
  (v6: ((),)) <- struct_construct(v4)
  (v7: core::panics::PanicResult::<((),)>) <- PanicResult::Ok(v6)
End:
  Return(v7)

blk2:
Statements:
  (v8: core::panics::PanicResult::<((),)>) <- PanicResult::Err(v5)
End:
  Return(v8)
