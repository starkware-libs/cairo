//! > Test boolean if.

//! > test_runner_name
test_function_lowering

//! > function
fn foo(flag: bool) -> Option<Felt252Dict<felt252>>{
    let mut d = Felt252DictTrait::new();
    if flag {
        Option::Some(d)
    } else {
        Option::None(())
    }
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_flat
Parameters: v11: core::RangeCheck, v12: core::SegmentArena, v13: core::gas::GasBuiltin, v0: core::bool
blk0 (root):
Statements:
End:
  Goto(blk1, {})

blk1:
Statements:
  (v17: core::SegmentArena, v8: core::dict::Felt252Dict::<core::felt252>) <- core::dict::felt252_dict_new::<core::felt252>(v12)
End:
  Goto(blk2, {})

blk2:
Statements:
End:
  Match(match_enum(v0) {
    bool::False(v4) => blk3,
    bool::True(v2) => blk6,
  })

blk3:
Statements:
End:
  Goto(blk4, {})

blk4:
Statements:
  (v24: core::RangeCheck, v25: core::SegmentArena, v26: core::gas::GasBuiltin, v9: core::dict::SquashedFelt252Dict::<core::felt252>) <- core::dict::Felt252DictImpl::<core::felt252>::squash(v11, v17, v13, v8)
  (v10: ()) <- struct_construct()
End:
  Goto(blk5, {})

blk5:
Statements:
  (v5: ()) <- struct_construct()
  (v6: core::option::Option::<core::dict::Felt252Dict::<core::felt252>>) <- Option::None(v5)
End:
  Goto(blk7, {v24 -> v30, v25 -> v31, v26 -> v32, v6 -> v7})

blk6:
Statements:
  (v3: core::option::Option::<core::dict::Felt252Dict::<core::felt252>>) <- Option::Some(v8)
End:
  Goto(blk7, {v11 -> v30, v17 -> v31, v13 -> v32, v3 -> v7})

blk7:
Statements:
End:
  Return(v30, v31, v32, v7)
