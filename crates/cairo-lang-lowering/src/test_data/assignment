//! > Test assignment.

//! > test_function_name
test_function_lowering

//! > function
fn foo(a: bool) -> felt {
    let mut x = 2;
    if a { x = 3; } else { let mut y = 4; y = 5; }
    x
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > lowering_structured
blk0:
Inputs: v2: ()
Initial refs:
Statements:
  (v3: core::felt) <- 3u
End:
  Callsite({v3 -> v7})

blk1:
Inputs: v4: ()
Initial refs:
Statements:
  (v5: core::felt) <- 4u
  (v6: core::felt) <- 5u
End:
  Callsite({v1 -> v7})

blk2 (root):
Inputs: v0: core::bool
Initial refs:
Statements:
  (v1: core::felt) <- 2u
  () <- match_enum(v0) {
    bool::False => blk1,
    bool::True => blk0,
  }
End:
  Return(v7)

//! > lowering_flat
blk0:
Inputs: v2: ()
Statements:
  (v3: core::felt) <- 3u
End:
  Callsite({v3 -> v7})

blk1:
Inputs: v4: ()
Statements:
  (v5: core::felt) <- 4u
  (v6: core::felt) <- 5u
End:
  Callsite({v1 -> v7})

blk2 (root):
Inputs: v0: core::bool
Statements:
  (v1: core::felt) <- 2u
  () <- match_enum(v0) {
    bool::False => blk1,
    bool::True => blk0,
  }
End:
  Return(v7)
