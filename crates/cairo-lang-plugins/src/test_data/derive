//! > Test expansion of derive.

//! > test_runner_name
test_expand_plugin

//! > cairo_code
#[derive(Copy, Drop)]
struct A{}

#[derive(Copy, Drop)]
struct B{}

#[derive(Clone)]
struct StructForClone {
    a: A,
    b: B,
}

#[derive(Clone)]
enum EnumForClone {
    First: A,
    Second: B,
}

#[derive(Copy, Drop)]
extern type ExternType;

//! > generated_cairo_code
#[derive(Copy, Drop)]
struct A{}

impl ACopy of Copy::<A>;
impl ADrop of Drop::<A>;


#[derive(Copy, Drop)]
struct B{}

impl BCopy of Copy::<B>;
impl BDrop of Drop::<B>;


#[derive(Clone)]
struct StructForClone {
    a: A,
    b: B,
}

impl StructForCloneClone of Clone::<StructForClone> {
    fn clone(self: @StructForClone) -> StructForClone {
        StructForClone {
            a: self.a.clone(),
            b: self.b.clone(),
        }
    }
}


#[derive(Clone)]
enum EnumForClone {
    First: A,
    Second: B,
}

impl EnumForCloneClone of Clone::<EnumForClone> {
    fn clone(self: @EnumForClone) -> EnumForClone {
        match self {
            EnumForClone::First(x) => EnumForClone::First(x.clone()),
            EnumForClone::Second(x) => EnumForClone::Second(x.clone()),
        }
    }
}


#[derive(Copy, Drop)]
extern type ExternType;
impl ExternTypeCopy of Copy::<ExternType>;
impl ExternTypeDrop of Drop::<ExternType>;

//! > expected_diagnostics

//! > ==========================================================================

//! > Test diagnostics of derive.

//! > test_runner_name
test_expand_plugin

//! > cairo_code
#[derive()]
struct EmptyArgs{}

#[derive(1)]
struct NotPath{}

#[derive(Unsupported)]
struct UnsupportedTrait{}

#[derive(long::path)]
struct NonSimplePath{}

#[derive(Clone)]
extern type NotClonable;

//! > generated_cairo_code

//! > expected_diagnostics
error: Expected path.
 --> dummy_file.cairo:4:10
#[derive(1)]
         ^

error: Unsupported trait for derive.
 --> dummy_file.cairo:7:10
#[derive(Unsupported)]
         ^*********^

error: Expected a single segment.
 --> dummy_file.cairo:10:10
#[derive(long::path)]
         ^********^

error: Unsupported trait for derive for extern types.
 --> dummy_file.cairo:13:10
#[derive(Clone)]
         ^***^
