//! > Test match zero.

//! > test_runner_name
block_generator_test

//! > function
fn foo(opt: Option<felt252>) -> felt252 {
    expect(opt)
}

//! > function_name
foo

//! > module_code
#[inline(always)]
fn expect(opt: Option<felt252>) -> felt252 {
    match opt {
        Some(x) => x,
        None => no_inline_panic(),
    }
}


#[inline(never)]
fn no_inline_panic() -> never {
    let mut data = array![];
    data.append(1);
    panic(data)
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > lowering_flat
Parameters: v0: core::option::Option::<core::felt252>
blk0 (root):
Statements:
End:
  Match(match_enum(v0) {
    Option::Some(v1) => blk1,
    Option::None(v2) => blk2,
  })

blk1:
Statements:
  (v3: (core::felt252,)) <- struct_construct(v1)
  (v4: core::panics::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v3)
End:
  Return(v4)

blk2:
Statements:
  (v5: core::panics::PanicResult::<(core::never,)>) <- test::no_inline_panic()
End:
  Match(match_enum(v5) {
    PanicResult::Ok(v6) => blk3,
    PanicResult::Err(v7) => blk4,
  })

blk3:
Statements:
  (v8: core::never) <- struct_destructure(v6)
End:
  Match(match_enum(v8) {
  })

blk4:
Statements:
  (v9: core::panics::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v7)
End:
  Return(v9)

//! > sierra_code
enum_match<core::option::Option::<core::felt252>>([0]) { fallthrough([1]) label_test::foo::0([2]) }
branch_align() -> ()
struct_construct<Tuple<felt252>>([1]) -> ([3])
enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>([3]) -> ([4])
PushValues([4]: core::panics::PanicResult::<(core::felt252,)>) -> ([4])
return([4])
label_test::foo::0:
branch_align() -> ()
drop<Unit>([2]) -> ()
PushValues() -> ()
function_call<user@test::no_inline_panic>() -> ([5])
enum_match<core::panics::PanicResult::<(core::never,)>>([5]) { fallthrough([6]) label_test::foo::2([7]) }
branch_align() -> ()
struct_deconstruct<Tuple<core::never>>([6]) -> ([8])
enum_match<core::never>([8]) { }
label_test::foo::4:
label_test::foo::2:
branch_align() -> ()
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([7]) -> ([9])
PushValues([9]: core::panics::PanicResult::<(core::felt252,)>) -> ([9])
return([9])
label_test::foo::3:
label_test::foo::1:

//! > ==========================================================================

//! > Test dedup of panic code.

//! > test_runner_name
block_generator_test

//! > function
fn foo(mut a: Array<u32>) {
    a.pop_front().unwrap();
    a.pop_front().unwrap();
    a.pop_front().unwrap();
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > lowering_flat
Parameters: v0: core::array::Array::<core::integer::u32>
blk0 (root):
Statements:
End:
  Match(match core::array::array_pop_front::<core::integer::u32>(v0) {
    Option::Some(v1, v2) => blk1,
    Option::None(v3) => blk6,
  })

blk1:
Statements:
  (v4: core::integer::u32) <- core::box::unbox::<core::integer::u32>(v2)
End:
  Match(match core::array::array_pop_front::<core::integer::u32>(v1) {
    Option::Some(v5, v6) => blk2,
    Option::None(v7) => blk5,
  })

blk2:
Statements:
  (v8: core::integer::u32) <- core::box::unbox::<core::integer::u32>(v6)
End:
  Match(match core::array::array_pop_front::<core::integer::u32>(v5) {
    Option::Some(v9, v10) => blk3,
    Option::None(v11) => blk4,
  })

blk3:
Statements:
  (v12: core::integer::u32) <- core::box::unbox::<core::integer::u32>(v10)
  (v13: ()) <- struct_construct()
  (v14: ((),)) <- struct_construct(v13)
  (v15: core::panics::PanicResult::<((),)>) <- PanicResult::Ok(v14)
End:
  Return(v15)

blk4:
Statements:
End:
  Goto(blk7, {})

blk5:
Statements:
End:
  Goto(blk7, {})

blk6:
Statements:
End:
  Goto(blk7, {})

blk7:
Statements:
  (v16: core::array::Array::<core::felt252>) <- core::array::array_new::<core::felt252>()
  (v17: core::felt252) <- 29721761890975875353235833581453094220424382983267374
  (v18: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v16, v17)
  (v19: core::panics::Panic) <- struct_construct()
  (v20: (core::panics::Panic, core::array::Array::<core::felt252>)) <- struct_construct(v19, v18)
  (v21: core::panics::PanicResult::<((),)>) <- PanicResult::Err(v20)
End:
  Return(v21)

//! > sierra_code
array_pop_front<u32>([0]) { fallthrough([1], [2]) label_test::foo::0([3]) }
branch_align() -> ()
unbox<u32>([2]) -> ([4])
drop<u32>([4]) -> ()
array_pop_front<u32>([1]) { fallthrough([5], [6]) label_test::foo::2([7]) }
branch_align() -> ()
unbox<u32>([6]) -> ([8])
drop<u32>([8]) -> ()
array_pop_front<u32>([5]) { fallthrough([9], [10]) label_test::foo::4([11]) }
branch_align() -> ()
drop<Array<u32>>([9]) -> ()
unbox<u32>([10]) -> ([12])
drop<u32>([12]) -> ()
struct_construct<Unit>() -> ([13])
struct_construct<Tuple<Unit>>([13]) -> ([14])
enum_init<core::panics::PanicResult::<((),)>, 0>([14]) -> ([15])
PushValues([15]: core::panics::PanicResult::<((),)>) -> ([15])
return([15])
label_test::foo::4:
branch_align() -> ()
drop<Array<u32>>([11]) -> ()
PushValues() -> ()
jump() { label_test::foo::6() }
label_test::foo::5:
label_test::foo::2:
branch_align() -> ()
drop<Array<u32>>([7]) -> ()
PushValues() -> ()
jump() { label_test::foo::6() }
label_test::foo::3:
label_test::foo::0:
branch_align() -> ()
drop<Array<u32>>([3]) -> ()
PushValues() -> ()
label_test::foo::6:
array_new<felt252>() -> ([16])
const_as_immediate<Const<felt252, 29721761890975875353235833581453094220424382983267374>>() -> ([17])
array_append<felt252>([16], [17]) -> ([18])
struct_construct<core::panics::Panic>() -> ([19])
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([19], [18]) -> ([20])
enum_init<core::panics::PanicResult::<((),)>, 1>([20]) -> ([21])
PushValues([21]: core::panics::PanicResult::<((),)>) -> ([21])
return([21])
label_test::foo::1:
