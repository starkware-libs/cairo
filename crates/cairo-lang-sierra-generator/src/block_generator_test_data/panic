//! > Test match zero.

//! > test_runner_name
block_generator_test

//! > function
fn foo(opt: Option<felt252>) -> felt252 {
  expect(opt)
}

//! > function_name
foo

//! > module_code
#[inline(always)]
fn expect(opt: Option<felt252>) -> felt252 {
   match opt {
      Option::Some(x) => x,
      Option::None => no_inline_panic(),
  }
}


#[inline(never)]
fn no_inline_panic() -> never {
  let mut data = array![];
  data.append(1);
  panic(data)
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > lowering_flat
Parameters: v0: core::option::Option::<core::felt252>
blk0 (root):
Statements:
End:
  Match(match_enum(v0) {
    Option::Some(v2) => blk1,
    Option::None(v3) => blk2,
  })

blk1:
Statements:
  (v6: (core::felt252,)) <- struct_construct(v2)
  (v7: core::panics::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v6)
End:
  Return(v7)

blk2:
Statements:
  (v8: core::panics::PanicResult::<(core::never,)>) <- test::no_inline_panic()
End:
  Match(match_enum(v8) {
    PanicResult::Ok(v9) => blk3,
    PanicResult::Err(v11) => blk4,
  })

blk3:
Statements:
  (v10: core::never) <- struct_destructure(v9)
End:
  Match(match_enum(v10) {
  })

blk4:
Statements:
  (v12: core::panics::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v11)
End:
  Return(v12)

//! > sierra_code
enum_match<core::option::Option::<core::felt252>>([0]) { fallthrough([1]) label_test::foo::0([2]) }
branch_align() -> ()
struct_construct<Tuple<felt252>>([1]) -> ([3])
enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>([3]) -> ([4])
PushValues([4]: core::panics::PanicResult::<(core::felt252,)>) -> ([5])
return([5])
label_test::foo::0:
branch_align() -> ()
drop<Unit>([2]) -> ()
PushValues() -> ()
function_call<user@test::no_inline_panic>() -> ([6])
enum_match<core::panics::PanicResult::<(core::never,)>>([6]) { fallthrough([7]) label_test::foo::2([8]) }
branch_align() -> ()
struct_deconstruct<Tuple<core::never>>([7]) -> ([9])
enum_match<core::never>([9]) { }
label_test::foo::4:
label_test::foo::2:
branch_align() -> ()
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([8]) -> ([10])
PushValues([10]: core::panics::PanicResult::<(core::felt252,)>) -> ([11])
return([11])
label_test::foo::3:
label_test::foo::1:
