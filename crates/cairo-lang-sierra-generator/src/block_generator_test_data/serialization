//! > Test array serialize (this code triggers many issues with the match optimization).

//! > test_runner_name
block_generator_test

//! > function
fn serialize_array_felt_helper(ref serialized: Array<felt252>, mut input: Array<felt252>) {
    match input.pop_front() {
        Some(value) => {
            value.serialize(ref serialized);
            serialize_array_felt_helper(ref serialized, input);
        },
        None => {},
    }
}

//! > function_name
serialize_array_felt_helper

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
array_pop_front<felt252>([0]) { fallthrough([1], [2]) label_test::serialize_array_felt_helper::0([3]) }
branch_align() -> ()
unbox<felt252>([2]) -> ([4])
array_append<felt252>([5], [4]) -> ([6])
PushValues([6]: Array<felt252>, [1]: Array<felt252>) -> ([6], [1])
function_call<user@test::serialize_array_felt_helper>([6], [1]) -> ([7])
PushValues([7]: Array<felt252>) -> ([7])
return([7])
label_test::serialize_array_felt_helper::0:
branch_align() -> ()
drop<Array<felt252>>([3]) -> ()
PushValues([5]: Array<felt252>) -> ([5])
return([5])
label_test::serialize_array_felt_helper::1:

//! > lowering_flat
Parameters: v0: core::array::Array::<core::felt252>, v1: core::array::Array::<core::felt252>
blk0 (root):
Statements:
End:
  Match(match core::array::array_pop_front::<core::felt252>(v1) {
    Option::Some(v2, v3) => blk1,
    Option::None(v4) => blk2,
  })

blk1:
Statements:
  (v5: core::felt252) <- core::box::unbox::<core::felt252>(v3)
  (v6: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v0, v5)
  (v7: core::array::Array::<core::felt252>) <- test::serialize_array_felt_helper(v6, v2)
End:
  Return(v7)

blk2:
Statements:
End:
  Return(v0)
