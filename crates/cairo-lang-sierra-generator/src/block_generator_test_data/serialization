//! > Test array serialize (this code triggers many issues with the match optimization).

//! > test_runner_name
block_generator_test

//! > function
fn serialize_array_felt_helper(ref serialized: Array<felt252>, mut input: Array<felt252>) {
    match input.pop_front() {
        Option::Some(value) => {
            value.serialize(ref serialized);
            serialize_array_felt_helper(ref serialized, input);
        },
        Option::None => {},
    }
}

//! > function_name
serialize_array_felt_helper

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
array_pop_front<felt252>([0]) { fallthrough([1], [2]) label_test::serialize_array_felt_helper::0([3]) }
branch_align() -> ()
unbox<felt252>([2]) -> ([4])
enum_init<core::option::Option::<core::felt252>, 0>([4]) -> ([5])
PushValues([1]: Array<felt252>, [5]: core::option::Option::<core::felt252>) -> ([6], [7])
jump() { label_test::serialize_array_felt_helper::2() }
label_test::serialize_array_felt_helper::0:
branch_align() -> ()
struct_construct<Unit>() -> ([8])
enum_init<core::option::Option::<core::felt252>, 1>([8]) -> ([9])
PushValues([3]: Array<felt252>, [9]: core::option::Option::<core::felt252>) -> ([6], [7])
label_test::serialize_array_felt_helper::2:
enum_match<core::option::Option::<core::felt252>>([7]) { fallthrough([10]) label_test::serialize_array_felt_helper::3([11]) }
branch_align() -> ()
array_append<felt252>([12], [10]) -> ([13])
PushValues([13]: Array<felt252>, [6]: Array<felt252>) -> ([13], [6])
function_call<user@test::serialize_array_felt_helper>([13], [6]) -> ([14], [15])
drop<Unit>([15]) -> ()
PushValues([14]: Array<felt252>) -> ([16])
jump() { label_test::serialize_array_felt_helper::5() }
label_test::serialize_array_felt_helper::3:
branch_align() -> ()
drop<Unit>([11]) -> ()
drop<Array<felt252>>([6]) -> ()
PushValues([12]: Array<felt252>) -> ([16])
label_test::serialize_array_felt_helper::5:
struct_construct<Unit>() -> ([17])
PushValues([16]: Array<felt252>, [17]: Unit) -> ([16], [17])
return([16], [17])
label_test::serialize_array_felt_helper::4:
label_test::serialize_array_felt_helper::1:

//! > lowering_flat
Parameters: v0: core::array::Array::<core::felt252>, v1: core::array::Array::<core::felt252>
blk0 (root):
Statements:
End:
  Match(match core::array::array_pop_front::<core::felt252>(v1) {
    Option::Some(v14, v15) => blk1,
    Option::None(v16) => blk2,
  })

blk1:
Statements:
  (v27: core::felt252) <- core::box::unbox::<core::felt252>(v15)
  (v18: core::option::Option::<core::felt252>) <- Option::Some(v27)
End:
  Goto(blk3, {v14 -> v19, v18 -> v20})

blk2:
Statements:
  (v21: ()) <- struct_construct()
  (v22: core::option::Option::<core::felt252>) <- Option::None(v21)
End:
  Goto(blk3, {v16 -> v19, v22 -> v20})

blk3:
Statements:
End:
  Match(match_enum(v20) {
    Option::Some(v4) => blk4,
    Option::None(v5) => blk5,
  })

blk4:
Statements:
  (v28: core::array::Array::<core::felt252>) <- core::array::array_append::<core::felt252>(v0, v4)
  (v11: core::array::Array::<core::felt252>, v10: ()) <- test::serialize_array_felt_helper(v28, v19)
End:
  Goto(blk6, {v11 -> v12})

blk5:
Statements:
End:
  Goto(blk6, {v0 -> v12})

blk6:
Statements:
  (v13: ()) <- struct_construct()
End:
  Return(v12, v13)
