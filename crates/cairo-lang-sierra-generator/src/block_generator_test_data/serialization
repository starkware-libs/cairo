//! > Test array serialize (this code triggers many issues with the match optimization).

//! > test_runner_name
block_generator_test

//! > function
fn serialize_array_felt_helper(ref serialized: Array<felt252>, mut input: Array<felt252>) {
    match input.pop_front() {
        Option::Some(value) => {
            Serde::<felt252>::serialize(ref serialized, value);
            serialize_array_felt_helper(ref serialized, input);
        },
        Option::None(_) => {},
    }
}

//! > function_name
serialize_array_felt_helper

//! > module_code
use array::ArrayTrait;
use option::OptionTrait;
use serde::Serde;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
array_pop_front<felt252>([0]) { fallthrough([1], [2]) label0([3]) }
branch_align() -> ()
unbox<felt252>([2]) -> ([4])
enum_init<core::option::Option::<core::felt252>, 0>([4]) -> ([5])
PushValues([1]: Array<felt252>, [5]: core::option::Option::<core::felt252>) -> ([6], [7])
jump() { label2() }
label0:
branch_align() -> ()
struct_construct<Unit>() -> ([8])
enum_init<core::option::Option::<core::felt252>, 1>([8]) -> ([9])
PushValues([3]: Array<felt252>, [9]: core::option::Option::<core::felt252>) -> ([6], [7])
label2:
enum_match<core::option::Option::<core::felt252>>([7]) { fallthrough([10]) label3([11]) }
branch_align() -> ()
PushValues([12]: Array<felt252>, [10]: felt252) -> ([15], [16])
function_call<user@core::serde::Felt252Serde::serialize>([15], [16]) -> ([13], [14])
drop<Unit>([14]) -> ()
PushValues([13]: Array<felt252>, [6]: Array<felt252>) -> ([19], [20])
function_call<user@test::serialize_array_felt_helper>([19], [20]) -> ([17], [18])
drop<Unit>([18]) -> ()
PushValues([17]: Array<felt252>) -> ([21])
jump() { label5() }
label3:
branch_align() -> ()
drop<Unit>([11]) -> ()
drop<Array<felt252>>([6]) -> ()
PushValues([12]: Array<felt252>) -> ([21])
label5:
struct_construct<Unit>() -> ([22])
PushValues([21]: Array<felt252>, [22]: Unit) -> ([23], [24])
return([23], [24])
label4:
label1:

//! > lowering_flat
Parameters: v0: core::array::Array::<core::felt252>, v1: core::array::Array::<core::felt252>
blk0 (root):
Statements:
End:
  Match(match core::array::array_pop_front::<core::felt252>(v1) {
    Option::Some(v12, v13) => blk1,
    Option::None(v14) => blk2,
  })

blk1:
Statements:
  (v21: core::felt252) <- core::box::unbox::<core::felt252>(v13)
  (v16: core::option::Option::<core::felt252>) <- Option::Some(v21)
End:
  Goto(blk3, {v12 -> v17, v16 -> v18})

blk2:
Statements:
  (v19: ()) <- struct_construct()
  (v20: core::option::Option::<core::felt252>) <- Option::None(v19)
End:
  Goto(blk3, {v14 -> v17, v20 -> v18})

blk3:
Statements:
End:
  Match(match_enum(v18) {
    Option::Some(v4) => blk4,
    Option::None(v9) => blk5,
  })

blk4:
Statements:
  (v6: core::array::Array::<core::felt252>, v5: ()) <- core::serde::Felt252Serde::serialize(v0, v4)
  (v8: core::array::Array::<core::felt252>, v7: ()) <- test::serialize_array_felt_helper(v6, v17)
End:
  Goto(blk6, {v8 -> v10})

blk5:
Statements:
End:
  Goto(blk6, {v0 -> v10})

blk6:
Statements:
  (v11: ()) <- struct_construct()
End:
  Return(v10, v11)
