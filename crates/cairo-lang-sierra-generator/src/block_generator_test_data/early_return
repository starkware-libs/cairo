//! > Early return using if.

//! > test_runner_name
block_generator_test

//! > function
fn foo(x: felt) -> felt {
    if x == 0 {
        return 1;
    }
    2
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
felt_is_zero([1]) { fallthrough() label0([0]) }
branch_align() -> ()
felt_const<1>() -> ([2])
PushValues([2]: felt) -> ([3])
return([3])
label0:
branch_align() -> ()
drop<NonZero<felt>>([0]) -> ()
PushValues() -> ()
label2:
felt_const<2>() -> ([4])
PushValues([4]: felt) -> ([5])
return([5])
label1:

//! > lowering_flat
Parameters: v0: core::felt
blk0 (root):
Statements:
End:
  Match(match core::felt_is_zero(v0) {
    IsZeroResult::Zero => blk1,
    IsZeroResult::NonZero(v2) => blk2,
  })

blk1:
Statements:
  (v1: core::felt) <- 1u
End:
  Return(v1)

blk2:
Statements:
End:
  Goto(blk3, {})

blk3:
Statements:
  (v3: core::felt) <- 2u
End:
  Return(v3)
