//! > Test match zero.

//! > test_runner_name
block_generator_test

//! > function
fn foo() -> felt252 {
    let x = 10;
    match x {
        0 => 3,
        _ => {
            let y = 4;
            y
        }
    }
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
felt252_const<10>() -> ([0])
felt252_is_zero([0]) { fallthrough() label_test::foo::0([1]) }
branch_align() -> ()
felt252_const<3>() -> ([2])
PushValues([2]: felt252) -> ([3])
jump() { label_test::foo::2() }
label_test::foo::0:
branch_align() -> ()
drop<NonZero<felt252>>([1]) -> ()
felt252_const<4>() -> ([4])
PushValues([4]: felt252) -> ([3])
label_test::foo::2:
PushValues([3]: felt252) -> ([5])
return([5])
label_test::foo::1:

//! > lowering_flat
Parameters:
blk0 (root):
Statements:
  (v0: core::felt252) <- 10u
End:
  Match(match core::felt252_is_zero(v0) {
    IsZeroResult::Zero => blk1,
    IsZeroResult::NonZero(v1) => blk2,
  })

blk1:
Statements:
  (v2: core::felt252) <- 3u
End:
  Goto(blk3, {v2 -> v4})

blk2:
Statements:
  (v3: core::felt252) <- 4u
End:
  Goto(blk3, {v3 -> v4})

blk3:
Statements:
End:
  Return(v4)

//! > ==========================================================================

//! > Test match zero 2.

//! > test_runner_name
block_generator_test

//! > function
fn foo() -> felt252 {
    let x = 7;
    match x {
        0 => x,
        _ => 7,
    }
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
felt252_const<7>() -> ([0])
dup<felt252>([0]) -> ([0], [1])
felt252_is_zero([1]) { fallthrough() label_test::foo::0([2]) }
branch_align() -> ()
PushValues([0]: felt252) -> ([3])
jump() { label_test::foo::2() }
label_test::foo::0:
branch_align() -> ()
drop<NonZero<felt252>>([2]) -> ()
drop<felt252>([0]) -> ()
felt252_const<7>() -> ([4])
PushValues([4]: felt252) -> ([3])
label_test::foo::2:
PushValues([3]: felt252) -> ([5])
return([5])
label_test::foo::1:

//! > lowering_flat
Parameters:
blk0 (root):
Statements:
  (v0: core::felt252) <- 7u
End:
  Match(match core::felt252_is_zero(v0) {
    IsZeroResult::Zero => blk1,
    IsZeroResult::NonZero(v1) => blk2,
  })

blk1:
Statements:
End:
  Goto(blk3, {v0 -> v3})

blk2:
Statements:
  (v2: core::felt252) <- 7u
End:
  Goto(blk3, {v2 -> v3})

blk3:
Statements:
End:
  Return(v3)

//! > ==========================================================================

//! > Test match on an option of a snapshot.

//! > test_runner_name
block_generator_test

//! > function
fn foo(opt : Option<@felt252>) -> felt252 {
  match opt {
    Option::Some(x) => *x,
    Option::None => 0,
  }
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
enum_match<core::option::Option::<@core::felt252>>([0]) { fallthrough([1]) label_test::foo::0([2]) }
branch_align() -> ()
rename<felt252>([1]) -> ([3])
PushValues([3]: felt252) -> ([4])
jump() { label_test::foo::2() }
label_test::foo::0:
branch_align() -> ()
drop<Unit>([2]) -> ()
felt252_const<0>() -> ([5])
PushValues([5]: felt252) -> ([4])
label_test::foo::2:
PushValues([4]: felt252) -> ([6])
return([6])
label_test::foo::1:

//! > lowering_flat
Parameters: v0: core::option::Option::<@core::felt252>
blk0 (root):
Statements:
End:
  Match(match_enum(v0) {
    Option::Some(v1) => blk1,
    Option::None(v3) => blk2,
  })

blk1:
Statements:
  (v2: core::felt252) <- desnap(v1)
End:
  Goto(blk3, {v2 -> v5})

blk2:
Statements:
  (v4: core::felt252) <- 0u
End:
  Goto(blk3, {v4 -> v5})

blk3:
Statements:
End:
  Return(v5)
