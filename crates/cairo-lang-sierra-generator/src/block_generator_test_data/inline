//! > Test match zero.

//! > test_runner_name
block_generator_test

//! > function
fn foo(a: felt) -> felt {
  if a == 2 {
    bar(a)
  } else {
    a
  }
}

//! > function_name
foo

//! > module_code
#[inline(always)]
fn bar(a: felt) -> felt {
  if a == 0 {
    return 1;
  }
  0
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
felt_const<2>() -> ([0])
dup<felt>([1]) -> ([1], [3])
felt_sub([3], [0]) -> ([2])
felt_is_zero([2]) { fallthrough() label0([4]) }
branch_align() -> ()
felt_is_zero([1]) { fallthrough() label2([5]) }
branch_align() -> ()
felt_const<1>() -> ([6])
PushValues([6]: felt) -> ([7])
jump() { label4() }
label2:
branch_align() -> ()
drop<NonZero<felt>>([5]) -> ()
PushValues() -> ()
jump() { label5() }
label3:
PushValues() -> ()
label5:
felt_const<0>() -> ([8])
PushValues([8]: felt) -> ([7])
label4:
PushValues([7]: felt) -> ([9])
jump() { label6() }
label0:
branch_align() -> ()
drop<NonZero<felt>>([4]) -> ()
PushValues([1]: felt) -> ([9])
jump() { label6() }
label1:
