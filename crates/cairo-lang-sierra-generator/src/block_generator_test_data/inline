//! > Test match zero.

//! > test_runner_name
block_generator_test

//! > function
fn foo(a: felt252) -> felt252 {
  if a == 2 {
    bar(a)
  } else {
    a
  }
}

//! > function_name
foo

//! > module_code
#[inline(always)]
fn bar(a: felt252) -> felt252 {
  if a == 0 {
    return 1;
  }
  0
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > lowering_flat
Parameters: v0: core::felt252
blk0 (root):
Statements:
  (v1: core::felt252) <- 2u
  (v6: core::felt252) <- core::felt252_sub(v0, v1)
End:
  Match(match core::felt252_is_zero(v6) {
    IsZeroResult::Zero => blk1,
    IsZeroResult::NonZero(v4) => blk5,
  })

blk1:
Statements:
End:
  Match(match core::felt252_is_zero(v0) {
    IsZeroResult::Zero => blk2,
    IsZeroResult::NonZero(v7) => blk3,
  })

blk2:
Statements:
  (v8: core::felt252) <- 1u
End:
  Goto(blk4, {v8 -> v3})

blk3:
Statements:
  (v9: core::felt252) <- 0u
End:
  Goto(blk4, {v9 -> v3})

blk4:
Statements:
End:
  Goto(blk6, {v3 -> v5})

blk5:
Statements:
End:
  Goto(blk6, {v0 -> v5})

blk6:
Statements:
End:
  Return(v5)

//! > sierra_code
felt252_const<2>() -> ([0])
dup<felt252>([1]) -> ([1], [3])
felt252_sub([3], [0]) -> ([2])
felt252_is_zero([2]) { fallthrough() label_test::foo::0([4]) }
branch_align() -> ()
felt252_is_zero([1]) { fallthrough() label_test::foo::2([5]) }
branch_align() -> ()
felt252_const<1>() -> ([6])
PushValues([6]: felt252) -> ([7])
jump() { label_test::foo::4() }
label_test::foo::2:
branch_align() -> ()
drop<NonZero<felt252>>([5]) -> ()
felt252_const<0>() -> ([8])
PushValues([8]: felt252) -> ([7])
label_test::foo::4:
PushValues([7]: felt252) -> ([9])
jump() { label_test::foo::5() }
label_test::foo::3:
label_test::foo::0:
branch_align() -> ()
drop<NonZero<felt252>>([4]) -> ()
PushValues([1]: felt252) -> ([9])
label_test::foo::5:
PushValues([9]: felt252) -> ([10])
return([10])
label_test::foo::1:
