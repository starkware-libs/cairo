//! > Match with dup

//! > test_runner_name
test_function_generator

//! > function
fn foo(a: felt252) {
    let (x, y) = if a == 0 {
        (a, a)
    } else {
        (a, a)
    };
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label0:
dup<felt252>([0]) -> ([0], [1])
felt252_is_zero([1]) { fallthrough() label1([2]) }
branch_align() -> ()
dup<felt252>([0]) -> ([0], [3])
struct_construct<Tuple<felt252, felt252>>([3], [0]) -> ([4])
drop<Tuple<felt252, felt252>>([4]) -> ()
jump() { label3() }
label1:
branch_align() -> ()
drop<NonZero<felt252>>([2]) -> ()
dup<felt252>([0]) -> ([0], [5])
struct_construct<Tuple<felt252, felt252>>([5], [0]) -> ([6])
drop<Tuple<felt252, felt252>>([6]) -> ()
label3:
struct_construct<Unit>() -> ([7])
store_temp<Unit>([7]) -> ([8])
return([8])
label2:
