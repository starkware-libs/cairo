//! > test inlined function.

//! > test_runner_name
test_function_generator

//! > function
fn foo(a: felt252) -> felt252 {
    if a == 2 {
        bar(a)
    } else {
        a
    }
}

//! > function_name
foo

//! > module_code
#[inline(always)]
fn bar(a: felt252) -> felt252 {
    if a == 0 {
        return 1;
    }
    0
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::foo::0:
const_as_immediate<Const<felt252, 2>>() -> ([1])
dup<felt252>([0]) -> ([0], [2])
felt252_sub([2], [1]) -> ([3])
store_temp<felt252>([3]) -> ([3])
felt252_is_zero([3]) { fallthrough() label_test::foo::1([4]) }
branch_align() -> ()
felt252_is_zero([0]) { fallthrough() label_test::foo::3([5]) }
branch_align() -> ()
const_as_immediate<Const<felt252, 1>>() -> ([6])
store_temp<felt252>([6]) -> ([6])
return([6])
label_test::foo::3:
branch_align() -> ()
drop<NonZero<felt252>>([5]) -> ()
const_as_immediate<Const<felt252, 0>>() -> ([7])
store_temp<felt252>([7]) -> ([7])
return([7])
label_test::foo::4:
label_test::foo::1:
branch_align() -> ()
drop<NonZero<felt252>>([4]) -> ()
store_temp<felt252>([0]) -> ([0])
return([0])
label_test::foo::2:
