//! > ==========================================================================

//! > Test literals and dups.

//! > test_runner_name
test_function_generator

//! > function
fn foo() -> () {
    let x = 5;
    bar(x);
    bar(x);
}

//! > function_name
foo

//! > module_code
fn bar(x: felt252) { bar(x) }

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label0:
disable_ap_tracking() -> ()
felt252_const<5>() -> ([2])
store_temp<RangeCheck>([0]) -> ([6])
store_temp<GasBuiltin>([1]) -> ([7])
dup<felt252>([2]) -> ([2], [8])
store_temp<felt252>([8]) -> ([8])
function_call<user@test::bar>([6], [7], [8]) -> ([3], [4], [5])
enum_match<core::PanicResult::<((),)>>([5]) { fallthrough([9]) label1([10]) }
branch_align() -> ()
struct_deconstruct<Tuple<Unit>>([9]) -> ([11])
drop<Unit>([11]) -> ()
store_temp<RangeCheck>([3]) -> ([15])
store_temp<GasBuiltin>([4]) -> ([16])
store_temp<felt252>([2]) -> ([17])
function_call<user@test::bar>([15], [16], [17]) -> ([12], [13], [14])
enum_match<core::PanicResult::<((),)>>([14]) { fallthrough([18]) label3([19]) }
branch_align() -> ()
struct_deconstruct<Tuple<Unit>>([18]) -> ([20])
drop<Unit>([20]) -> ()
struct_construct<Unit>() -> ([21])
struct_construct<Tuple<Unit>>([21]) -> ([22])
enum_init<core::PanicResult::<((),)>, 0>([22]) -> ([23])
store_temp<RangeCheck>([12]) -> ([24])
store_temp<GasBuiltin>([13]) -> ([25])
store_temp<core::PanicResult::<((),)>>([23]) -> ([26])
return([24], [25], [26])
label3:
branch_align() -> ()
enum_init<core::PanicResult::<((),)>, 1>([19]) -> ([27])
store_temp<RangeCheck>([12]) -> ([28])
store_temp<GasBuiltin>([13]) -> ([29])
store_temp<core::PanicResult::<((),)>>([27]) -> ([30])
return([28], [29], [30])
label4:
label1:
branch_align() -> ()
drop<felt252>([2]) -> ()
enum_init<core::PanicResult::<((),)>, 1>([10]) -> ([31])
store_temp<RangeCheck>([3]) -> ([32])
store_temp<GasBuiltin>([4]) -> ([33])
store_temp<core::PanicResult::<((),)>>([31]) -> ([34])
return([32], [33], [34])
label2:

//! > comment
When fixing this test, Make sure that the added dups are on the const, and not the temps.
