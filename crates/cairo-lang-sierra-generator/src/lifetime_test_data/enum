//! > Test variable lifetime in enum and match

//! > test_function_name
check_variable_lifetime

//! > function_name
foo

//! > function_code
fn foo(x: MyEnum, y: felt, z: felt, w: felt) -> felt {
    match x {
        MyEnum::A(a) => {
            MyEnum::A(1);
            MyEnum::A(2)
        },
        MyEnum::B(b) => {
            MyEnum::A(b + y + z)
        },
        MyEnum::C((c0, c1)) => {
            MyEnum::C((z, w))
        },
    };
    w
}

//! > module_code
enum MyEnum {
    A: felt,
    B: felt,
    C: (felt, felt),
}

//! > lowering_format
blk0:
Inputs: v4: core::felt
Statements:
  (v5: core::felt) <- 1u
  (v6: test::MyEnum) <- MyEnum::A(v5)
  (v7: core::felt) <- 2u
  (v8: test::MyEnum) <- MyEnum::A(v7)
End:
  Callsite()

blk1:
Inputs: v9: core::felt
Statements:
  () <- blk4()
  () <- blk5()
  (v12: test::MyEnum) <- MyEnum::A(v11)
End:
  Callsite()

blk2:
Inputs: v13: (core::felt, core::felt)
Statements:
  (v14: core::felt, v15: core::felt) <- struct_destructure(v13)
  (v16: (core::felt, core::felt)) <- struct_construct(v2, v3)
  (v17: test::MyEnum) <- MyEnum::C(v16)
End:
  Callsite()

blk3 (root):
Inputs: v0: test::MyEnum, v1: core::felt, v2: core::felt, v3: core::felt
Statements:
  () <- match_enum(v0) {
    MyEnum::A => blk0,
    MyEnum::B => blk1,
    MyEnum::C => blk2,
  }
End:
  Return(v3)

blk4:
Inputs:
Statements:
  (v19: core::felt) <- core::felt_add(v9, v1)
End:
  Callsite(v19 -> v10)

blk5:
Inputs:
Statements:
  (v20: core::felt) <- core::felt_add(v10, v2)
End:
  Callsite(v20 -> v11)

//! > last_use
((BlockId(3), 1), 0)
((BlockId(0), 3), 0)
((BlockId(0), 1), 0)
((BlockId(1), 2), 0)
((BlockId(5), 1), 0)
((BlockId(5), 0), 1)
((BlockId(5), 0), 0)
((BlockId(4), 1), 0)
((BlockId(4), 0), 1)
((BlockId(4), 0), 0)
((BlockId(2), 2), 0)
((BlockId(2), 1), 0)
((BlockId(2), 0), 0)
((BlockId(3), 0), 0)

//! > drops
PostStatement((BlockId(0), 3)): v8
PostStatement((BlockId(0), 1)): v6
BeginningOfBlock(BlockId(0)): v4, v2, v1
PostStatement((BlockId(1), 2)): v12
PostStatement((BlockId(2), 2)): v17
PostStatement((BlockId(2), 0)): v14, v15
BeginningOfBlock(BlockId(2)): v1
