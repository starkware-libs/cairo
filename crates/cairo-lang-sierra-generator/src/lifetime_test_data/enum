//! > Test variable lifetime in enum and match

//! > test_runner_name
check_variable_lifetime

//! > function_name
foo

//! > function_code
fn foo(x: MyEnum, y: felt, z: felt, w: felt) -> felt {
    match x {
        MyEnum::A(a) => {
            MyEnum::A(1);
            MyEnum::A(2)
        },
        MyEnum::B(b) => {
            MyEnum::A(b + y + z)
        },
        MyEnum::C((c0, c1)) => {
            MyEnum::C((z, w))
        },
    };
    w
}

//! > module_code
enum MyEnum {
    A: felt,
    B: felt,
    C: (felt, felt),
}

impl MyEnumDrop of Drop::<MyEnum>;

//! > lowering_format
blk0 (root):
Inputs: v0: test::MyEnum, v1: core::felt, v2: core::felt, v3: core::felt
Statements:
End:
  Match(match_enum(v0) {
    MyEnum::A => blk1,
    MyEnum::B => blk2,
    MyEnum::C => blk7,
  })

blk1:
Inputs: v4: core::felt
Statements:
  (v5: core::felt) <- 1u
  (v6: test::MyEnum) <- MyEnum::A(v5)
  (v7: core::felt) <- 2u
  (v8: test::MyEnum) <- MyEnum::A(v7)
End:
  Goto(blk8, {})

blk2:
Inputs: v9: core::felt
Statements:
End:
  Goto(blk3, {})

blk3:
Inputs:
Statements:
  (v19: core::felt) <- core::felt_add(v9, v1)
End:
  Goto(blk4, {})

blk4:
Inputs:
Statements:
End:
  Goto(blk5, {})

blk5:
Inputs:
Statements:
  (v20: core::felt) <- core::felt_add(v19, v2)
End:
  Goto(blk6, {})

blk6:
Inputs:
Statements:
  (v12: test::MyEnum) <- MyEnum::A(v20)
End:
  Goto(blk8, {})

blk7:
Inputs: v13: (core::felt, core::felt)
Statements:
  (v14: core::felt, v15: core::felt) <- struct_destructure(v13)
  (v16: (core::felt, core::felt)) <- struct_construct(v2, v3)
  (v17: test::MyEnum) <- MyEnum::C(v16)
End:
  Goto(blk8, {})

blk8:
Inputs:
Statements:
End:
  Return(v3)

//! > last_use
v3: ((BlockId(8), 0), 0)
v16: ((BlockId(7), 2), 0)
v2: ((BlockId(7), 1), 0)
v13: ((BlockId(7), 0), 0)
v20: ((BlockId(6), 0), 0)
v2: ((BlockId(5), 0), 1)
v19: ((BlockId(5), 0), 0)
v1: ((BlockId(3), 0), 1)
v9: ((BlockId(3), 0), 0)
v7: ((BlockId(1), 3), 0)
v5: ((BlockId(1), 1), 0)
v0: ((BlockId(0), 0), 0)

//! > drops
PostStatement((BlockId(7), 2)): v17
PostStatement((BlockId(7), 0)): v14, v15
PostStatement((BlockId(6), 0)): v12
PostStatement((BlockId(1), 3)): v8
PostStatement((BlockId(1), 1)): v6
BeginningOfBlock(BlockId(1)): v4, v2, v1
BeginningOfBlock(BlockId(7)): v1
