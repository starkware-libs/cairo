//! > Test variable lifetime for structs

//! > test_runner_name
check_variable_lifetime

//! > function_name
foo

//! > function_code
fn foo(x: MyStruct) -> MyStruct {
    let s = MyStruct{ a: x.a, b: x.b };
    let w = MyStruct{ a: s.a, b: s.b };
    MyStruct{ a: 10, b: 20 }
}

//! > module_code
#[derive(Copy)]
struct MyStruct {
    a: felt252,
    b: felt252,
}

impl MyStructDrop of Drop::<MyStruct>;

//! > lowering_format
Parameters: v0: test::MyStruct
blk0 (root):
Statements:
  (v7: core::felt252) <- 10u
  (v8: core::felt252) <- 20u
  (v9: test::MyStruct) <- struct_construct(v7, v8)
End:
  Return(v9)

//! > last_use
v9: ((BlockId(0), 3), 0)
v8: ((BlockId(0), 2), 1)
v7: ((BlockId(0), 2), 0)

//! > drops
BeginningOfBlock(BlockId(0)): v0
