//! > Simple function call

//! > test_runner_name
test_sierra_locations

//! > function
fn foo(a: felt252, b: felt252) -> felt252 {
    let b = felt252_add(a, 5);
    bar(b, b, b)
}

//! > function_name
foo

//! > module_code
fn bar(x: felt252, y: felt252, z: felt252) -> felt252 {
    bar(x, y, z)
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::foo::0:
disable_ap_tracking() -> ()
drop<felt252>([1]) -> ()
const_as_immediate<Const<felt252, 5>>() -> ([2])
felt252_add([0], [2]) -> ([3])
Originating location:
    let b = felt252_add(a, 5);
            ^***************^
In function: lib.cairo::foo
store_temp<felt252>([3]) -> ([4])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
dup<felt252>([4]) -> ([4], [3])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
dup<felt252>([3]) -> ([3], [5])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
store_temp<felt252>([5]) -> ([5])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
store_temp<felt252>([3]) -> ([3])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
function_call<user@test::bar>([4], [5], [3]) -> ([6])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
return([6])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo

//! > ==========================================================================

//! > match statement

//! > test_runner_name
test_sierra_locations

//! > function
fn foo(my_enum: MyEnum) -> u8 {
    match my_enum {
        MyEnum::A(a) => a,
        MyEnum::B(b) => b,
        MyEnum::C((c1, c2)) => { if c1 > c2 {
            c1 + c2
        } else {
            c1 * c2
        } }
    }
}

//! > function_name
foo

//! > module_code
enum MyEnum {
    A: u8,
    B: u8,
    C: (u8, u8),
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::foo::0:
enum_match<test::MyEnum>([1]) { fallthrough([2]) label_test::foo::1([3]) label_test::foo::2([4]) }
Originating location:
\   match my_enum {
|       MyEnum::A(a) => a,
|       MyEnum::B(b) => b,
|       MyEnum::C((c1, c2)) => { if c1 > c2 {
|           c1 + c2
|       } else {
|           c1 * c2
|       } }
|   }
|___^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
\   match my_enum {
|       MyEnum::A(a) => a,
|       MyEnum::B(b) => b,
|       MyEnum::C((c1, c2)) => { if c1 > c2 {
|           c1 + c2
|       } else {
|           c1 * c2
|       } }
|   }
|___^
In function: lib.cairo::foo
store_temp<u8>([2]) -> ([5])
Originating location:
        MyEnum::A(a) => a,
                        ^
In function: lib.cairo::foo
jump() { label_test::foo::4() }
Originating location:
        MyEnum::A(a) => a,
                        ^
In function: lib.cairo::foo
label_test::foo::1:
Originating location:
\   match my_enum {
|       MyEnum::A(a) => a,
|       MyEnum::B(b) => b,
|       MyEnum::C((c1, c2)) => { if c1 > c2 {
|           c1 + c2
|       } else {
|           c1 * c2
|       } }
|   }
|___^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
\   match my_enum {
|       MyEnum::A(a) => a,
|       MyEnum::B(b) => b,
|       MyEnum::C((c1, c2)) => { if c1 > c2 {
|           c1 + c2
|       } else {
|           c1 * c2
|       } }
|   }
|___^
In function: lib.cairo::foo
store_temp<u8>([3]) -> ([5])
Originating location:
        MyEnum::B(b) => b,
                        ^
In function: lib.cairo::foo
label_test::foo::4:
Originating location:
        MyEnum::B(b) => b,
                        ^
In function: lib.cairo::foo
struct_construct<Tuple<u8>>([5]) -> ([6])
Originating location:
        MyEnum::B(b) => b,
                        ^
In function: lib.cairo::foo
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([6]) -> ([7])
Originating location:
\   fn foo(my_enum: MyEnum) -> u8 {
|       match my_enum {
|           MyEnum::A(a) => a,
|           MyEnum::B(b) => b,
|           MyEnum::C((c1, c2)) => { if c1 > c2 {
|               c1 + c2
|           } else {
|               c1 * c2
|           } }
|       }
|   }
|___^
In function: lib.cairo::foo
store_temp<RangeCheck>([0]) -> ([0])
Originating location:
\   fn foo(my_enum: MyEnum) -> u8 {
|       match my_enum {
|           MyEnum::A(a) => a,
|           MyEnum::B(b) => b,
|           MyEnum::C((c1, c2)) => { if c1 > c2 {
|               c1 + c2
|           } else {
|               c1 * c2
|           } }
|       }
|   }
|___^
In function: lib.cairo::foo
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([7]) -> ([7])
Originating location:
\   fn foo(my_enum: MyEnum) -> u8 {
|       match my_enum {
|           MyEnum::A(a) => a,
|           MyEnum::B(b) => b,
|           MyEnum::C((c1, c2)) => { if c1 > c2 {
|               c1 + c2
|           } else {
|               c1 * c2
|           } }
|       }
|   }
|___^
In function: lib.cairo::foo
return([0], [7])
Originating location:
\   fn foo(my_enum: MyEnum) -> u8 {
|       match my_enum {
|           MyEnum::A(a) => a,
|           MyEnum::B(b) => b,
|           MyEnum::C((c1, c2)) => { if c1 > c2 {
|               c1 + c2
|           } else {
|               c1 * c2
|           } }
|       }
|   }
|___^
In function: lib.cairo::foo
label_test::foo::2:
Originating location:
\   match my_enum {
|       MyEnum::A(a) => a,
|       MyEnum::B(b) => b,
|       MyEnum::C((c1, c2)) => { if c1 > c2 {
|           c1 + c2
|       } else {
|           c1 * c2
|       } }
|   }
|___^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
\   match my_enum {
|       MyEnum::A(a) => a,
|       MyEnum::B(b) => b,
|       MyEnum::C((c1, c2)) => { if c1 > c2 {
|           c1 + c2
|       } else {
|           c1 * c2
|       } }
|   }
|___^
In function: lib.cairo::foo
struct_deconstruct<Tuple<u8, u8>>([4]) -> ([8], [9])
Originating location:
        MyEnum::C((c1, c2)) => { if c1 > c2 {
                  ^******^
In function: lib.cairo::foo
dup<u8>([9]) -> ([9], [10])
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: core::integer::U8PartialOrd::gt
Inlined at:
        MyEnum::C((c1, c2)) => { if c1 > c2 {
                                    ^*****^
In function: lib.cairo::foo
dup<u8>([8]) -> ([8], [11])
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: core::integer::U8PartialOrd::gt
Inlined at:
        MyEnum::C((c1, c2)) => { if c1 > c2 {
                                    ^*****^
In function: lib.cairo::foo
u8_overflowing_sub([0], [10], [11]) { fallthrough([12], [13]) label_test::foo::5([14], [15]) }
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: core::integer::U8PartialOrd::gt
Inlined at:
        MyEnum::C((c1, c2)) => { if c1 > c2 {
                                    ^*****^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: core::integer::U8PartialOrd::gt
Inlined at:
        MyEnum::C((c1, c2)) => { if c1 > c2 {
                                    ^*****^
In function: lib.cairo::foo
drop<u8>([13]) -> ()
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: core::integer::U8PartialOrd::gt
Inlined at:
        MyEnum::C((c1, c2)) => { if c1 > c2 {
                                    ^*****^
In function: lib.cairo::foo
u8_wide_mul([8], [9]) -> ([16])
Originating location:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^*******************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
store_temp<u16>([16]) -> ([16])
Originating location:
        downcast(self)
        ^************^
In function: core::integer::DowncastableIntTryInto::try_into
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^******************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
downcast<u16, u8>([12], [16]) { fallthrough([17], [18]) label_test::foo::7([19]) }
Originating location:
        downcast(self)
        ^************^
In function: core::integer::DowncastableIntTryInto::try_into
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^******************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
        downcast(self)
        ^************^
In function: core::integer::DowncastableIntTryInto::try_into
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^******************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
struct_construct<Tuple<u8>>([18]) -> ([20])
Originating location:
        downcast(self)
        ^************^
In function: core::integer::DowncastableIntTryInto::try_into
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^******************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([20]) -> ([21])
Originating location:
\   fn expect(self: Option<T>, err: felt252) -> T {
|       match self {
|           Option::Some(x) => x,
|           Option::None => core::panic_with_felt252(err),
|       }
|   }
|___^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
store_temp<RangeCheck>([17]) -> ([17])
Originating location:
\   fn expect(self: Option<T>, err: felt252) -> T {
|       match self {
|           Option::Some(x) => x,
|           Option::None => core::panic_with_felt252(err),
|       }
|   }
|___^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([21]) -> ([21])
Originating location:
\   fn expect(self: Option<T>, err: felt252) -> T {
|       match self {
|           Option::Some(x) => x,
|           Option::None => core::panic_with_felt252(err),
|       }
|   }
|___^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
return([17], [21])
Originating location:
\   fn expect(self: Option<T>, err: felt252) -> T {
|       match self {
|           Option::Some(x) => x,
|           Option::None => core::panic_with_felt252(err),
|       }
|   }
|___^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
label_test::foo::7:
Originating location:
        downcast(self)
        ^************^
In function: core::integer::DowncastableIntTryInto::try_into
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^******************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
        downcast(self)
        ^************^
In function: core::integer::DowncastableIntTryInto::try_into
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^******************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
array_new<felt252>() -> ([22])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::array_inline_macro
Inlined at:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
const_as_immediate<Const<felt252, 608642107937639184217240406363762551>>() -> ([23])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::array_inline_macro
Inlined at:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
store_temp<felt252>([23]) -> ([23])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
array_append<felt252>([22], [23]) -> ([24])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
struct_construct<core::panics::Panic>() -> ([25])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([25], [24]) -> ([26])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([26]) -> ([27])
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
store_temp<RangeCheck>([19]) -> ([19])
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([27]) -> ([27])
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
return([19], [27])
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
label_test::foo::8:
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: core::option::OptionTraitImpl::expect
Inlined at:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^********************************************************^
In function: core::integer::U8Mul::mul
Inlined at:
            c1 * c2
            ^*****^
In function: lib.cairo::foo
label_test::foo::5:
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: core::integer::U8PartialOrd::gt
Inlined at:
        MyEnum::C((c1, c2)) => { if c1 > c2 {
                                    ^*****^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: core::integer::U8PartialOrd::gt
Inlined at:
        MyEnum::C((c1, c2)) => { if c1 > c2 {
                                    ^*****^
In function: lib.cairo::foo
drop<u8>([15]) -> ()
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: core::integer::U8PartialOrd::gt
Inlined at:
        MyEnum::C((c1, c2)) => { if c1 > c2 {
                                    ^*****^
In function: lib.cairo::foo
u8_overflowing_add([14], [8], [9]) { fallthrough([28], [29]) label_test::foo::9([30], [31]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
struct_construct<Tuple<u8>>([29]) -> ([32])
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([32]) -> ([33])
Originating location:
\   fn expect<+PanicDestruct<E>>(self: Result<T, E>, err: felt252) -> T {
|       match self {
|           Result::Ok(x) => x,
|           Result::Err(_) => core::panic_with_felt252(err),
|       }
|   }
|___^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
store_temp<RangeCheck>([28]) -> ([28])
Originating location:
\   fn expect<+PanicDestruct<E>>(self: Result<T, E>, err: felt252) -> T {
|       match self {
|           Result::Ok(x) => x,
|           Result::Err(_) => core::panic_with_felt252(err),
|       }
|   }
|___^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([33]) -> ([33])
Originating location:
\   fn expect<+PanicDestruct<E>>(self: Result<T, E>, err: felt252) -> T {
|       match self {
|           Result::Ok(x) => x,
|           Result::Err(_) => core::panic_with_felt252(err),
|       }
|   }
|___^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
return([28], [33])
Originating location:
\   fn expect<+PanicDestruct<E>>(self: Result<T, E>, err: felt252) -> T {
|       match self {
|           Result::Ok(x) => x,
|           Result::Err(_) => core::panic_with_felt252(err),
|       }
|   }
|___^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
label_test::foo::9:
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
drop<u8>([31]) -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
array_new<felt252>() -> ([34])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
const_as_immediate<Const<felt252, 608642104203229548495787928534675319>>() -> ([35])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
store_temp<felt252>([35]) -> ([35])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
array_append<felt252>([34], [35]) -> ([36])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
struct_construct<core::panics::Panic>() -> ([37])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([37], [36]) -> ([38])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([38]) -> ([39])
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
store_temp<RangeCheck>([30]) -> ([30])
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([39]) -> ([39])
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
return([30], [39])
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
label_test::foo::10:
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
label_test::foo::6:
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo
label_test::foo::3:
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
            c1 + c2
            ^*****^
In function: lib.cairo::foo

//! > ==========================================================================

//! > enum flow

//! > test_runner_name
test_sierra_locations

//! > function

//! > function_name
main

//! > module_code
>>> file: ../../examples/enum_flow.cairo

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::main::0:
const_as_immediate<Const<felt252, 300>>() -> ([0])
store_temp<felt252>([0]) -> ([0])
Originating location:
    300
    ^*^
In function: lib.cairo::main
return([0])
Originating location:
    300
    ^*^
In function: lib.cairo::main

//! > ==========================================================================

//! > match or

//! > test_runner_name
test_sierra_locations

//! > function

//! > function_name
main

//! > module_code
>>> file: ../../examples/match_or.cairo

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::main::0:
const_as_immediate<Const<felt252, 1>>() -> ([1])
const_as_immediate<Const<felt252, 2>>() -> ([2])
struct_construct<Tuple<felt252, felt252>>([1], [2]) -> ([3])
enum_init<test::MyEnum, 0>([3]) -> ([4])
Originating location:
    let a = MyEnum::A((1, 2));
                      ^****^
In function: lib.cairo::main
const_as_immediate<Const<felt252, 1>>() -> ([5])
Originating location:
    let a = MyEnum::A((1, 2));
                      ^****^
In function: lib.cairo::main
const_as_immediate<Const<felt252, 2>>() -> ([6])
Originating location:
    let a = MyEnum::A((1, 2));
                      ^****^
In function: lib.cairo::main
struct_construct<Tuple<felt252, felt252>>([5], [6]) -> ([7])
Originating location:
    let a = MyEnum::A((1, 2));
                      ^****^
In function: lib.cairo::main
enum_init<test::MyEnum, 1>([7]) -> ([8])
Originating location:
    let b = MyEnum::B((1, 2));
                      ^****^
In function: lib.cairo::main
const_as_immediate<Const<u8, 1>>() -> ([9])
Originating location:
    let b = MyEnum::B((1, 2));
                      ^****^
In function: lib.cairo::main
const_as_immediate<Const<u8, 2>>() -> ([10])
Originating location:
    let b = MyEnum::B((1, 2));
                      ^****^
In function: lib.cairo::main
const_as_immediate<Const<u8, 3>>() -> ([11])
Originating location:
    let b = MyEnum::B((1, 2));
                      ^****^
In function: lib.cairo::main
struct_construct<Tuple<u8, u8, u8>>([9], [10], [11]) -> ([12])
Originating location:
    let b = MyEnum::B((1, 2));
                      ^****^
In function: lib.cairo::main
enum_init<test::MyEnum, 2>([12]) -> ([13])
Originating location:
    let c = MyEnum::C((1, 2, 3));
                      ^*******^
In function: lib.cairo::main
const_as_immediate<Const<u8, 1>>() -> ([14])
Originating location:
    let c = MyEnum::C((1, 2, 3));
                      ^*******^
In function: lib.cairo::main
const_as_immediate<Const<u8, 2>>() -> ([15])
Originating location:
    let c = MyEnum::C((1, 2, 3));
                      ^*******^
In function: lib.cairo::main
const_as_immediate<Const<u8, 9>>() -> ([16])
Originating location:
    let c = MyEnum::C((1, 2, 3));
                      ^*******^
In function: lib.cairo::main
struct_construct<test::P>([14], [15], [16]) -> ([17])
Originating location:
    let c = MyEnum::C((1, 2, 3));
                      ^*******^
In function: lib.cairo::main
enum_init<test::MyEnum, 3>([17]) -> ([18])
Originating location:
    let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
                      ^********************^
In function: lib.cairo::main
store_temp<test::MyEnum>([4]) -> ([4])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<test::MyEnum>([8]) -> ([8])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<test::MyEnum>([13]) -> ([13])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<test::MyEnum>([18]) -> ([18])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
enum_match<test::MyEnum>([4]) { fallthrough([19]) label_test::main::1([20]) label_test::main::2([21]) label_test::main::3([22]) }
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
drop<Tuple<felt252, felt252>>([19]) -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
jump() { label_test::main::5() }
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
label_test::main::1:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
drop<Tuple<felt252, felt252>>([20]) -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
label_test::main::5:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([0]) -> ([23])
Originating location:
\   fn main() {
|       let a = MyEnum::A((1, 2));
|       let b = MyEnum::B((1, 2));
|       let c = MyEnum::C((1, 2, 3));
|       let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
|       let _ = foo(a);
|       let _ = foo(b);
|       let _ = foo(c);
|       let _ = foo(d);
|   }
|___^
In function: lib.cairo::main
jump() { label_test::main::6() }
Originating location:
\   fn main() {
|       let a = MyEnum::A((1, 2));
|       let b = MyEnum::B((1, 2));
|       let c = MyEnum::C((1, 2, 3));
|       let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
|       let _ = foo(a);
|       let _ = foo(b);
|       let _ = foo(c);
|       let _ = foo(d);
|   }
|___^
In function: lib.cairo::main
label_test::main::2:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
struct_deconstruct<Tuple<u8, u8, u8>>([21]) -> ([24], [25], [26])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
drop<u8>([25]) -> ()
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<u8>([24]) -> ([27])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<u8>([26]) -> ([28])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
jump() { label_test::main::7() }
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
label_test::main::3:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
struct_deconstruct<test::P>([22]) -> ([29], [30], [31])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
drop<u8>([30]) -> ()
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<u8>([29]) -> ([27])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<u8>([31]) -> ([28])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
label_test::main::7:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
u8_overflowing_add([0], [27], [28]) { fallthrough([32], [33]) label_test::main::8([34], [35]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
u8_to_felt252([33]) -> ([36])
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: core::integer::U8IntoFelt252::into
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                 ^************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
drop<felt252>([36]) -> ()
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: core::integer::U8IntoFelt252::into
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                 ^************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([32]) -> ([23])
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
label_test::main::6:
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
enum_match<test::MyEnum>([8]) { fallthrough([37]) label_test::main::10([38]) label_test::main::11([39]) label_test::main::12([40]) }
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
drop<Tuple<felt252, felt252>>([37]) -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
jump() { label_test::main::14() }
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
label_test::main::10:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
drop<Tuple<felt252, felt252>>([38]) -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
label_test::main::14:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([23]) -> ([41])
Originating location:
\   fn main() {
|       let a = MyEnum::A((1, 2));
|       let b = MyEnum::B((1, 2));
|       let c = MyEnum::C((1, 2, 3));
|       let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
|       let _ = foo(a);
|       let _ = foo(b);
|       let _ = foo(c);
|       let _ = foo(d);
|   }
|___^
In function: lib.cairo::main
jump() { label_test::main::15() }
Originating location:
\   fn main() {
|       let a = MyEnum::A((1, 2));
|       let b = MyEnum::B((1, 2));
|       let c = MyEnum::C((1, 2, 3));
|       let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
|       let _ = foo(a);
|       let _ = foo(b);
|       let _ = foo(c);
|       let _ = foo(d);
|   }
|___^
In function: lib.cairo::main
label_test::main::11:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
struct_deconstruct<Tuple<u8, u8, u8>>([39]) -> ([42], [43], [44])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
drop<u8>([43]) -> ()
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
store_temp<u8>([42]) -> ([45])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
store_temp<u8>([44]) -> ([46])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
jump() { label_test::main::16() }
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
label_test::main::12:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
struct_deconstruct<test::P>([40]) -> ([47], [48], [49])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
drop<u8>([48]) -> ()
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
store_temp<u8>([47]) -> ([45])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
store_temp<u8>([49]) -> ([46])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
label_test::main::16:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
u8_overflowing_add([23], [45], [46]) { fallthrough([50], [51]) label_test::main::17([52], [53]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
u8_to_felt252([51]) -> ([54])
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: core::integer::U8IntoFelt252::into
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                 ^************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
drop<felt252>([54]) -> ()
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: core::integer::U8IntoFelt252::into
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                 ^************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([50]) -> ([41])
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
label_test::main::15:
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
enum_match<test::MyEnum>([13]) { fallthrough([55]) label_test::main::19([56]) label_test::main::20([57]) label_test::main::21([58]) }
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
drop<Tuple<felt252, felt252>>([55]) -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
jump() { label_test::main::23() }
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
label_test::main::19:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
drop<Tuple<felt252, felt252>>([56]) -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
label_test::main::23:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([41]) -> ([59])
Originating location:
\   fn main() {
|       let a = MyEnum::A((1, 2));
|       let b = MyEnum::B((1, 2));
|       let c = MyEnum::C((1, 2, 3));
|       let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
|       let _ = foo(a);
|       let _ = foo(b);
|       let _ = foo(c);
|       let _ = foo(d);
|   }
|___^
In function: lib.cairo::main
jump() { label_test::main::24() }
Originating location:
\   fn main() {
|       let a = MyEnum::A((1, 2));
|       let b = MyEnum::B((1, 2));
|       let c = MyEnum::C((1, 2, 3));
|       let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
|       let _ = foo(a);
|       let _ = foo(b);
|       let _ = foo(c);
|       let _ = foo(d);
|   }
|___^
In function: lib.cairo::main
label_test::main::20:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
struct_deconstruct<Tuple<u8, u8, u8>>([57]) -> ([60], [61], [62])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
drop<u8>([61]) -> ()
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
store_temp<u8>([60]) -> ([63])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
store_temp<u8>([62]) -> ([64])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
jump() { label_test::main::25() }
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
label_test::main::21:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
struct_deconstruct<test::P>([58]) -> ([65], [66], [67])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
drop<u8>([66]) -> ()
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
store_temp<u8>([65]) -> ([63])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
store_temp<u8>([67]) -> ([64])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
label_test::main::25:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
u8_overflowing_add([41], [63], [64]) { fallthrough([68], [69]) label_test::main::26([70], [71]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
u8_to_felt252([69]) -> ([72])
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: core::integer::U8IntoFelt252::into
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                 ^************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
drop<felt252>([72]) -> ()
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: core::integer::U8IntoFelt252::into
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                 ^************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([68]) -> ([59])
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
label_test::main::24:
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
enum_match<test::MyEnum>([18]) { fallthrough([73]) label_test::main::28([74]) label_test::main::29([75]) label_test::main::30([76]) }
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
drop<Tuple<felt252, felt252>>([73]) -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
jump() { label_test::main::32() }
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
label_test::main::28:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
drop<Tuple<felt252, felt252>>([74]) -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
label_test::main::32:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([59]) -> ([77])
Originating location:
\   fn main() {
|       let a = MyEnum::A((1, 2));
|       let b = MyEnum::B((1, 2));
|       let c = MyEnum::C((1, 2, 3));
|       let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
|       let _ = foo(a);
|       let _ = foo(b);
|       let _ = foo(c);
|       let _ = foo(d);
|   }
|___^
In function: lib.cairo::main
jump() { label_test::main::33() }
Originating location:
\   fn main() {
|       let a = MyEnum::A((1, 2));
|       let b = MyEnum::B((1, 2));
|       let c = MyEnum::C((1, 2, 3));
|       let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
|       let _ = foo(a);
|       let _ = foo(b);
|       let _ = foo(c);
|       let _ = foo(d);
|   }
|___^
In function: lib.cairo::main
label_test::main::29:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
struct_deconstruct<Tuple<u8, u8, u8>>([75]) -> ([78], [79], [80])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
drop<u8>([79]) -> ()
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
store_temp<u8>([78]) -> ([81])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
store_temp<u8>([80]) -> ([82])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
jump() { label_test::main::34() }
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
label_test::main::30:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
struct_deconstruct<test::P>([76]) -> ([83], [84], [85])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
drop<u8>([84]) -> ()
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
store_temp<u8>([83]) -> ([81])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
store_temp<u8>([85]) -> ([82])
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
label_test::main::34:
Originating location:
\   match a {
|       MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
|       MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
|   }
|___^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
u8_overflowing_add([59], [81], [82]) { fallthrough([86], [87]) label_test::main::35([88], [89]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
u8_to_felt252([87]) -> ([90])
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: core::integer::U8IntoFelt252::into
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                 ^************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
drop<felt252>([90]) -> ()
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: core::integer::U8IntoFelt252::into
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                 ^************^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([86]) -> ([77])
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
label_test::main::33:
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
struct_construct<Unit>() -> ([91])
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
struct_construct<Tuple<Unit>>([91]) -> ([92])
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
enum_init<core::panics::PanicResult::<((),)>, 0>([92]) -> ([93])
Originating location:
\   fn main() {
|       let a = MyEnum::A((1, 2));
|       let b = MyEnum::B((1, 2));
|       let c = MyEnum::C((1, 2, 3));
|       let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
|       let _ = foo(a);
|       let _ = foo(b);
|       let _ = foo(c);
|       let _ = foo(d);
|   }
|___^
In function: lib.cairo::main
store_temp<core::panics::PanicResult::<((),)>>([93]) -> ([93])
Originating location:
\   fn main() {
|       let a = MyEnum::A((1, 2));
|       let b = MyEnum::B((1, 2));
|       let c = MyEnum::C((1, 2, 3));
|       let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
|       let _ = foo(a);
|       let _ = foo(b);
|       let _ = foo(c);
|       let _ = foo(d);
|   }
|___^
In function: lib.cairo::main
return([77], [93])
Originating location:
\   fn main() {
|       let a = MyEnum::A((1, 2));
|       let b = MyEnum::B((1, 2));
|       let c = MyEnum::C((1, 2, 3));
|       let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
|       let _ = foo(a);
|       let _ = foo(b);
|       let _ = foo(c);
|       let _ = foo(d);
|   }
|___^
In function: lib.cairo::main
label_test::main::35:
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
drop<u8>([89]) -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
array_new<felt252>() -> ([94])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
const_as_immediate<Const<felt252, 608642104203229548495787928534675319>>() -> ([95])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
store_temp<felt252>([95]) -> ([95])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
array_append<felt252>([94], [95]) -> ([96])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
struct_construct<core::panics::Panic>() -> ([97])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([97], [96]) -> ([98])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
enum_init<core::panics::PanicResult::<((),)>, 1>([98]) -> ([99])
Originating location:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([88]) -> ([88])
Originating location:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
store_temp<core::panics::PanicResult::<((),)>>([99]) -> ([99])
Originating location:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
return([88], [99])
Originating location:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
label_test::main::36:
Originating location:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
label_test::main::31:
Originating location:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
label_test::main::26:
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
drop<u8>([71]) -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
drop<test::MyEnum>([18]) -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
array_new<felt252>() -> ([100])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
const_as_immediate<Const<felt252, 608642104203229548495787928534675319>>() -> ([101])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
store_temp<felt252>([101]) -> ([101])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
array_append<felt252>([100], [101]) -> ([102])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
struct_construct<core::panics::Panic>() -> ([103])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([103], [102]) -> ([104])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
enum_init<core::panics::PanicResult::<((),)>, 1>([104]) -> ([105])
Originating location:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([70]) -> ([70])
Originating location:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
store_temp<core::panics::PanicResult::<((),)>>([105]) -> ([105])
Originating location:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
return([70], [105])
Originating location:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
label_test::main::27:
Originating location:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
label_test::main::22:
Originating location:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
label_test::main::17:
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
drop<u8>([53]) -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
drop<test::MyEnum>([18]) -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
drop<test::MyEnum>([13]) -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
array_new<felt252>() -> ([106])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
const_as_immediate<Const<felt252, 608642104203229548495787928534675319>>() -> ([107])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
store_temp<felt252>([107]) -> ([107])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
array_append<felt252>([106], [107]) -> ([108])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
struct_construct<core::panics::Panic>() -> ([109])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([109], [108]) -> ([110])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
enum_init<core::panics::PanicResult::<((),)>, 1>([110]) -> ([111])
Originating location:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([52]) -> ([52])
Originating location:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
store_temp<core::panics::PanicResult::<((),)>>([111]) -> ([111])
Originating location:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
return([52], [111])
Originating location:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
label_test::main::18:
Originating location:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
label_test::main::13:
Originating location:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
label_test::main::8:
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
drop<u8>([35]) -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
drop<test::MyEnum>([18]) -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
drop<test::MyEnum>([13]) -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
drop<test::MyEnum>([8]) -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
array_new<felt252>() -> ([112])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
const_as_immediate<Const<felt252, 608642104203229548495787928534675319>>() -> ([113])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<felt252>([113]) -> ([113])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
array_append<felt252>([112], [113]) -> ([114])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
struct_construct<core::panics::Panic>() -> ([115])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([115], [114]) -> ([116])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,err_code);
            ^**************************************************************************^
In function: core::array_inline_macro
Inlined at:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: core::result::ResultTraitImpl::expect
Inlined at:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^****************************************************^
In function: core::integer::U8Add::add
Inlined at:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                                                  ^***^
In function: lib.cairo::foo
Inlined at:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
enum_init<core::panics::PanicResult::<((),)>, 1>([116]) -> ([117])
Originating location:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([34]) -> ([34])
Originating location:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<core::panics::PanicResult::<((),)>>([117]) -> ([117])
Originating location:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
return([34], [117])
Originating location:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
label_test::main::9:
Originating location:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
label_test::main::4:
Originating location:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main

//! > ==========================================================================

//! > pedersen test

//! > test_runner_name
test_sierra_locations

//! > function

//! > function_name
test_pedersen

//! > module_code
>>> file: ../../examples/pedersen_test.cairo

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::test_pedersen::0:
const_as_immediate<Const<felt252, 1>>() -> ([1])
const_as_immediate<Const<felt252, 2>>() -> ([2])
store_temp<felt252>([1]) -> ([1])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
                      ^************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([2]) -> ([2])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
                      ^************^
In function: lib.cairo::test_pedersen
pedersen([0], [1], [2]) -> ([3], [4])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
                      ^************^
In function: lib.cairo::test_pedersen
const_as_immediate<Const<felt252, 3>>() -> ([5])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
                      ^************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([4]) -> ([4])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
             ^*************************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([5]) -> ([5])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
             ^*************************^
In function: lib.cairo::test_pedersen
pedersen([3], [4], [5]) -> ([6], [7])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
             ^*************************^
In function: lib.cairo::test_pedersen
const_as_immediate<Const<felt252, 4>>() -> ([8])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
             ^*************************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([7]) -> ([7])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([8]) -> ([8])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
pedersen([6], [7], [8]) -> ([9], [10])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
store_temp<Pedersen>([9]) -> ([9])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([10]) -> ([10])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
return([9], [10])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen

//! > ==========================================================================

//! > print macros

//! > test_runner_name
test_sierra_locations

//! > function
fn foo() {
    let x = 10; // highlighted
    let y = 20; // highlighted

    if x == y { // highlighted
        println!("x == y");
    } else {
        println!("x != y"); // no runtime cost - not highlighted
    };
}

//! > function_name
foo

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::foo::0:
alloc_local<RangeCheck>() -> ([2])
alloc_local<core::byte_array::ByteArray>() -> ([4])
alloc_local<RangeCheck>() -> ([6])
alloc_local<core::byte_array::ByteArray>() -> ([8])
finalize_locals() -> ()
disable_ap_tracking() -> ()
const_as_immediate<Const<felt252, 10>>() -> ([9])
const_as_immediate<Const<felt252, 20>>() -> ([10])
store_temp<felt252>([9]) -> ([9])
Originating location:
        felt252_sub(lhs, rhs)
        ^*******************^
In function: core::Felt252Sub::sub
Inlined at:
        match *lhs - *rhs {
              ^*********^
In function: core::Felt252PartialEq::eq
Inlined at:
    if x == y { // highlighted
       ^****^
In function: lib.cairo::foo
felt252_sub([9], [10]) -> ([11])
Originating location:
        felt252_sub(lhs, rhs)
        ^*******************^
In function: core::Felt252Sub::sub
Inlined at:
        match *lhs - *rhs {
              ^*********^
In function: core::Felt252PartialEq::eq
Inlined at:
    if x == y { // highlighted
       ^****^
In function: lib.cairo::foo
store_temp<felt252>([11]) -> ([11])
Originating location:
\   match *lhs - *rhs {
|       0 => true,
|       _ => false,
|   }
|___^
In function: core::Felt252PartialEq::eq
Inlined at:
    if x == y { // highlighted
       ^****^
In function: lib.cairo::foo
felt252_is_zero([11]) { fallthrough() label_test::foo::1([12]) }
Originating location:
\   match *lhs - *rhs {
|       0 => true,
|       _ => false,
|   }
|___^
In function: core::Felt252PartialEq::eq
Inlined at:
    if x == y { // highlighted
       ^****^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
\   match *lhs - *rhs {
|       0 => true,
|       _ => false,
|   }
|___^
In function: core::Felt252PartialEq::eq
Inlined at:
    if x == y { // highlighted
       ^****^
In function: lib.cairo::foo
drop<Uninitialized<core::byte_array::ByteArray>>([4]) -> ()
Originating location:
\   match *lhs - *rhs {
|       0 => true,
|       _ => false,
|   }
|___^
In function: core::Felt252PartialEq::eq
Inlined at:
    if x == y { // highlighted
       ^****^
In function: lib.cairo::foo
drop<Uninitialized<RangeCheck>>([2]) -> ()
Originating location:
\   match *lhs - *rhs {
|       0 => true,
|       _ => false,
|   }
|___^
In function: core::Felt252PartialEq::eq
Inlined at:
    if x == y { // highlighted
       ^****^
In function: lib.cairo::foo
array_new<bytes31>() -> ([13])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: println_macro::println_macro
const_as_immediate<Const<felt252, 0>>() -> ([14])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: println_macro::println_macro
const_as_immediate<Const<u32, 0>>() -> ([15])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: println_macro::println_macro
const_as_immediate<Const<felt252, 33812444595910922>>() -> ([16])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: println_macro::println_macro
const_as_immediate<Const<u32, 7>>() -> ([17])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: println_macro::println_macro
struct_construct<core::byte_array::ByteArray>([13], [14], [15]) -> ([18])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: println_macro::println_macro
store_temp<RangeCheck>([0]) -> ([0])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_temp<core::byte_array::ByteArray>([18]) -> ([18])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_temp<felt252>([16]) -> ([16])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_temp<u32>([17]) -> ([17])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
function_call<user@core::byte_array::ByteArrayImpl::append_word>([0], [18], [16], [17]) -> ([5], [19])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_local<RangeCheck>([6], [5]) -> ([5])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
enum_match<core::panics::PanicResult::<(core::byte_array::ByteArray, ())>>([19]) { fallthrough([20]) label_test::foo::3([21]) }
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
branch_align() -> ()
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
array_new<felt252>() -> ([22])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::debug::array_inline_macro
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
const_as_immediate<Const<felt252, 1997209042069643135709344952807065910992472029923670688473712229447419591075>>() -> ([23])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::debug::array_inline_macro
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
store_temp<felt252>([23]) -> ([23])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,core::byte_array::BYTE_ARRAY_MAGIC);
            ^****************************************************************************************************^
In function: core::debug::array_inline_macro
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
array_append<felt252>([22], [23]) -> ([24])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,core::byte_array::BYTE_ARRAY_MAGIC);
            ^****************************************************************************************************^
In function: core::debug::array_inline_macro
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
struct_deconstruct<Tuple<core::byte_array::ByteArray, Unit>>([20]) -> ([7], [25])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
drop<Unit>([25]) -> ()
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_local<core::byte_array::ByteArray>([8], [7]) -> ([7])
Originating location:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
                                             ^***********************************^
In function: println_macro::println_macro
snapshot_take<core::byte_array::ByteArray>([7]) -> ([26], [27])
Originating location:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
                                             ^***********************************^
In function: println_macro::println_macro
drop<core::byte_array::ByteArray>([26]) -> ()
Originating location:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
                                             ^***********************************^
In function: println_macro::println_macro
dup<Snapshot<core::byte_array::ByteArray>>([27]) -> ([27], [28])
Originating location:
        core::serde::Serde::serialize(self.data, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
struct_snapshot_deconstruct<core::byte_array::ByteArray>([28]) -> ([29], [30], [31])
Originating location:
        core::serde::Serde::serialize(self.data, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
drop<felt252>([30]) -> ()
Originating location:
        core::serde::Serde::serialize(self.data, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
drop<u32>([31]) -> ()
Originating location:
        core::serde::Serde::serialize(self.data, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
dup<Snapshot<Array<bytes31>>>([29]) -> ([29], [32])
Originating location:
        array_len(self)
        ^*************^
In function: core::array::ArrayImpl::len
Inlined at:
        self.len().serialize(ref output);
        ^********^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
array_len<bytes31>([32]) -> ([33])
Originating location:
        array_len(self)
        ^*************^
In function: core::array::ArrayImpl::len
Inlined at:
        self.len().serialize(ref output);
        ^********^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
u32_to_felt252([33]) -> ([34])
Originating location:
        u32_to_felt252(self)
        ^******************^
In function: core::integer::U32IntoFelt252::into
Inlined at:
            output.append((*self).into());
                          ^************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        self.len().serialize(ref output);
        ^******************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
store_temp<felt252>([34]) -> ([34])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        self.len().serialize(ref output);
        ^******************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
array_append<felt252>([24], [34]) -> ([35])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        self.len().serialize(ref output);
        ^******************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
struct_construct<core::array::Span::<core::bytes_31::bytes31>>([29]) -> ([36])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        self.len().serialize(ref output);
        ^******************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
store_temp<core::array::Span::<core::bytes_31::bytes31>>([36]) -> ([36])
Originating location:
        serialize_array_helper(self.span(), ref output);
        ^*********************************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
store_temp<Array<felt252>>([35]) -> ([35])
Originating location:
        serialize_array_helper(self.span(), ref output);
        ^*********************************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
function_call<user@core::array::serialize_array_helper::<core::bytes_31::bytes31, core::serde::into_felt252_based::SerdeImpl::<core::bytes_31::bytes31, core::bytes_31::bytes31Copy, core::bytes_31::Bytes31IntoFelt252, core::bytes_31::Felt252TryIntoBytes31>, core::bytes_31::bytes31Drop>>([36], [35]) -> ([37])
Originating location:
        serialize_array_helper(self.span(), ref output);
        ^*********************************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
dup<Snapshot<core::byte_array::ByteArray>>([27]) -> ([27], [38])
Originating location:
        core::serde::Serde::serialize(self.pending_word, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
struct_snapshot_deconstruct<core::byte_array::ByteArray>([38]) -> ([39], [40], [41])
Originating location:
        core::serde::Serde::serialize(self.pending_word, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
drop<Snapshot<Array<bytes31>>>([39]) -> ()
Originating location:
        core::serde::Serde::serialize(self.pending_word, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
drop<u32>([41]) -> ()
Originating location:
        core::serde::Serde::serialize(self.pending_word, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
rename<felt252>([40]) -> ([42])
Originating location:
        output.append(*self);
                       ^**^
In function: core::Felt252Serde::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word, ref output);
        ^**********************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
array_append<felt252>([37], [42]) -> ([43])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
        output.append(*self);
        ^******************^
In function: core::Felt252Serde::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word, ref output);
        ^**********************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
struct_snapshot_deconstruct<core::byte_array::ByteArray>([27]) -> ([44], [45], [46])
Originating location:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
drop<Snapshot<Array<bytes31>>>([44]) -> ()
Originating location:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
drop<felt252>([45]) -> ()
Originating location:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
rename<u32>([46]) -> ([47])
Originating location:
            output.append((*self).into());
                            ^**^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
        ^**************************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
u32_to_felt252([47]) -> ([48])
Originating location:
        u32_to_felt252(self)
        ^******************^
In function: core::integer::U32IntoFelt252::into
Inlined at:
            output.append((*self).into());
                          ^************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
        ^**************************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
array_append<felt252>([43], [48]) -> ([49])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
        ^**************************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
store_temp<Array<felt252>>([49]) -> ([49])
Originating location:
    print(serialized)
    ^***************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
print([49]) -> ()
Originating location:
    print(serialized)
    ^***************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
store_temp<RangeCheck>([5]) -> ([50])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
jump() { label_test::foo::5() }
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
label_test::foo::3:
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
branch_align() -> ()
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
drop<Uninitialized<core::byte_array::ByteArray>>([8]) -> ()
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
enum_init<core::panics::PanicResult::<((),)>, 1>([21]) -> ([51])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_temp<RangeCheck>([5]) -> ([5])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_temp<core::panics::PanicResult::<((),)>>([51]) -> ([51])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
return([5], [51])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
label_test::foo::4:
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x78203d3d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
label_test::foo::1:
Originating location:
\   match *lhs - *rhs {
|       0 => true,
|       _ => false,
|   }
|___^
In function: core::Felt252PartialEq::eq
Inlined at:
    if x == y { // highlighted
       ^****^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
\   match *lhs - *rhs {
|       0 => true,
|       _ => false,
|   }
|___^
In function: core::Felt252PartialEq::eq
Inlined at:
    if x == y { // highlighted
       ^****^
In function: lib.cairo::foo
drop<NonZero<felt252>>([12]) -> ()
Originating location:
\   match *lhs - *rhs {
|       0 => true,
|       _ => false,
|   }
|___^
In function: core::Felt252PartialEq::eq
Inlined at:
    if x == y { // highlighted
       ^****^
In function: lib.cairo::foo
drop<Uninitialized<core::byte_array::ByteArray>>([8]) -> ()
Originating location:
\   match *lhs - *rhs {
|       0 => true,
|       _ => false,
|   }
|___^
In function: core::Felt252PartialEq::eq
Inlined at:
    if x == y { // highlighted
       ^****^
In function: lib.cairo::foo
drop<Uninitialized<RangeCheck>>([6]) -> ()
Originating location:
\   match *lhs - *rhs {
|       0 => true,
|       _ => false,
|   }
|___^
In function: core::Felt252PartialEq::eq
Inlined at:
    if x == y { // highlighted
       ^****^
In function: lib.cairo::foo
array_new<bytes31>() -> ([52])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: println_macro::println_macro
const_as_immediate<Const<felt252, 0>>() -> ([53])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: println_macro::println_macro
const_as_immediate<Const<u32, 0>>() -> ([54])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: println_macro::println_macro
const_as_immediate<Const<felt252, 33812324336826634>>() -> ([55])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: println_macro::println_macro
const_as_immediate<Const<u32, 7>>() -> ([56])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: println_macro::println_macro
struct_construct<core::byte_array::ByteArray>([52], [53], [54]) -> ([57])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: println_macro::println_macro
store_temp<RangeCheck>([0]) -> ([0])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_temp<core::byte_array::ByteArray>([57]) -> ([57])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_temp<felt252>([55]) -> ([55])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_temp<u32>([56]) -> ([56])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
function_call<user@core::byte_array::ByteArrayImpl::append_word>([0], [57], [55], [56]) -> ([1], [58])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_local<RangeCheck>([2], [1]) -> ([1])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
enum_match<core::panics::PanicResult::<(core::byte_array::ByteArray, ())>>([58]) { fallthrough([59]) label_test::foo::6([60]) }
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
branch_align() -> ()
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
array_new<felt252>() -> ([61])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::debug::array_inline_macro
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
const_as_immediate<Const<felt252, 1997209042069643135709344952807065910992472029923670688473712229447419591075>>() -> ([62])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::debug::array_inline_macro
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
store_temp<felt252>([62]) -> ([62])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,core::byte_array::BYTE_ARRAY_MAGIC);
            ^****************************************************************************************************^
In function: core::debug::array_inline_macro
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
array_append<felt252>([61], [62]) -> ([63])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,core::byte_array::BYTE_ARRAY_MAGIC);
            ^****************************************************************************************************^
In function: core::debug::array_inline_macro
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
struct_deconstruct<Tuple<core::byte_array::ByteArray, Unit>>([59]) -> ([3], [64])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
drop<Unit>([64]) -> ()
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_local<core::byte_array::ByteArray>([4], [3]) -> ([3])
Originating location:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
                                             ^***********************************^
In function: println_macro::println_macro
snapshot_take<core::byte_array::ByteArray>([3]) -> ([65], [66])
Originating location:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
                                             ^***********************************^
In function: println_macro::println_macro
drop<core::byte_array::ByteArray>([65]) -> ()
Originating location:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
                                             ^***********************************^
In function: println_macro::println_macro
dup<Snapshot<core::byte_array::ByteArray>>([66]) -> ([66], [67])
Originating location:
        core::serde::Serde::serialize(self.data, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
struct_snapshot_deconstruct<core::byte_array::ByteArray>([67]) -> ([68], [69], [70])
Originating location:
        core::serde::Serde::serialize(self.data, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
drop<felt252>([69]) -> ()
Originating location:
        core::serde::Serde::serialize(self.data, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
drop<u32>([70]) -> ()
Originating location:
        core::serde::Serde::serialize(self.data, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
dup<Snapshot<Array<bytes31>>>([68]) -> ([68], [71])
Originating location:
        array_len(self)
        ^*************^
In function: core::array::ArrayImpl::len
Inlined at:
        self.len().serialize(ref output);
        ^********^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
array_len<bytes31>([71]) -> ([72])
Originating location:
        array_len(self)
        ^*************^
In function: core::array::ArrayImpl::len
Inlined at:
        self.len().serialize(ref output);
        ^********^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
u32_to_felt252([72]) -> ([73])
Originating location:
        u32_to_felt252(self)
        ^******************^
In function: core::integer::U32IntoFelt252::into
Inlined at:
            output.append((*self).into());
                          ^************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        self.len().serialize(ref output);
        ^******************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
store_temp<felt252>([73]) -> ([73])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        self.len().serialize(ref output);
        ^******************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
array_append<felt252>([63], [73]) -> ([74])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        self.len().serialize(ref output);
        ^******************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
struct_construct<core::array::Span::<core::bytes_31::bytes31>>([68]) -> ([75])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        self.len().serialize(ref output);
        ^******************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
store_temp<core::array::Span::<core::bytes_31::bytes31>>([75]) -> ([75])
Originating location:
        serialize_array_helper(self.span(), ref output);
        ^*********************************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
store_temp<Array<felt252>>([74]) -> ([74])
Originating location:
        serialize_array_helper(self.span(), ref output);
        ^*********************************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
function_call<user@core::array::serialize_array_helper::<core::bytes_31::bytes31, core::serde::into_felt252_based::SerdeImpl::<core::bytes_31::bytes31, core::bytes_31::bytes31Copy, core::bytes_31::Bytes31IntoFelt252, core::bytes_31::Felt252TryIntoBytes31>, core::bytes_31::bytes31Drop>>([75], [74]) -> ([76])
Originating location:
        serialize_array_helper(self.span(), ref output);
        ^*********************************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
dup<Snapshot<core::byte_array::ByteArray>>([66]) -> ([66], [77])
Originating location:
        core::serde::Serde::serialize(self.pending_word, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
struct_snapshot_deconstruct<core::byte_array::ByteArray>([77]) -> ([78], [79], [80])
Originating location:
        core::serde::Serde::serialize(self.pending_word, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
drop<Snapshot<Array<bytes31>>>([78]) -> ()
Originating location:
        core::serde::Serde::serialize(self.pending_word, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
drop<u32>([80]) -> ()
Originating location:
        core::serde::Serde::serialize(self.pending_word, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
rename<felt252>([79]) -> ([81])
Originating location:
        output.append(*self);
                       ^**^
In function: core::Felt252Serde::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word, ref output);
        ^**********************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
array_append<felt252>([76], [81]) -> ([82])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
        output.append(*self);
        ^******************^
In function: core::Felt252Serde::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word, ref output);
        ^**********************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
struct_snapshot_deconstruct<core::byte_array::ByteArray>([66]) -> ([83], [84], [85])
Originating location:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
drop<Snapshot<Array<bytes31>>>([83]) -> ()
Originating location:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
drop<felt252>([84]) -> ()
Originating location:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
rename<u32>([85]) -> ([86])
Originating location:
            output.append((*self).into());
                            ^**^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
        ^**************************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
u32_to_felt252([86]) -> ([87])
Originating location:
        u32_to_felt252(self)
        ^******************^
In function: core::integer::U32IntoFelt252::into
Inlined at:
            output.append((*self).into());
                          ^************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
        ^**************************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
array_append<felt252>([82], [87]) -> ([88])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
        ^**************************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    self.serialize(ref serialized);
    ^****************************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
store_temp<Array<felt252>>([88]) -> ([88])
Originating location:
    print(serialized)
    ^***************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
print([88]) -> ()
Originating location:
    print(serialized)
    ^***************^
In function: core::debug::print_byte_array_as_string
Inlined at:
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
    ^*****************************************************************************^
In function: println_macro::println_macro
store_temp<RangeCheck>([1]) -> ([50])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
label_test::foo::5:
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
struct_construct<Unit>() -> ([89])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
struct_construct<Tuple<Unit>>([89]) -> ([90])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
enum_init<core::panics::PanicResult::<((),)>, 0>([90]) -> ([91])
Originating location:
\   fn foo() {
|       let x = 10; // highlighted
|       let y = 20; // highlighted
|       
|       if x == y { // highlighted
|           println!("x == y");
|       } else {
|           println!("x != y"); // no runtime cost - not highlighted
|       };
|   }
|___^
In function: lib.cairo::foo
store_temp<core::panics::PanicResult::<((),)>>([91]) -> ([91])
Originating location:
\   fn foo() {
|       let x = 10; // highlighted
|       let y = 20; // highlighted
|       
|       if x == y { // highlighted
|           println!("x == y");
|       } else {
|           println!("x != y"); // no runtime cost - not highlighted
|       };
|   }
|___^
In function: lib.cairo::foo
return([50], [91])
Originating location:
\   fn foo() {
|       let x = 10; // highlighted
|       let y = 20; // highlighted
|       
|       if x == y { // highlighted
|           println!("x == y");
|       } else {
|           println!("x != y"); // no runtime cost - not highlighted
|       };
|   }
|___^
In function: lib.cairo::foo
label_test::foo::6:
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
branch_align() -> ()
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
drop<Uninitialized<core::byte_array::ByteArray>>([4]) -> ()
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
enum_init<core::panics::PanicResult::<((),)>, 1>([60]) -> ([92])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_temp<RangeCheck>([1]) -> ([1])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
store_temp<core::panics::PanicResult::<((),)>>([92]) -> ([92])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
return([1], [92])
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
label_test::foo::7:
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro
label_test::foo::2:
Originating location:
    core::byte_array::ByteArrayTrait::append_word(ref __formatter_for_print_macros__.buffer, 0x7820213d20790a, 7);
    ^***********************************************************************************************************^
In function: writeln_macro::writeln_macro

//! > ==========================================================================

//! > Originating location without relative path in file

//! > test_runner_name
test_sierra_locations

//! > function
fn some_array_checks() {
    assert!(array![1, 2] != array![2, 1], "");
}

//! > function_name
some_array_checks

//! > module_code

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::some_array_checks::0:
alloc_local<core::byte_array::ByteArray>() -> ([1])
finalize_locals() -> ()
disable_ap_tracking() -> ()
array_new<felt252>() -> ([2])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: array_inline_macro::array_inline_macro
const_as_immediate<Const<felt252, 1>>() -> ([3])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: array_inline_macro::array_inline_macro
store_temp<felt252>([3]) -> ([3])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,1);
            ^*******************************************************************^
In function: array_inline_macro::array_inline_macro
array_append<felt252>([2], [3]) -> ([4])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,1);
            ^*******************************************************************^
In function: array_inline_macro::array_inline_macro
const_as_immediate<Const<felt252, 2>>() -> ([5])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,1);
            ^*******************************************************************^
In function: array_inline_macro::array_inline_macro
store_temp<felt252>([5]) -> ([5])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,2);
            ^*******************************************************************^
In function: array_inline_macro::array_inline_macro
array_append<felt252>([4], [5]) -> ([6])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,2);
            ^*******************************************************************^
In function: array_inline_macro::array_inline_macro
array_new<felt252>() -> ([7])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: array_inline_macro::array_inline_macro
const_as_immediate<Const<felt252, 2>>() -> ([8])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: array_inline_macro::array_inline_macro
store_temp<felt252>([8]) -> ([8])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,2);
            ^*******************************************************************^
In function: array_inline_macro::array_inline_macro
array_append<felt252>([7], [8]) -> ([9])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,2);
            ^*******************************************************************^
In function: array_inline_macro::array_inline_macro
const_as_immediate<Const<felt252, 1>>() -> ([10])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,2);
            ^*******************************************************************^
In function: array_inline_macro::array_inline_macro
store_temp<felt252>([10]) -> ([10])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,1);
            ^*******************************************************************^
In function: array_inline_macro::array_inline_macro
array_append<felt252>([9], [10]) -> ([11])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,1);
            ^*******************************************************************^
In function: array_inline_macro::array_inline_macro
snapshot_take<Array<felt252>>([6]) -> ([12], [13])
Originating location:
            __array_builder_macro_result__
            ^****************************^
In function: array_inline_macro::array_inline_macro
drop<Array<felt252>>([12]) -> ()
Originating location:
            __array_builder_macro_result__
            ^****************************^
In function: array_inline_macro::array_inline_macro
store_temp<Snapshot<Array<felt252>>>([13]) -> ([13])
Originating location:
        array_len(self.snapshot)
        ^**********************^
In function: core::array::SpanImpl::len
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**********^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
dup<Snapshot<Array<felt252>>>([13]) -> ([13], [14])
Originating location:
        array_len(self.snapshot)
        ^**********************^
In function: core::array::SpanImpl::len
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**********^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
array_len<felt252>([14]) -> ([15])
Originating location:
        array_len(self.snapshot)
        ^**********************^
In function: core::array::SpanImpl::len
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**********^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
snapshot_take<Array<felt252>>([11]) -> ([16], [17])
Originating location:
            __array_builder_macro_result__
            ^****************************^
In function: array_inline_macro::array_inline_macro
drop<Array<felt252>>([16]) -> ()
Originating location:
            __array_builder_macro_result__
            ^****************************^
In function: array_inline_macro::array_inline_macro
store_temp<Snapshot<Array<felt252>>>([17]) -> ([17])
Originating location:
        array_len(self.snapshot)
        ^**********************^
In function: core::array::SpanImpl::len
Inlined at:
        if (*lhs).len() != (*rhs).len() {
                           ^**********^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
dup<Snapshot<Array<felt252>>>([17]) -> ([17], [18])
Originating location:
        array_len(self.snapshot)
        ^**********************^
In function: core::array::SpanImpl::len
Inlined at:
        if (*lhs).len() != (*rhs).len() {
                           ^**********^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
array_len<felt252>([18]) -> ([19])
Originating location:
        array_len(self.snapshot)
        ^**********************^
In function: core::array::SpanImpl::len
Inlined at:
        if (*lhs).len() != (*rhs).len() {
                           ^**********^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
struct_construct<core::array::Span::<core::felt252>>([13]) -> ([20])
Originating location:
        array_len(self.snapshot)
        ^**********************^
In function: core::array::SpanImpl::len
Inlined at:
        if (*lhs).len() != (*rhs).len() {
                           ^**********^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
struct_construct<core::array::Span::<core::felt252>>([17]) -> ([21])
Originating location:
        array_len(self.snapshot)
        ^**********************^
In function: core::array::SpanImpl::len
Inlined at:
        if (*lhs).len() != (*rhs).len() {
                           ^**********^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
enable_ap_tracking() -> ()
Originating location:
        array_len(self.snapshot)
        ^**********************^
In function: core::array::SpanImpl::len
Inlined at:
        if (*lhs).len() != (*rhs).len() {
                           ^**********^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
store_temp<u32>([15]) -> ([15])
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
store_temp<u32>([19]) -> ([19])
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
u32_eq([15], [19]) { fallthrough() label_test::some_array_checks::1() }
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
branch_align() -> ()
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
struct_construct<Unit>() -> ([22])
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
enum_init<core::bool, 0>([22]) -> ([23])
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
store_temp<core::bool>([23]) -> ([24])
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
jump() { label_test::some_array_checks::3() }
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
label_test::some_array_checks::1:
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
branch_align() -> ()
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
struct_construct<Unit>() -> ([25])
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
enum_init<core::bool, 1>([25]) -> ([26])
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
store_temp<core::bool>([26]) -> ([24])
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
label_test::some_array_checks::3:
Originating location:
        u32_eq(*lhs, *rhs)
        ^****************^
In function: core::integer::U32PartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
dup<core::bool>([24]) -> ([24], [27])
Originating location:
        let (r,) = bool_not_impl(a);
                   ^**************^
In function: core::BoolNot::not
Inlined at:
        !Self::eq(lhs, rhs)
        ^*****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
bool_not_impl([27]) -> ([28])
Originating location:
        let (r,) = bool_not_impl(a);
                   ^**************^
In function: core::BoolNot::not
Inlined at:
        !Self::eq(lhs, rhs)
        ^*****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
drop<core::bool>([28]) -> ()
Originating location:
        let (r,) = bool_not_impl(a);
                   ^**************^
In function: core::BoolNot::not
Inlined at:
        !Self::eq(lhs, rhs)
        ^*****************^
Inlined at:
        if (*lhs).len() != (*rhs).len() {
           ^**************************^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
enum_match<core::bool>([24]) { fallthrough([29]) label_test::some_array_checks::4([30]) }
Originating location:
\   if (*lhs).len() != (*rhs).len() {
|       return false;
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
branch_align() -> ()
Originating location:
\   if (*lhs).len() != (*rhs).len() {
|       return false;
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
disable_ap_tracking() -> ()
Originating location:
\   if (*lhs).len() != (*rhs).len() {
|       return false;
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
drop<Unit>([29]) -> ()
Originating location:
\   if (*lhs).len() != (*rhs).len() {
|       return false;
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
drop<core::array::Span::<core::felt252>>([21]) -> ()
Originating location:
\   if (*lhs).len() != (*rhs).len() {
|       return false;
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
drop<core::array::Span::<core::felt252>>([20]) -> ()
Originating location:
\   if (*lhs).len() != (*rhs).len() {
|       return false;
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
struct_construct<Unit>() -> ([31])
Originating location:
\   if (*lhs).len() != (*rhs).len() {
|       return false;
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
enum_init<core::bool, 0>([31]) -> ([32])
Originating location:
            return false;
                   ^***^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
store_temp<core::bool>([32]) -> ([33])
Originating location:
            return false;
            ^***********^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
jump() { label_test::some_array_checks::6() }
Originating location:
            return false;
            ^***********^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
label_test::some_array_checks::4:
Originating location:
\   if (*lhs).len() != (*rhs).len() {
|       return false;
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
branch_align() -> ()
Originating location:
\   if (*lhs).len() != (*rhs).len() {
|       return false;
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
disable_ap_tracking() -> ()
Originating location:
\   if (*lhs).len() != (*rhs).len() {
|       return false;
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
drop<Unit>([30]) -> ()
Originating location:
\   if (*lhs).len() != (*rhs).len() {
|       return false;
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
store_temp<core::array::Span::<core::felt252>>([20]) -> ([20])
Originating location:
\   loop {
|       match lhs_span.pop_front() {
|           Option::Some(lhs_v) => {
|               if lhs_v != rhs_span.pop_front().unwrap() {
|                   break false;
|               }
|           },
|           Option::None => { break true; },
|       };
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
store_temp<core::array::Span::<core::felt252>>([21]) -> ([21])
Originating location:
\   loop {
|       match lhs_span.pop_front() {
|           Option::Some(lhs_v) => {
|               if lhs_v != rhs_span.pop_front().unwrap() {
|                   break false;
|               }
|           },
|           Option::None => { break true; },
|       };
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
function_call<user@core::array::SpanPartialEq::eq[expr36]>([20], [21]) -> ([34])
Originating location:
\   loop {
|       match lhs_span.pop_front() {
|           Option::Some(lhs_v) => {
|               if lhs_v != rhs_span.pop_front().unwrap() {
|                   break false;
|               }
|           },
|           Option::None => { break true; },
|       };
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
enum_match<core::panics::PanicResult::<(core::array::Span::<core::felt252>, core::array::Span::<core::felt252>, core::bool)>>([34]) { fallthrough([35]) label_test::some_array_checks::7([36]) }
Originating location:
\   loop {
|       match lhs_span.pop_front() {
|           Option::Some(lhs_v) => {
|               if lhs_v != rhs_span.pop_front().unwrap() {
|                   break false;
|               }
|           },
|           Option::None => { break true; },
|       };
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
branch_align() -> ()
Originating location:
\   loop {
|       match lhs_span.pop_front() {
|           Option::Some(lhs_v) => {
|               if lhs_v != rhs_span.pop_front().unwrap() {
|                   break false;
|               }
|           },
|           Option::None => { break true; },
|       };
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
struct_deconstruct<Tuple<core::array::Span::<core::felt252>, core::array::Span::<core::felt252>, core::bool>>([35]) -> ([37], [38], [39])
Originating location:
\   loop {
|       match lhs_span.pop_front() {
|           Option::Some(lhs_v) => {
|               if lhs_v != rhs_span.pop_front().unwrap() {
|                   break false;
|               }
|           },
|           Option::None => { break true; },
|       };
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
drop<core::array::Span::<core::felt252>>([37]) -> ()
Originating location:
\   loop {
|       match lhs_span.pop_front() {
|           Option::Some(lhs_v) => {
|               if lhs_v != rhs_span.pop_front().unwrap() {
|                   break false;
|               }
|           },
|           Option::None => { break true; },
|       };
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
drop<core::array::Span::<core::felt252>>([38]) -> ()
Originating location:
\   loop {
|       match lhs_span.pop_front() {
|           Option::Some(lhs_v) => {
|               if lhs_v != rhs_span.pop_front().unwrap() {
|                   break false;
|               }
|           },
|           Option::None => { break true; },
|       };
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
store_temp<core::bool>([39]) -> ([33])
Originating location:
\   fn eq(lhs: @Span<T>, rhs: @Span<T>) -> bool {
|       if (*lhs).len() != (*rhs).len() {
|           return false;
|       }
|       let mut lhs_span = *lhs;
|       let mut rhs_span = *rhs;
|       loop {
|           match lhs_span.pop_front() {
|               Option::Some(lhs_v) => {
|                   if lhs_v != rhs_span.pop_front().unwrap() {
|                       break false;
|                   }
|               },
|               Option::None => { break true; },
|           };
|       }
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
label_test::some_array_checks::6:
Originating location:
\   fn eq(lhs: @Span<T>, rhs: @Span<T>) -> bool {
|       if (*lhs).len() != (*rhs).len() {
|           return false;
|       }
|       let mut lhs_span = *lhs;
|       let mut rhs_span = *rhs;
|       loop {
|           match lhs_span.pop_front() {
|               Option::Some(lhs_v) => {
|                   if lhs_v != rhs_span.pop_front().unwrap() {
|                       break false;
|                   }
|               },
|               Option::None => { break true; },
|           };
|       }
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
bool_not_impl([33]) -> ([40])
Originating location:
        let (r,) = bool_not_impl(a);
                   ^**************^
In function: core::BoolNot::not
Inlined at:
        !Self::eq(lhs, rhs)
        ^*****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
store_temp<core::bool>([40]) -> ([40])
Originating location:
        let (r,) = bool_not_impl(a);
                   ^**************^
In function: core::BoolNot::not
Inlined at:
if !(array![1, 2] != array![2, 1]) {
   ^*****************************^
In function: assert_macro::assert_macro
dup<core::bool>([40]) -> ([40], [41])
Originating location:
        let (r,) = bool_not_impl(a);
                   ^**************^
In function: core::BoolNot::not
Inlined at:
if !(array![1, 2] != array![2, 1]) {
   ^*****************************^
In function: assert_macro::assert_macro
bool_not_impl([41]) -> ([42])
Originating location:
        let (r,) = bool_not_impl(a);
                   ^**************^
In function: core::BoolNot::not
Inlined at:
if !(array![1, 2] != array![2, 1]) {
   ^*****************************^
In function: assert_macro::assert_macro
drop<core::bool>([42]) -> ()
Originating location:
        let (r,) = bool_not_impl(a);
                   ^**************^
In function: core::BoolNot::not
Inlined at:
if !(array![1, 2] != array![2, 1]) {
   ^*****************************^
In function: assert_macro::assert_macro
enum_match<core::bool>([40]) { fallthrough([43]) label_test::some_array_checks::9([44]) }
Originating location:
\   if !(array![1, 2] != array![2, 1]) {
|       let mut __formatter_for_assert_macro__: core::fmt::Formatter = core::traits::Default::default();
|       core::result::ResultTrait::<(), core::fmt::Error>::unwrap(
|       write!(__formatter_for_assert_macro__, "")
|       );
|       core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
|   }
|___^
In function: assert_macro::assert_macro
branch_align() -> ()
Originating location:
\   if !(array![1, 2] != array![2, 1]) {
|       let mut __formatter_for_assert_macro__: core::fmt::Formatter = core::traits::Default::default();
|       core::result::ResultTrait::<(), core::fmt::Error>::unwrap(
|       write!(__formatter_for_assert_macro__, "")
|       );
|       core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
|   }
|___^
In function: assert_macro::assert_macro
drop<Unit>([43]) -> ()
Originating location:
\   if !(array![1, 2] != array![2, 1]) {
|       let mut __formatter_for_assert_macro__: core::fmt::Formatter = core::traits::Default::default();
|       core::result::ResultTrait::<(), core::fmt::Error>::unwrap(
|       write!(__formatter_for_assert_macro__, "")
|       );
|       core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
|   }
|___^
In function: assert_macro::assert_macro
array_new<bytes31>() -> ([45])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
        ArrayTrait::new()
        ^***************^
In function: core::array::ArrayDefault::default
Inlined at:
            data: core::traits::Default::default(),
                  ^******************************^
In function: core::byte_array::ByteArrayDefault::default
Inlined at:
            buffer: core::traits::Default::default(),
                    ^******************************^
In function: core::fmt::FormatterDefault::default
Inlined at:
    let mut __formatter_for_assert_macro__: core::fmt::Formatter = core::traits::Default::default();
                                                                   ^******************************^
In function: assert_macro::assert_macro
array_new<felt252>() -> ([46])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::panics::array_inline_macro
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
const_as_immediate<Const<felt252, 1997209042069643135709344952807065910992472029923670688473712229447419591075>>() -> ([47])
Originating location:
        array_new()
        ^*********^
In function: core::array::ArrayImpl::new
Inlined at:
            let mut __array_builder_macro_result__ = core::array::ArrayTrait::new();
                                                     ^****************************^
In function: core::panics::array_inline_macro
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
store_temp<felt252>([47]) -> ([47])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,core::byte_array::BYTE_ARRAY_MAGIC);
            ^****************************************************************************************************^
In function: core::panics::array_inline_macro
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
array_append<felt252>([46], [47]) -> ([48])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,core::byte_array::BYTE_ARRAY_MAGIC);
            ^****************************************************************************************************^
In function: core::panics::array_inline_macro
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
const_as_immediate<Const<felt252, 0>>() -> ([49])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,core::byte_array::BYTE_ARRAY_MAGIC);
            ^****************************************************************************************************^
In function: core::panics::array_inline_macro
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
const_as_immediate<Const<u32, 0>>() -> ([50])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,core::byte_array::BYTE_ARRAY_MAGIC);
            ^****************************************************************************************************^
In function: core::panics::array_inline_macro
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
struct_construct<core::byte_array::ByteArray>([45], [49], [50]) -> ([0])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            core::array::ArrayTrait::append(ref __array_builder_macro_result__,core::byte_array::BYTE_ARRAY_MAGIC);
            ^****************************************************************************************************^
In function: core::panics::array_inline_macro
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
store_local<core::byte_array::ByteArray>([1], [0]) -> ([0])
Originating location:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
                                         ^***********************************^
In function: assert_macro::assert_macro
snapshot_take<core::byte_array::ByteArray>([0]) -> ([51], [52])
Originating location:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
                                         ^***********************************^
In function: assert_macro::assert_macro
drop<core::byte_array::ByteArray>([51]) -> ()
Originating location:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
                                         ^***********************************^
In function: assert_macro::assert_macro
dup<Snapshot<core::byte_array::ByteArray>>([52]) -> ([52], [53])
Originating location:
        core::serde::Serde::serialize(self.data, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
struct_snapshot_deconstruct<core::byte_array::ByteArray>([53]) -> ([54], [55], [56])
Originating location:
        core::serde::Serde::serialize(self.data, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
drop<felt252>([55]) -> ()
Originating location:
        core::serde::Serde::serialize(self.data, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
drop<u32>([56]) -> ()
Originating location:
        core::serde::Serde::serialize(self.data, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
dup<Snapshot<Array<bytes31>>>([54]) -> ([54], [57])
Originating location:
        array_len(self)
        ^*************^
In function: core::array::ArrayImpl::len
Inlined at:
        self.len().serialize(ref output);
        ^********^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
array_len<bytes31>([57]) -> ([58])
Originating location:
        array_len(self)
        ^*************^
In function: core::array::ArrayImpl::len
Inlined at:
        self.len().serialize(ref output);
        ^********^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
u32_to_felt252([58]) -> ([59])
Originating location:
        u32_to_felt252(self)
        ^******************^
In function: core::integer::U32IntoFelt252::into
Inlined at:
            output.append((*self).into());
                          ^************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        self.len().serialize(ref output);
        ^******************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
store_temp<felt252>([59]) -> ([59])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        self.len().serialize(ref output);
        ^******************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
array_append<felt252>([48], [59]) -> ([60])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        self.len().serialize(ref output);
        ^******************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
struct_construct<core::array::Span::<core::bytes_31::bytes31>>([54]) -> ([61])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        self.len().serialize(ref output);
        ^******************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
store_temp<core::array::Span::<core::bytes_31::bytes31>>([61]) -> ([61])
Originating location:
        serialize_array_helper(self.span(), ref output);
        ^*********************************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
store_temp<Array<felt252>>([60]) -> ([60])
Originating location:
        serialize_array_helper(self.span(), ref output);
        ^*********************************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
function_call<user@core::array::serialize_array_helper::<core::bytes_31::bytes31, core::serde::into_felt252_based::SerdeImpl::<core::bytes_31::bytes31, core::bytes_31::bytes31Copy, core::bytes_31::Bytes31IntoFelt252, core::bytes_31::Felt252TryIntoBytes31>, core::bytes_31::bytes31Drop>>([61], [60]) -> ([62])
Originating location:
        serialize_array_helper(self.span(), ref output);
        ^*********************************************^
In function: core::array::ArraySerde::serialize
Inlined at:
        core::serde::Serde::serialize(self.data, ref output);
        ^**************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
dup<Snapshot<core::byte_array::ByteArray>>([52]) -> ([52], [63])
Originating location:
        core::serde::Serde::serialize(self.pending_word, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
struct_snapshot_deconstruct<core::byte_array::ByteArray>([63]) -> ([64], [65], [66])
Originating location:
        core::serde::Serde::serialize(self.pending_word, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
drop<Snapshot<Array<bytes31>>>([64]) -> ()
Originating location:
        core::serde::Serde::serialize(self.pending_word, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
drop<u32>([66]) -> ()
Originating location:
        core::serde::Serde::serialize(self.pending_word, ref output);
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
rename<felt252>([65]) -> ([67])
Originating location:
        output.append(*self);
                       ^**^
In function: core::Felt252Serde::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word, ref output);
        ^**********************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
array_append<felt252>([62], [67]) -> ([68])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
        output.append(*self);
        ^******************^
In function: core::Felt252Serde::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word, ref output);
        ^**********************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
struct_snapshot_deconstruct<core::byte_array::ByteArray>([52]) -> ([69], [70], [71])
Originating location:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
drop<Snapshot<Array<bytes31>>>([69]) -> ()
Originating location:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
drop<felt252>([70]) -> ()
Originating location:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
                                      ^**^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
rename<u32>([71]) -> ([72])
Originating location:
            output.append((*self).into());
                            ^**^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
        ^**************************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
u32_to_felt252([72]) -> ([73])
Originating location:
        u32_to_felt252(self)
        ^******************^
In function: core::integer::U32IntoFelt252::into
Inlined at:
            output.append((*self).into());
                          ^************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
        ^**************************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
array_append<felt252>([68], [73]) -> ([74])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
        ^**************************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
struct_construct<core::panics::Panic>() -> ([75])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
        ^**************************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([75], [74]) -> ([76])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: core::array::ArrayImpl::append
Inlined at:
            output.append((*self).into());
            ^***************************^
In function: core::serde::into_felt252_based::SerdeImpl::serialize
Inlined at:
        core::serde::Serde::serialize(self.pending_word_len, ref output)
        ^**************************************************************^
In function: core::byte_array::ByteArraySerde::serialize
Inlined at:
    err.serialize(ref serialized);
    ^***************************^
In function: core::panics::panic_with_byte_array
Inlined at:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
enum_init<core::panics::PanicResult::<((),)>, 1>([76]) -> ([77])
Originating location:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
store_temp<core::panics::PanicResult::<((),)>>([77]) -> ([77])
Originating location:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
return([77])
Originating location:
    core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
    ^*************************************************************************^
In function: assert_macro::assert_macro
label_test::some_array_checks::9:
Originating location:
\   if !(array![1, 2] != array![2, 1]) {
|       let mut __formatter_for_assert_macro__: core::fmt::Formatter = core::traits::Default::default();
|       core::result::ResultTrait::<(), core::fmt::Error>::unwrap(
|       write!(__formatter_for_assert_macro__, "")
|       );
|       core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
|   }
|___^
In function: assert_macro::assert_macro
branch_align() -> ()
Originating location:
\   if !(array![1, 2] != array![2, 1]) {
|       let mut __formatter_for_assert_macro__: core::fmt::Formatter = core::traits::Default::default();
|       core::result::ResultTrait::<(), core::fmt::Error>::unwrap(
|       write!(__formatter_for_assert_macro__, "")
|       );
|       core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
|   }
|___^
In function: assert_macro::assert_macro
drop<Unit>([44]) -> ()
Originating location:
\   if !(array![1, 2] != array![2, 1]) {
|       let mut __formatter_for_assert_macro__: core::fmt::Formatter = core::traits::Default::default();
|       core::result::ResultTrait::<(), core::fmt::Error>::unwrap(
|       write!(__formatter_for_assert_macro__, "")
|       );
|       core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
|   }
|___^
In function: assert_macro::assert_macro
drop<Uninitialized<core::byte_array::ByteArray>>([1]) -> ()
Originating location:
\   if !(array![1, 2] != array![2, 1]) {
|       let mut __formatter_for_assert_macro__: core::fmt::Formatter = core::traits::Default::default();
|       core::result::ResultTrait::<(), core::fmt::Error>::unwrap(
|       write!(__formatter_for_assert_macro__, "")
|       );
|       core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
|   }
|___^
In function: assert_macro::assert_macro
struct_construct<Unit>() -> ([78])
Originating location:
\   if !(array![1, 2] != array![2, 1]) {
|       let mut __formatter_for_assert_macro__: core::fmt::Formatter = core::traits::Default::default();
|       core::result::ResultTrait::<(), core::fmt::Error>::unwrap(
|       write!(__formatter_for_assert_macro__, "")
|       );
|       core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
|   }
|___^
In function: assert_macro::assert_macro
struct_construct<Tuple<Unit>>([78]) -> ([79])
Originating location:
\   if !(array![1, 2] != array![2, 1]) {
|       let mut __formatter_for_assert_macro__: core::fmt::Formatter = core::traits::Default::default();
|       core::result::ResultTrait::<(), core::fmt::Error>::unwrap(
|       write!(__formatter_for_assert_macro__, "")
|       );
|       core::panics::panic_with_byte_array(@__formatter_for_assert_macro__.buffer)
|   }
|___^
In function: assert_macro::assert_macro
enum_init<core::panics::PanicResult::<((),)>, 0>([79]) -> ([80])
Originating location:
\   fn some_array_checks() {
|       assert!(array![1, 2] != array![2, 1], "");
|   }
|___^
In function: lib.cairo::some_array_checks
store_temp<core::panics::PanicResult::<((),)>>([80]) -> ([80])
Originating location:
\   fn some_array_checks() {
|       assert!(array![1, 2] != array![2, 1], "");
|   }
|___^
In function: lib.cairo::some_array_checks
return([80])
Originating location:
\   fn some_array_checks() {
|       assert!(array![1, 2] != array![2, 1], "");
|   }
|___^
In function: lib.cairo::some_array_checks
label_test::some_array_checks::10:
Originating location:
\   fn some_array_checks() {
|       assert!(array![1, 2] != array![2, 1], "");
|   }
|___^
In function: lib.cairo::some_array_checks
label_test::some_array_checks::7:
Originating location:
\   loop {
|       match lhs_span.pop_front() {
|           Option::Some(lhs_v) => {
|               if lhs_v != rhs_span.pop_front().unwrap() {
|                   break false;
|               }
|           },
|           Option::None => { break true; },
|       };
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
branch_align() -> ()
Originating location:
\   loop {
|       match lhs_span.pop_front() {
|           Option::Some(lhs_v) => {
|               if lhs_v != rhs_span.pop_front().unwrap() {
|                   break false;
|               }
|           },
|           Option::None => { break true; },
|       };
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
drop<Uninitialized<core::byte_array::ByteArray>>([1]) -> ()
Originating location:
\   loop {
|       match lhs_span.pop_front() {
|           Option::Some(lhs_v) => {
|               if lhs_v != rhs_span.pop_front().unwrap() {
|                   break false;
|               }
|           },
|           Option::None => { break true; },
|       };
|   }
|___^
In function: core::array::SpanPartialEq::eq
Inlined at:
        lhs.span() == rhs.span()
        ^**********************^
In function: core::array::ArrayPartialEq::eq
Inlined at:
        !Self::eq(lhs, rhs)
         ^****************^
Inlined at:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
enum_init<core::panics::PanicResult::<((),)>, 1>([36]) -> ([81])
Originating location:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
store_temp<core::panics::PanicResult::<((),)>>([81]) -> ([81])
Originating location:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
return([81])
Originating location:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
label_test::some_array_checks::8:
Originating location:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
label_test::some_array_checks::5:
Originating location:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
label_test::some_array_checks::2:
Originating location:
if !(array![1, 2] != array![2, 1]) {
     ^**************************^
In function: assert_macro::assert_macro
