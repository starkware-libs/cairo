//! > Simple function call

//! > test_runner_name
test_sierra_locations

//! > function
fn foo(a: felt252, b: felt252) -> felt252 {
    let b = felt252_add(a, 5);
    bar(b, b, b)
}

//! > function_name
foo

//! > module_code
fn bar(x: felt252, y: felt252, z: felt252) -> felt252 {
    bar(x, y, z)
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::foo::0:

disable_ap_tracking() -> ()

drop<felt252>([1]) -> ()

felt252_const<5>() -> ([2])

felt252_add([0], [2]) -> ([3])
Originating location:
    let b = felt252_add(a, 5);
            ^***************^
In function: lib.cairo::foo
store_temp<felt252>([3]) -> ([4])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
dup<felt252>([4]) -> ([4], [3])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
dup<felt252>([3]) -> ([3], [5])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
store_temp<felt252>([5]) -> ([5])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
store_temp<felt252>([3]) -> ([3])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
function_call<user@test::bar>([4], [5], [3]) -> ([6])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
return([6])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo

//! > ==========================================================================

//! > match statement

//! > test_runner_name
test_sierra_locations

//! > function
fn foo(myEnum: MyEnum) -> u8 {
    match myEnum {
        MyEnum::A(a) => a,
        MyEnum::B(b) => b,
        MyEnum::C((c1, c2)) => {
            if c1 > c2 {
                c1 + c2
            } else {
                c1 * c2
            }
        }
    }
}

//! > function_name
foo

//! > module_code
enum MyEnum {
    A: u8,
    B: u8,
    C: (u8, u8),
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::foo::0:

enum_match<test::MyEnum>([1]) { fallthrough([2]) label_test::foo::1([3]) label_test::foo::2([4]) }
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
store_temp<u8>([2]) -> ([5])
Originating location:
        MyEnum::A(a) => a,
                        ^
In function: lib.cairo::foo
jump() { label_test::foo::4() }
Originating location:
        MyEnum::A(a) => a,
                        ^
In function: lib.cairo::foo
label_test::foo::1:

branch_align() -> ()
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
store_temp<u8>([3]) -> ([5])
Originating location:
        MyEnum::B(b) => b,
                        ^
In function: lib.cairo::foo
label_test::foo::4:

struct_construct<Tuple<u8>>([5]) -> ([6])

enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([6]) -> ([7])
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
store_temp<RangeCheck>([0]) -> ([0])
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([7]) -> ([7])
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
return([0], [7])
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
label_test::foo::2:

branch_align() -> ()
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
struct_deconstruct<Tuple<u8, u8>>([4]) -> ([8], [9])
Originating location:
        MyEnum::C((c1, c2)) => {
                  ^******^
In function: lib.cairo::foo
dup<u8>([9]) -> ([9], [10])

dup<u8>([8]) -> ([8], [11])

u8_overflowing_sub([0], [10], [11]) { fallthrough([12], [13]) label_test::foo::5([14], [15]) }
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: integer.cairo::U8PartialOrd::gt
branch_align() -> ()
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: integer.cairo::U8PartialOrd::gt
drop<u8>([13]) -> ()

u8_wide_mul([8], [9]) -> ([16])
Originating location:
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^*******************^
In function: integer.cairo::U8Mul::mul
store_temp<u16>([16]) -> ([16])
Originating location:
        downcast(self)
        ^************^
In function: integer.cairo::DowncastableIntTryInto::try_into
downcast<u16, u8>([12], [16]) { fallthrough([17], [18]) label_test::foo::7([19]) }
Originating location:
        downcast(self)
        ^************^
In function: integer.cairo::DowncastableIntTryInto::try_into
branch_align() -> ()
Originating location:
        downcast(self)
        ^************^
In function: integer.cairo::DowncastableIntTryInto::try_into
struct_construct<Tuple<u8>>([18]) -> ([20])

enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([20]) -> ([21])
Originating location:
        match self {
        ^**********^
In function: option.cairo::OptionTraitImpl::expect
store_temp<RangeCheck>([17]) -> ([17])
Originating location:
        match self {
        ^**********^
In function: option.cairo::OptionTraitImpl::expect
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([21]) -> ([21])
Originating location:
        match self {
        ^**********^
In function: option.cairo::OptionTraitImpl::expect
return([17], [21])
Originating location:
        match self {
        ^**********^
In function: option.cairo::OptionTraitImpl::expect
label_test::foo::7:

branch_align() -> ()
Originating location:
        downcast(self)
        ^************^
In function: integer.cairo::DowncastableIntTryInto::try_into
array_new<felt252>() -> ([22])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
felt252_const<608642107937639184217240406363762551>() -> ([23])

store_temp<felt252>([23]) -> ([23])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([22], [23]) -> ([24])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([25])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([25], [24]) -> ([26])

enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([26]) -> ([27])
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: option.cairo::OptionTraitImpl::expect
store_temp<RangeCheck>([19]) -> ([19])
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: option.cairo::OptionTraitImpl::expect
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([27]) -> ([27])
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: option.cairo::OptionTraitImpl::expect
return([19], [27])
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: option.cairo::OptionTraitImpl::expect
label_test::foo::8:

label_test::foo::5:

branch_align() -> ()
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: integer.cairo::U8PartialOrd::gt
drop<u8>([15]) -> ()

u8_overflowing_add([14], [8], [9]) { fallthrough([28], [29]) label_test::foo::9([30], [31]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
struct_construct<Tuple<u8>>([29]) -> ([32])

enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([32]) -> ([33])
Originating location:
        match self {
        ^**********^
In function: result.cairo::ResultTraitImpl::expect
store_temp<RangeCheck>([28]) -> ([28])
Originating location:
        match self {
        ^**********^
In function: result.cairo::ResultTraitImpl::expect
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([33]) -> ([33])
Originating location:
        match self {
        ^**********^
In function: result.cairo::ResultTraitImpl::expect
return([28], [33])
Originating location:
        match self {
        ^**********^
In function: result.cairo::ResultTraitImpl::expect
label_test::foo::9:

branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
drop<u8>([31]) -> ()

array_new<felt252>() -> ([34])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
felt252_const<608642104203229548495787928534675319>() -> ([35])

store_temp<felt252>([35]) -> ([35])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([34], [35]) -> ([36])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([37])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([37], [36]) -> ([38])

enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([38]) -> ([39])
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: result.cairo::ResultTraitImpl::expect
store_temp<RangeCheck>([30]) -> ([30])
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: result.cairo::ResultTraitImpl::expect
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([39]) -> ([39])
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: result.cairo::ResultTraitImpl::expect
return([30], [39])
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: result.cairo::ResultTraitImpl::expect
label_test::foo::10:

label_test::foo::6:

label_test::foo::3:

//! > ==========================================================================

//! > enum flow

//! > test_runner_name
test_sierra_locations

//! > function

//! > function_name
main

//! > module_code
>>> file: ../../examples/enum_flow.cairo

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::main::0:

felt252_const<300>() -> ([0])

store_temp<felt252>([0]) -> ([0])
Originating location:
    300
    ^*^
In function: lib.cairo::main
return([0])
Originating location:
    300
    ^*^
In function: lib.cairo::main

//! > ==========================================================================

//! > match or

//! > test_runner_name
test_sierra_locations

//! > function

//! > function_name
main

//! > module_code
>>> file: ../../examples/match_or.cairo

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::main::0:

felt252_const<1>() -> ([1])

felt252_const<2>() -> ([2])

struct_construct<Tuple<felt252, felt252>>([1], [2]) -> ([3])

enum_init<test::MyEnum, 0>([3]) -> ([4])
Originating location:
    let a = MyEnum::A((1, 2));
                      ^****^
In function: lib.cairo::main
felt252_const<1>() -> ([5])

felt252_const<2>() -> ([6])

struct_construct<Tuple<felt252, felt252>>([5], [6]) -> ([7])

enum_init<test::MyEnum, 1>([7]) -> ([8])
Originating location:
    let b = MyEnum::B((1, 2));
                      ^****^
In function: lib.cairo::main
u8_const<1>() -> ([9])

u8_const<2>() -> ([10])

u8_const<3>() -> ([11])

struct_construct<Tuple<u8, u8, u8>>([9], [10], [11]) -> ([12])

enum_init<test::MyEnum, 2>([12]) -> ([13])
Originating location:
    let c = MyEnum::C((1, 2, 3));
                      ^*******^
In function: lib.cairo::main
u8_const<1>() -> ([14])

u8_const<2>() -> ([15])

u8_const<9>() -> ([16])

struct_construct<test::P>([14], [15], [16]) -> ([17])

enum_init<test::MyEnum, 3>([17]) -> ([18])
Originating location:
    let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
                      ^********************^
In function: lib.cairo::main
store_temp<test::MyEnum>([4]) -> ([4])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<test::MyEnum>([8]) -> ([8])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<test::MyEnum>([13]) -> ([13])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<test::MyEnum>([18]) -> ([18])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
enum_match<test::MyEnum>([4]) { fallthrough([19]) label_test::main::1([20]) label_test::main::2([21]) label_test::main::3([22]) }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<felt252, felt252>>([19]) -> ([23], [24])
Originating location:
        MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
                  ^****^
In function: lib.cairo::foo
drop<felt252>([23]) -> ()

drop<felt252>([24]) -> ()

jump() { label_test::main::5() }
Originating location:
        MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
                  ^****^
In function: lib.cairo::foo
label_test::main::1:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<felt252, felt252>>([20]) -> ([25], [26])
Originating location:
        MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
                                      ^****^
In function: lib.cairo::foo
drop<felt252>([25]) -> ()

drop<felt252>([26]) -> ()

label_test::main::5:

store_temp<RangeCheck>([0]) -> ([27])
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
jump() { label_test::main::6() }
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
label_test::main::2:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<u8, u8, u8>>([21]) -> ([28], [29], [30])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
drop<u8>([29]) -> ()

store_temp<u8>([28]) -> ([31])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([30]) -> ([32])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
jump() { label_test::main::7() }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::3:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<test::P>([22]) -> ([33], [34], [35])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
drop<u8>([34]) -> ()

store_temp<u8>([33]) -> ([31])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([35]) -> ([32])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::7:

u8_overflowing_add([0], [31], [32]) { fallthrough([36], [37]) label_test::main::8([38], [39]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
u8_to_felt252([37]) -> ([40])
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: integer.cairo::U8IntoFelt252::into
drop<felt252>([40]) -> ()

store_temp<RangeCheck>([36]) -> ([27])
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
label_test::main::6:

enum_match<test::MyEnum>([8]) { fallthrough([41]) label_test::main::10([42]) label_test::main::11([43]) label_test::main::12([44]) }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<felt252, felt252>>([41]) -> ([45], [46])
Originating location:
        MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
                  ^****^
In function: lib.cairo::foo
drop<felt252>([45]) -> ()

drop<felt252>([46]) -> ()

jump() { label_test::main::14() }
Originating location:
        MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
                  ^****^
In function: lib.cairo::foo
label_test::main::10:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<felt252, felt252>>([42]) -> ([47], [48])
Originating location:
        MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
                                      ^****^
In function: lib.cairo::foo
drop<felt252>([47]) -> ()

drop<felt252>([48]) -> ()

label_test::main::14:

store_temp<RangeCheck>([27]) -> ([49])
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
jump() { label_test::main::15() }
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
label_test::main::11:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<u8, u8, u8>>([43]) -> ([50], [51], [52])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
drop<u8>([51]) -> ()

store_temp<u8>([50]) -> ([53])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([52]) -> ([54])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
jump() { label_test::main::16() }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::12:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<test::P>([44]) -> ([55], [56], [57])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
drop<u8>([56]) -> ()

store_temp<u8>([55]) -> ([53])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([57]) -> ([54])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::16:

u8_overflowing_add([27], [53], [54]) { fallthrough([58], [59]) label_test::main::17([60], [61]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
u8_to_felt252([59]) -> ([62])
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: integer.cairo::U8IntoFelt252::into
drop<felt252>([62]) -> ()

store_temp<RangeCheck>([58]) -> ([49])
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
label_test::main::15:

enum_match<test::MyEnum>([13]) { fallthrough([63]) label_test::main::19([64]) label_test::main::20([65]) label_test::main::21([66]) }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<felt252, felt252>>([63]) -> ([67], [68])
Originating location:
        MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
                  ^****^
In function: lib.cairo::foo
drop<felt252>([67]) -> ()

drop<felt252>([68]) -> ()

jump() { label_test::main::23() }
Originating location:
        MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
                  ^****^
In function: lib.cairo::foo
label_test::main::19:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<felt252, felt252>>([64]) -> ([69], [70])
Originating location:
        MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
                                      ^****^
In function: lib.cairo::foo
drop<felt252>([69]) -> ()

drop<felt252>([70]) -> ()

label_test::main::23:

store_temp<RangeCheck>([49]) -> ([71])
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
jump() { label_test::main::24() }
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
label_test::main::20:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<u8, u8, u8>>([65]) -> ([72], [73], [74])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
drop<u8>([73]) -> ()

store_temp<u8>([72]) -> ([75])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([74]) -> ([76])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
jump() { label_test::main::25() }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::21:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<test::P>([66]) -> ([77], [78], [79])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
drop<u8>([78]) -> ()

store_temp<u8>([77]) -> ([75])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([79]) -> ([76])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::25:

u8_overflowing_add([49], [75], [76]) { fallthrough([80], [81]) label_test::main::26([82], [83]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
u8_to_felt252([81]) -> ([84])
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: integer.cairo::U8IntoFelt252::into
drop<felt252>([84]) -> ()

store_temp<RangeCheck>([80]) -> ([71])
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
label_test::main::24:

enum_match<test::MyEnum>([18]) { fallthrough([85]) label_test::main::28([86]) label_test::main::29([87]) label_test::main::30([88]) }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<felt252, felt252>>([85]) -> ([89], [90])
Originating location:
        MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
                  ^****^
In function: lib.cairo::foo
drop<felt252>([89]) -> ()

drop<felt252>([90]) -> ()

jump() { label_test::main::32() }
Originating location:
        MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
                  ^****^
In function: lib.cairo::foo
label_test::main::28:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<felt252, felt252>>([86]) -> ([91], [92])
Originating location:
        MyEnum::A((_, x)) | MyEnum::B((x, _)) => x,
                                      ^****^
In function: lib.cairo::foo
drop<felt252>([91]) -> ()

drop<felt252>([92]) -> ()

label_test::main::32:

store_temp<RangeCheck>([71]) -> ([93])
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
jump() { label_test::main::33() }
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
label_test::main::29:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<u8, u8, u8>>([87]) -> ([94], [95], [96])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
drop<u8>([95]) -> ()

store_temp<u8>([94]) -> ([97])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([96]) -> ([98])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
jump() { label_test::main::34() }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::30:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<test::P>([88]) -> ([99], [100], [101])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
drop<u8>([100]) -> ()

store_temp<u8>([99]) -> ([97])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([101]) -> ([98])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::34:

u8_overflowing_add([71], [97], [98]) { fallthrough([102], [103]) label_test::main::35([104], [105]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
u8_to_felt252([103]) -> ([106])
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: integer.cairo::U8IntoFelt252::into
drop<felt252>([106]) -> ()

store_temp<RangeCheck>([102]) -> ([93])
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
label_test::main::33:

struct_construct<Unit>() -> ([107])

struct_construct<Tuple<Unit>>([107]) -> ([108])

enum_init<core::panics::PanicResult::<((),)>, 0>([108]) -> ([109])
Originating location:
fn main() {
          ^
In function: lib.cairo::main
store_temp<core::panics::PanicResult::<((),)>>([109]) -> ([109])
Originating location:
fn main() {
          ^
In function: lib.cairo::main
return([93], [109])
Originating location:
fn main() {
          ^
In function: lib.cairo::main
label_test::main::35:

branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
drop<u8>([105]) -> ()

array_new<felt252>() -> ([110])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
felt252_const<608642104203229548495787928534675319>() -> ([111])

store_temp<felt252>([111]) -> ([111])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([110], [111]) -> ([112])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([113])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([113], [112]) -> ([114])

enum_init<core::panics::PanicResult::<((),)>, 1>([114]) -> ([115])
Originating location:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([104]) -> ([104])
Originating location:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
store_temp<core::panics::PanicResult::<((),)>>([115]) -> ([115])
Originating location:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
return([104], [115])
Originating location:
    let _ = foo(d);
            ^****^
In function: lib.cairo::main
label_test::main::36:

label_test::main::31:

label_test::main::26:

branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
drop<u8>([83]) -> ()

drop<test::MyEnum>([18]) -> ()

array_new<felt252>() -> ([116])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
felt252_const<608642104203229548495787928534675319>() -> ([117])

store_temp<felt252>([117]) -> ([117])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([116], [117]) -> ([118])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([119])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([119], [118]) -> ([120])

enum_init<core::panics::PanicResult::<((),)>, 1>([120]) -> ([121])
Originating location:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([82]) -> ([82])
Originating location:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
store_temp<core::panics::PanicResult::<((),)>>([121]) -> ([121])
Originating location:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
return([82], [121])
Originating location:
    let _ = foo(c);
            ^****^
In function: lib.cairo::main
label_test::main::27:

label_test::main::22:

label_test::main::17:

branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
drop<u8>([61]) -> ()

drop<test::MyEnum>([18]) -> ()

drop<test::MyEnum>([13]) -> ()

array_new<felt252>() -> ([122])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
felt252_const<608642104203229548495787928534675319>() -> ([123])

store_temp<felt252>([123]) -> ([123])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([122], [123]) -> ([124])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([125])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([125], [124]) -> ([126])

enum_init<core::panics::PanicResult::<((),)>, 1>([126]) -> ([127])
Originating location:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([60]) -> ([60])
Originating location:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
store_temp<core::panics::PanicResult::<((),)>>([127]) -> ([127])
Originating location:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
return([60], [127])
Originating location:
    let _ = foo(b);
            ^****^
In function: lib.cairo::main
label_test::main::18:

label_test::main::13:

label_test::main::8:

branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
drop<u8>([39]) -> ()

drop<test::MyEnum>([18]) -> ()

drop<test::MyEnum>([13]) -> ()

drop<test::MyEnum>([8]) -> ()

array_new<felt252>() -> ([128])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
felt252_const<608642104203229548495787928534675319>() -> ([129])

store_temp<felt252>([129]) -> ([129])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([128], [129]) -> ([130])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([131])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([131], [130]) -> ([132])

enum_init<core::panics::PanicResult::<((),)>, 1>([132]) -> ([133])
Originating location:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<RangeCheck>([38]) -> ([38])
Originating location:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
store_temp<core::panics::PanicResult::<((),)>>([133]) -> ([133])
Originating location:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
return([38], [133])
Originating location:
    let _ = foo(a);
            ^****^
In function: lib.cairo::main
label_test::main::9:

label_test::main::4:

//! > ==========================================================================

//! > pedersen test

//! > test_runner_name
test_sierra_locations

//! > function

//! > function_name
test_pedersen

//! > module_code
>>> file: ../../examples/pedersen_test.cairo

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::test_pedersen::0:

felt252_const<1>() -> ([1])

felt252_const<2>() -> ([2])

store_temp<felt252>([1]) -> ([1])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
                      ^************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([2]) -> ([2])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
                      ^************^
In function: lib.cairo::test_pedersen
pedersen([0], [1], [2]) -> ([3], [4])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
                      ^************^
In function: lib.cairo::test_pedersen
felt252_const<3>() -> ([5])

store_temp<felt252>([4]) -> ([4])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
             ^*************************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([5]) -> ([5])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
             ^*************************^
In function: lib.cairo::test_pedersen
pedersen([3], [4], [5]) -> ([6], [7])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
             ^*************************^
In function: lib.cairo::test_pedersen
felt252_const<4>() -> ([8])

store_temp<felt252>([7]) -> ([7])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([8]) -> ([8])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
pedersen([6], [7], [8]) -> ([9], [10])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
store_temp<Pedersen>([9]) -> ([9])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([10]) -> ([10])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
return([9], [10])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
