//! > Simple function call

//! > test_runner_name
test_sierra_locations

//! > function
fn foo(a: felt252, b: felt252) -> felt252 {
    let b = felt252_add(a, 5);
    bar(b, b, b)
}

//! > function_name
foo

//! > module_code
fn bar(x: felt252, y: felt252, z: felt252) -> felt252 {
    bar(x, y, z)
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::foo::0:

disable_ap_tracking() -> ()

drop<felt252>([1]) -> ()

const_as_immediate<Const<felt252, 5>>() -> ([2])

felt252_add([0], [2]) -> ([3])
Originating location:
    let b = felt252_add(a, 5);
            ^***************^
In function: lib.cairo::foo
store_temp<felt252>([3]) -> ([4])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
dup<felt252>([4]) -> ([4], [3])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
dup<felt252>([3]) -> ([3], [5])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
store_temp<felt252>([5]) -> ([5])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
store_temp<felt252>([3]) -> ([3])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
function_call<user@test::bar>([4], [5], [3]) -> ([6])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo
return([6])
Originating location:
    bar(b, b, b)
    ^**********^
In function: lib.cairo::foo

//! > ==========================================================================

//! > match statement

//! > test_runner_name
test_sierra_locations

//! > function
fn foo(myEnum: MyEnum) -> u8 {
    match myEnum {
        MyEnum::A(a) => a,
        MyEnum::B(b) => b,
        MyEnum::C((c1, c2)) => {
            if c1 > c2 {
                c1 + c2
            } else {
                c1 * c2
            }
        }
    }
}

//! > function_name
foo

//! > module_code
enum MyEnum {
    A: u8,
    B: u8,
    C: (u8, u8),
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::foo::0:

enum_match<test::MyEnum>([1]) { fallthrough([2]) label_test::foo::1([3]) label_test::foo::2([4]) }
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
store_temp<RangeCheck>([0]) -> ([5])
Originating location:
        MyEnum::A(a) => a,
                        ^
In function: lib.cairo::foo
store_temp<u8>([2]) -> ([6])
Originating location:
        MyEnum::A(a) => a,
                        ^
In function: lib.cairo::foo
jump() { label_test::foo::4() }
Originating location:
        MyEnum::A(a) => a,
                        ^
In function: lib.cairo::foo
label_test::foo::1:

branch_align() -> ()
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
store_temp<RangeCheck>([0]) -> ([5])
Originating location:
        MyEnum::B(b) => b,
                        ^
In function: lib.cairo::foo
store_temp<u8>([3]) -> ([6])
Originating location:
        MyEnum::B(b) => b,
                        ^
In function: lib.cairo::foo
jump() { label_test::foo::4() }
Originating location:
        MyEnum::B(b) => b,
                        ^
In function: lib.cairo::foo
label_test::foo::2:

branch_align() -> ()
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
struct_deconstruct<Tuple<u8, u8>>([4]) -> ([7], [8])
Originating location:
        MyEnum::C((c1, c2)) => {
                  ^******^
In function: lib.cairo::foo
dup<u8>([8]) -> ([8], [9])

dup<u8>([7]) -> ([7], [10])

u8_overflowing_sub([0], [9], [10]) { fallthrough([11], [12]) label_test::foo::5([13], [14]) }
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: integer.cairo::U8PartialOrd::gt
branch_align() -> ()
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: integer.cairo::U8PartialOrd::gt
drop<u8>([12]) -> ()

<<<<<<< HEAD
u8_wide_mul([7], [8]) -> ([15])
||||||| a1f2f2396
store_temp<RangeCheck>([12]) -> ([12])
=======
u8_wide_mul([8], [9]) -> ([16])
>>>>>>> origin/main
Originating location:
<<<<<<< HEAD
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^*******************^
In function: integer.cairo::U8Mul::mul
store_temp<u16>([15]) -> ([15])
||||||| a1f2f2396
                c1 * c2
                ^*****^
In function: lib.cairo::foo
store_temp<u8>([8]) -> ([8])
=======
        u8_wide_mul(lhs, rhs).try_into().expect('u8_mul Overflow')
        ^*******************^
In function: integer.cairo::U8Mul::mul
store_temp<u16>([16]) -> ([16])
>>>>>>> origin/main
Originating location:
<<<<<<< HEAD
        downcast(self)
        ^************^
In function: integer.cairo::DowncastableIntTryInto::try_into
downcast<u16, u8>([11], [15]) { fallthrough([16], [17]) label_test::foo::7([18]) }
Originating location:
        downcast(self)
        ^************^
In function: integer.cairo::DowncastableIntTryInto::try_into
branch_align() -> ()
Originating location:
        downcast(self)
        ^************^
In function: integer.cairo::DowncastableIntTryInto::try_into
store_temp<RangeCheck>([16]) -> ([19])
||||||| a1f2f2396
                c1 * c2
                ^*****^
In function: lib.cairo::foo
store_temp<u8>([9]) -> ([9])
=======
        downcast(self)
        ^************^
In function: integer.cairo::DowncastableIntTryInto::try_into
downcast<u16, u8>([12], [16]) { fallthrough([17], [18]) label_test::foo::7([19]) }
>>>>>>> origin/main
Originating location:
<<<<<<< HEAD
                c1 * c2
                ^*****^
In function: lib.cairo::foo
store_temp<u8>([17]) -> ([20])
||||||| a1f2f2396
                c1 * c2
                ^*****^
In function: lib.cairo::foo
function_call<user@core::integer::U8Mul::mul>([12], [8], [9]) -> ([16], [17])
=======
        downcast(self)
        ^************^
In function: integer.cairo::DowncastableIntTryInto::try_into
branch_align() -> ()
>>>>>>> origin/main
Originating location:
<<<<<<< HEAD
                c1 * c2
                ^*****^
In function: lib.cairo::foo
jump() { label_test::foo::9() }
||||||| a1f2f2396
                c1 * c2
                ^*****^
In function: lib.cairo::foo
return([16], [17])
=======
        downcast(self)
        ^************^
In function: integer.cairo::DowncastableIntTryInto::try_into
struct_construct<Tuple<u8>>([18]) -> ([20])

enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([20]) -> ([21])
>>>>>>> origin/main
Originating location:
<<<<<<< HEAD
                c1 * c2
                ^*****^
In function: lib.cairo::foo
label_test::foo::7:

branch_align() -> ()
Originating location:
        downcast(self)
        ^************^
In function: integer.cairo::DowncastableIntTryInto::try_into
array_new<felt252>() -> ([21])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
const_as_immediate<Const<felt252, 608642107937639184217240406363762551>>() -> ([22])

store_temp<felt252>([22]) -> ([22])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([21], [22]) -> ([23])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([24])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([24], [23]) -> ([25])

enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([25]) -> ([26])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
store_temp<RangeCheck>([18]) -> ([18])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([26]) -> ([26])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
return([18], [26])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
label_test::foo::8:

||||||| a1f2f2396
                c1 * c2
                ^*****^
In function: lib.cairo::foo
=======
        match self {
        ^**********^
In function: option.cairo::OptionTraitImpl::expect
store_temp<RangeCheck>([17]) -> ([17])
Originating location:
        match self {
        ^**********^
In function: option.cairo::OptionTraitImpl::expect
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([21]) -> ([21])
Originating location:
        match self {
        ^**********^
In function: option.cairo::OptionTraitImpl::expect
return([17], [21])
Originating location:
        match self {
        ^**********^
In function: option.cairo::OptionTraitImpl::expect
label_test::foo::7:

branch_align() -> ()
Originating location:
        downcast(self)
        ^************^
In function: integer.cairo::DowncastableIntTryInto::try_into
array_new<felt252>() -> ([22])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
felt252_const<608642107937639184217240406363762551>() -> ([23])

store_temp<felt252>([23]) -> ([23])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([22], [23]) -> ([24])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([25])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([25], [24]) -> ([26])

enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([26]) -> ([27])
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: option.cairo::OptionTraitImpl::expect
store_temp<RangeCheck>([19]) -> ([19])
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: option.cairo::OptionTraitImpl::expect
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([27]) -> ([27])
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: option.cairo::OptionTraitImpl::expect
return([19], [27])
Originating location:
            Option::None => core::panic_with_felt252(err),
                            ^***************************^
In function: option.cairo::OptionTraitImpl::expect
label_test::foo::8:

>>>>>>> origin/main
label_test::foo::5:

branch_align() -> ()
Originating location:
        u8_overflowing_sub(rhs, lhs).into_is_err()
        ^**************************^
In function: integer.cairo::U8PartialOrd::gt
drop<u8>([14]) -> ()

<<<<<<< HEAD
u8_overflowing_add([13], [7], [8]) { fallthrough([27], [28]) label_test::foo::10([29], [30]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
store_temp<RangeCheck>([27]) -> ([19])
||||||| a1f2f2396
store_temp<RangeCheck>([14]) -> ([14])
=======
u8_overflowing_add([14], [8], [9]) { fallthrough([28], [29]) label_test::foo::9([30], [31]) }
>>>>>>> origin/main
Originating location:
<<<<<<< HEAD
                c1 + c2
                ^*****^
In function: lib.cairo::foo
store_temp<u8>([28]) -> ([20])
||||||| a1f2f2396
                c1 + c2
                ^*****^
In function: lib.cairo::foo
store_temp<u8>([8]) -> ([8])
=======
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
branch_align() -> ()
>>>>>>> origin/main
Originating location:
<<<<<<< HEAD
                c1 + c2
                ^*****^
In function: lib.cairo::foo
label_test::foo::9:

rename<RangeCheck>([19]) -> ([5])
||||||| a1f2f2396
                c1 + c2
                ^*****^
In function: lib.cairo::foo
store_temp<u8>([9]) -> ([9])
=======
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
struct_construct<Tuple<u8>>([29]) -> ([32])

enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([32]) -> ([33])
>>>>>>> origin/main
Originating location:
<<<<<<< HEAD
            if c1 > c2 {
            ^**********^
In function: lib.cairo::foo
rename<u8>([20]) -> ([6])
||||||| a1f2f2396
                c1 + c2
                ^*****^
In function: lib.cairo::foo
function_call<user@core::integer::U8Add::add>([14], [8], [9]) -> ([18], [19])
=======
        match self {
        ^**********^
In function: result.cairo::ResultTraitImpl::expect
store_temp<RangeCheck>([28]) -> ([28])
>>>>>>> origin/main
Originating location:
<<<<<<< HEAD
            if c1 > c2 {
            ^**********^
In function: lib.cairo::foo
label_test::foo::4:

struct_construct<Tuple<u8>>([6]) -> ([31])

enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([31]) -> ([32])
||||||| a1f2f2396
                c1 + c2
                ^*****^
In function: lib.cairo::foo
return([18], [19])
=======
        match self {
        ^**********^
In function: result.cairo::ResultTraitImpl::expect
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([33]) -> ([33])
>>>>>>> origin/main
Originating location:
<<<<<<< HEAD
    match myEnum {
    ^************^
In function: lib.cairo::foo
store_temp<RangeCheck>([5]) -> ([5])
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([32]) -> ([32])
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
return([5], [32])
Originating location:
    match myEnum {
    ^************^
In function: lib.cairo::foo
label_test::foo::10:

branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
drop<u8>([30]) -> ()

array_new<felt252>() -> ([33])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
const_as_immediate<Const<felt252, 608642104203229548495787928534675319>>() -> ([34])

store_temp<felt252>([34]) -> ([34])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([33], [34]) -> ([35])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([36])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([36], [35]) -> ([37])

enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([37]) -> ([38])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
store_temp<RangeCheck>([29]) -> ([29])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([38]) -> ([38])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
return([29], [38])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
label_test::foo::11:

||||||| a1f2f2396
                c1 + c2
                ^*****^
In function: lib.cairo::foo
=======
        match self {
        ^**********^
In function: result.cairo::ResultTraitImpl::expect
return([28], [33])
Originating location:
        match self {
        ^**********^
In function: result.cairo::ResultTraitImpl::expect
label_test::foo::9:

branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
drop<u8>([31]) -> ()

array_new<felt252>() -> ([34])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
felt252_const<608642104203229548495787928534675319>() -> ([35])

store_temp<felt252>([35]) -> ([35])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([34], [35]) -> ([36])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([37])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([37], [36]) -> ([38])

enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([38]) -> ([39])
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: result.cairo::ResultTraitImpl::expect
store_temp<RangeCheck>([30]) -> ([30])
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: result.cairo::ResultTraitImpl::expect
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([39]) -> ([39])
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: result.cairo::ResultTraitImpl::expect
return([30], [39])
Originating location:
            Result::Err(_) => core::panic_with_felt252(err),
                              ^***************************^
In function: result.cairo::ResultTraitImpl::expect
label_test::foo::10:

>>>>>>> origin/main
label_test::foo::6:

label_test::foo::3:

//! > ==========================================================================

//! > enum flow

//! > test_runner_name
test_sierra_locations

//! > function

//! > function_name
main

//! > module_code
>>> file: ../../examples/enum_flow.cairo

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::main::0:

<<<<<<< HEAD
const_as_immediate<Const<felt252, 300>>() -> ([0])

store_temp<felt252>([0]) -> ([0])
||||||| a1f2f2396
felt252_const<10>() -> ([0])

enum_init<test::MyEnumShort, 0>([0]) -> ([1])
Originating location:
    let es0 = MyEnumShort::a(10);
                             ^^
In function: lib.cairo::main
store_temp<test::MyEnumShort>([1]) -> ([1])
Originating location:
    match_short(es0);
    ^**************^
In function: lib.cairo::main
function_call<user@test::match_short>([1]) -> ([2])
Originating location:
    match_short(es0);
    ^**************^
In function: lib.cairo::main
drop<felt252>([2]) -> ()

felt252_const<11>() -> ([3])

enum_init<test::MyEnumShort, 1>([3]) -> ([4])
Originating location:
    let es1 = MyEnumShort::b(11);
                             ^^
In function: lib.cairo::main
store_temp<test::MyEnumShort>([4]) -> ([4])
Originating location:
    match_short(es1);
    ^**************^
In function: lib.cairo::main
function_call<user@test::match_short>([4]) -> ([5])
Originating location:
    match_short(es1);
    ^**************^
In function: lib.cairo::main
drop<felt252>([5]) -> ()

felt252_const<20>() -> ([6])

enum_init<test::MyEnumLong, 0>([6]) -> ([7])
Originating location:
    let el0 = MyEnumLong::a(20);
                            ^^
In function: lib.cairo::main
store_temp<test::MyEnumLong>([7]) -> ([7])
Originating location:
    match_long(el0);
    ^*************^
In function: lib.cairo::main
function_call<user@test::match_long>([7]) -> ([8])
Originating location:
    match_long(el0);
    ^*************^
In function: lib.cairo::main
drop<felt252>([8]) -> ()

felt252_const<21>() -> ([9])

enum_init<test::MyEnumLong, 1>([9]) -> ([10])
Originating location:
    let el1 = MyEnumLong::b(21);
                            ^^
In function: lib.cairo::main
store_temp<test::MyEnumLong>([10]) -> ([10])
Originating location:
    match_long(el1);
    ^*************^
In function: lib.cairo::main
function_call<user@test::match_long>([10]) -> ([11])
Originating location:
    match_long(el1);
    ^*************^
In function: lib.cairo::main
drop<felt252>([11]) -> ()

felt252_const<22>() -> ([12])

enum_init<test::MyEnumLong, 2>([12]) -> ([13])
Originating location:
    let el2 = MyEnumLong::c(22);
                            ^^
In function: lib.cairo::main
store_temp<test::MyEnumLong>([13]) -> ([13])
Originating location:
    match_long(el2);
    ^*************^
In function: lib.cairo::main
function_call<user@test::match_long>([13]) -> ([14])
Originating location:
    match_long(el2);
    ^*************^
In function: lib.cairo::main
drop<felt252>([14]) -> ()

felt252_const<300>() -> ([15])

store_temp<felt252>([15]) -> ([15])
=======
felt252_const<300>() -> ([0])

store_temp<felt252>([0]) -> ([0])
>>>>>>> origin/main
Originating location:
    300
    ^*^
In function: lib.cairo::main
return([0])
Originating location:
    300
    ^*^
In function: lib.cairo::main

//! > ==========================================================================

//! > match or

//! > test_runner_name
test_sierra_locations

//! > function

//! > function_name
main

//! > module_code
>>> file: ../../examples/match_or.cairo

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::main::0:

const_as_immediate<Const<felt252, 1>>() -> ([1])

const_as_immediate<Const<felt252, 2>>() -> ([2])

struct_construct<Tuple<felt252, felt252>>([1], [2]) -> ([3])

enum_init<test::MyEnum, 0>([3]) -> ([4])
Originating location:
    let a = MyEnum::A((1, 2));
                      ^****^
In function: lib.cairo::main
const_as_immediate<Const<felt252, 1>>() -> ([5])

const_as_immediate<Const<felt252, 2>>() -> ([6])

struct_construct<Tuple<felt252, felt252>>([5], [6]) -> ([7])

enum_init<test::MyEnum, 1>([7]) -> ([8])
Originating location:
    let b = MyEnum::B((1, 2));
                      ^****^
In function: lib.cairo::main
const_as_immediate<Const<u8, 1>>() -> ([9])

const_as_immediate<Const<u8, 2>>() -> ([10])

const_as_immediate<Const<u8, 3>>() -> ([11])

struct_construct<Tuple<u8, u8, u8>>([9], [10], [11]) -> ([12])

enum_init<test::MyEnum, 2>([12]) -> ([13])
Originating location:
    let c = MyEnum::C((1, 2, 3));
                      ^*******^
In function: lib.cairo::main
const_as_immediate<Const<u8, 1>>() -> ([14])

const_as_immediate<Const<u8, 2>>() -> ([15])

const_as_immediate<Const<u8, 9>>() -> ([16])

struct_construct<test::P>([14], [15], [16]) -> ([17])

enum_init<test::MyEnum, 3>([17]) -> ([18])
Originating location:
    let d = MyEnum::D(P { x: 1, y: 2, z: 9 });
                      ^********************^
In function: lib.cairo::main
store_temp<test::MyEnum>([4]) -> ([4])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<test::MyEnum>([8]) -> ([8])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<test::MyEnum>([13]) -> ([13])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<test::MyEnum>([18]) -> ([18])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
enum_match<test::MyEnum>([4]) { fallthrough([19]) label_test::main::1([20]) label_test::main::2([21]) label_test::main::3([22]) }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
drop<Tuple<felt252, felt252>>([19]) -> ()

jump() { label_test::main::5() }

label_test::main::1:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
drop<Tuple<felt252, felt252>>([20]) -> ()

label_test::main::5:

store_temp<RangeCheck>([0]) -> ([23])
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
jump() { label_test::main::6() }
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
label_test::main::2:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<u8, u8, u8>>([21]) -> ([24], [25], [26])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
drop<u8>([25]) -> ()

store_temp<u8>([24]) -> ([27])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([26]) -> ([28])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
jump() { label_test::main::7() }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::3:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<test::P>([22]) -> ([29], [30], [31])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
drop<u8>([30]) -> ()

store_temp<u8>([29]) -> ([27])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([31]) -> ([28])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::7:

u8_overflowing_add([0], [27], [28]) { fallthrough([32], [33]) label_test::main::8([34], [35]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
u8_to_felt252([33]) -> ([36])
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: integer.cairo::U8IntoFelt252::into
drop<felt252>([36]) -> ()

store_temp<RangeCheck>([32]) -> ([23])
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
label_test::main::6:

enum_match<test::MyEnum>([8]) { fallthrough([37]) label_test::main::10([38]) label_test::main::11([39]) label_test::main::12([40]) }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
drop<Tuple<felt252, felt252>>([37]) -> ()

jump() { label_test::main::14() }

label_test::main::10:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
drop<Tuple<felt252, felt252>>([38]) -> ()

label_test::main::14:

store_temp<RangeCheck>([23]) -> ([41])
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
jump() { label_test::main::15() }
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
label_test::main::11:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<u8, u8, u8>>([39]) -> ([42], [43], [44])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
drop<u8>([43]) -> ()

store_temp<u8>([42]) -> ([45])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([44]) -> ([46])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
jump() { label_test::main::16() }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::12:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<test::P>([40]) -> ([47], [48], [49])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
drop<u8>([48]) -> ()

store_temp<u8>([47]) -> ([45])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([49]) -> ([46])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::16:

u8_overflowing_add([23], [45], [46]) { fallthrough([50], [51]) label_test::main::17([52], [53]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
u8_to_felt252([51]) -> ([54])
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: integer.cairo::U8IntoFelt252::into
drop<felt252>([54]) -> ()

store_temp<RangeCheck>([50]) -> ([41])
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
label_test::main::15:

enum_match<test::MyEnum>([13]) { fallthrough([55]) label_test::main::19([56]) label_test::main::20([57]) label_test::main::21([58]) }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
drop<Tuple<felt252, felt252>>([55]) -> ()

jump() { label_test::main::23() }

label_test::main::19:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
drop<Tuple<felt252, felt252>>([56]) -> ()

label_test::main::23:

store_temp<RangeCheck>([41]) -> ([59])
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
jump() { label_test::main::24() }
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
label_test::main::20:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<u8, u8, u8>>([57]) -> ([60], [61], [62])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
drop<u8>([61]) -> ()

store_temp<u8>([60]) -> ([63])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([62]) -> ([64])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
jump() { label_test::main::25() }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::21:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<test::P>([58]) -> ([65], [66], [67])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
drop<u8>([66]) -> ()

store_temp<u8>([65]) -> ([63])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([67]) -> ([64])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::25:

u8_overflowing_add([41], [63], [64]) { fallthrough([68], [69]) label_test::main::26([70], [71]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
u8_to_felt252([69]) -> ([72])
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: integer.cairo::U8IntoFelt252::into
drop<felt252>([72]) -> ()

store_temp<RangeCheck>([68]) -> ([59])
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
label_test::main::24:

enum_match<test::MyEnum>([18]) { fallthrough([73]) label_test::main::28([74]) label_test::main::29([75]) label_test::main::30([76]) }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
drop<Tuple<felt252, felt252>>([73]) -> ()

jump() { label_test::main::32() }

label_test::main::28:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
drop<Tuple<felt252, felt252>>([74]) -> ()

label_test::main::32:

store_temp<RangeCheck>([59]) -> ([77])
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
jump() { label_test::main::33() }
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
label_test::main::29:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<Tuple<u8, u8, u8>>([75]) -> ([78], [79], [80])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                  ^*******^
In function: lib.cairo::foo
drop<u8>([79]) -> ()

store_temp<u8>([78]) -> ([81])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([80]) -> ([82])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
jump() { label_test::main::34() }
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::30:

branch_align() -> ()
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
struct_deconstruct<test::P>([76]) -> ([83], [84], [85])
Originating location:
        MyEnum::C((x, _, t)) | MyEnum::D(P { x, y: _, z: t }) => (x + t).into(),
                                         ^*****************^
In function: lib.cairo::foo
drop<u8>([84]) -> ()

store_temp<u8>([83]) -> ([81])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
store_temp<u8>([85]) -> ([82])
Originating location:
    match a {
    ^*******^
In function: lib.cairo::foo
label_test::main::34:

u8_overflowing_add([59], [81], [82]) { fallthrough([86], [87]) label_test::main::35([88], [89]) }
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
u8_to_felt252([87]) -> ([90])
Originating location:
        u8_to_felt252(self)
        ^*****************^
In function: integer.cairo::U8IntoFelt252::into
drop<felt252>([90]) -> ()

store_temp<RangeCheck>([86]) -> ([77])
Originating location:
fn main() {
^*********^
In function: lib.cairo::main
label_test::main::33:

struct_construct<Unit>() -> ([91])

struct_construct<Tuple<Unit>>([91]) -> ([92])

enum_init<core::panics::PanicResult::<((),)>, 0>([92]) -> ([93])
Originating location:
fn main() {
          ^
In function: lib.cairo::main
store_temp<core::panics::PanicResult::<((),)>>([93]) -> ([93])
Originating location:
fn main() {
          ^
In function: lib.cairo::main
return([77], [93])
Originating location:
fn main() {
          ^
In function: lib.cairo::main
label_test::main::35:

branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
drop<u8>([89]) -> ()

array_new<felt252>() -> ([94])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
const_as_immediate<Const<felt252, 608642104203229548495787928534675319>>() -> ([95])

store_temp<felt252>([95]) -> ([95])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([94], [95]) -> ([96])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([97])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([97], [96]) -> ([98])

enum_init<core::panics::PanicResult::<((),)>, 1>([98]) -> ([99])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
store_temp<RangeCheck>([88]) -> ([88])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
store_temp<core::panics::PanicResult::<((),)>>([99]) -> ([99])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
return([88], [99])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
label_test::main::36:

label_test::main::31:

label_test::main::26:

branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
drop<u8>([71]) -> ()

drop<test::MyEnum>([18]) -> ()

array_new<felt252>() -> ([100])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
const_as_immediate<Const<felt252, 608642104203229548495787928534675319>>() -> ([101])

store_temp<felt252>([101]) -> ([101])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([100], [101]) -> ([102])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([103])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([103], [102]) -> ([104])

enum_init<core::panics::PanicResult::<((),)>, 1>([104]) -> ([105])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
store_temp<RangeCheck>([70]) -> ([70])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
store_temp<core::panics::PanicResult::<((),)>>([105]) -> ([105])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
return([70], [105])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
label_test::main::27:

label_test::main::22:

label_test::main::17:

branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
drop<u8>([53]) -> ()

drop<test::MyEnum>([18]) -> ()

drop<test::MyEnum>([13]) -> ()

array_new<felt252>() -> ([106])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
const_as_immediate<Const<felt252, 608642104203229548495787928534675319>>() -> ([107])

store_temp<felt252>([107]) -> ([107])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([106], [107]) -> ([108])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([109])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([109], [108]) -> ([110])

enum_init<core::panics::PanicResult::<((),)>, 1>([110]) -> ([111])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
store_temp<RangeCheck>([52]) -> ([52])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
store_temp<core::panics::PanicResult::<((),)>>([111]) -> ([111])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
return([52], [111])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
label_test::main::18:

label_test::main::13:

label_test::main::8:

branch_align() -> ()
Originating location:
        u8_overflowing_add(lhs, rhs).expect('u8_add Overflow')
        ^**************************^
In function: integer.cairo::U8Add::add
drop<u8>([35]) -> ()

drop<test::MyEnum>([18]) -> ()

drop<test::MyEnum>([13]) -> ()

drop<test::MyEnum>([8]) -> ()

array_new<felt252>() -> ([112])
Originating location:
        array_new()
        ^*********^
In function: array.cairo::ArrayImpl::new
const_as_immediate<Const<felt252, 608642104203229548495787928534675319>>() -> ([113])

store_temp<felt252>([113]) -> ([113])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
array_append<felt252>([112], [113]) -> ([114])
Originating location:
        array_append(ref self, value)
        ^***************************^
In function: array.cairo::ArrayImpl::append
struct_construct<core::panics::Panic>() -> ([115])

struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([115], [114]) -> ([116])

enum_init<core::panics::PanicResult::<((),)>, 1>([116]) -> ([117])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
store_temp<RangeCheck>([34]) -> ([34])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
store_temp<core::panics::PanicResult::<((),)>>([117]) -> ([117])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
return([34], [117])
Originating location:
    panic(array![err_code])
    ^*********************^
In function: lib.cairo::panic_with_felt252
label_test::main::9:

label_test::main::4:

//! > ==========================================================================

//! > pedersen test

//! > test_runner_name
test_sierra_locations

//! > function

//! > function_name
test_pedersen

//! > module_code
>>> file: ../../examples/pedersen_test.cairo

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label_test::test_pedersen::0:

const_as_immediate<Const<felt252, 1>>() -> ([1])

const_as_immediate<Const<felt252, 2>>() -> ([2])

store_temp<felt252>([1]) -> ([1])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
                      ^************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([2]) -> ([2])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
                      ^************^
In function: lib.cairo::test_pedersen
pedersen([0], [1], [2]) -> ([3], [4])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
                      ^************^
In function: lib.cairo::test_pedersen
const_as_immediate<Const<felt252, 3>>() -> ([5])

store_temp<felt252>([4]) -> ([4])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
             ^*************************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([5]) -> ([5])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
             ^*************************^
In function: lib.cairo::test_pedersen
pedersen([3], [4], [5]) -> ([6], [7])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
             ^*************************^
In function: lib.cairo::test_pedersen
const_as_immediate<Const<felt252, 4>>() -> ([8])

store_temp<felt252>([7]) -> ([7])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([8]) -> ([8])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
pedersen([6], [7], [8]) -> ([9], [10])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
store_temp<Pedersen>([9]) -> ([9])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
store_temp<felt252>([10]) -> ([10])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
return([9], [10])
Originating location:
    pedersen(pedersen(pedersen(1, 2), 3), 4)
    ^**************************************^
In function: lib.cairo::test_pedersen
