//! > Simple local variables

//! > test_runner_name
check_find_local_variables

//! > function_name
foo

//! > function_code
fn foo(x: felt252) -> felt252 {
    let y0 = x + x;
    let y1 = y0 + y0;
    let y2 = y1 + y1;  // Note: y2 is not used below.
    revoke_ap();
    let z = x + y1;
    revoke_ap();
    let w = x + y1 + z;
    x
}

//! > module_code
// Revokes ap since this function is recursive.
fn revoke_ap() -> felt252 {
    revoke_ap()
}

//! > lowering_format
Parameters: v27: core::RangeCheck, v28: core::gas::GasBuiltin, v0: core::felt252
blk0 (root):
Statements:
  (v9: core::felt252) <- core::felt252_add(v0, v0)
  (v10: core::felt252) <- core::felt252_add(v9, v9)
  (v11: core::felt252) <- core::felt252_add(v10, v10)
  (v41: core::RangeCheck, v42: core::gas::GasBuiltin, v15: core::PanicResult::<(core::felt252,)>) <- test::revoke_ap(v27, v28)
End:
  Match(match_enum(v15) {
    PanicResult::Ok(v16) => blk1,
    PanicResult::Err(v18) => blk4,
  })

blk1:
Statements:
  (v17: core::felt252) <- struct_destructure(v16)
  (v12: core::felt252) <- core::felt252_add(v0, v10)
  (v49: core::RangeCheck, v50: core::gas::GasBuiltin, v19: core::PanicResult::<(core::felt252,)>) <- test::revoke_ap(v41, v42)
End:
  Match(match_enum(v19) {
    PanicResult::Ok(v20) => blk2,
    PanicResult::Err(v22) => blk3,
  })

blk2:
Statements:
  (v21: core::felt252) <- struct_destructure(v20)
  (v13: core::felt252) <- core::felt252_add(v0, v10)
  (v14: core::felt252) <- core::felt252_add(v13, v12)
  (v23: (core::felt252,)) <- struct_construct(v0)
  (v24: core::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v23)
End:
  Return(v49, v50, v24)

blk3:
Statements:
  (v26: core::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v22)
End:
  Return(v49, v50, v26)

blk4:
Statements:
  (v25: core::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v18)
End:
  Return(v41, v42, v25)

//! > local_variables
v12, v10

//! > block_infos

//! > ==========================================================================

//! > Return revoked value

//! > test_runner_name
check_find_local_variables

//! > function_name
foo

//! > function_code
fn foo(x: felt252) -> felt252 {
    let y0 = x + x;
    revoke_ap();
    return y0;
}

//! > module_code
// Revokes ap since this function is recursive.
fn revoke_ap() -> felt252 {
    revoke_ap()
}

//! > lowering_format
Parameters: v11: core::RangeCheck, v12: core::gas::GasBuiltin, v0: core::felt252
blk0 (root):
Statements:
  (v3: core::felt252) <- core::felt252_add(v0, v0)
  (v17: core::RangeCheck, v18: core::gas::GasBuiltin, v4: core::PanicResult::<(core::felt252,)>) <- test::revoke_ap(v11, v12)
End:
  Match(match_enum(v4) {
    PanicResult::Ok(v5) => blk1,
    PanicResult::Err(v7) => blk2,
  })

blk1:
Statements:
  (v6: core::felt252) <- struct_destructure(v5)
  (v8: (core::felt252,)) <- struct_construct(v3)
  (v9: core::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v8)
End:
  Return(v17, v18, v9)

blk2:
Statements:
  (v10: core::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v7)
End:
  Return(v17, v18, v10)

//! > local_variables
v3

//! > block_infos

//! > ==========================================================================

//! > SameAsParam

//! > test_runner_name
check_find_local_variables

//! > function_name
foo

//! > function_code
fn foo(x: felt252) -> felt252 {
    let y = x + x;
    let z = y + y;
    let (z0, z1) = dup::<felt252>(z);
    let (z2, z3) = dup::<felt252>(z1);
    let (z4, z5) = dup::<felt252>(z2);
    revoke_ap();
    z4 + z5
}

//! > module_code
// Revokes ap since this function is recursive.
fn revoke_ap() -> felt252 {
    revoke_ap()
}

//! > lowering_format
Parameters: v21: core::RangeCheck, v22: core::gas::GasBuiltin, v0: core::felt252
blk0 (root):
Statements:
  (v11: core::felt252) <- core::felt252_add(v0, v0)
  (v12: core::felt252) <- core::felt252_add(v11, v11)
  (v3: core::felt252, v4: core::felt252) <- core::dup::<core::felt252>(v12)
  (v5: core::felt252, v6: core::felt252) <- core::dup::<core::felt252>(v4)
  (v7: core::felt252, v8: core::felt252) <- core::dup::<core::felt252>(v5)
  (v31: core::RangeCheck, v32: core::gas::GasBuiltin, v14: core::PanicResult::<(core::felt252,)>) <- test::revoke_ap(v21, v22)
End:
  Match(match_enum(v14) {
    PanicResult::Ok(v15) => blk1,
    PanicResult::Err(v17) => blk2,
  })

blk1:
Statements:
  (v16: core::felt252) <- struct_destructure(v15)
  (v13: core::felt252) <- core::felt252_add(v7, v8)
  (v18: (core::felt252,)) <- struct_construct(v13)
  (v19: core::PanicResult::<(core::felt252,)>) <- PanicResult::Ok(v18)
End:
  Return(v31, v32, v19)

blk2:
Statements:
  (v20: core::PanicResult::<(core::felt252,)>) <- PanicResult::Err(v17)
End:
  Return(v31, v32, v20)

//! > local_variables
v12

//! > block_infos
