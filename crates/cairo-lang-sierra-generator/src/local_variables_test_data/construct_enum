//! > Block

//! > test_runner_name
check_find_local_variables

//! > function_name
foo

//! > function_code
fn foo() -> bool {
    let x = true;
    revoke_ap();
    x
}

//! > module_code
// Revokes ap since this function is recursive.
fn revoke_ap() -> felt252 {
    revoke_ap()
}

struct MyStruct {
    a: felt252,
    b: felt252,
}

//! > lowering_format
Parameters: v10: core::RangeCheck, v11: core::gas::GasBuiltin
blk0 (root):
Statements:
  (v0: ()) <- struct_construct()
  (v1: core::bool) <- bool::True(v0)
  (v12: core::RangeCheck, v13: core::gas::GasBuiltin, v3: core::PanicResult::<(core::felt252,)>) <- test::revoke_ap(v10, v11)
End:
  Match(match_enum(v3) {
    PanicResult::Ok(v4) => blk1,
    PanicResult::Err(v6) => blk2,
  })

blk1:
Statements:
  (v5: core::felt252) <- struct_destructure(v4)
  (v7: (core::bool,)) <- struct_construct(v1)
  (v8: core::PanicResult::<(core::bool,)>) <- PanicResult::Ok(v7)
End:
  Return(v12, v13, v8)

blk2:
Statements:
  (v9: core::PanicResult::<(core::bool,)>) <- PanicResult::Err(v6)
End:
  Return(v12, v13, v9)

//! > local_variables
v1

//! > block_infos
